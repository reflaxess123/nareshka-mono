"""
–¢–µ—Å—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ Telegram
"""

import asyncio
from src.mcp_telegram.simple_video_downloader import simple_scan_media, simple_download_media, simple_find_and_download

async def test_scan_media():
    """–¢–µ—Å—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤"""
    print("üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏–∞–ª–æ–≥–µ '–û–ú: –ü–∞—Ä–æ–≤–æ–∑–∏–∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π'...")
    
    dialog_id = -1002208833410
    media_list = await simple_scan_media(dialog_id, limit=50)
    
    if media_list and not media_list[0].get("error"):
        print(f"üìÇ –ù–∞–π–¥–µ–Ω–æ {len(media_list)} –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤:")
        for i, media in enumerate(media_list[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
            print(f"  {i}. ID: {media['message_id']} | –¢–∏–ø: {media['media_type']}")
            if media['text']:
                print(f"     –¢–µ–∫—Å—Ç: {media['text'][:50]}...")
    else:
        print("‚ùå –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –æ—à–∏–±–∫–∞")
    
    return media_list

async def test_download_media():
    """–¢–µ—Å—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤"""
    print("\nüé¨ –ü–æ–∏—Å–∫ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤...")
    
    dialog_id = -1002208833410
    results = await simple_find_and_download(dialog_id, limit=3)
    
    if results and not results[0].get("error"):
        print(f"‚úÖ –°–∫–∞—á–∞–Ω–æ {len(results)} —Ñ–∞–π–ª–æ–≤:")
        for i, result in enumerate(results, 1):
            print(f"  {i}. {result['file_path']}")
            print(f"     –¢–∏–ø: {result['media_type']}")
            print(f"     –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message_id']}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–ª–∏ –º–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    return results

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –∏–∑ Telegram\n")
    
    # –°–∫–∞–Ω–∏—Ä—É–µ–º –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
    media_list = await test_scan_media()
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
    if media_list and not media_list[0].get("error"):
        await test_download_media()
    
    print("\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(main()) 