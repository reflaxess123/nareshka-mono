#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ API —Ç–∏–ø–æ–≤ –∏ —Ö—É–∫–æ–≤ –∏–∑ OpenAPI —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/generate-api.sh [--force]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[API Generator]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[API Generator]${NC} $1"
}

error() {
    echo -e "${RED}[API Generator]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–µ–∫–µ–Ω–¥–∞
check_backend() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–µ–∫–µ–Ω–¥–∞..."
    
    local max_attempts=30
    local attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s http://localhost:4000/openapi.json > /dev/null 2>&1; then
            log "–ë–µ–∫–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω ‚úÖ"
            return 0
        fi
        
        warn "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: –±–µ–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ–∂–∏–¥–∞–Ω–∏–µ..."
        sleep 2
        ((attempt++))
    done
    
    error "–ë–µ–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    error "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –±–µ–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:4000"
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ API
generate_api() {
    log "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è API —Ç–∏–ø–æ–≤ –∏ —Ö—É–∫–æ–≤..."
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º orval
    if npx orval --config orval.config.ts; then
        log "API —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω ‚úÖ"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        local generated_file="src/shared/api/generated/api.ts"
        if [ -f "$generated_file" ]; then
            local lines=$(wc -l < "$generated_file")
            local hooks=$(grep -c "export.*use.*" "$generated_file" || echo "0")
            local types=$(grep -c "export.*Type" "$generated_file" || echo "0")
            
            echo -e "${BLUE}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:${NC}"
            echo -e "   ‚Ä¢ –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: $lines"
            echo -e "   ‚Ä¢ React Query —Ö—É–∫–æ–≤: $hooks"
            echo -e "   ‚Ä¢ TypeScript —Ç–∏–ø–æ–≤: $types"
        fi
    else
        error "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ API"
        exit 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "–ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ API..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ orval
    if ! command -v npx &> /dev/null; then
        error "npx –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ ! -f "orval.config.ts" ]; then
        error "–§–∞–π–ª orval.config.ts –Ω–µ –Ω–∞–π–¥–µ–Ω"
        error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–µ–∫–µ–Ω–¥–∞
    check_backend
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º API
    generate_api
    
    log "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! üéâ"
}

# –ó–∞–ø—É—Å–∫
main "$@" 