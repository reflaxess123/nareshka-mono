import React from 'react';
import { Handle, Position } from '@xyflow/react';
import './InterviewCategoryNode.scss';


const categoryColors: Record<string, string> = {
  'javascript_core': '#f7df1e',
  'react': '#61dafb',
  'typescript': '#3178c6',
  'soft_skills': '#ff6b6b',
  '–∞–ª–≥–æ—Ä–∏—Ç–º—ã': '#dc143c',
  '—Å–µ—Ç—å': '#ff6b35',
  '–≤–µ—Ä—Å—Ç–∫–∞': '#e91e63',
  '–±—Ä–∞—É–∑–µ—Ä—ã': '#9c27b0',
  '–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞': '#673ab7',
  '–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': '#3f51b5',
  '–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å': '#00bcd4',
  '—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': '#4caf50',
  '–¥—Ä—É–≥–æ–µ': '#9e9e9e'
};

const categoryIcons: Record<string, string> = {
  'javascript_core': '‚ö°',
  'react': '‚öõÔ∏è',
  'typescript': 'üî∑',
  'soft_skills': 'üë•',
  '–∞–ª–≥–æ—Ä–∏—Ç–º—ã': 'üßÆ',
  '—Å–µ—Ç—å': 'üåê',
  '–≤–µ—Ä—Å—Ç–∫–∞': 'üé®',
  '–±—Ä–∞—É–∑–µ—Ä—ã': 'üåç',
  '–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞': 'üèóÔ∏è',
  '–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': 'üõ†Ô∏è',
  '–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å': 'üöÄ',
  '—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': 'üß™',
  '–¥—Ä—É–≥–æ–µ': 'üìù'
};

interface InterviewCategoryNodeData {
  id: string;
  name: string;
  questionsCount: number;
  clustersCount: number;
  percentage: number;
}

interface InterviewCategoryNodeProps {
  data: InterviewCategoryNodeData;
  selected: boolean;
}

export const InterviewCategoryNode: React.FC<InterviewCategoryNodeProps> = ({ 
  data, 
  selected 
}) => {
  const categoryColor = categoryColors[data.id] || '#10B981';
  const categoryIcon = categoryIcons[data.id] || 'üìù';
  
  return (
    <div className={`topic-node ${selected ? 'selected' : ''}`}>
      <Handle
        type="target"
        position={Position.Top}
        style={{
          background: categoryColor,
          width: '10px',
          height: '10px',
          top: '-5px',
        }}
      />

      <div className="topic-content">
        <div className="topic-header">
          <div
            className="topic-icon"
            style={{ backgroundColor: categoryColor }}
          >
            <span role="img" aria-label={data.name}>
              {categoryIcon}
            </span>
          </div>
          <h3 className="topic-title">{data.name}</h3>
        </div>
        
        <div className="topic-stats">
          <div className="stat">
            <div className="stat-value">{data.questionsCount.toLocaleString('ru-RU')}</div>
            <div className="stat-label">–≤–æ–ø—Ä–æ—Å–æ–≤</div>
          </div>
          <div className="stat-divider"></div>
          <div className="stat">
            <div className="stat-value">{data.clustersCount}</div>
            <div className="stat-label">–∫–ª–∞—Å—Ç–µ—Ä–æ–≤</div>
          </div>
        </div>
        
        <div className="topic-time">
          {data.percentage.toFixed(1)}% –æ—Ç –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        </div>
      </div>
    </div>
  );
};

export default InterviewCategoryNode;