import React from 'react';
import { Handle, Position } from '@xyflow/react';
import type { NodeProps } from '@xyflow/react';
import styles from './RootNode.module.scss';

interface RootNodeData {
  totalQuestions: number;
  totalClusters: number;
  totalCategories: number;
}

interface RootNodeProps extends NodeProps<RootNodeData> {
  isHovered?: boolean;
}

export const RootNode: React.FC<RootNodeProps> = ({ 
  data, 
  selected, 
  isHovered = false 
}) => {
  return (
    <div 
      className={`${styles.rootNode} ${selected ? styles.selected : ''} ${isHovered ? styles.hovered : ''}`}
    >
      {/* Handles –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π */}
      <Handle type="source" position={Position.Top} style={{ opacity: 0 }} />
      <Handle type="source" position={Position.Right} style={{ opacity: 0 }} />
      <Handle type="source" position={Position.Bottom} style={{ opacity: 0 }} />
      <Handle type="source" position={Position.Left} style={{ opacity: 0 }} />

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ */}
      <div className={styles.block}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className={styles.header}>
          <div className={styles.icon}>üìä</div>
          <div className={styles.title}>–ë–∞–∑–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –∏–Ω—Ç–µ—Ä–≤—å—é</div>
        </div>
        
        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className={styles.content}>
          <div className={styles.mainStat}>
            <div className={styles.mainNumber}>
              {data.totalQuestions.toLocaleString('ru-RU')}
            </div>
            <div className={styles.mainLabel}>–≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ–±—Ä–∞–Ω–æ</div>
          </div>
          
          <div className={styles.additionalStats}>
            <div className={styles.statRow}>
              <span className={styles.statLabel}>–¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∫–ª–∞—Å—Ç–µ—Ä–æ–≤:</span>
              <span className={styles.statValue}>{data.totalClusters}</span>
            </div>
            <div className={styles.statRow}>
              <span className={styles.statLabel}>–û—Å–Ω–æ–≤–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:</span>
              <span className={styles.statValue}>{data.totalCategories}</span>
            </div>
          </div>
        </div>
        
        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
        <div className={styles.instruction}>
          –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ–º
        </div>
      </div>
    </div>
  );
};

export default RootNode;