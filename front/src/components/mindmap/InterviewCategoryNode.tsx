import React from 'react';
import { Handle, Position } from '@xyflow/react';
import type { NodeProps } from '@xyflow/react';
import styles from './InterviewNodes.module.scss';

interface InterviewCategoryNodeData {
  id: string;
  name: string;
  questionsCount: number;
  clustersCount: number;
  percentage: number;
}

const categoryColors: Record<string, string> = {
  'javascript_core': '#f7df1e',
  'react': '#61dafb',
  'typescript': '#3178c6',
  'soft_skills': '#ff6b6b',
  '–∞–ª–≥–æ—Ä–∏—Ç–º—ã': '#dc143c',
  '—Å–µ—Ç—å': '#ff6b35',
  '–≤–µ—Ä—Å—Ç–∫–∞': '#e91e63',
  '–±—Ä–∞—É–∑–µ—Ä—ã': '#9c27b0',
  '–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞': '#673ab7',
  '–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': '#3f51b5',
  '–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å': '#00bcd4',
  '—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': '#4caf50',
  '–¥—Ä—É–≥–æ–µ': '#9e9e9e'
};

const categoryIcons: Record<string, string> = {
  'javascript_core': '‚ö°',
  'react': '‚öõÔ∏è',
  'typescript': 'üî∑',
  'soft_skills': 'üë•',
  '–∞–ª–≥–æ—Ä–∏—Ç–º—ã': 'üßÆ',
  '—Å–µ—Ç—å': 'üåê',
  '–≤–µ—Ä—Å—Ç–∫–∞': 'üé®',
  '–±—Ä–∞—É–∑–µ—Ä—ã': 'üåç',
  '–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞': 'üèóÔ∏è',
  '–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã': 'üõ†Ô∏è',
  '–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å': 'üöÄ',
  '—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ': 'üß™',
  '–¥—Ä—É–≥–æ–µ': 'üìù'
};

export const InterviewCategoryNode: React.FC<NodeProps<InterviewCategoryNodeData>> = ({ 
  data, 
  selected 
}) => {
  const categoryColor = categoryColors[data.id] || '#999';
  const categoryIcon = categoryIcons[data.id] || 'üìù';
  
  return (
    <div 
      className={`${styles.categoryNode} ${selected ? styles.selected : ''}`}
      style={{ backgroundColor: categoryColor }}
    >
      <Handle type="source" position={Position.Top} style={{ opacity: 0 }} />
      <Handle type="source" position={Position.Right} style={{ opacity: 0 }} />
      <Handle type="source" position={Position.Bottom} style={{ opacity: 0 }} />
      <Handle type="source" position={Position.Left} style={{ opacity: 0 }} />
      <Handle type="target" position={Position.Top} style={{ opacity: 0 }} />
      <Handle type="target" position={Position.Right} style={{ opacity: 0 }} />
      <Handle type="target" position={Position.Bottom} style={{ opacity: 0 }} />
      <Handle type="target" position={Position.Left} style={{ opacity: 0 }} />

      <div className={styles.categoryContent}>
        <div className={styles.categoryHeader}>
          <span className={styles.categoryIcon}>{categoryIcon}</span>
          <div className={styles.categoryName}>{data.name}</div>
        </div>
        
        <div className={styles.categoryStats}>
          <div className={styles.statItem}>
            <span className={styles.statNumber}>
              {data.questionsCount.toLocaleString('ru-RU')}
            </span>
            <span className={styles.statLabel}>–≤–æ–ø—Ä–æ—Å–æ–≤</span>
          </div>
          <div className={styles.statItem}>
            <span className={styles.statNumber}>{data.clustersCount}</span>
            <span className={styles.statLabel}>–∫–ª–∞—Å—Ç–µ—Ä–æ–≤</span>
          </div>
        </div>

        <div className={styles.categoryPercentage}>
          <span className={styles.percentageValue}>{data.percentage.toFixed(1)}%</span>
          <span className={styles.percentageLabel}>–æ—Ç –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤</span>
        </div>
      </div>
    </div>
  );
};

export default InterviewCategoryNode;