#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –∑–∞–ø–∏—Å–µ–π —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ –º—ã –ø–æ–ª—É—á–∏–ª–∏ –í–°–ï –∑–∞–ø–∏—Å–∏?
"""

import json
import re
from collections import Counter

def check_all_records():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –∑–∞–ø–∏—Å–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π"""
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ù–û–¢–´ –ó–ê–ü–ò–°–ï–ô –°–û–ë–ï–°–ï–î–û–í–ê–ù–ò–ô")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    with open('telegram_topic_messages.json', 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    messages = data['messages']
    
    # –†–∞–∑–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    direct_replies = [m for m in messages if m.get('reply_to_msg_id') == 489]
    non_direct_replies = [m for m in messages if m.get('reply_to_msg_id') and m.get('reply_to_msg_id') != 489]
    
    print(f"üìä –¢–ï–ö–£–©–ò–ï –î–ê–ù–ù–´–ï:")
    print(f"  –ü—Ä—è–º—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ 489: {len(direct_replies)}")
    print(f"  –û—Ç–≤–µ—Ç—ã –Ω–∞ –¥—Ä—É–≥–∏–µ: {len(non_direct_replies)}")
    print(f"  –í—Å–µ–≥–æ: {len(messages)}")
    
    # –ò—â–µ–º —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º—ã 489
    topic_message = next((m for m in messages if m['id'] == 489), None)
    if topic_message:
        print(f"\nüìã –°–û–û–ë–©–ï–ù–ò–ï –¢–ï–ú–´ 489:")
        print(f"  –î–∞—Ç–∞: {topic_message['date']}")
        print(f"  –¢–µ–∫—Å—Ç: {topic_message['text'][:200]}...")
    else:
        print(f"\n‚ùå –°–û–û–ë–©–ï–ù–ò–ï –¢–ï–ú–´ 489 –ù–ï –ù–ê–ô–î–ï–ù–û!")
        print(f"   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ –º—ã –ù–ï –ø–æ–ª—É—á–∏–ª–∏ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–º—ã")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º 173 "–æ–±—Å—É–∂–¥–µ–Ω–∏—è" –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –∑–∞–ø–∏—Å–µ–π —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
    print(f"\nüîç –ü–†–û–í–ï–†–ö–ê 173 '–û–ë–°–£–ñ–î–ï–ù–ò–ô' –ù–ê –ó–ê–ü–ò–°–ò –°–û–ë–ï–°–ï–î–û–í–ê–ù–ò–ô:")
    
    # –ú–∞—Ä–∫–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π
    interview_markers = [
        r'–∫–æ–º–ø–∞–Ω–∏—è[:\-\s]',
        r'–Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏[:\-\s]',
        r'–≤–∞–∫–∞–Ω—Å–∏—è[:\-\s]',
        r'–∑–ø[:\-\s]',
        r'–∑–∞—Ä–ø–ª–∞—Ç–∞[:\-\s]',
        r'–≤–æ–ø—Ä–æ—Å—ã[:\-\s]',
        r'–∑–∞–¥–∞—á[–∞–∏][:\-\s]',
        r'—Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ',
        r'—Å–æ–±–µ—Å',
        r'—ç—Ç–∞–ø[:\-\s]',
        r'—É—Å–ø–µ—Ö[:\-\s]'
    ]
    
    potential_records = []
    
    for msg in non_direct_replies:
        text = msg['text'].lower()
        marker_count = 0
        
        for marker in interview_markers:
            if re.search(marker, text):
                marker_count += 1
        
        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ 2+ –º–∞—Ä–∫–µ—Ä–∞ - –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –∑–∞–ø–∏—Å—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è
        if marker_count >= 2:
            potential_records.append({
                'message': msg,
                'markers': marker_count,
                'reply_to': msg['reply_to_msg_id']
            })
    
    print(f"  –ù–∞–π–¥–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {len(potential_records)}")
    
    if potential_records:
        print(f"\nüìù –ü–û–¢–ï–ù–¶–ò–ê–õ–¨–ù–´–ï –ó–ê–ü–ò–°–ò –í '–û–ë–°–£–ñ–î–ï–ù–ò–Ø–•':")
        for i, record in enumerate(potential_records[:5], 1):
            msg = record['message']
            print(f"  {i}. ID {msg['id']} (–æ—Ç–≤–µ—Ç –Ω–∞ {record['reply_to']}, –º–∞—Ä–∫–µ—Ä–æ–≤: {record['markers']})")
            print(f"     –î–∞—Ç–∞: {msg['date']}")
            print(f"     –¢–µ–∫—Å—Ç: {msg['text'][:150]}...")
            print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å–∏ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –∑–∞–ø–∏—Å–∏
    print(f"\nüîó –ü–†–û–í–ï–†–ö–ê –¶–ï–ü–û–ß–ï–ö –ó–ê–ü–ò–°–ï–ô:")
    
    # ID –≤—Å–µ—Ö –ø—Ä—è–º—ã—Ö –∑–∞–ø–∏—Å–µ–π
    direct_record_ids = set(m['id'] for m in direct_replies)
    
    # –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –ø—Ä—è–º—ã–µ –∑–∞–ø–∏—Å–∏
    replies_to_records = []
    for msg in non_direct_replies:
        if msg['reply_to_msg_id'] in direct_record_ids:
            replies_to_records.append(msg)
    
    print(f"  –û—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∑–∞–ø–∏—Å–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π: {len(replies_to_records)}")
    
    if replies_to_records:
        print(f"\nüìù –û–¢–í–ï–¢–´ –ù–ê –ó–ê–ü–ò–°–ò –°–û–ë–ï–°–ï–î–û–í–ê–ù–ò–ô:")
        for i, msg in enumerate(replies_to_records[:3], 1):
            # –ù–∞—Ö–æ–¥–∏–º –∏—Å—Ö–æ–¥–Ω—É—é –∑–∞–ø–∏—Å—å
            original = next(m for m in direct_replies if m['id'] == msg['reply_to_msg_id'])
            print(f"  {i}. ID {msg['id']} –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø–∏—Å—å {msg['reply_to_msg_id']}")
            print(f"     –ò—Å—Ö–æ–¥–Ω–∞—è –∑–∞–ø–∏—Å—å: {original['text'][:100]}...")
            print(f"     –û—Ç–≤–µ—Ç: {msg['text'][:100]}...")
            print()
    
    # –û—Ü–µ–Ω–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã
    print(f"\nüìä –û–¶–ï–ù–ö–ê –ü–û–õ–ù–û–¢–´ –î–ê–ù–ù–´–•:")
    
    missed_records = len(potential_records)
    total_estimated = len(direct_replies) + missed_records
    
    print(f"  ‚úîÔ∏è –ü—Ä—è–º—ã–µ –∑–∞–ø–∏—Å–∏: {len(direct_replies)}")
    print(f"  ‚ùì –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ: {missed_records}")
    print(f"  üìà –û—Ü–µ–Ω–æ—á–Ω–æ –≤—Å–µ–≥–æ: {total_estimated}")
    print(f"  üìä –ü–æ–ª–Ω–æ—Ç–∞: {len(direct_replies)/total_estimated*100:.1f}%")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    
    if missed_records == 0 and topic_message:
        print(f"  ‚úîÔ∏è –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω—ã –í–°–ï –∑–∞–ø–∏—Å–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π")
        print(f"  ‚úîÔ∏è –î–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å –ø–æ–ª–Ω—ã–º–∏")
    elif missed_records > 0:
        print(f"  ‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ {missed_records} –∑–∞–ø–∏—Å–µ–π")
        print(f"  üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
        print(f"  üí° –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –º–µ—Ç–æ–¥—ã –ø–∞—Ä—Å–∏–Ω–≥–∞")
    
    if not topic_message:
        print(f"  ‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º—ã 489 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        print(f"  ‚ùå –î–∞–Ω–Ω—ã–µ –ù–ï–ü–û–õ–ù–´–ï - –Ω—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –ø–∞—Ä—Å–∏–Ω–≥")
    
    return len(direct_replies), missed_records

if __name__ == "__main__":
    check_all_records() 