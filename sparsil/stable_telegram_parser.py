#!/usr/bin/env python3
"""
–°—Ç–∞–±–∏–ª—å–Ω—ã–π Telegram –ø–∞—Ä—Å–µ—Ä
–°–æ–∑–¥–∞–µ—Ç –û–î–ù–£ —Å–µ—Å—Å–∏—é –∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–µ
"""

import asyncio
import json
import os
import sys
from datetime import datetime
from pathlib import Path
from typing import List, Dict, Any

from telethon import TelegramClient
from telethon.errors import *

async def create_stable_session():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Å–µ—Å—Å–∏–∏ –æ–¥–∏–Ω —Ä–∞–∑"""
    
    api_id = os.getenv('TELEGRAM_API_ID') or os.getenv('TG_APP_ID')
    api_hash = os.getenv('TELEGRAM_API_HASH') or os.getenv('TG_API_HASH')
    
    print(f"üîê –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Å–µ—Å—Å–∏–∏...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –∏–º—è —Å–µ—Å—Å–∏–∏
    client = TelegramClient('stable_parser_session', api_id, api_hash)
    
    await client.connect()
    
    if not await client.is_user_authorized():
        print("–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")
        phone = '+79296450669'
        await client.send_code_request(phone)
        
        code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥: ")
        await client.sign_in(phone, code)
        
        print("‚úîÔ∏è –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    else:
        print("‚úîÔ∏è –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    me = await client.get_me()
    print(f"‚úîÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {me.first_name} (@{me.username})")
    
    return client

async def parse_topic_with_stable_client(client):
    """–ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"""
    
    DIALOG_ID = -1002071074234
    TOPIC_ID = 489
    
    print(f"\nüîç –ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–º—ã {TOPIC_ID}...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
    entity = await client.get_entity(DIALOG_ID)
    print(f"‚úîÔ∏è –ß–∞—Ç: {entity.title}")
    
    messages = []
    count = 0
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è –∏—Ç–µ—Ä–∞—Ü–∏–∏
        async for message in client.iter_messages(
            entity=DIALOG_ID,
            limit=None,
            reply_to=TOPIC_ID
        ):
            if message.text:
                count += 1
                msg_data = {
                    'id': message.id,
                    'date': message.date.isoformat() if message.date else None,
                    'text': message.message,
                    'from_id': str(getattr(message, 'from_id', None)),  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É
                    'reply_to_msg_id': getattr(message.reply_to, 'reply_to_msg_id', None) if hasattr(message, 'reply_to') and message.reply_to else None,
                    'topic_id': TOPIC_ID
                }
                messages.append(msg_data)
                
                if count % 100 == 0:
                    print(f"–ü–æ–ª—É—á–µ–Ω–æ {count} —Å–æ–æ–±—â–µ–Ω–∏–π...")
                
                # –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 1000 —Å–æ–æ–±—â–µ–Ω–∏–π
                if count % 1000 == 0:
                    temp_file = f"stable_temp_{count}.json"
                    with open(temp_file, 'w', encoding='utf-8') as f:
                        json.dump({'messages': messages}, f, ensure_ascii=False, indent=2)
                    print(f"üíæ –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ: {temp_file}")
    
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
        print(f"‚úîÔ∏è –ü–æ–ª—É—á–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –¥–æ –æ—à–∏–±–∫–∏")
    
    print(f"\n‚úîÔ∏è –ò—Ç–æ–≥–æ: {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    if messages:
        filename = f"stable_topic_messages_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump({
                'metadata': {
                    'topic_id': TOPIC_ID,
                    'dialog_id': DIALOG_ID,
                    'total_messages': len(messages),
                    'extraction_date': datetime.now().isoformat(),
                    'method': 'stable_client_approach'
                },
                'messages': messages
            }, f, ensure_ascii=False, indent=2)
        
        print(f"üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {filename}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"ID –¥–∏–∞–ø–∞–∑–æ–Ω: {min(msg['id'] for msg in messages)} - {max(msg['id'] for msg in messages)}")
        print(f"–ü–µ—Ä–≤–æ–µ: {messages[0]['date']}")
        print(f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ: {messages[-1]['date']}")
    
    return messages

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é –û–î–ò–ù —Ä–∞–∑
        client = await create_stable_session()
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–µ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
        messages = await parse_topic_with_stable_client(client)
        
        print(f"\nüéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –ü–æ–ª—É—á–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    finally:
        # –ù–ï –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è - –æ—Å—Ç–∞–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é –∞–∫—Ç–∏–≤–Ω–æ–π
        print("‚ÑπÔ∏è  –°–µ—Å—Å–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π –¥–ª—è –±—É–¥—É—â–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤")

if __name__ == "__main__":
    asyncio.run(main()) 