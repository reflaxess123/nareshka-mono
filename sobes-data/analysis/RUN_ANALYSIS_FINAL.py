#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–ò–ù–ê–õ–¨–ù–´–ô –°–ö–†–ò–ü–¢ –ó–ê–ü–£–°–ö–ê BERTOPIC –ê–ù–ê–õ–ò–ó–ê
–ó–∞–ø—É—Å–∫–∞–π —ç—Ç–æ –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä–æ–≥–æ run_analysis.py
"""

import os
import sys
import subprocess
import time

def main():
    print("="*60)
    print("üöÄ –ó–ê–ü–£–°–ö BERTOPIC –ê–ù–ê–õ–ò–ó–ê –ò–ù–¢–ï–†–í–¨–Æ")
    print("="*60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    print("\nüìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    python_version = sys.version
    print(f"   Python: {python_version.split()[0]}")
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞/–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    deps = [
        "bertopic==0.16.4",
        "sentence-transformers>=2.2.2", 
        "umap-learn>=0.5.3",
        "hdbscan>=0.8.33",
        "scikit-learn>=1.2.0",
        "pandas>=2.0.0",
        "numpy>=1.24.0",
        "plotly>=5.15.0",
        "matplotlib>=3.7.0",
        "tqdm>=4.65.0"
    ]
    
    print("   –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã...")
    for dep in deps:
        subprocess.run([sys.executable, "-m", "pip", "install", "-q", dep], 
                      capture_output=True)
    print("   ‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞
    print("\n‚öôÔ∏è  –ü–ê–†–ê–ú–ï–¢–†–´ –ê–ù–ê–õ–ò–ó–ê:")
    INPUT_FILE = "../datasets/interview_questions_BAZA.csv"
    OUTPUT_DIR = "outputs_bertopic"
    MIN_TOPIC_SIZE = 15  # –ú–∏–Ω–∏–º—É–º –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ —Ç–µ–º–µ (–æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å)
    CREATE_VISUALIZATIONS = True  # –°–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
    
    print(f"   üìÑ –í—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {INPUT_FILE}")
    print(f"   üìÅ –ü–∞–ø–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {OUTPUT_DIR}")
    print(f"   üéØ –ú–∏–Ω. —Ä–∞–∑–º–µ—Ä —Ç–µ–º—ã: {MIN_TOPIC_SIZE}")
    print(f"   üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: {'–î–∞' if CREATE_VISUALIZATIONS else '–ù–µ—Ç'}")
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    cmd = [
        sys.executable,
        "bertopic_analysis.py",
        "--input", INPUT_FILE,
        "--output", OUTPUT_DIR,
        "--min-topic-size", str(MIN_TOPIC_SIZE)
    ]
    
    if CREATE_VISUALIZATIONS:
        cmd.append("--visualizations")
    
    # –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞
    print("\n" + "="*60)
    print("üöÄ –ó–ê–ü–£–°–ö–ê–ï–ú –ê–ù–ê–õ–ò–ó...")
    print("‚è±Ô∏è  –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–ª—è 8.5k –≤–æ–ø—Ä–æ—Å–æ–≤")
    print("="*60 + "\n")
    
    start_time = time.time()
    
    try:
        # –ó–∞–ø—É—Å–∫ —Å –≤—ã–≤–æ–¥–æ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        process = subprocess.Popen(
            cmd,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True,
            encoding='utf-8',
            errors='replace',
            bufsize=1
        )
        
        # –í—ã–≤–æ–¥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        for line in iter(process.stdout.readline, ''):
            if line:
                print(line.rstrip())
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        return_code = process.wait()
        
        elapsed = time.time() - start_time
        
        print("\n" + "="*60)
        if return_code == 0:
            print(f"‚úÖ –ê–ù–ê–õ–ò–ó –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!")
            print(f"‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {elapsed/60:.1f} –º–∏–Ω—É—Ç")
            print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {OUTPUT_DIR}/")
            print("\n–§–∞–π–ª—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
            print("  ‚Ä¢ questions_with_clusters.csv - –≤–æ–ø—Ä–æ—Å—ã —Å –∫–ª–∞—Å—Ç–µ—Ä–∞–º–∏")
            print("  ‚Ä¢ enriched_questions.csv - –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            print("  ‚Ä¢ cluster_labels.csv - –æ–ø–∏—Å–∞–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–æ–≤")
            print("  ‚Ä¢ top_topics_global.csv - —Ç–æ–ø —Ç–µ–º—ã")
            print("  ‚Ä¢ by_company_top_clusters.csv - –∞–Ω–∞–ª–∏–∑ –ø–æ –∫–æ–º–ø–∞–Ω–∏—è–º")
            if CREATE_VISUALIZATIONS:
                print("  ‚Ä¢ *.html - –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏")
        else:
            print(f"‚ùå –û–®–ò–ë–ö–ê! –ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {return_code}")
            print(f"‚è±Ô∏è  –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {elapsed/60:.1f} –º–∏–Ω—É—Ç")
        print("="*60)
        
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 1
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())