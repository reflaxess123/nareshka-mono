{
  "top_questions": [
    [
      "// что будет в консоли?",
      21
    ],
    [
      "что выведет в консоль?",
      18
    ],
    [
      "что такое ?",
      17
    ],
    [
      "какие способы организации асинхронности знаешь в js?",
      15
    ],
    [
      "какие способы организации css кода приходилось использовать?",
      13
    ],
    [
      "- расскажи про опыт",
      12
    ],
    [
      "какие значения знаешь у display?",
      11
    ],
    [
      "что выведется в консоли?",
      10
    ],
    [
      "что такое замыкание?",
      10
    ],
    [
      "какие способы центрировать блок знаешь?",
      9
    ],
    [
      "какие ожидания от нового места работы",
      9
    ],
    [
      "что выведет в консоль",
      8
    ],
    [
      "что выведет в консоли?",
      8
    ],
    [
      "есть боль на проекте, XXX объктов приходят их нельзя разбить на части они взаимосвязаны, загрузка долгая, что с этим делать ?",
      8
    ],
    [
      "какие способы копирования объекта знаешь?",
      7
    ],
    [
      "как внутри обработчика события onclick получить доступ к элементу, по которому пользователь кликнул?",
      7
    ],
    [
      "для чего нужен?",
      7
    ],
    [
      "как узнать, что в переменной хранится функция?",
      7
    ],
    [
      "1) вижу в резюме что писал свой ui kit самописный или на чем то? ant или mui использовал?",
      6
    ],
    [
      "2) вижу опыт с effector, redux и пр что можешь сказать по ним?",
      6
    ]
  ],
  "top_tasks": [
    [
      "array.prototype.groupby",
      13
    ],
    [
      "function f2(o) { o = { hello: 1 }",
      6
    ],
    [
      "class eventemitter { constructor() { this.events = {}",
      6
    ],
    [
      "function setvalue(newvalue) { value = newvalue; }",
      6
    ],
    [
      "function comparenumericarrays(arr1, arr2) { if (arr1.length !== arr2.length) { return false; }",
      6
    ],
    [
      "function f(n) { n = 3; }",
      5
    ],
    [
      "function f1(o) { o.a = 5; }",
      5
    ],
    [
      "function sleep(ms) { return new promise(resolve => settimeout(resolve, ms)); }",
      5
    ],
    [
      "function fibonacci(n) { if (n <= 0) return 0; // первый элемент последовательности if (n === 1) return 1; // второй элемент последовательности let prevnum = 0; // предыдущее число let",
      5
    ],
    [
      "class maxstack { constructor() { this.stack = [];// this.maxstack = [] }",
      4
    ],
    [
      "function compose(...funcs) { return function (...args) { return funcs.reduceright((acc, fn) => { return [fn(...acc)]; }",
      4
    ],
    [
      "нужно вывести в консоль файлы и папки с отступами, чтобы показать вложенность.",
      4
    ],
    [
      "function type() { return typeof this.value; }",
      4
    ],
    [
      "function auth() { return new promise((resolve, reject) => { asyncauth((error, data) => { if (error) { reject(error); }",
      4
    ],
    [
      "function fibonacci(n) {",
      4
    ],
    [
      "function sostavchisla(massivchisel, chislo) { // код писать только внутри данной функции }",
      4
    ],
    [
      "function saveitemtoserverapi(value) { return new promise(resolve => { settimeout(() => resolve(value), 1000) }",
      4
    ],
    [
      "function getserveritemsapi() { return new promise(resolve => { settimeout(() => resolve(mockserveritems), 1000) }",
      4
    ],
    [
      "function runonce(fn) { let iscalled = false; return (...args) => { if (iscalled) { return undefined; // уже вызывалась — ничего не делаем }",
      3
    ],
    [
      "// написать декоратор для функции, который ограничивает число вызовов.",
      3
    ]
  ],
  "total_questions": 5255,
  "total_tasks": 1291
}