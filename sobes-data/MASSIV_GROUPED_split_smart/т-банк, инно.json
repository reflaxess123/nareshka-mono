{
    "company": "Т-Банк",
    "count": 43,
    "records": [
      {
        "timestamp": "2025-07-10 13:22:20",
        "content": "2025-07-10 13:22:20\n Mark Nikonorov ⚛ -> 2071074234:\nКомпания: т-банк 2-этап алгосы\n1 задача\n\nДаны два отсортированных по возрастанию массива целых чисел arr1 и arr2. Напишите функцию, которая возвращает массив элементов, присутствующих только в одном из массивов (симметрическую разность).\n\nТребования:\nВходные массивы уже отсортированы по возрастанию\nРезультат должен быть отсортирован по возрастанию\nДубликаты в пределах одного массива должны быть сохранены\nНе используйте дополнительные структуры...",
        "full_content": "2025-07-10 13:22:20\n Mark Nikonorov ⚛ -> 2071074234:\nКомпания: т-банк 2-этап алгосы\n1 задача\n\nДаны два отсортированных по возрастанию массива целых чисел arr1 и arr2. Напишите функцию, которая возвращает массив элементов, присутствующих только в одном из массивов (симметрическую разность).\n\nТребования:\nВходные массивы уже отсортированы по возрастанию\nРезультат должен быть отсортирован по возрастанию\nДубликаты в пределах одного массива должны быть сохранены\nНе используйте дополнительные структуры данных (Set, Map и т.д.)\n\nПример 1:\n\ntext\nВход: nums1 = [1, 2, 3], nums2 = [2, 4, 6]  \nВыход: [1, 3, 4, 6]  \nПример 2:\n\ntext\nВход: nums1 = [4, 5, 6], nums2 = [6, 7, 8]  \nВыход: [4, 5, 7, 8]  \nПримечание:\n\nПорядок элементов в результате не важен.\n\nРешение\nfunction getSymmetricDifference(arr1, arr2) {\n    const result = [];\n    let i = 0, j = 0;\n\n    while (i < arr1.length && j < arr2.length) {\n        if (arr1[i] === arr2[j]) {\n            i++;\n            j++;\n        } else if (arr1[i] < arr2[j]) {\n            result.push(arr1[i]);\n            i++;\n        } else {\n            result.push(arr2[j]);\n            j++;\n        }\n    }\n\n    while (i < arr1.length) {\n        result.push(arr1[i]);\n        i++;\n    }\n\n    while (j < arr2.length) {\n        result.push(arr2[j]);\n        j++;\n    }\n\n    return result;\n}\nПример использования:\n\nconsole.log(getSymmetricDifference([1, 2, 3], [2, 4, 6])); // [1, 3, 4, 6]\nconsole.log(getSymmetricDifference([4, 5, 6], [6, 7, 8])); // [4, 5, 7, 8]\n\nЗадача 2.\nУсловие задачи: \"Максимальное количество одновременных зрителей\"\nФормулировка:\nДан массив интервалов stream, где каждый интервал представляет время подключения и отключения одного зрителя в формате [start, end]. Необходимо определить максимальное количество зрителей, которые одновременно находились в стриме.\n\nТребования:\nВходные данные: массив пар чисел [[start1, end1], [start2, end2], ...]\nВсе времена - целые неотрицательные числа\nИнтервалы считаются включительно (зритель активен в момент start и end)\nЕсли один зритель отключается в момент t, а другой подключается в тот же момент t, сначала учитываем отключение\n\nПример 1:\nВход: [[1, 5], [2, 6], [3, 4]]\nВыход: 3\nОбъяснение:\n- В момент 1: 1 зритель\n- В момент 2: 2 зрителя\n- В моменты 3-4: 3 зрителя\n- В момент 5: 2 зрителя\n- В момент 6: 1 зритель\nМаксимум - 3 зрителя\n\nПример 2:\nВход: [[10, 20], [15, 25], [20, 30]]\nВыход: 2\nОбъяснение:\n- В момент 20: один зритель уходит, другой приходит\n- Максимум достигается в интервале 15-19 (2 зрителя)\n\nРешение:\nfunction findMaxViewers(stream) {\n    const events = [];\n    for (const [start, end] of stream) {\n        events.push([start, 1]);\n        events.push([end + 1, -1]); // +1 для корректной обработки границ\n    }"
      },
      {
        "timestamp": "2025-07-08 08:41:25",
        "content": "2025-07-08 08:41:25\n Kirichelli -> 2071074234:\nКомпания: Т-Банк\nЗадачки:\n1. Написать функцию deepCopy\n\nРешение:\n\nfunction deepCopy(value) {\n  // Проверяем, является ли значение примитивом или null/undefined\n  if (value === null || typeof value !== \"object\") {\n    return value; // Примитивы и null/undefined возвращаем как есть\n  }\n\n  // Проверяем, является ли значение массивом\n  if (Array.isArray(value)) {\n    // Создаем новый массив и рекурсивно копируем каждый элемент\n    return value.map(item ...",
        "full_content": "2025-07-08 08:41:25\n Kirichelli -> 2071074234:\nКомпания: Т-Банк\nЗадачки:\n1. Написать функцию deepCopy\n\nРешение:\n\nfunction deepCopy(value) {\n  // Проверяем, является ли значение примитивом или null/undefined\n  if (value === null || typeof value !== \"object\") {\n    return value; // Примитивы и null/undefined возвращаем как есть\n  }\n\n  // Проверяем, является ли значение массивом\n  if (Array.isArray(value)) {\n    // Создаем новый массив и рекурсивно копируем каждый элемент\n    return value.map(item => deepCopy(item));\n  }\n\n  // Если значение — объект, создаем новый пустой объект\n  const result = {};\n\n  // Проходим по всем свойствам исходного объекта\n  for (const key in value) {\n    if (value.hasOwnProperty(key)) {\n      // Рекурсивно копируем каждое свойство\n      result[key] = deepCopy(value[key]);\n    }\n  }\n\n  return result;\n}\n\n\n2. Написать функцию memo\n\nРешение:\n\n\nconst memo = (fn) => {\n  const cache = new Map();\n\n  return function (...args) {\n    const stringArgs = JSON.stringify(args);\n\n    if (cache.has(stringArgs)) {\n      console.log(\"from cache\");\n      return cache.get(stringArgs);\n    }\n\n    const result = fn(...args);\n    cache.set(stringArgs, result);\n    return result;\n  };\n};\n\nconst count = (a, b) => {\n  return a + b;\n};\nconst memoCount = memo(count);\n\n\n4. Задачка на перерендер компонентов(есть выше)\n4. Задачки на рика и морти(есть выше тоже)"
      },
      {
        "timestamp": "2025-07-06 19:30:01",
        "content": "2025-07-06 19:30:01\n Mark Nikonorov ⚛ -> 2071074234:\nКомпания Т-банк\nЗп 350 \n\nзадача 1: написать event emmiter (есть выше)\nпочему нельзя передать в ключи обьекта что-то кроме string или number? \nапи обьекта так работает\n\nчто если передать в emit.on({}, () => {})? // запишется event по ключу objectObject.\n\nчто если передать в emit.on(\"toString\", () => {})? // перезапишется toString и при попытке его использования дефолтного поведения не будет\n\nчтобы конфликтов не было с проблемами выше лучше испо...",
        "full_content": "2025-07-06 19:30:01\n Mark Nikonorov ⚛ -> 2071074234:\nКомпания Т-банк\nЗп 350 \n\nзадача 1: написать event emmiter (есть выше)\nпочему нельзя передать в ключи обьекта что-то кроме string или number? \nапи обьекта так работает\n\nчто если передать в emit.on({}, () => {})? // запишется event по ключу objectObject.\n\nчто если передать в emit.on(\"toString\", () => {})? // перезапишется toString и при попытке его использования дефолтного поведения не будет\n\nчтобы конфликтов не было с проблемами выше лучше использовать Map в this.events\n\nзадача 2: написать функцию promisify\nfunction promisify(fn) {\n  return function (...args) {\n    // Возвращаем новую функцию, которая возвращает промис\n    return new Promise((resolve, reject) => {\n      // Вызываем оригинальную функцию с переданными аргументами и колбэком\n      fn(...args, (err, result) => {\n        if (err) return reject(err); // Если ошибка — отклоняем промис\n        resolve(result);             // Если всё хорошо — резолвим результат\n      });\n    });\n  };\n}\n\nзадача 3: задача на rick и morty (есть выше)"
      },
      {
        "timestamp": "2025-06-26 10:48:01",
        "content": "2025-06-26 10:48:01\n Sentry -> 2071074234:\nКомпания: Т-банк\nПосле рассказа о себе лайв-код\n\nЗадача 1:\nНаписать эмиттер:\n\nclass EventEmitter {\n  constructor() {\n    // Хранилище для событий и их подписчиков\n    this.events = {};\n  }\n\n  // Метод для подписки на событие\n  on(eventName, callback) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n\n    this.events[eventName].push(callback);\n\n    return this;\n  }\n\n  // Метод для отписки от события\n  off(eventName, callback) ...",
        "full_content": "2025-06-26 10:48:01\n Sentry -> 2071074234:\nКомпания: Т-банк\nПосле рассказа о себе лайв-код\n\nЗадача 1:\nНаписать эмиттер:\n\nclass EventEmitter {\n  constructor() {\n    // Хранилище для событий и их подписчиков\n    this.events = {};\n  }\n\n  // Метод для подписки на событие\n  on(eventName, callback) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n\n    this.events[eventName].push(callback);\n\n    return this;\n  }\n\n  // Метод для отписки от события\n  off(eventName, callback) {\n    if (this.events[eventName]) {\n      this.events[eventName] = this.events[eventName].filter(cb => cb !== callback);\n    }\n    \n    return this.\n  }\n\n  // Метод для оповещения о событии\n  emit(eventName, data) {\n    if (this.events[eventName]) {\n      this.events[eventName].forEach(callback => callback(data));\n    }\n\n    return this.\n  }\n}\n\n// Пример использования\n\nconst cb = () => null;\n\n// Создаем экземпляр класса EventEmitter\nconst eventEmitter = new EventEmitter();\neventEmitter\n.on(‘test’, cb);\n.off(‘test’, cb)\n\nЗадача 2:\nНаписать promiseAll:\nfunction promiseAll(promises) {\n\n  return new Promise((resolve, reject) => {\n\n    let results = [];\n\n    let completedPromises = 0;\n\n    promises.forEach((promise, index) => {\n\n      Promise.resolve(promise).then(value => {\n\n        results[index] = value;\n\n        completedPromises++;\n\n        if (completedPromises === promises.length) {\n\n          resolve(results);\n\n        }\n\n      }).catch(err => reject(err));\n\n    });\n    if (promises.length === 0) {\n\n      resolve(results); \n\n    }\n\n  });\n\n}\nЗадача 3: \n\nПеререндеры. Было Выше \n\n+ Задача по Rick and Morty"
      },
      {
        "timestamp": "2025-06-16 13:52:56",
        "content": "2025-06-16 13:52:56\n Василий -> 2071074234:\nТ-Банк техничка\n\n1)\n// Задача 1\n// Реализовать EventEmitter\n// При этом методы on, off, emitt надо реализовать так, чтобы можно было чэйнить\n// Учитывать, что сохраняемые функции-обработчики не должны повторяться\n// (хотел начать сразу через Map и Set - почему-то он отклонил этот план и в итоге делал через объект)\n// Вот что-то подобное получилось\nclass EventEmitter {\n    constructor () {\n        this.events = {};\n    }\n\n    on(event, cb) {\n        if(...",
        "full_content": "2025-06-16 13:52:56\n Василий -> 2071074234:\nТ-Банк техничка\n\n1)\n// Задача 1\n// Реализовать EventEmitter\n// При этом методы on, off, emitt надо реализовать так, чтобы можно было чэйнить\n// Учитывать, что сохраняемые функции-обработчики не должны повторяться\n// (хотел начать сразу через Map и Set - почему-то он отклонил этот план и в итоге делал через объект)\n// Вот что-то подобное получилось\nclass EventEmitter {\n    constructor () {\n        this.events = {};\n    }\n\n    on(event, cb) {\n        if(!this.events[event]) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(cb);\n        return this;\n    };\n\n    off(event, cb) {\n        if(!this.events[event]) return this;\n        this.events[event] = this.events[event].filter(item => return item !== cb);\n        return this;\n    }\n\n    emit(event, ...args) {\n        if(!this.events[event]) return this;\n        this.events[event].forEach(cb => cb(...args));\n        return this;\n    }\n}\n2) Рассказать про работу evnetloop, какие есть особенности работы requestAnimationFrame\n3) Написать функцию мемоизации с возможность очистить кэш\nfunction memoize(func) {\n  const cache = new Map();\n  \n  function memoized(...args) {\n    const key = JSON.stringify(args);\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    const result = func.apply(this, args);\n    cache.set(key, result);\n    return result;\n  }\n  \n  // Добавляем метод для очистки кэша\n  memoized.clear = function() {\n    cache.clear();\n  };\n  \n  return memoized;\n}\n4) Реализовать приложение по поиску героев Рик и Морти\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\n\n// Определяем интерфейсы для типизации данных от API\ninterface Character {\n  id: number;\n  name: string;\n}\n\ninterface ApiResponse {\n  info: {\n    count: number;    // Общее количество персонажей\n    pages: number;    // Всего страниц\n    next: string | null;  // URL следующей страницы\n    prev: string | null;  // URL предыдущей страницы\n  };\n  results: Character[];  // Массив персонажей\n}\n\nconst RickAndMortySearch: React.FC = () => {\n  // Состояние для хранения поискового запроса\n  const [searchTerm, setSearchTerm] = useState('');\n  // Состояние для хранения списка персонажей\n  const [characters, setCharacters] = useState<Character[]>([]);\n  // Состояние загрузки данных\n  const [loading, setLoading] = useState(false);\n  // Состояние для хранения ошибок\n  const [error, setError] = useState<string | null>(null);\n  // Текущая страница пагинации\n  const [page, setPage] = useState(1);\n  // Общее количество страниц\n  const [totalPages, setTotalPages] = useState(0);\n\n  /**\n   * Функция для загрузки персонажей из API\n   * @param term - Поисковый запрос\n   * @param pageNum - Номер страницы\n   */\n  const fetchCharacters = useCallback(async (term: string, pageNum: number) => {\n    setLoading(true);  // Включаем индикатор загрузки\n    setError(null);    // Сбрасываем ошибки\n    \n    try {\n      // Отправляем GET-запрос к API\n      const response = await axios.get<ApiResponse>(\n        'https://rickandmortyapi.com/api/character',\n        {\n          params: {  // Параметры запроса\n            name: term,  // Имя для поиска\n            page: pageNum // Номер страницы\n          }\n        }\n      );\n      \n      // Обновляем состояние с полученными данными\n      setCharacters(response.data.results);\n      setTotalPages(response.data.info.pages);\n    } catch (err) {\n      // Обрабатываем ошибки\n      if (axios.isAxiosError(err) && err.response?.status === 404) {\n        // Специальная обработка для случая \"не найдено\"\n        setCharacters([]);\n        setError('No characters found');\n      } else {\n        // Общая обработка других ошибок\n        setError('An error occurred while fetching data');\n      }\n      setTotalPages(0);\n    } finally {\n      setLoading(false);  // Выключаем индикатор загрузки\n    }\n  }, []);"
      },
      {
        "timestamp": "2025-06-11 14:36:24",
        "content": "2025-06-11 14:36:24\n Egor -> 2071074234:\nТ-Банк(финал) проект hippo\nвакансия: рефка\nзп: от 350\nhttps://www.youtube.com/watch?v=xv51xqb8Z6U",
        "full_content": "2025-06-11 14:36:24\n Egor -> 2071074234:\nТ-Банк(финал) проект hippo\nвакансия: рефка\nзп: от 350\nhttps://www.youtube.com/watch?v=xv51xqb8Z6U"
      },
      {
        "timestamp": "2025-06-04 03:19:06",
        "content": "2025-06-04 03:19:06\n Egor -> 2071074234:\n02.06 Т-Банк(3 этап) систем дизайн\nВакансия: по рефке\nЗП: ?\n\nhttps://www.youtube.com/watch?v=55BtdZTdxe0",
        "full_content": "2025-06-04 03:19:06\n Egor -> 2071074234:\n02.06 Т-Банк(3 этап) систем дизайн\nВакансия: по рефке\nЗП: ?\n\nhttps://www.youtube.com/watch?v=55BtdZTdxe0"
      },
      {
        "timestamp": "2025-05-21 12:27:39",
        "content": "2025-05-21 12:27:39\n Egor -> 2071074234:\nТ-Банк 1 этап 21.05\nРефералка\nОт 330\nВопросы: \nРасскажи про опыт\nЗадачи:\n\n1. что выведет? как исправить?\nconst userService = {\n  currentFilter: 'active',\n  users: [\n    { name: 'Alex', status: 'active' },\n    { name: 'Nick', status: 'deleted' },\n  ],\n  getFilteredUsers() {\n    return this.users.filter(function(user) {\n      return user.status === this.currentFilter;\n    });\n  }\n};\n\nconsole.log(userService.getFilteredUsers());\n\n\n2. что выведет?\n\nconsole.lo...",
        "full_content": "2025-05-21 12:27:39\n Egor -> 2071074234:\nТ-Банк 1 этап 21.05\nРефералка\nОт 330\nВопросы: \nРасскажи про опыт\nЗадачи:\n\n1. что выведет? как исправить?\nconst userService = {\n  currentFilter: 'active',\n  users: [\n    { name: 'Alex', status: 'active' },\n    { name: 'Nick', status: 'deleted' },\n  ],\n  getFilteredUsers() {\n    return this.users.filter(function(user) {\n      return user.status === this.currentFilter;\n    });\n  }\n};\n\nconsole.log(userService.getFilteredUsers());\n\n\n2. что выведет?\n\nconsole.log(1); // Синхронный\n\nsetTimeout(() => console.log(2)); // Макрозадача (выполнится после микрозадач)\n\nPromise.resolve().then(() => console.log(3)); // Микрозадача\n\nconsole.log(4); // Синхронный\n\nsetTimeout(() => console.log(5)); // Макрозадача\n\nconsole.log(6); // Синхронный\n\n\nКакое будет поведение на странице?\n\nfunction infiniteMicrotask() {\n  Promise.resolve().then(infiniteMicrotask);\n}\n\ninfiniteMicrotask();\n\nтот же вопрос\n\nfunction infiniteMacrotask() {\n  setTimeout(infiniteMacrotask, 0);\n}\n\ninfiniteMacrotask();\n\n4. написать eventEmitter\n\nclass EventEmitter {\n  constructor() {\n    this.events = {};\n  }\n\n  // Подписка на событие\n  on(eventName, listener) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n    this.events[eventName].push(listener);\n    return this; // для чейнинга\n  }\n\n  // Отписка от события\n  off(eventName, listener) {\n    if (!this.events[eventName]) return this;\n    \n    this.events[eventName] = this.events[eventName].filter(\n      fn => fn !== listener\n    );\n    return this;\n  }\n\n  // Единоразовая подписка\n  once(eventName, listener) {\n    const onceWrapper = (...args) => {\n      listener.apply(this, args);\n      this.off(eventName, onceWrapper);\n    };\n    this.on(eventName, onceWrapper);\n    return this;\n  }\n\n  // Вызов события\n  emit(eventName, ...args) {\n    if (!this.events[eventName]) return false;\n    \n    this.events[eventName].forEach(listener => {\n      listener.apply(this, args);\n    });\n    return true;\n  }\n\n  // Количество подписчиков на событие\n  listenerCount(eventName) {\n    if (!this.events[eventName]) return 0;\n    return this.events[eventName].length;\n  }\n\n  // Получение всех подписчиков события\n  listeners(eventName) {\n    return this.events[eventName] || [];\n  }\n}\n\n5. Даны 3 вложенных компонента, что будет если в родителе произойдет ререндер?\nчто будет если в одном из дочерних написать в инпут, спровоцировав ререндер, как избежать ререндера дочернего компонента?\n6. Реализовать функционал отображения списка, и поиска через input\n\n// Функция getPeople остается неизменной\nfunction getPeople(search, page = 1, options = {}) {\n  return fetch(\n    `https://swapi.dev/api/people?search=${search}&page=${page}`,\n    options\n  )\n    .then(res => res.json())\n    .then(data => data);\n}\n\n// Функция debounce остается неизменной\nconst debounce = (callback, delay) => {\n  let timeoutId;\n  return (...args) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      callback(...args);\n    }, delay);\n  };\n};\n\nexport function App() {\n  const [search, setSearch] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [peoples, setPeoples] = useState([]);\n\n  useEffect(() => {\n    if (search) {\n      setIsLoading(true);\n      getPeople(search, 1)\n        .then(data => {\n          setPeoples(data.results);\n        })\n        .catch(error => {\n            console.error(error);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        })\n    } else {\n      setPeoples([]);\n    }\n  }, [search]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const debouncedSearch = debounce(handleSearch, 500);\n\n  return (\n    <div>\n      <input type='text' onChange={debouncedSearch} placeholder='Поиск' />\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {peoples.map(person => (\n            <li key={person.url}>{person.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}"
      },
      {
        "timestamp": "2025-05-12 13:36:43",
        "content": "2025-05-12 13:36:43\n Артур Виноградов -> 2071074234:\nКомпания: Т-банк. Алгоритмы\nЗП: 300\nРефка\n\n1 задача.\nДан массив натуральных чисел. требуется проверить, можно ли в нём выбрать четыре различных элемента x, y, z, w так, чтобы x + y  = z + w\n\nЭлементы считаем различными, если индексы всех элементов уникальны.\nЕсли это возможно - вывести индексы этих элементов\n[2,  1, 5, 2, 7, 4] -> 0, 5, 1, 2\n[1, 2, 2, 0] -> no solution\n\n// какие есть интересные кейсы, которые нужно прописать и протестировать?\n...",
        "full_content": "2025-05-12 13:36:43\n Артур Виноградов -> 2071074234:\nКомпания: Т-банк. Алгоритмы\nЗП: 300\nРефка\n\n1 задача.\nДан массив натуральных чисел. требуется проверить, можно ли в нём выбрать четыре различных элемента x, y, z, w так, чтобы x + y  = z + w\n\nЭлементы считаем различными, если индексы всех элементов уникальны.\nЕсли это возможно - вывести индексы этих элементов\n[2,  1, 5, 2, 7, 4] -> 0, 5, 1, 2\n[1, 2, 2, 0] -> no solution\n\n// какие есть интересные кейсы, которые нужно прописать и протестировать?\n// какая сложность решения по времени и по памяти? ( время O(n2), память O(n2) )\n\n\n2 задача\n\nНа вход подаётся непустая строка. Необходимо вернуть самый длинный палиндром в данной строке.\n\n// input: непустая строка\n// output: самый длинный палиндром в ней\n// \"baac\" => \"aa\"\n// \"abaababb => \"abaaba\"\n// \"abcba\" => \"abcba\"\n\nКакая сложность по времени?\nКак сократить хотя-бы до n2?\nДумаю здесь можно глянуть решения\nhttps://leetcode.com/problems/longest-palindrome/description/"
      },
      {
        "timestamp": "2025-04-30 11:29:07",
        "content": "2025-04-30 11:29:07\n Артур Виноградов -> 2071074234:\nТ-банк. 1 этап\nВакансия по рефке\nЗП: 300\nВсё точно также как здесь https://t.me/c/2071074234/489/82022\nи + задачки с API для rick & morty:\ndebounce\nрешить проблему с гонкой промисов при использовании (про AbortController).\nт.е как остановить предыдущие вызовы апи",
        "full_content": "2025-04-30 11:29:07\n Артур Виноградов -> 2071074234:\nТ-банк. 1 этап\nВакансия по рефке\nЗП: 300\nВсё точно также как здесь https://t.me/c/2071074234/489/82022\nи + задачки с API для rick & morty:\ndebounce\nрешить проблему с гонкой промисов при использовании (про AbortController).\nт.е как остановить предыдущие вызовы апи"
      },
      {
        "timestamp": "2025-04-28 12:12:05",
        "content": "2025-04-28 12:12:05\n Ber -> 2071074234:\nТ-банк (1 этап - React, JS в вебе)\nВакансия: https://www.tbank.ru/career/it/front-end-razrabotka/frontend-developer-react/\nЗП: 210-260\nЗадачи:\n\n// Задача 1\n// В чем проблема? Какие есть способы исправить?\n// Чем отличается стрелочная функция?\n// А если вынести коллбэк метода filter в отдельную переменную, которая будет хранить эту функцию-коллбэк?\n// Можно ли корректно вынести ее и в каком виде?\n// Как добиться так, чтобы была ошибка при выполнении?(тут на...",
        "full_content": "2025-04-28 12:12:05\n Ber -> 2071074234:\nТ-банк (1 этап - React, JS в вебе)\nВакансия: https://www.tbank.ru/career/it/front-end-razrabotka/frontend-developer-react/\nЗП: 210-260\nЗадачи:\n\n// Задача 1\n// В чем проблема? Какие есть способы исправить?\n// Чем отличается стрелочная функция?\n// А если вынести коллбэк метода filter в отдельную переменную, которая будет хранить эту функцию-коллбэк?\n// Можно ли корректно вынести ее и в каком виде?\n// Как добиться так, чтобы была ошибка при выполнении?(тут надо отвечать про директиву 'use strict', при этом рассказывать почему и как будет ошибка)\n// Что такое this?\nconst userSource = {\n    statusFilter: 'online',\n    data: [\n        {name: 'Bob', status: 'offline'},\n        {name: 'Bob', status: 'offline'},\n        {name: 'Bob', status: 'online'},\n    ],\n\n    getOnlineUsers: function() {\n        return this.data.filter(function(item) {\n            return item.status === this.statusFilter;\n        });\n    }\n};\n\nconsole.log(userSource.getOnlineUsers())\n\n\n// Задача 2\n// Реализовать EventEmitter\n// При этом методы on, off, emitt надо реализовать так, чтобы можно было чэйнить\n// Учитывать, что сохраняемые функции-обработчики не должны повторяться\n// (хотел начать сразу через Map и Set - почему-то он отклонил этот план и в итоге делал через объект)\n// Вот что-то подобное получилось\nclass EventEmitter {\n    constructor () {\n        this.events = {};\n    }\n\n    on(event, cb) {\n        if(!this.events[event]) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(cb);\n        return this;\n    };\n\n    off(event, cb) {\n        if(!this.events[event]) return this;\n        this.events[event] = this.events[event].filter(item => return item !== cb);\n        return this;\n    }\n\n    emit(event, ...args) {\n        if(!this.events[event]) return this;\n        this.events[event].forEach(cb => cb(...args));\n        return this;\n    }\n}\n\n// Задача 3\n// На консоль логи с макро и микрозадачами\n// Сперва была простая задача - то есть только setTimeout и then, синхронный код\n// Потом добавилась переменная foo, внутри которой инициализируется функция, которая порождает микрозадачу и при этом в then вызывается снова эта же переменная foo\n// (ответил, что будет переполнение стэка микрозадачами)\n// Потом добавилась переменная boo, внутри которой функция, которая порождает макрозадачу через setTimeout и планируется выполенение переменной boo снова\n// (ответил, что между макрозадачами будет выполнение синхронного кода)\n// Много вопросов задавал по EventLoop\n\n// Задача 4 на React\n/*\nGET https://rickandmortyapi.com/api/character?name=rick\n\n\n{\n  info: {\n    count: number,\n    pages: number,\n    next: string | null, //url\n    prev: string | null, //url\n  },\n  results: Array({ name: string, id: number })\n}\n\nВ случае если в апи отправлено имя несуществующего персонажа, апи отвечает ошибкой 404:\n{'error': 'There is nothing here'}\n\nСоздать приложение, с помощью которого можно искать по списку героев\n\nТребования\n1. Одно поле для ввода поискового запроса, запрашивать данные по вводу текста\n2. После получения ответа вывести список полученных сущеностей (только name)\n3. Индикация состояния загрузки\n4. Обработать кейс, когда апи отвечает ошибкой\n\n5. Следующим этапом сделать дебаунс\n6. Пагинацию\n\n*/"
      },
      {
        "timestamp": "2025-04-28 11:48:40",
        "content": "2025-04-28 11:48:40\n Ber -> 2071074234:\nТ-банк (2 этап - алгоритмика)\nВакансия: https://www.tbank.ru/career/it/front-end-razrabotka/frontend-developer-react/\nЗП: 210-260\n\nВ начале было предупреждение: можем решать в нашей онлайн-песочнице, либо на твоей IDE, но тогда шаришь весь экран\n(мои догадки: видимо, в их песочнице смотрится уход курсора)\n\nЗадачи:\n\n// 1-я задача\n// Есть два массива [112, 1, 4, 10] и [32, 12, 68, 12, 1]\n// Необходимо оптимально их объединить в один массив и по возрастанию\n/...",
        "full_content": "2025-04-28 11:48:40\n Ber -> 2071074234:\nТ-банк (2 этап - алгоритмика)\nВакансия: https://www.tbank.ru/career/it/front-end-razrabotka/frontend-developer-react/\nЗП: 210-260\n\nВ начале было предупреждение: можем решать в нашей онлайн-песочнице, либо на твоей IDE, но тогда шаришь весь экран\n(мои догадки: видимо, в их песочнице смотрится уход курсора)\n\nЗадачи:\n\n// 1-я задача\n// Есть два массива [112, 1, 4, 10] и [32, 12, 68, 12, 1]\n// Необходимо оптимально их объединить в один массив и по возрастанию\n// Что такое О? Как оценивается сложность по времени? Что такое пространственная сложность? Как ее оценивать?\n\n// 2-я задача\n// Надо обработать данные, которые представляют собой координаты Х и Y\n// Например, [{1, 1}, {2, 2}, {3, 1}]\n// Надо проверить, что у таких данных есть ось симметрии Y\n// Реализовать в виде функции, которая будет принимать подобные данные\n// и корректно определять наличие/отсутствие такой оси\n// В певой итерации можно не учитывать, что на оси Х ось симметрии может быть на дробной координате Х"
      },
      {
        "timestamp": "2025-04-21 07:58:29",
        "content": "2025-04-21 07:58:29\n Ber -> 2071074234:\nКомпания: Т-Банк (скриннинг)\nВакансия: https://www.tbank.ru/career/it/front-end-razrabotka/frontend-developer-react/\nЗП: конкретно еще будет решаться после следующих этапов (1 - React, js; 2 - алгоритмы; 3 - общение с командой)\nВопросы:\n1. Как узнать, что в переменной хранится функция?\n2. Что такое CORS?\n3. Чем отличаются sessionStorage от cookie?\n4. Как узнать, что в переменной хранится массив?\n5. Дан массив из 3 элементов, сколько будет элементов, если д...",
        "full_content": "2025-04-21 07:58:29\n Ber -> 2071074234:\nКомпания: Т-Банк (скриннинг)\nВакансия: https://www.tbank.ru/career/it/front-end-razrabotka/frontend-developer-react/\nЗП: конкретно еще будет решаться после следующих этапов (1 - React, js; 2 - алгоритмы; 3 - общение с командой)\nВопросы:\n1. Как узнать, что в переменной хранится функция?\n2. Что такое CORS?\n3. Чем отличаются sessionStorage от cookie?\n4. Как узнать, что в переменной хранится массив?\n5. Дан массив из 3 элементов, сколько будет элементов, если добавить элемент по индексу 7?\n6. Что приводит к ререндеру компонентов в React?\n7. Как изменить состояние компонента?\n7.1. Как запустить веб-приложение внутри другого веб-приложения?\n\n8. Если конфликтная ситуация с коллегой, как будешь решать?\n9. Какое качество тебе помогает справляться с большой нагрузкой и решением конфликтных ситуаций?\n10. Что у тебя есть из дополнительного в опыте: митапы, выступления на конференциях, статьи?\n11. У тебя есть опыт предложения своих решений и как ты их продвигал, как предлагал?\n12. В чем ты хотел развиваться дальше? Кем себя видишь в дальнейшем?\n13. Почему ищешь работу сейчас?\n14. Сколько бы ты дней мог ходить в офис?"
      },
      {
        "timestamp": "2025-03-27 07:18:07",
        "content": "2025-03-27 07:18:07\n Александр Птицын -> 2071074234:\n-- Название компании: IT One\n-- Ссылка на вакансию: hr сама написала\n-- ЗП: 350+\n-- Задачи: https://interview.tbank.ru/link/qsjfnT2XRjWq/result",
        "full_content": "2025-03-27 07:18:07\n Александр Птицын -> 2071074234:\n-- Название компании: IT One\n-- Ссылка на вакансию: hr сама написала\n-- ЗП: 350+\n-- Задачи: https://interview.tbank.ru/link/qsjfnT2XRjWq/result"
      },
      {
        "timestamp": "2025-02-21 15:02:46",
        "content": "2025-02-21 15:02:46\n Михаил -> 2071074234:\nКомпания: IT_One 1 Этап\nВакансия: HR написала\nЗП: 280-320k\n\nЗадачи:\nhttps://interview.tbank.ru/link/rth2WjJHS400/result",
        "full_content": "2025-02-21 15:02:46\n Михаил -> 2071074234:\nКомпания: IT_One 1 Этап\nВакансия: HR написала\nЗП: 280-320k\n\nЗадачи:\nhttps://interview.tbank.ru/link/rth2WjJHS400/result"
      },
      {
        "timestamp": "2025-02-06 20:34:52",
        "content": "2025-02-06 20:34:52\n Misha -> 2071074234:\nКомпания: Т-Банк (скрининг)\n\nСсылка на вакансию: https://www.tbank.ru/career/it/front-end-razrabotka/senior-frontend-developer-angular/\n\nЗП: согласовал на старте 260к. на руки\n\nВопросы:\n- Приводит ли типы оператор ===  \n- Если переменная объявлена через var, let, const есть ли доступ к ней, снаружи функции  \n- Как клонировать объект малым количеством кода  \n- Чему равен результат выполнения функции, если нет оператора выполнения return\n- Какая область ви...",
        "full_content": "2025-02-06 20:34:52\n Misha -> 2071074234:\nКомпания: Т-Банк (скрининг)\n\nСсылка на вакансию: https://www.tbank.ru/career/it/front-end-razrabotka/senior-frontend-developer-angular/\n\nЗП: согласовал на старте 260к. на руки\n\nВопросы:\n- Приводит ли типы оператор ===  \n- Если переменная объявлена через var, let, const есть ли доступ к ней, снаружи функции  \n- Как клонировать объект малым количеством кода  \n- Чему равен результат выполнения функции, если нет оператора выполнения return\n- Какая область видимости у переменной объявленной через let\n- Отличие bind от apply  \n- Что коллекция map может использовать в качестве ключей\n- Что выполнится раньше Promise.resolve или setTimeout\n- Как подписаться на одно событие DOM элемента несколькими обработчиками\n- Отличие let const  \n- Что возвращает setTimeout  \n- Какой тип возвращаемого значения функции fetch  \n- Что делает instanseOf\n\n Успех собеса ❌\n\nФитбек от HR - ответил правильно только на 50% вопросов, что не является проходным показателем."
      },
      {
        "timestamp": "2025-02-04 08:57:48",
        "content": "2025-02-04 08:57:48\n Petr Zabrodniy -> 2071074234:\nНазвание компании : Т-Банк (Тинькофф), 3 этап System Design (Архитектура веб)\nСсылка на вакансию : HR сама написала \nЗП : от 270к \nЗадачи : \nЗадача про мессенджер, как и в предыдущих собесах. \n\nОсновные требования : \n- НФТ  уточнить  и расписать\n- Тех стек фронт, опционально бек \n- Компонентный дизайн и архитектура на фронте \n- HLD схема\n- какие запросы будешь делать к апи, примерно, типа получить сообщения, отправить, что в аргументах и тд\n- оп...",
        "full_content": "2025-02-04 08:57:48\n Petr Zabrodniy -> 2071074234:\nНазвание компании : Т-Банк (Тинькофф), 3 этап System Design (Архитектура веб)\nСсылка на вакансию : HR сама написала \nЗП : от 270к \nЗадачи : \nЗадача про мессенджер, как и в предыдущих собесах. \n\nОсновные требования : \n- НФТ  уточнить  и расписать\n- Тех стек фронт, опционально бек \n- Компонентный дизайн и архитектура на фронте \n- HLD схема\n- какие запросы будешь делать к апи, примерно, типа получить сообщения, отправить, что в аргументах и тд\n- описать интерфейс сообщения, юзера, что то такое \n- Производительность\n- Безопасность\n- Дальнейшие челленджы с стеком, челенджы при горизонтальном/вертикальном масштабировании мессенджера (опционально)\n\nСохранился скрин итоговый с требованиями. В остальных пунктах \n- Производительность : Web Vitals, lighthouse\n- Безопасность : атаки XSS, jwt, httpOnly&secure"
      },
      {
        "timestamp": "2025-01-30 19:34:39",
        "content": "2025-01-30 19:34:39\n Wanderer -> 2071074234:\nКомпания: Т-банк(Тинькофф) \nСсылка на вакансию: Написала HR\nЗП: Вилка 300 - 330   \nФункция minCost(A, K, X) принимает три аргумента:\n- A: массив цен товаров,\n- K: количество доступных купонов,\n- X: скидка, предоставляемая одним купоном.\nЗадачи: \n\n1. Задача заключается в том, чтобы минимизировать общую стоимость товаров с учетом использования купонов. Каждый купон может быть использован на самый дорогой товар, уменьшая его цену на значение X. Функция с...",
        "full_content": "2025-01-30 19:34:39\n Wanderer -> 2071074234:\nКомпания: Т-банк(Тинькофф) \nСсылка на вакансию: Написала HR\nЗП: Вилка 300 - 330   \nФункция minCost(A, K, X) принимает три аргумента:\n- A: массив цен товаров,\n- K: количество доступных купонов,\n- X: скидка, предоставляемая одним купоном.\nЗадачи: \n\n1. Задача заключается в том, чтобы минимизировать общую стоимость товаров с учетом использования купонов. Каждый купон может быть использован на самый дорогой товар, уменьшая его цену на значение X. Функция сортирует массив цен по убыванию и применяет купоны к наиболее дорогим товарам, пока не закончатся купоны или пока не будут обработаны все товары. В конце функция возвращает суммарную стоимость оставшихся товаров.\n\n function minCost(A, K, X) {\n    // Сортируем массив по убыванию\n    A.sort((a, b) => b - a);\n\n    // Применяем купоны к самым дорогим товарам\n    for (let i = 0; i < A.length && K > 0; i++) {\n        let couponsUsed = Math.min(K, Math.floor(A[i] / X)); // Сколько купонов можно применить\n        A[i] = Math.max(A[i] - couponsUsed * X, 0);\n        K -= couponsUsed; // Уменьшаем количество доступных купонов\n    }\n\n    // Возвращаем суммарную стоимость оставшихся товаров\n    return A.reduce((sum, price) => sum + price, 0);\n}\n\n// Пример использования\nconst A = [8, 3, 10, 5, 13];\nconst K = 4;\nconst X = 7;\n\nconst result = minCost(A, K, X);\nconsole.log(result); // Ожидаемый результат: 12\n2: Объединение двух массивов\n\nФункция printUnion(arr1, arr2) находит и выводит уникальные элементы из двух отсортированных массивов arr1 и arr2. Функция проходит по обоим массивам, сравнивая их элементы, и выводит каждый уникальный элемент только один раз. Если элемент из одного массива равен элементу из другого, он также выводится только один раз. Таким образом, функция создает объединение двух массивов без дубликатов.\n\n\nfunction printUnion(arr1, arr2) {\n    let i = 0, j = 0;\n    let lastPrinted;\n    \n    while(i < arr1.length && j < arr2.length) {\n        if(arr1[i] < arr2[j]) {\n            if(arr1[i] !== lastPrinted) {\n                console.log(arr1[i]);\n                lastPrinted = arr1[i];\n            }\n            i++;\n        }\n        else if(arr2[j] < arr1[i]) {\n            if(arr2[j] !== lastPrinted) {\n                console.log(arr2[j]);\n                lastPrinted = arr2[j];\n            }\n            j++;\n        }\n        else {\n            if(arr1[i] !== lastPrinted) {\n                console.log(arr1[i]);\n                lastPrinted = arr1[i];\n            }\n            i++;\n            j++;\n        }\n    }\n    \n    while(i < arr1.length) {\n        if(arr1[i] !== lastPrinted) {\n            console.log(arr1[i]);\n            lastPrinted = arr1[i];\n        }\n        i++;\n    }\n    \n    while(j < arr2.length) {\n        if(arr2[j] !== lastPrinted) {\n            console.log(arr2[j]);\n            lastPrinted = arr2[j];\n        }\n        j++;\n    }\n}"
      },
      {
        "timestamp": "2025-01-28 10:13:20",
        "content": "2025-01-28 10:13:20\n Wanderer -> 2071074234:\nТинькофф / Т-Банк 1 этап (vanilla js + react)\nСсылка на вакансию: Написала HR\nЗП: Вилка 300 - 330 \n\nЗадачи:\nНаписать Event emitter\nEvent loop что будет в консоли?\nЗадача на анализ перерендеров и их оптимизация: React.memo, React.useCallback, React.useMemo. \nНаписать небольшое приложение по API Рика и Морти.\nОтображать список персонажей, поиск по имени, пагинацию, состояние ошибки и загрузки\nВопросы: Теоретических вопросов не было\nРезультат: Успешно, п...",
        "full_content": "2025-01-28 10:13:20\n Wanderer -> 2071074234:\nТинькофф / Т-Банк 1 этап (vanilla js + react)\nСсылка на вакансию: Написала HR\nЗП: Вилка 300 - 330 \n\nЗадачи:\nНаписать Event emitter\nEvent loop что будет в консоли?\nЗадача на анализ перерендеров и их оптимизация: React.memo, React.useCallback, React.useMemo. \nНаписать небольшое приложение по API Рика и Морти.\nОтображать список персонажей, поиск по имени, пагинацию, состояние ошибки и загрузки\nВопросы: Теоретических вопросов не было\nРезультат: Успешно, позвали на 2 этап ✅"
      },
      {
        "timestamp": "2024-11-05 14:01:22",
        "content": "2024-11-05 14:01:22\n аыеъа -> 2071074234:\nТ-Банк (Тинькофф) Финал\nКоманда разработки главной страницы\nЗП: 250к\nВидео:",
        "full_content": "2024-11-05 14:01:22\n аыеъа -> 2071074234:\nТ-Банк (Тинькофф) Финал\nКоманда разработки главной страницы\nЗП: 250к\nВидео:"
      },
      {
        "timestamp": "2024-11-05 09:15:03",
        "content": "2024-11-05 09:15:03\n Гасим Мурасов -> 2071074234:\nт-банк 1ый этап\nзп 250к просил\nвакансия по рефералке\n1) написать EventEmmiter(была выше)\n2) кастомный PromiseAll\n3) нужно сказать какие компоненты будет ререндерится и почему -\nhttps://interview.tbank.ru/link/Tv8S2dJR9wLC/result\n4) написать приложение с апи rick & morty(есть выше)\nGET https://rickandmortyapi.com/api/character?name=rick\n\ninfo: (\ncount: number,\npages: number,\nnext: string | null, // url,\nprev: string | null, //url\n},\nresults: Array...",
        "full_content": "2024-11-05 09:15:03\n Гасим Мурасов -> 2071074234:\nт-банк 1ый этап\nзп 250к просил\nвакансия по рефералке\n1) написать EventEmmiter(была выше)\n2) кастомный PromiseAll\n3) нужно сказать какие компоненты будет ререндерится и почему -\nhttps://interview.tbank.ru/link/Tv8S2dJR9wLC/result\n4) написать приложение с апи rick & morty(есть выше)\nGET https://rickandmortyapi.com/api/character?name=rick\n\ninfo: (\ncount: number,\npages: number,\nnext: string | null, // url,\nprev: string | null, //url\n},\nresults: Array({ name: string, id: number })\n\nВ случае если в апи отправлено имя несуществукшего персонажа, апи отвечает ошибкой 404:\n(\"error\":\"There is nothing here\")\n\nСоздать приложение, с помощью которого можно искать по списку героев.\n\nDocumentation (rickandmortyapi.com)\nТребования\n\n• Одно поле для ввода поискового запроса, запрашивать данные по вводу текста\n• После получения ответа вывести список полученных сущностей (только пате) |\n• Индикация состояния загрузки\n• Обработать кейс когда апи отвечает ошибкой /"
      },
      {
        "timestamp": "2024-10-29 07:49:36",
        "content": "2024-10-29 07:49:36\n Алмас -> 2071074234:\nКомпания: Т-банк\nЗП: 400\nВакансия: hr написала\nЗадачи те же что и обычно + 1 новая\n\n1)\nconsole.log(1);\nsetTimeout(function() {\n    console.log(2);\n});\nPromise.resolve(3).then(console.log);\nconsole.log(4);\nsetTimeout(function() {\n    console.log(5);\n}, 0);\nconsole.log(6);\n\nпотом модификация 1\n\nconsole.log(1);\nsetTimeout(function() {\n    console.log(2);\n});\nPromise.resolve(3).then(console.log);\nconsole.log(4);\nsetTimeout(function() {\n    console.log(5);\n},...",
        "full_content": "2024-10-29 07:49:36\n Алмас -> 2071074234:\nКомпания: Т-банк\nЗП: 400\nВакансия: hr написала\nЗадачи те же что и обычно + 1 новая\n\n1)\nconsole.log(1);\nsetTimeout(function() {\n    console.log(2);\n});\nPromise.resolve(3).then(console.log);\nconsole.log(4);\nsetTimeout(function() {\n    console.log(5);\n}, 0);\nconsole.log(6);\n\nпотом модификация 1\n\nconsole.log(1);\nsetTimeout(function() {\n    console.log(2);\n});\nPromise.resolve(3).then(console.log);\nconsole.log(4);\nsetTimeout(function() {\n    console.log(5);\n}, 0);\nconsole.log(6);\nconst foo1 = () => {\n    console.log('foo1');\n    return Promise.resolve().then(foo1);\n}\nfoo1();\n\nмодификация 2\n\nconsole.log(1);\nsetTimeout(function() {\n    console.log(2);\n});\nPromise.resolve(3).then(console.log);\nconsole.log(4);\nsetTimeout(function() {\n    console.log(5);\n}, 0);\nconsole.log(6);\nconst foo2 = () => {\n    console.log('foo2');\n    setTimeout(foo2);\n}\nfoo2();\n\nмодификация 3\n\nconsole.log(1);\nsetTimeout(function() {\n    console.log(2);\n});\nsetTimeout(() => {\n    Promise.resolve().then(() => console.log(7));\n});\nPromise.resolve(3).then(console.log);\nconsole.log(4);\nsetTimeout(function() {\n    console.log(5);\n}, 0);\nconsole.log(6);\n\n2) что Выведет код?\nconst userService = {\n    currentFilter: 'active',\n    users: [\n        { name: 'Alex', status: 'active' },\n        { name: 'Nick', status: 'deleted' },\n    ],\n    getFilteredUsers: function() {\n        return this.users.filter(function(user) {\n            return user.status === this.currentFilter;\n        });\n    }\n};\n\nconsole.log(userService.getFilteredUsers());\nпотом попросит забиндить правильно контекст\n\n3)своя реализация  promiseAll\n4) Приложение содержит кнопку, при нажатии на которую должен появиться инпут с фокусом. Но почему-то это не работает.\nРасскажите, почему возникает такая проблема и предложите варианты ее исправления.\nimport { useRef, useState } from \"react\";\n\nexport default function App() {\n    const [isVisible, setIsVisible] = useState(false);\n    const inputRef = useRef();\n\n    const showInput = () => {\n        setIsVisible(true);\n        inputRef.current.focus();\n    };\n\n    return (\n        <div>\n            <button onClick={showInput}>Show and focus input</button>\n            {isVisible && <input ref={inputRef} type=\"text\" />}\n        </div>\n    );\n}\n\n5) задача как в предыдуших топиках про рик и морти"
      },
      {
        "timestamp": "2024-10-18 13:53:40",
        "content": "2024-10-18 13:53:40\n аыеъа -> 2071074234:\nТ-Банк (Тинькофф) Архитектурный этап\nЗП: Не обсуждали\nВакансия: Написала HR\n\nВидео (голос интервьюера не записался😭)\nЗадача с моим решением:\nhttps://excalidraw.com/#room=89450b44aa0acbb36b46,rBmb2P6JuJPt9XSWsRhuLw\nЗадача с прошлого архитектурного: \nhttps://excalidraw.com/#room=36d00cecfb850495e0d5,3aMMxi9HEy96MYaudtqxEg\n\n#архитектура #систем_дизайн",
        "full_content": "2024-10-18 13:53:40\n аыеъа -> 2071074234:\nТ-Банк (Тинькофф) Архитектурный этап\nЗП: Не обсуждали\nВакансия: Написала HR\n\nВидео (голос интервьюера не записался😭)\nЗадача с моим решением:\nhttps://excalidraw.com/#room=89450b44aa0acbb36b46,rBmb2P6JuJPt9XSWsRhuLw\nЗадача с прошлого архитектурного: \nhttps://excalidraw.com/#room=36d00cecfb850495e0d5,3aMMxi9HEy96MYaudtqxEg\n\n#архитектура #систем_дизайн"
      },
      {
        "timestamp": "2024-10-15 19:06:08",
        "content": "2024-10-15 19:06:08\n 5429820319 -> 2071074234:\n- Т-банк\n - Первый этап (React + JS)\n- ЗП: до 400к\n- Вакансия: hr сама написала\n- Успех: нет\n\n\nСегодня жестко разьебали в Тинькофф\n\nХотел попробовать пройти на своих, но тут понял что собесы стали настолько сложными что в одиночку тащить просто нереально\n\nБыло все не как тут в чате, меня сначала спрасили за опыт, про задачи - довольно подроно, минут на 15\n\nПотом сразу была задача на Deep Copy, вспомнил и ее написал ее довольно бодро, но она не покры...",
        "full_content": "2024-10-15 19:06:08\n 5429820319 -> 2071074234:\n- Т-банк\n - Первый этап (React + JS)\n- ЗП: до 400к\n- Вакансия: hr сама написала\n- Успех: нет\n\n\nСегодня жестко разьебали в Тинькофф\n\nХотел попробовать пройти на своих, но тут понял что собесы стали настолько сложными что в одиночку тащить просто нереально\n\nБыло все не как тут в чате, меня сначала спрасили за опыт, про задачи - довольно подроно, минут на 15\n\nПотом сразу была задача на Deep Copy, вспомнил и ее написал ее довольно бодро, но она не покрывала не все тестовые случаи, короче, прокапался с ней и в итоге так и не завелось, нужно было изначально идти с другим подходом\n\nПотом была задача Promie Any, написал решение быстро, но протупил и поставил счетчик не в том блоке (просто одну скобку раньше и все было бы ок), из за этого долго тупил почему не работает и словил кучу доп вопросов про синхронноть/асинхронность\n\nДалее нужно было по React-коду сказать какие компоненты перерисуются а какие нет (тут уже была такая задача в чате), вроде все рассказал, тут было относительно просто, но была куча вопросов а почему ты так думаешь, а как в реате это работает, а если сделать так поменяется ли что то и т.п\n\nИ далее была задача написать слот-машину (кода не осталось, не успел скопировать)\n\nЯ даже не понял что именно нужно было сделать, оставалось всего 15 минут до конца, я нервничал, там было уже частично написанное приложение с разными утилитарными функциями и это нужно было доделать - по итогу там должна была получиться что то типа однорукого бандита где вращаются числа когда дергается ручка.\n\nПо итогу фейл\n\nНе будьте мной, не ходите одни"
      },
      {
        "timestamp": "2024-10-11 10:11:25",
        "content": "2024-10-11 10:11:25\n аыеъа -> 2071074234:\nТ-Банк (Тинькофф) Алгоритмический этап\nУспех: ✅\nЗП: Не обсуждали\nВакансия: написала hr\nЗадачи:\n\n1. Дан массив, нужно его разрезать так, что бы сумма правой и левой части были равны\nВернуть левую сумму\nfunction maxSum(arr) {\n    let left = 0;\n    let right = arr.length - 1;\n    let leftSum = 0;\n    let rightSum = 0;\n    let maxLeftSum = 0;\n\n    while (left <= right) {\n        if (leftSum <= rightSum) {\n            leftSum += arr[left];\n            left++;...",
        "full_content": "2024-10-11 10:11:25\n аыеъа -> 2071074234:\nТ-Банк (Тинькофф) Алгоритмический этап\nУспех: ✅\nЗП: Не обсуждали\nВакансия: написала hr\nЗадачи:\n\n1. Дан массив, нужно его разрезать так, что бы сумма правой и левой части были равны\nВернуть левую сумму\nfunction maxSum(arr) {\n    let left = 0;\n    let right = arr.length - 1;\n    let leftSum = 0;\n    let rightSum = 0;\n    let maxLeftSum = 0;\n\n    while (left <= right) {\n        if (leftSum <= rightSum) {\n            leftSum += arr[left];\n            left++;\n        } else {\n            rightSum += arr[right];\n            right--;\n        }\n\n        if (leftSum === rightSum) {\n            maxLeftSum = Math.max(maxLeftSum, leftSum);\n        }\n    }\n\n    return maxLeftSum;\n}\n\n\n2. https://leetcode.com/problems/permutation-in-string/description/\n\n3. Дан массив домов houses где число это этаж дома и цель - индекс нужного дома \nНужно найти минимальную длину лестницы с которой можно дойти до нужного дома\nfn([1, 2, 6, 1], 2) => 4\nfn([100 ... 100, 1 (target), 2, 100 ... 100],) => 1\nОтвет: Нужно итерироваться с индекса target на право и на лево, при каждой итерации выщитовать корректный минимум"
      },
      {
        "timestamp": "2024-10-08 19:03:39",
        "content": "2024-10-08 19:03:39\n 5429820319 -> 2071074234:\nТ-банк (скрининг)\nВакансия: hr сама написала\nЗП: до 400к\nУспех: ✅\nВопросы:\nМожно ли обратиться к переменным типа var/let/const за пределами функции?\nВ чем разница между let и const?\nВ чем разница между == и ===?\nЧто возвращает функция по умолчанию?\nКак можно клонировать объект в\nJavaScript?\nКакой тип данных возвращет fetch?\nЧто выполниться раньше Promise или setTimeout?\nЧто возвращает setTimeout?\nЗачем нужен Symbol?\nЧто такое Мар?\nВ чем разница межд...",
        "full_content": "2024-10-08 19:03:39\n 5429820319 -> 2071074234:\nТ-банк (скрининг)\nВакансия: hr сама написала\nЗП: до 400к\nУспех: ✅\nВопросы:\nМожно ли обратиться к переменным типа var/let/const за пределами функции?\nВ чем разница между let и const?\nВ чем разница между == и ===?\nЧто возвращает функция по умолчанию?\nКак можно клонировать объект в\nJavaScript?\nКакой тип данных возвращет fetch?\nЧто выполниться раньше Promise или setTimeout?\nЧто возвращает setTimeout?\nЗачем нужен Symbol?\nЧто такое Мар?\nВ чем разница между bind и call?\nКакие есть этапы у event?\nВ чем разница между margin и padding?\nКак можно отцентровать элемент?\nЧто приоритетнее id или class?"
      },
      {
        "timestamp": "2024-10-08 13:55:34",
        "content": "2024-10-08 13:55:34\n аыеъа -> 2071074234:\nТ-Банк (Тинькофф) Техсобес\nВакансия: написала hr\nЗП: не обсуждали\nУспех: ✅\nВопросы:\n\nСразу перешли к задачкам\n// что выведет и почему\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(2)\n})\n\nPromise.resolve(3).then(console.log)\n\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(5)\n}, 0)\n\nconsole.log(6);\nчто будет если к коду выше добавить это\nconst foo1 = () => {\n  console.log('foo1')\n  \n  return Promise.resolve().then(foo1)\n}\n\nfoo1()\nили это\n\n...",
        "full_content": "2024-10-08 13:55:34\n аыеъа -> 2071074234:\nТ-Банк (Тинькофф) Техсобес\nВакансия: написала hr\nЗП: не обсуждали\nУспех: ✅\nВопросы:\n\nСразу перешли к задачкам\n// что выведет и почему\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(2)\n})\n\nPromise.resolve(3).then(console.log)\n\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(5)\n}, 0)\n\nconsole.log(6);\nчто будет если к коду выше добавить это\nconst foo1 = () => {\n  console.log('foo1')\n  \n  return Promise.resolve().then(foo1)\n}\n\nfoo1()\nили это\n\nconst foo2 = () => {\n  console.log('foo1')\n  \n  setTimeout(foo2)\n}\n\nfoo2()\nОтвет в том что при первом случае будут лаги из-за рекурсивного промиса, а во втором, приложение будет отвечать на действия потому-что это макротаска\n\nНаписать свой EventEmitter и проверку для него\nНаписать свой PromiseAll и функции проверки к нему\nКод не сохранился, вопрос был почему не появится инпут после нажатия на кнопку (ответ из-за того что реф с фокусом ставится до рендера самого инпута) и как решить эту проблему 3-4мя способами\n\nНаписать по апи рика и морти приложение с поиском и обработкой ошибок, если останется время будут усложнения: \nДобавление дебаунса\nПросят написать кастомный хук в который нужно перенести код с запросами, дополнение это булева hasNextPage и функциия fetchMore которая добавляет еще страницу к текущим персонажам \nПод конец спросил как оборвать запрос (abortController)\n\nЯ решал задачки слишком быстро и мне постоянно добавляли кучу доп вопросов и усложнений к задачкам, не будьте мной"
      },
      {
        "timestamp": "2024-10-01 11:48:44",
        "content": "2024-10-01 11:48:44\n Timofei Syromiatnikov -> 2071074234:\n— Название: Т-банк (1 этап JS + React)\n— Вакансия: написала hr\n— ЗП: 300к\n— Задачи:\n1. Что выйдет в консоль лог в каком порядке и почему\n// что выведет\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(2)\n})\n\nPromise.resolve(3).then(console.log)\n\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(5)\n}, 0)\n\nconsole.log(6);\n2. Что выйдет в консоль лог в каком порядке и почему\n// что выведет\nconsole.log(1);\n\nsetTimeout(function() {\n...",
        "full_content": "2024-10-01 11:48:44\n Timofei Syromiatnikov -> 2071074234:\n— Название: Т-банк (1 этап JS + React)\n— Вакансия: написала hr\n— ЗП: 300к\n— Задачи:\n1. Что выйдет в консоль лог в каком порядке и почему\n// что выведет\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(2)\n})\n\nPromise.resolve(3).then(console.log)\n\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(5)\n}, 0)\n\nconsole.log(6);\n2. Что выйдет в консоль лог в каком порядке и почему\n// что выведет\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(2)\n})\n\nPromise.resolve(3).then(console.log)\n\nconsole.log(1);\n\nsetTimeout(function() {\n  console.log(5)\n}, 0)\n\nconst pr = new Promise(resolve => {\n  console.log('foo')\n\n  setTimeout(() => {\n     console.log('bar')\n     resolve()\n  })\n})\n\nconsole.log(6);\n3. Что выйдет в консоль лог и почему, какими способами мы можем пофиксить\n// что произойдет\nconst foo1 = () => {\n  console.log('foo1')\n  \n  return Promise.resolve().then(foo1)\n}\n\nfoo1()\nconst foo2 = () => {\n  console.log('foo1')\n  \n  setTimeout(foo2)\n}\n\nfoo2()\n3. В каком порядке выведутся консоль логи, почему. На каком элементе будет фокус при первом рендере\nimport React, { useEffect, useRef, forwardRef } from 'react';\n\nconst Child2 = forwardRef((props, ref) => {\n  useEffect(() => {\n    console.log('4');\n  }, [ref]);\n\n  return (\n    <div>\n      <input type=\"text\" />\n      <button ref={ref}>Click Me</button>\n    </div>\n  );\n});\n\nconst Child1 = () => {\n  const buttonRef = useRef(null);\n\n  useEffect(() => {\n    console.log('3');\n    // Устанавливаем фокус на кнопку\n    if (buttonRef.current) {\n      buttonRef.current.focus();\n    }\n  }, []);\n\n  return (\n    <div>\n      <Child2 ref={buttonRef} />\n    </div>\n  );\n};\n\nconst Parent = () => {\n  useEffect(() => {\n    console.log('2');\n  }, []);\n\n  return (\n    <div>\n      <Child1 />\n    </div>\n  );\n};\n\nconst App = () => {\n  useEffect(() => {\n    console.log('1');\n  }, []);\n\n  return (\n    <div>\n      <Parent />\n    </div>\n  );\n};\n\nexport default App;\n5. Аналогичная задача https://t.me/c/2071074234/489/50951"
      },
      {
        "timestamp": "2024-09-26 17:02:00",
        "content": "2024-09-26 17:02:00\n Dispersioned -> 2071074234:\nТ-Банк (Тинькофф) 4 этап (фит с командой) команда без названия\nкоманда делает по сути headless ui SDK со своими наворотами и DI, нужно писать много тестов на playwright и помогать продуктовым командам фиксить баги этого SDK\nЗП: >320net\nУспех: Не пойду к ним ⚠️, хуйня какая-то\nФидбек: ???",
        "full_content": "2024-09-26 17:02:00\n Dispersioned -> 2071074234:\nТ-Банк (Тинькофф) 4 этап (фит с командой) команда без названия\nкоманда делает по сути headless ui SDK со своими наворотами и DI, нужно писать много тестов на playwright и помогать продуктовым командам фиксить баги этого SDK\nЗП: >320net\nУспех: Не пойду к ним ⚠️, хуйня какая-то\nФидбек: ???"
      },
      {
        "timestamp": "2024-09-26 11:45:06",
        "content": "2024-09-26 11:45:06\n Dispersioned -> 2071074234:\nТ-Банк (Тинькофф) 4 этап (фит с командой)\nОписание продукта Statist.Events\nДля дата аналитиков Tinkoff group, у которых есть потребность в каталогизации, поиске и управлении событиями, Statist Events это продукт, который является витриной и центром управления событиями, позволяющий повысить качество и эффективность использования данных. Statist Events \nСсылка на вакансию: утеряна\nЗП: >320net\nВопросы: рассказать о себе\nУспех собеса: Отказался ⚠️ та...",
        "full_content": "2024-09-26 11:45:06\n Dispersioned -> 2071074234:\nТ-Банк (Тинькофф) 4 этап (фит с командой)\nОписание продукта Statist.Events\nДля дата аналитиков Tinkoff group, у которых есть потребность в каталогизации, поиске и управлении событиями, Statist Events это продукт, который является витриной и центром управления событиями, позволяющий повысить качество и эффективность использования данных. Statist Events \nСсылка на вакансию: утеряна\nЗП: >320net\nВопросы: рассказать о себе\nУспех собеса: Отказался ⚠️ так как ищут фуллстака и надо регулярно лазать в бэк на ноде, буду собеситься в другую команду\nФидбек ???"
      },
      {
        "timestamp": "2024-09-24 11:25:28",
        "content": "2024-09-24 11:25:28\n Dispersioned -> 2071074234:\nТ-Банк (Тинькофф) 3 этап (архитектура)\nСсылка на вакансию: утеряна\nЗП: > 320net\nЗадача: проектируем мессенджер, 1 в 1 как тут https://t.me/c/2071074234/489/5027\nЗапись: прикладываю, вместе с главным что рисовали\nУспех собеса: Успешно ✅ \nФидбек:\nМаксим, привет \nКак и всегда, ты отлично прошел секцию \nПередаю немного рекомендаций: \n\nПривет! Ты отлично справился с заданием! Из личных советов могу подсказать, что для менее сумбурного результата в схем...",
        "full_content": "2024-09-24 11:25:28\n Dispersioned -> 2071074234:\nТ-Банк (Тинькофф) 3 этап (архитектура)\nСсылка на вакансию: утеряна\nЗП: > 320net\nЗадача: проектируем мессенджер, 1 в 1 как тут https://t.me/c/2071074234/489/5027\nЗапись: прикладываю, вместе с главным что рисовали\nУспех собеса: Успешно ✅ \nФидбек:\nМаксим, привет \nКак и всегда, ты отлично прошел секцию \nПередаю немного рекомендаций: \n\nПривет! Ты отлично справился с заданием! Из личных советов могу подсказать, что для менее сумбурного результата в схемах, стоит больше внимания уделять данным(домену) с которыми работаешь. Так же, для более комфортного проектирования можно было спросить конкретные цифры по нефункциональным требованиям.\n\nДля проектирования - https://c4model.com/\nПро безопасность - https://owasp.org/www-project-top-ten/"
      },
      {
        "timestamp": "2024-09-23 09:11:06",
        "content": "2024-09-23 09:11:06\n Dispersioned -> 2071074234:\nТ-Банк (Тинькофф) 2 этап (агоритмы)\nСсылка на вакансию: утеряна\nЗП: >320net\n\nЗадачи:\n1. Задача скорее с codewars 4-5q, нежели leetcode. \nЕсть двумерный массив, который заполнен целыми интами 1,2,3... как панель домофона (слева направо, сверху вниз). \nНа вход функции подаётся массив интов (пароль к домофону), которые есть в вышеописанном двумерном массиве. нужно определить за сколько ходов по нему можно пройти по всем числам в пароле.\nРешение:\nfunc...",
        "full_content": "2024-09-23 09:11:06\n Dispersioned -> 2071074234:\nТ-Банк (Тинькофф) 2 этап (агоритмы)\nСсылка на вакансию: утеряна\nЗП: >320net\n\nЗадачи:\n1. Задача скорее с codewars 4-5q, нежели leetcode. \nЕсть двумерный массив, который заполнен целыми интами 1,2,3... как панель домофона (слева направо, сверху вниз). \nНа вход функции подаётся массив интов (пароль к домофону), которые есть в вышеописанном двумерном массиве. нужно определить за сколько ходов по нему можно пройти по всем числам в пароле.\nРешение:\nfunction minMoves(lock, password) {\n  const rows = lock.length; // количество строк\n  const cols = lock[0].length; // количество столбцов\n\n  // Функция для преобразования числа в координаты (row, col)\n  function getCoordinates(num) {\n    const row = Math.floor((num - 1) / cols);\n    const col = (num - 1) % cols;\n    return { row, col };\n  }\n\n  let moves = 0;\n\n  // Проходим по каждому числу в пароле\n  for (let i = 1; i < password.length; i++) {\n    const start = getCoordinates(password[i - 1]);\n    const end = getCoordinates(password[i]);\n\n    // Рассчитываем разницу по строкам и столбцам\n    const rowDiff = Math.abs(start.row - end.row);\n    const colDiff = Math.abs(start.col - end.col);\n\n    // Количество движений равно максимальной разнице\n    moves += Math.max(rowDiff, colDiff);\n  }\n\n  return moves;\n}\n\n// Пример использования\nconst lock = [\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9, 10, 11, 12]\n];\n\nconst password = [1, 9, 3, 7];\nconsole.log(minMoves(lock, password)); // Выведет 5\n\n2. Задача с leetcode, вроде эта: 904 Fruit Into Baskets https://leetcode.com/problems/fruit-into-baskets/description. Дан массив целочисленных интов. Нужно найти такой подмассив, что: сумма элементов в нём максимальная, уникальных чисел в подмассиве не более 2\nЗапись: -\nУспех собеса: Успешно ✅ позвали на архитектурное интервью \nФидбек: \nПривет, как и в прошлый раз ты отлично справился с секцией"
      },
      {
        "timestamp": "2024-09-19 13:39:13",
        "content": "2024-09-19 13:39:13\n Dispersioned -> 2071074234:\nТинькофф / Т-Банк 1 этап (vanilla js + react)\nСсылка на вакансию: утеряна\nЗП: >320net\n\nЗадачи:\n1. event emitter\n2. promise any\n3. deepCopy\n4. Анализ перерендеров и их оптимизация\n5. Написать небольшое приложение по апи Рика и Морти. Отображать список персов, поиск по имени, пагинацию, состояние ошибки и загрузки\n\nВопросы: Теории не было, сразу перешли к задачам\nЗапись: нет\nУспех собеса: успешно, позвали на 2 этап ✅\nФидбек: скриншот",
        "full_content": "2024-09-19 13:39:13\n Dispersioned -> 2071074234:\nТинькофф / Т-Банк 1 этап (vanilla js + react)\nСсылка на вакансию: утеряна\nЗП: >320net\n\nЗадачи:\n1. event emitter\n2. promise any\n3. deepCopy\n4. Анализ перерендеров и их оптимизация\n5. Написать небольшое приложение по апи Рика и Морти. Отображать список персов, поиск по имени, пагинацию, состояние ошибки и загрузки\n\nВопросы: Теории не было, сразу перешли к задачам\nЗапись: нет\nУспех собеса: успешно, позвали на 2 этап ✅\nФидбек: скриншот"
      },
      {
        "timestamp": "2024-09-02 20:38:16",
        "content": "2024-09-02 20:38:16\n Евгений Лямин -> 2071074234:\n— Т-Банк 3 этап Архитектура\n— hr написал\n— 250-280 просил\n— фидбек: \nКак проектировать верхнеуровневый дизайн системы - https://c4model.com/\nМожно почитать дополнительно про load balancing (не совсем корректно был использован в решении) - https://www.nginx.com/resources/glossary/load-balancing/\nТакже старайся не забывать и про НФТ, вот System Design с примерами - [https://github.com/karanpratapsingh/system-designВаши](https://github.com/karanprat...",
        "full_content": "2024-09-02 20:38:16\n Евгений Лямин -> 2071074234:\n— Т-Банк 3 этап Архитектура\n— hr написал\n— 250-280 просил\n— фидбек: \nКак проектировать верхнеуровневый дизайн системы - https://c4model.com/\nМожно почитать дополнительно про load balancing (не совсем корректно был использован в решении) - https://www.nginx.com/resources/glossary/load-balancing/\nТакже старайся не забывать и про НФТ, вот System Design с примерами - [https://github.com/karanpratapsingh/system-designВаши](https://github.com/karanpratapsingh/system-design%D0%92%D0%B0%D1%88%D0%B8) рекомендации\n\n— видео: https://youtu.be/ujGBQDnWSF0"
      },
      {
        "timestamp": "2024-08-29 15:57:43",
        "content": "2024-08-29 15:57:43\n Евгений Лямин -> 2071074234:\n— Т-Банк 2 этап Алгоритмы\n— hr написал\n— 250-280 просил\n— фидбек: \n\nОт интервьюера: \"Хорошо решаешь задачи, видно подход к анализу условия\nСтоит немного подтянуть теорию в части оценки сложности, оцениваешь не очень уверенно.\n\nPS. По последней задаче контрпример: [2, 4, 12, 8, 10, 6, 14, 16] - твое решение выдает [1,6], правильно [2,5]\"\n\n— Задачи:\n1.Нужно написать функцию, которая проверяет является строка подпоследовательностью названия файла\nfu...",
        "full_content": "2024-08-29 15:57:43\n Евгений Лямин -> 2071074234:\n— Т-Банк 2 этап Алгоритмы\n— hr написал\n— 250-280 просил\n— фидбек: \n\nОт интервьюера: \"Хорошо решаешь задачи, видно подход к анализу условия\nСтоит немного подтянуть теорию в части оценки сложности, оцениваешь не очень уверенно.\n\nPS. По последней задаче контрпример: [2, 4, 12, 8, 10, 6, 14, 16] - твое решение выдает [1,6], правильно [2,5]\"\n\n— Задачи:\n1.Нужно написать функцию, которая проверяет является строка подпоследовательностью названия файла\nfunction IDESearch(search, full) {\n  // Инициализируем два указателя для строки поиска и полного названия файла\n  let searchIndex = 0;\n  let fullIndex = 0;\n\n  // Проходим по всей строке полного названия файла\n  while (fullIndex < full.length) {\n    // Если текущий символ совпадает с символом в строке поиска\n    if (full[fullIndex] === search[searchIndex]) {\n      searchIndex++; // Двигаемся к следующему символу в строке поиска\n    }\n    // Двигаемся к следующему символу в полном названии файла\n    fullIndex++;\n\n    // Если указатель строки поиска достиг конца, это значит, что все символы найдены в правильном порядке\n    if (searchIndex === search.length) {\n      return true; // Подпоследовательность найдена\n    }\n  }\n\n  // Если мы не нашли всю строку поиска, возвращаем false\n  return false;\n}\n\n// Примеры вызовов функции\nconsole.log(IDESearch(\"crdle\", \"crocodile.txt\")); // true\nconsole.log(IDESearch(\"le\", \"crocodile.txt\"));    // true\nconsole.log(IDESearch(\"el\", \"crocodile.txt\"));    // false\nconsole.log(IDESearch(\"coco\", \"crocodile.txt\"));  // true\nconsole.log(IDESearch(\"crdleee\", \"crocodile.txt\")); // false\nconsole.log(IDESearch(\"crkdl\", \"crocodile.txt\")); // false\n\n\n2.найти индексы самого длинного неотсортированого подмассива\nfunction getShortestUnsortedSubarray(nums) {\n    let numsLength = nums.length\n    let left = 0, right = numsLength - 1;\n    const subArray = nums.slice(left, right + 1)\n    let minSubArray = Math.min(...subArray)\n    let maxSubArray = Math.max(...subArray)\n\n    while (left < numsLength - 1 && nums[left] <= nums[left + 1]) {\n        left++;\n    }\n\n    if (left === numsLength - 1) {\n        return []\n    }\n\n    if (right > 0 && nums[right] >= nums[right - 1]) {\n        right--\n    }\n\n    while (right < numsLength - 1 && nums[right + 1] < maxSubArray) {\n        right++\n    }\n\n    while (left > 0 && nums[left - 1] > minSubArray) {\n        left--\n    }\n\n    return [left, right];\n}"
      },
      {
        "timestamp": "2024-08-27 07:39:29",
        "content": "2024-08-27 07:39:29\n Alexander -> 2071074234:\n– Название: Тинькофф / Т-банк (алгоритмический этап)\n– Вопросы: \nДве алгоритмические задачи\nПервая two sum\nВторая find all numbers disappeared in an array\n(не совсем они, но чрезмерно похожие)\nОбе литкодовские",
        "full_content": "2024-08-27 07:39:29\n Alexander -> 2071074234:\n– Название: Тинькофф / Т-банк (алгоритмический этап)\n– Вопросы: \nДве алгоритмические задачи\nПервая two sum\nВторая find all numbers disappeared in an array\n(не совсем они, но чрезмерно похожие)\nОбе литкодовские"
      },
      {
        "timestamp": "2024-06-14 07:15:06",
        "content": "2024-06-14 07:15:06\n Andrei Chirkov -> 2071074234:\nТинькофф, Тех. собес\n- Вакансия: по реферальной ссылке\n- ЗП: 270+\n- Успех собеса: Нет\n\nНаписать просис эни и далее надо отрефакторить реакт код. Остальные задачи закрылись после завершения собеса\nЗадачи:\n\nfunction promiseAny(promises) {\n    return new Promise((resolve, reject) => {\n        let errors = [];\n        let rejectedCount = 0;\n\n        promises.forEach((promise, index) => {\n            Promise.resolve(promise)\n                .then(res...",
        "full_content": "2024-06-14 07:15:06\n Andrei Chirkov -> 2071074234:\nТинькофф, Тех. собес\n- Вакансия: по реферальной ссылке\n- ЗП: 270+\n- Успех собеса: Нет\n\nНаписать просис эни и далее надо отрефакторить реакт код. Остальные задачи закрылись после завершения собеса\nЗадачи:\n\nfunction promiseAny(promises) {\n    return new Promise((resolve, reject) => {\n        let errors = [];\n        let rejectedCount = 0;\n\n        promises.forEach((promise, index) => {\n            Promise.resolve(promise)\n                .then(resolve)\n                .catch((error) => {\n                    errors[index] = error;\n                    rejectedCount += 1;\n                    if (rejectedCount === promises.length) {\n                        reject(new AggregateError(errors, \"All promises were rejected\"));\n                    }\n                });\n        });\n    });\n}"
      },
      {
        "timestamp": "2024-02-07 15:53:47",
        "content": "2024-02-07 15:53:47\n )( -> 2071074234:\n- Название компании: Тинькофф[первый этап js и react]\n- Ссылка на вакансию: hr сам написал\n- ЗП: 220\n- Задачи максимально похожие как из видео. Вот то что было у меня\nhttps://docs.google.com/document/d/1S-UXFj4hQ3L9KrhojjRcafv0ecGFtY6eARJ8CyI4NB0/edit?usp=sharing\n- Успех собеса: -\n- Фидбек о собесе от HR: -",
        "full_content": "2024-02-07 15:53:47\n )( -> 2071074234:\n- Название компании: Тинькофф[первый этап js и react]\n- Ссылка на вакансию: hr сам написал\n- ЗП: 220\n- Задачи максимально похожие как из видео. Вот то что было у меня\nhttps://docs.google.com/document/d/1S-UXFj4hQ3L9KrhojjRcafv0ecGFtY6eARJ8CyI4NB0/edit?usp=sharing\n- Успех собеса: -\n- Фидбек о собесе от HR: -"
      },
      {
        "timestamp": "2024-02-05 19:39:22",
        "content": "2024-02-05 19:39:22\n Daniil Max -> 2071074234:\n— Название компании: Тинькофф [пятый этап, заключительный, знакомство с командой]\n— Ссылка на вакансию: утеряна \n— ЗП: 310~400к\n— Задачи: софтскиллы\nРассказали про проект;\nПопросили рассказать про себя;\nЗадавали вопросы про опыт;\nЯ задавал вопросы про их продукт;\n— Успех собеса: ❌\n— Фитбек от hr:\nВсем привет. В тинек по той команде реджект. \nДали по мне фитбек подробный команда. \n\nСказали сильные скиллы у него как в архитектуре, так и в софтскиллах....",
        "full_content": "2024-02-05 19:39:22\n Daniil Max -> 2071074234:\n— Название компании: Тинькофф [пятый этап, заключительный, знакомство с командой]\n— Ссылка на вакансию: утеряна \n— ЗП: 310~400к\n— Задачи: софтскиллы\nРассказали про проект;\nПопросили рассказать про себя;\nЗадавали вопросы про опыт;\nЯ задавал вопросы про их продукт;\n— Успех собеса: ❌\n— Фитбек от hr:\nВсем привет. В тинек по той команде реджект. \nДали по мне фитбек подробный команда. \n\nСказали сильные скиллы у него как в архитектуре, так и в софтскиллах. Интересуеся про бизнес и качественное решение задач. Короче, как спец огонь все, но... \n\nПомню, что hr сказала: \n1. Был в рубашке, как будто бы настраивает на не очень формальную обстановку. \n2. Вёл разговор деловым стилем и из-за этого как будто бы не очень в команде коммуницировать. \n3. Работал по скраму, а у нас не скрам, поэтому будет сложнее \n4. У нас много вёрстки, поэтому как будто бы не метч"
      },
      {
        "timestamp": "2024-01-31 19:11:39",
        "content": "2024-01-31 19:11:39\n Daniil Max -> 2071074234:\n— Название компании: тинькофф [четвертый этап, архитектура]\n— Ссылка на вакансию: hr сама написала \n— ЗП: 310-400к.\n— Задачи: архитектура\nЗапись на ютуб: https://youtu.be/vWOWWYEa37M?si=eJNRAC_G9XYAu-b5\n— Успех собеса: ✅️\n— Фитбек о собесе:\nДаниил, доброе утро!) Возвращаюсь с обратной связью. \nТы хорошо прошел интервью по Web-архитектуре, поздравляю! Отправила твою кандидатуру нанимающим менеджерам, жду ответа. И буду направлять тебя для знакомства ...",
        "full_content": "2024-01-31 19:11:39\n Daniil Max -> 2071074234:\n— Название компании: тинькофф [четвертый этап, архитектура]\n— Ссылка на вакансию: hr сама написала \n— ЗП: 310-400к.\n— Задачи: архитектура\nЗапись на ютуб: https://youtu.be/vWOWWYEa37M?si=eJNRAC_G9XYAu-b5\n— Успех собеса: ✅️\n— Фитбек о собесе:\nДаниил, доброе утро!) Возвращаюсь с обратной связью. \nТы хорошо прошел интервью по Web-архитектуре, поздравляю! Отправила твою кандидатуру нанимающим менеджерам, жду ответа. И буду направлять тебя для знакомства с командами.\n\nP.S. Интервьюер просил передать тебе развивающую обратную связь: \"Привет! На интервью мы построили Мессенджер. Ты хорошо справился с фронтовой архитектурой. Но есть часть моментов, которые я бы посоветовал тебе подтянуть:\n\nКакие бывают типы требований: Функциональные Требования (ФТ) и Нефункциональные (НФТ)\n\nCDN https://www.keycdn.com/support/how-does-a-cdn-work\n\nLoad balancing https://www.nginx.com/resources/glossary/load-balancing/\n\nРеляционные/Нереляционные БД\"\n\n#тинькофф"
      },
      {
        "timestamp": "2024-01-19 12:38:40",
        "content": "2024-01-19 12:38:40\n Daniil Max -> 2071074234:\n— Название компании: тинькофф [третий этап — программирование]\n— Ссылка на вакансию: hr сама написала \n— ЗП: 310-400к.\n— Задачи: лайвкодинг\n\n1. function getMax(str) {\n    let globalMax = 0;\n    for(let i = 0; i < str.length; i++) {\n        const set = new Set();\n        let max = 0;\n        for(let j = i; j < str.length; j++) {\n            if(!set.has(str[j])) {\n                set.add(str[j]);\n                max++;\n            }\n            else b...",
        "full_content": "2024-01-19 12:38:40\n Daniil Max -> 2071074234:\n— Название компании: тинькофф [третий этап — программирование]\n— Ссылка на вакансию: hr сама написала \n— ЗП: 310-400к.\n— Задачи: лайвкодинг\n\n1. function getMax(str) {\n    let globalMax = 0;\n    for(let i = 0; i < str.length; i++) {\n        const set = new Set();\n        let max = 0;\n        for(let j = i; j < str.length; j++) {\n            if(!set.has(str[j])) {\n                set.add(str[j]);\n                max++;\n            }\n            else break;\n        }\n        globalMax = Math.max(globalMax, max)\n    }\n    return globalMax;\n}\n\nconsole.log(getMax('abcdabcde'))\n\n2. function IDESearch(substring, filename) {\n  let index = 0;\n\n  for (let i = 0; i < filename.length; i++) {\n    if (filename[i] === substring[index]) {\n      index++;\n    }\n\n    if (index === substring.length) {\n      return true;\n    }\n  }\n\n  return false;\n}\n— Успех собеса: ✅️\n— Фитбек о собесе:\nСпасибо за проведенное время. Советую продолжать изучение структур данных и алгоритмов, изучить книги по этим темам и решать задачи на leetcode\"\nДалее, пойдем либо на архитектурную секцию, либо пойдем знакомиться с командами. Детали появятся в понедельник\n\n#тинькофф"
      },
      {
        "timestamp": "2024-01-13 08:27:53",
        "content": "2024-01-13 08:27:53\n Daniil Max -> 2071074234:\n— Название компании: Тинькофф\n— Ссылка на вакансию: hr сама написала\n— ЗП: 310~400К.\n— Задачи: лайвкодинг\n\nРеализовать EventEmitter\n\nclass EventEmitter {\n  constructor() {\n    // Хранилище для событий и их подписчиков\n    this.events = {};\n  }\n\n  // Метод для подписки на событие\n  on(eventName, callback) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n\n    this.events[eventName].push(callback);\n\n    return this;\n  }\n\n  ...",
        "full_content": "2024-01-13 08:27:53\n Daniil Max -> 2071074234:\n— Название компании: Тинькофф\n— Ссылка на вакансию: hr сама написала\n— ЗП: 310~400К.\n— Задачи: лайвкодинг\n\nРеализовать EventEmitter\n\nclass EventEmitter {\n  constructor() {\n    // Хранилище для событий и их подписчиков\n    this.events = {};\n  }\n\n  // Метод для подписки на событие\n  on(eventName, callback) {\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n\n    this.events[eventName].push(callback);\n\n    return this;\n  }\n\n  // Метод для отписки от события\n  off(eventName, callback) {\n    if (this.events[eventName]) {\n      this.events[eventName] = this.events[eventName].filter(cb => cb !== callback);\n    }\n    \n    return this.\n  }\n\n  // Метод для оповещения о событии\n  emit(eventName, data) {\n    if (this.events[eventName]) {\n      this.events[eventName].forEach(callback => callback(data));\n    }\n\n    return this.\n  }\n}\n\n// Пример использования\n\nconst cb = () => null;\n\n// Создаем экземпляр класса EventEmitter\nconst eventEmitter = new EventEmitter();\neventEmitter\n.on(‘test’, cb);\n.off(‘test’, cb)\n\nРеализовать Promise.any\n\n\nfunction promiseAny<T>(promises: Promise<T>[]): Promise<T> {\n  return new Promise((resolve, reject) => {\n    // Counter for tracking rejections\n    let rejectionCount = 0;\n    const errors: any[] = [];\n\n    promises.forEach((promise, index) => {\n      Promise.resolve(promise)\n        .then(resolve)\n        .catch(error => {\n          errors[index] = error;\n          rejectionCount++;\n          if (rejectionCount === promises.length) {\n            reject(errors);\n          }\n        });\n    });\n  });\n}\n\nБыла задачка на event loop\nЗадачка по реакт: вывести список героев, сделав запрос на бекенд, реализовать дебаунс для ипнута.\n— Успех собеса: ✅\n— Фитбек о собесе: прохожу дальше"
      },
      {
        "timestamp": "2024-01-09 07:58:53",
        "content": "2024-01-09 07:58:53\n Daniil Max -> 2071074234:\n— Название компании: Тинькофф [первый этап]\n— Ссылка на вакансию: ~\n— ЗП: 310К~400К, синьор\n— Вопросы: \n1. За функцией можно ли достать let var и const переменные, обьявленные в рамках функции? \n2. Как можно клонировать объект? \n3. Какой тип возвращает fetch\n4. == и ===, рассказать \n5. Что такое new Map? Что там может храниться \n6. Что по умолчанию возвращает функция? \n7. let и const\n8. bind и apply \n9. Что раньше выполнится промис или setTimeout?\n1...",
        "full_content": "2024-01-09 07:58:53\n Daniil Max -> 2071074234:\n— Название компании: Тинькофф [первый этап]\n— Ссылка на вакансию: ~\n— ЗП: 310К~400К, синьор\n— Вопросы: \n1. За функцией можно ли достать let var и const переменные, обьявленные в рамках функции? \n2. Как можно клонировать объект? \n3. Какой тип возвращает fetch\n4. == и ===, рассказать \n5. Что такое new Map? Что там может храниться \n6. Что по умолчанию возвращает функция? \n7. let и const\n8. bind и apply \n9. Что раньше выполнится промис или setTimeout?\n10. Что возвращает setTimeout и зачем он это возвращает?\n//... и ещё какие-то 5 вопросов"
      }
    ]
  },
  {
    "company": "Иннотех",
    "count": 24,
    "records": [
      {
        "timestamp": "2025-03-14 14:44:51",
        "content": "2025-03-14 14:44:51\n андрей -> 2071074234:\nКомпания: Иннотех ВТБ (забота о клиентах), Встреча с лидом\nНаписал HR\n\n1. О себе\n2. Бизнес блок и команда разработки- сколько человек было, \n3. Как ставились задачи\n4. Как осуществлялось долговременное планирование\n5. Планирование задач\n6. Как велась документация \n7. Причина поиска работы",
        "full_content": "2025-03-14 14:44:51\n андрей -> 2071074234:\nКомпания: Иннотех ВТБ (забота о клиентах), Встреча с лидом\nНаписал HR\n\n1. О себе\n2. Бизнес блок и команда разработки- сколько человек было, \n3. Как ставились задачи\n4. Как осуществлялось долговременное планирование\n5. Планирование задач\n6. Как велась документация \n7. Причина поиска работы"
      },
      {
        "timestamp": "2025-02-17 15:44:55",
        "content": "2025-02-17 15:44:55\n Wanderer -> 2071074234:\nКомпания: Иннотех (РКО ЮЛ)\nЗП: от 300 \nВакансия: Написала в ЛС\nВопросы: \n\nРасскажи о своем опыте?\nКакие хуки React знаешь?\nЧто такое Module Federation?\nModule Federation — это технология, введенная в Webpack 5, которая позволяет разделять код и загружать части приложения (модули) из разных источников или даже разных репозиториев, как если бы это был один монолитный проект. В контексте React она используется для интеграции разных React-приложений или и...",
        "full_content": "2025-02-17 15:44:55\n Wanderer -> 2071074234:\nКомпания: Иннотех (РКО ЮЛ)\nЗП: от 300 \nВакансия: Написала в ЛС\nВопросы: \n\nРасскажи о своем опыте?\nКакие хуки React знаешь?\nЧто такое Module Federation?\nModule Federation — это технология, введенная в Webpack 5, которая позволяет разделять код и загружать части приложения (модули) из разных источников или даже разных репозиториев, как если бы это был один монолитный проект. В контексте React она используется для интеграции разных React-приложений или их частей в одно целое.\n\nПрименение Module Federation в React позволяет разрабатывать микрофронтенды. Каждый микрофронтенд может быть самостоятельным приложением, которое при необходимости подключается и используется другим приложением. Это дает большую гибкость и позволяет командам работать независимо, ускоряя разработку.\n// Реализуй функцию createCounter(start, type, step), которая создаёт счетчик и возвращает функцию для последовательного изменения значения.\n// Параметры:\n// start (целое число, по умолчанию 0) — начальное значение счетчика.\n// type (строка, по умолчанию \"+\") — математическая операция (\"+\", \"-\", \"*\", \"/\").\n// step (целое число, по умолчанию 1) — величина изменения счетчика.\n// Функция должна:\n// Возвращать новую функцию, которая при каждом вызове изменяет start в соответствии с заданной операцией type и значением step.\n// Поддерживать операции сложения (\"+\"), вычитания (\"-\"), умножения (\"*\"), деления (\"/\").\n// Генерировать ошибку, если передан некорректный оператор.\n\n\nfunction createCounter(start = 0, type = '+', step = 1) {\n  return function () {\n    switch (type) {\n      case '+':\n        return start += step;\n      case '-':\n        return start -= step;\n      case '*':\n        return start *= step;\n      case '/':\n        return start /= step;\n      default:\n        throw new Error(\"Недопустимая операция. Используйте '+', '-', '*', '/'\");\n    }\n  };\n}\n\n// Примеры использования:\nconst counter1 = createCounter(3); // По умолчанию: type='+', step=1\nconsole.log(counter1()); // num === 4\n\nconst counter2 = createCounter(3, '-', 3);\nconsole.log(counter2()); // num_2 === 0\n\nconst counter3 = createCounter(3, '*', 3);\nconsole.log(counter3()); // num_3 === 9\n\n// 2. Дан древовидный список объектов, где каждый объект содержит:\n// value — строковое значение узла,\n// children — массив дочерних узлов (или null, если узел является листом).\n// Требуется написать функцию getPaths(items), которая вернёт массив всех возможных путей от корневых узлов до листьев. Каждый путь должен \n// представлять собой строку, в которой узлы соединены символом \" -> \"\n\nfunction getPaths(items, path = []) {\n    let result = [];\n\n    items.forEach(item => {\n        const newPath = [...path, item.value]; // Добавляем текущий узел в путь\n\n        if (item.children) {\n            // Рекурсивно обходим дочерние элементы\n            result.push(...getPaths(item.children, newPath));\n        } else {\n            // Если детей нет, добавляем путь в результат\n            result.push(newPath.join(' -> '));\n        }\n    });\n\n    return result;\n}\n\n// Исходный массив\nvar clothes = [\n    { value: 'Головной убор', children: [{ value: 'Шапка', children: null }, { value: 'Кепка', children: null }] },\n    { value: 'Одежда', children: [{ value: 'Верхняя одежда', children: [{ value: 'Ветровка', children: null }] }, { value: 'Джинсы', children: null }, { value: 'Брюки', children: null }] },\n    { value: 'Обувь', children: [{ value: 'Кроссовки', children: [{ value: 'Беговые кроссовки', children: [{ value: 'some deep item', children: null }] }] }, { value: 'Ботинки', children: null }] }\n];\n\n// Запуск функции и вывод результата\nconsole.log(getPaths(clothes).join('\\n'));"
      },
      {
        "timestamp": "2025-02-11 13:22:41",
        "content": "2025-02-11 13:22:41\n alzor -> 2071074234:\nКомпания: Иннотех\nСсылка на вакансию: Написала HR\nЗП: от 250к\nСобеседующий сказал шарить весь экран.\nВопросы:\n1) Какие хуки реакта знаешь?\n2) Какие утилитарные типы в TS ты знаешь и что они делают?\n3) С какими сборщиками работал? Webpack или Vite?\n4) Какую проблему решают сборщики?\n5) Module Federation это встроеный в Webpack функционал?\nЗадача: 1. Нужно создать кастомный компонент Tree, который отображает данные из различных объектов(Данные 1, Данные 2)...",
        "full_content": "2025-02-11 13:22:41\n alzor -> 2071074234:\nКомпания: Иннотех\nСсылка на вакансию: Написала HR\nЗП: от 250к\nСобеседующий сказал шарить весь экран.\nВопросы:\n1) Какие хуки реакта знаешь?\n2) Какие утилитарные типы в TS ты знаешь и что они делают?\n3) С какими сборщиками работал? Webpack или Vite?\n4) Какую проблему решают сборщики?\n5) Module Federation это встроеный в Webpack функционал?\nЗадача: 1. Нужно создать кастомный компонент Tree, который отображает данные из различных объектов(Данные 1, Данные 2), вывод должен быть с соблюдением иерархии. Все типизировать.\n\nРешение задачи 1:\n\ntype TreeNode<T> = {\n  children?: TreeNode<T>[];\n} & T;\n\ntype TreeProps<T> = {\n  data: TreeNode<T>;\n  getValue: (node: T) => number;\n  getTitle: (node: T) => string;\n};\n\nfunction Tree<T>({ data, getValue, getTitle }: TreeProps<T>) {\n  return (\n    <ul>\n      <li>\n        {getValue(data)} - {getTitle(data)}\n        {data.children && (\n          <ul>\n            {data.children.map((child, index) => (\n              <Tree\n                key={index}\n                data={child}\n                getValue={getValue}\n                getTitle={getTitle}\n              />\n            ))}\n          </ul>\n        )}\n      </li>\n    </ul>\n  );\n}\n\nconst data1 = {\n  value: 10,\n  comment: \"wtf\",\n  children: [\n    {\n      value: 15,\n      comment: \"sdsdfsdf\",\n    },\n    {\n      value: 20,\n      comment: \"plfgblmfgbm;\",\n      children: [\n        {\n          value: 25,\n          comment: \"123123123\",\n        },\n      ],\n    },\n  ],\n};\n\nconst data2 = {\n  title: 10,\n  description: \"wtf\",\n  children: [\n    {\n      title: 15,\n      description: \"sdsdfsdf\",\n    },\n    {\n      title: 20,\n      description: \"plfgblmfgbm;\",\n      children: [\n        {\n          title: 25,\n          description: \"123123123\",\n        },\n      ],\n    },\n  ],\n};\n\nexport default function App() {\n  return (\n    <div>\n      <h2>Tree with Data 1</h2>\n      <Tree\n        data={data1}\n        getValue={(node) => node.value}\n        getTitle={(node) => node.comment}\n      />\n  );\n}\n\nЗадача 2. Нужно найти варианты сброса стейта при нажатии на Next player!\nРешение: 1) Прокинуть key в каждый Counter 2) Завести state под каждый Counter\n\nexport default function Scoreboard() {\n  const [isPlayerA, setIsPlayerA] = useState(true);\n  return (\n    <div>\n      {isPlayerA ? (\n        <Counter person=\"Taylor\" />\n      ) : (\n        <Counter person=\"Sarah\" />\n      )}\n      <button onClick={() => {\n        setIsPlayerA(!isPlayerA);\n      }}>\n        Next player!\n      </button>\n    </div>\n  );\n}\n\nfunction Counter({ person }) {\n  const [score, setScore] = useState(0);\n  const [hover, setHover] = useState(false);\n\n  let className = 'counter';\n  if (hover) {\n    className += ' hover';\n  }\n\n  return (\n    <div\n      className={className}\n      onPointerEnter={() => setHover(true)}\n      onPointerLeave={() => setHover(false)}\n    >\n      <h1>{person}'s score: {score}</h1>\n      <button onClick={() => setScore(score + 1)}>\n        Add one\n      </button>\n    </div>\n  );\n}\n\nЗадача 3.Типизировать функцию fn. На вход поступает объект data и функция getValue. Возвращаемый тип функции fn должен быть ограничен типами ключей передаваемого объекта data\n\ntype Data = {\n  title: string;\n  desc: string;\n  num: number;\n  isVisible: boolean;\n};\ntype Fn = <K extends keyof Data>(params: { data: Data; getValue: (data: Data) => Data[K] }) => Data[K];\n\nconst fn: Fn = ({ data, getValue }) => {\n  return getValue(data);\n};\n\nconst data = {\n  title: 'title',\n  desc: 'desc',\n  num: 5,\n  isVisible: true,\n};\n\nconst result = fn({ data, getValue: node => node.num });\nconsole.log(result); // 5\n\n\nЗадача 4. \nЗадачка на подумать, как архитектурно мог решить эту проблему.\nПришел аналитик и ставит задачу, можно воспользоваться чисто реализацие на фронте или при взаимодействии с беком. Нужно реализовать в интерфейсе кнопку по клику на которую нам необходимо выгрузить отчет(excel, pdf). \nКлючевые проблемы: мы не знаем сколько времени формируется отчет и на сколько он тяжеловeсный.\nРешение: 1) Возможно использовать webworkers на фронтовой части 2) Реализовать LongPooling 3) Использовать WebSockets"
      },
      {
        "timestamp": "2025-01-22 10:39:22",
        "content": "2025-01-22 10:39:22\n Wanderer -> 2071074234:\nКомпания: Иннотех (СОПИБ) \nВакансия описание: Написали в ТГ\nЗП: от 300к\nВопросы: \n- Расскажите про свой опыт, какие проекты, какой флоу. \nДополнительно: Лучше потренироваться порешать задачи на кастомные хуки если кого пригласили. Говорили что на проекте много самописных хуков. \n\nfunction debounce(func, delay) {\n  let timeoutId = null;\n\n  return function (...args) {\n    if (timeoutId) {\n      clearTimeout(timeoutId); // Очистка предыдущего таймера\n   ...",
        "full_content": "2025-01-22 10:39:22\n Wanderer -> 2071074234:\nКомпания: Иннотех (СОПИБ) \nВакансия описание: Написали в ТГ\nЗП: от 300к\nВопросы: \n- Расскажите про свой опыт, какие проекты, какой флоу. \nДополнительно: Лучше потренироваться порешать задачи на кастомные хуки если кого пригласили. Говорили что на проекте много самописных хуков. \n\nfunction debounce(func, delay) {\n  let timeoutId = null;\n\n  return function (...args) {\n    if (timeoutId) {\n      clearTimeout(timeoutId); // Очистка предыдущего таймера\n    }\n    timeoutId = setTimeout(() => {\n      func.apply(this, args); // Вызов функции с сохранением контекста\n    }, delay);\n  };\n}\n\nimport React, { useState, useEffect, useRef } from 'react';\n\n// Кастомный хук для хранения предыдущего значения\nconst usePrevValue = (value) => {\n  const ref = useRef(); // Создаем ref для хранения предыдущего значения\n\n  useEffect(() => {\n    ref.current = value; // Обновляем ref на каждом рендере\n  }, [value]); // Следим за изменением value\n\n  return ref.current; // Возвращаем предыдущее значение\n};\n\n// Функция для логирования значения с дебаунсом\nconst fakeLogger = (value) => {\n  console.log(\"Logger: \", value); // Логируем значение в консоль\n};\n\nexport default function App() {\n  const [counter, setCounter] = useState(0); // Состояние счетчика\n  const prevCounter = usePrevValue(counter); // Используем кастомный хук для получения предыдущего значения\n\n  // Функция для увеличения счетчика\n  const increment = () => {\n    setCounter((prev) => prev + 1); // Увеличиваем значение счетчика на 1\n  };\n\n  // Логирование значения с дебаунсом\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      fakeLogger(counter);\n    }, 300); // Устанавливаем задержку в 300 мс\n\n    return () => clearTimeout(debounce); // Очищаем таймер при размонтировании или изменении\n  }, [counter]);\n\n  return (\n    <div className=\"App\">\n      <h1>Счетчик с предыдущим значением</h1>\n      <p>Текущее значение: {counter}</p>\n      <p>Предыдущее значение: {prevCounter}</p>\n      <button onClick={increment}>Увеличить</button> {/* Кнопка увеличения значения */}\n    </div>\n  );\n}"
      },
      {
        "timestamp": "2025-01-18 05:58:27",
        "content": "2025-01-18 05:58:27\n Egor -> 2071074234:\nКомпания: Иннотех(документарный бизнес)\nСсылка на вакансию: закрыли\nЗп: от 330к\nЗадачи: \n1. Что выведется в консоль при монтировании и повторном ререндере\nconst Component1 = () => {\n   /* console.log('Component1') */;\n\n  React.useEffect(() => {\n     /* console.log('Component1 useEffect') */;\n\n    return () => {\n       /* console.log('Component1 useEffect return') */;\n    }\n  }, []);\n\n  return <p>'Component 1'</p>;\n}\n\nconst Component2 = () => {\n   /* conso...",
        "full_content": "2025-01-18 05:58:27\n Egor -> 2071074234:\nКомпания: Иннотех(документарный бизнес)\nСсылка на вакансию: закрыли\nЗп: от 330к\nЗадачи: \n1. Что выведется в консоль при монтировании и повторном ререндере\nconst Component1 = () => {\n   /* console.log('Component1') */;\n\n  React.useEffect(() => {\n     /* console.log('Component1 useEffect') */;\n\n    return () => {\n       /* console.log('Component1 useEffect return') */;\n    }\n  }, []);\n\n  return <p>'Component 1'</p>;\n}\n\nconst Component2 = () => {\n   /* console.log('Component2') */;\n\n  React.useEffect(() => {\n     /* console.log('Component2 useEffect') */;\n\n    return () => {\n       /* console.log('Component2 useEffect return') */;\n    }\n  });\n\n  return <p>'Component 2'</p>;\n}\n\nconst Component3 = () => {\n   /* console.log('Component3') */;\n\n  React.useLayoutEffect(() => {\n     /* console.log('Component3 useLayoutEffect') */;\n\n    return () => {\n       /* console.log('Component3 useLayoutEffect return') */;\n    }\n  });\n\n  return <p>'Component 3'</p>;\n}\n\nfunction App() {\n\n  React.useEffect(() => {\n     /* console.log('useEffect App') */;\n  });\n\n  const [count, setCount] = React.useState(() => {\n     /* console.log('useState') */;\n\n    return 0;\n  });\n\n  return (\n    <div className=\"App\">\n      <button ref={(ref) => {\n        /* console.log('setRef') */;\n         }} onClick={() => setCount(prev => prev + 1)}>+</button>\n      <Component1 />\n      <Component2 />\n      <Component3 />\n\n      {count}\n      <h1>Hello CodeSandbox</h1>\n      <h2>Start editing to see some magic happen!</h2>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector(\"#app\"))\n2. В каком порядке будет исполнен код?\nconst RENDER_WATCH_NUMBER = 4;\n\n// Task #5 \"Работа Event Loop. В каком порядке будет исполнен код?\"\n\n// В среднем 800мс\nfunction slowFunc() {\n  const startTime = performance.now();\n\n  for (let i = 0; i < 16e8; i++) {}\n\n  const endTime = performance.now();\n\n  console.log(`slowFunc is executed for ${endTime - startTime}ms`);\n}\n\nfunction func1() {\n  /* console.log('func1') */;\n\n  new Promise(function(resolve) {\n    resolve('func1 Promise 1');\n  }).then(result => {\n    /* console.log(result) */;\n  });\n\n  new Promise(function(resolve) {\n    resolve('func1 Promise 2');\n  }).then(result => {\n    /* console.log(result) */;\n  });\n\n  setTimeout(function() {\n    new Promise(function(resolve) {\n      resolve('func1 setTimeout 1 Promise 1');\n    }).then(result => {\n      /* console.log(result) */;\n    });\n\n    new Promise(function(resolve) {\n      resolve('func1 setTimeout 1 Promise 2');\n    }).then(result => {\n      /* console.log(result) */;\n    });\n\n    new Promise(function(resolve) {\n      resolve('func1 setTimeout 1 Promise 3');\n    }).then(result => {\n      /* console.log(result) */;\n    });\n\n    /* console.log('func1 setTimeout 1') */;\n\n    slowFunc();\n  }, 0);\n\n  setTimeout(function() {\n    new Promise(function(resolve) {\n      resolve('func1 setTimeout 2 Promise');\n    }).then(result => {\n      /* console.log(result) */;\n    });\n\n    /* console.log('func1 setTimeout 2') */;\n\n    slowFunc();\n  }, 0);\n}\n\nfunction func2() {\n  /* console.log('func2') */;\n}\n\nfunction func3() {\n  /* console.log('func3') */;\n\n  setTimeout(function() {\n    /* console.log('func3 setTimeout') */;\n  }, 0);\n\n  new Promise(function(resolve) {\n    resolve('func3 Promise');\n  }).then(result => {\n    /* console.log(result) */;\n  });\n}\n\nfunction watchRerender() {\n  let count = 0;\n  let start;\n\n  const draw = (timeStamp) => {\n    if (start !== undefined) {\n      console.log(`render for ${performance.now() - start} ms`);\n    }\n\n    start = performance.now();\n\n\n    if (count < RENDER_WATCH_NUMBER) {\n      count++\n      requestAnimationFrame(draw)\n    }\n\n  }\n\n  draw(0);\n}\n\nfunction main() {\n  console.log('main');\n\n  func3();\n  func2();\n  func1();\n}\n\nwatchRerender();\nmain();\n\nrequestIdleCallback(() => {\n  /* console.log('IdleCallback') */\n})\nВопросы: \n1. Прошелся по резюме, спрашивал по пунктам достижений\n2. Объяснить последние 2 принципа solid\n3. Как event loop работает\n4. Что такое портал, как происходит взаимодействие с виртуал дом"
      },
      {
        "timestamp": "2024-12-20 09:02:10",
        "content": "2024-12-20 09:02:10\n Egor -> 2071074234:\nКомпания: Иннотех \nСсылка на вакансию: https://hh.ru/vacancy/112587662?hhtmFrom=chat\nЗп: от 330\nЗапись: https://youtu.be/Hb0YQRCXy4c",
        "full_content": "2024-12-20 09:02:10\n Egor -> 2071074234:\nКомпания: Иннотех \nСсылка на вакансию: https://hh.ru/vacancy/112587662?hhtmFrom=chat\nЗп: от 330\nЗапись: https://youtu.be/Hb0YQRCXy4c"
      },
      {
        "timestamp": "2024-11-28 21:01:02",
        "content": "2024-11-28 21:01:02\n Андрей -> 2071074234:\nКомпания: Иннотех\nВакансия: - \nЗп: не обсуждали\nВопросы за опыт, рассказать про методы промисов, ф-ии генераторы, как избежать утечек памяти и перешли к задачкам: \nconst freezeObjects = (obj) => {\n\n  for (let key in obj) {\n    if (typeof obj[key] === 'object') {\n      freezeObjects(obj[key])\n    }\n  }\n\n  return Object.freeze(obj)\n}\n\n\nconst maxNum = (arr) => Math.max(...arr)\n\n// напиши тип для функции, с одним дженериком. Если дженерик является строкой, ...",
        "full_content": "2024-11-28 21:01:02\n Андрей -> 2071074234:\nКомпания: Иннотех\nВакансия: - \nЗп: не обсуждали\nВопросы за опыт, рассказать про методы промисов, ф-ии генераторы, как избежать утечек памяти и перешли к задачкам: \nconst freezeObjects = (obj) => {\n\n  for (let key in obj) {\n    if (typeof obj[key] === 'object') {\n      freezeObjects(obj[key])\n    }\n  }\n\n  return Object.freeze(obj)\n}\n\n\nconst maxNum = (arr) => Math.max(...arr)\n\n// напиши тип для функции, с одним дженериком. Если дженерик является строкой, то тип представляет собой функцию с любым количеством параметров, возвращающую эту строку. \n// Для любого другого типа дженерика - функцию с одним числовым параметром, которая возвращает число\n// f.e. const stringFn: Func<'str'> = (a: number, b: string) => 'str'\n// f.e. const otherFn: Func = (a: number) => number\n\ntype Func<T = unknown> = T extends string ? (...args: any[]) => T : (a: number) => number\n\nconst arr: Array<string> = ['a', 'b']\n\ntype inferArrayVal<T> = T extends Array<infer V> ? V : never\n\ntype arrVal = inferArrayVal<typeof arr>\n\ntype A = {\n    field1: string\n    kind: kind.A\n}\n\ntype B = {\n    field3: string\n    field4: string\n    kind: kind.B\n}\n\ntype C = A | B\n\nenum kind {\n    A = 'A',\n    B = 'B'\n}\n\nfunction add(arg: C) {\n    switch (arg.kind) {\n        case kind.A:\n            \n            break;\n    \n        default:\n            break;\n    }\n}\n// Прокомментировать код, как улучшить\nconst MainComponent = (props) => {\n    const [searchValue, setSearchValue] = useState('')\n    \n    return <div>\n    <input value={searchValue} onChange={setSearchValue(e.target.value)}/>\n    <SomeExpensiveComponent/>\n    </div>\n    \n    \n    }"
      },
      {
        "timestamp": "2024-11-28 10:45:05",
        "content": "2024-11-28 10:45:05\n Андрей -> 2071074234:\nКомпания: Иннотех\nВакансия: https://hh.ru/vacancy/110256354\nЗП: не обсуждали\nВопросы:\n\nнууужно ннннааааппиииисссааатттттььь фуууннкккцццииию которая нннаааа вввххходдд прррииинниааеет эээту ссстрроку и воозвратттит еёёё ббббеееззз лллиииишшшнннееееггггооо дуббблиррроовааннния бббуккккв\n\n===\n\nvar a = { foo: 10 };\nvar b = a;\nb.foo = 20;\nconsole.log(a);\n\nlet a = { foo: 10 };\nconst b = a;\nb.foo = 20;\nconsole.log(a);\n\nvar a = [1,2,3];\nlet c = a;\ncont b = c;\n...",
        "full_content": "2024-11-28 10:45:05\n Андрей -> 2071074234:\nКомпания: Иннотех\nВакансия: https://hh.ru/vacancy/110256354\nЗП: не обсуждали\nВопросы:\n\nнууужно ннннааааппиииисссааатттттььь фуууннкккцццииию которая нннаааа вввххходдд прррииинниааеет эээту ссстрроку и воозвратттит еёёё ббббеееззз лллиииишшшнннееееггггооо дуббблиррроовааннния бббуккккв\n\n===\n\nvar a = { foo: 10 };\nvar b = a;\nb.foo = 20;\nconsole.log(a);\n\nlet a = { foo: 10 };\nconst b = a;\nb.foo = 20;\nconsole.log(a);\n\nvar a = [1,2,3];\nlet c = a;\ncont b = c;\nb.push(2);\nconsole.log(a);\n\nconst a = {\nsome: '1'\n};\n\nconst fn = (b) => {\nb.some = '2';\n\nreturn b;\n}\n\nconst c = fn(a);\n\nconsole.log(a.some + c.some);\n\n===\n\nfunction a(){\nconst f = function f(){};\nf.magic = 'wow';\n\nreturn new f();\n}\n\nconst test = a();\nconsole.log(test.magic);\n\ncosnt a = {}\na.some = 1\n\n===\ntrue / false"
      },
      {
        "timestamp": "2024-10-04 07:45:16",
        "content": "2024-10-04 07:45:16\n Stepan Ch. -> 2071074234:\nИННОТЕХ\n- Вакансия: https://t.me/c/2071074234/616/68541\n- зп: 270+\n\nВопросы:\n1. Вопросы по резюме\n2. Почему уходишь с работы?\n3. Как создавать кастомные хуки?\n4. С какими хуками работаешь?\n5. Расскажи про Virtual Dom\n6. Рендер процесс\n7. Сборка бандла\n8. CI/CD\n9. MobX, Redux\n10. Object vs object\n11. Примитивные типы в TS\n12. Utility Types\n13. V8\n14. JIT\n15. С какими библиотеками для форм работал?\n16. Методы массива?\n17. RTK Query",
        "full_content": "2024-10-04 07:45:16\n Stepan Ch. -> 2071074234:\nИННОТЕХ\n- Вакансия: https://t.me/c/2071074234/616/68541\n- зп: 270+\n\nВопросы:\n1. Вопросы по резюме\n2. Почему уходишь с работы?\n3. Как создавать кастомные хуки?\n4. С какими хуками работаешь?\n5. Расскажи про Virtual Dom\n6. Рендер процесс\n7. Сборка бандла\n8. CI/CD\n9. MobX, Redux\n10. Object vs object\n11. Примитивные типы в TS\n12. Utility Types\n13. V8\n14. JIT\n15. С какими библиотеками для форм работал?\n16. Методы массива?\n17. RTK Query"
      },
      {
        "timestamp": "2024-09-23 18:16:28",
        "content": "2024-09-23 18:16:28\n Никита -> 2071074234:\n— Название: Иннотех\n— Вакансия: hr сама написала\n— зп: 270к(назвал)\n— вопросы:\n1) задача на то, как работает сборщик мусора\nvar vasya = {\n    obj:petya\n}\nvar petya = {\n    obj:vasya\n}\ndelete vasya\ndelete petya\nconsole.log(vasya, petya) \n2) задача на потерю контекста функции(максимально стандартная)\n3) задача на изменение объекта внутри функции\nvar obj = {\n  a: 1\n};\n\n(function(obj) {\n  obj.a = 2; // Меняем свойство объекта, а не сам объект\n})(obj);\n\ncons...",
        "full_content": "2024-09-23 18:16:28\n Никита -> 2071074234:\n— Название: Иннотех\n— Вакансия: hr сама написала\n— зп: 270к(назвал)\n— вопросы:\n1) задача на то, как работает сборщик мусора\nvar vasya = {\n    obj:petya\n}\nvar petya = {\n    obj:vasya\n}\ndelete vasya\ndelete petya\nconsole.log(vasya, petya) \n2) задача на потерю контекста функции(максимально стандартная)\n3) задача на изменение объекта внутри функции\nvar obj = {\n  a: 1\n};\n\n(function(obj) {\n  obj.a = 2; // Меняем свойство объекта, а не сам объект\n})(obj);\n\nconsole.log(obj.a); // Теперь выведет 2\n4) задача на event loop, загвоздка в том, что макротаска плодит микротаски\n5) задача на todoList, там прокидываем 2 функции в todoItem, но если в Callback засунуть в лист не будут добавляться элементы, нужно было либо со вторыми аргументами memo поработать, или по его словам что-то такое сделать(я не решил): \nconst addToDo = useCallback(()=>{\nsetTodoList(prev=>[...prev, new Todo()]\n},[setTodoList])\n6)что такое state и setState?\n7) рефактор useeffect с запросом и скролом: массив зависимостей, разделить логикую, сделлать в евенте и клин апе одну ссылку на скролл, убрать async\n8) на чем стили писали? минусы-плюсы styledComponent\n9) шрифты в styledComponent\n10) что знаешь про идемпотентность?"
      },
{
"timestamp": "2024-09-05 17:19:11",
"content": "2024-09-05 17:19:11\n Руслан -> 2071074234:\nИннотех тех собес\n— зп: от 300к\n— вакансия: https://hh.ru/vacancy/105890858\n— вопросы: \n1. таска, которой гордишься\n2. фейл, за который стыдно\n3. был ли опыт с микрофронтами\n4. critical rendering path\n5. http 1.1 vs 2\n6. свойство display\n7. св-во position \n8. селекторы цсс, вес\n9. inline стили хорошо ли использовать\n10. типы данных в js\n11. почему typeof array = object, typeof fn = function\n12. как проверить, что поле в объекте есть, отличия способов\n13...",
"full_content": "2024-09-05 17:19:11\n Руслан -> 2071074234:\nИннотех тех собес\n— зп: от 300к\n— вакансия: https://hh.ru/vacancy/105890858\n— вопросы: \n1. таска, которой гордишься\n2. фейл, за который стыдно\n3. был ли опыт с микрофронтами\n4. critical rendering path\n5. http 1.1 vs 2\n6. свойство display\n7. св-во position \n8. селекторы цсс, вес\n9. inline стили хорошо ли использовать\n10. типы данных в js\n11. почему typeof array = object, typeof fn = function\n12. как проверить, что поле в объекте есть, отличия способов\n13. глубокое копирование объекта vs поверхностное. способы копирования\n13. structuredClone является ли частью js`а\n14. как запретить изменение объекта, пара способов\n15. как замерить время выполнения куска кода\n16. type vs interface\n17. будет ли ререндер если передавать объект дочернему компоненту в пропы, в каких случаях да, в каких нет\n— задачи:\n1.\n// ф-ция должна вернуть массив объектов без дубликатов\nfunction removeDuplicates(arr) {\n  // Создаём новый массив для хранения уникальных объектов\n  const uniqueArr = [];\n\n  // Используем Set для хранения строковых представлений объектов\n  const seen = new Set();\n\n  arr.forEach((obj) => {\n    // Преобразуем объект в строку для проверки уникальности\n    const objStr = JSON.stringify(obj);\n\n    // Если строковое представление объекта ещё не было добавлено, добавляем объект в уникальный массив\n    if (!seen.has(objStr)) {\n      seen.add(objStr);\n      uniqueArr.push(obj);\n    }\n  });\n\n  return uniqueArr;\n}\n\n// Пример использования\nconst arr = [{ a: 1 }, { a: 1 }, { a: 2 }, { b: 1 }, { b: 1 }, { c: 2 }, { d:\n2.\nна удаление пробелов по бокам строки с помощью тс\ntype TrimmedString<T extends string> = \n    T extends ` ${infer R}` ? TrimmedString<R> : // Удаление пробела в начале\n    T extends `${infer R} ` ? TrimmedString<R> : // Удаление пробела в конце\n    T; // Окончательный результат\n3. была задача с классом, в котором были нарушены solid принципы, нужно было пофиксить\n4. задача на луп не сохранилась"
},
{
"timestamp": "2024-08-22 17:47:23",
"content": "2024-08-22 17:47:23\n Kirill Anikeev -> 2071074234:\n-Иннотех(dion)\n-вакансия: https://hh.ru/vacancy/103901060\n-зп: от250\nсобеседующий просит шарить весь экран. Сам без камеры, хотя требует камеру от меня\nзадача:\nfunction filterStr(str) {\n    let result = '';\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      let prev = str[i-1]\n        if (char !== prev) {\n            result = result + char;\n        }\n    }\n    return result;\n}\nconst str = \"ннууужно ннннаааапппииииссссссааа...",
"full_content": "2024-08-22 17:47:23\n Kirill Anikeev -> 2071074234:\n-Иннотех(dion)\n-вакансия: https://hh.ru/vacancy/103901060\n-зп: от250\nсобеседующий просит шарить весь экран. Сам без камеры, хотя требует камеру от меня\nзадача:\nfunction filterStr(str) {\n    let result = '';\n    for (let i = 0; i < str.length; i++) {\n      let char = str[i];\n      let prev = str[i-1]\n        if (char !== prev) {\n            result = result + char;\n        }\n    }\n    return result;\n}\nconst str = \"ннууужно ннннаааапппииииссссссааатттттттьыь фуууккккнннццццццциююю которая ннннаааа вввввхххоодддд пппрррииииинннннннмммааааеетт ээээту ссстрррокуу и ввоззвррраащщщиииттт еееё ссс ббббеееззз ллллииишшшннннееегггоо дуууббблиииррррооовааннния бббууккккввв\";\nconsole.log(filterStr(str));\nпо задачи много доп вопросов:\nсложность алгоритмическая(как рассчитывается),\nкак оцениваешь решение\nкак бы тестил\nа что было бы если (были бы числа вроде 100 в строке, были бы слова где идут 2 одинаковые буквы подряд), как решал бы\nдругие вопросы:\nглубоко копал про прототипы, лексическое окружение, паттерны проектирования, наследование"
},
{
"timestamp": "2024-08-08 13:45:51",
"content": "2024-08-08 13:45:51\n Александр Птицын -> 2071074234:\nhttps://t.me/c/2071074234/616/49262\nГК Иннотех\n- вакансия:  https://saratov.hh.ru/vacancy/104460530\n- зп: минимум 350, комфорт от 400\n\nЗадачки:\n\n//Необходимо реализовать функцию debounce таким образом, чтобы после многократного вызова функции debouncedFetch в консоли\n//вывелся только один результат \"return result 6\"\n\nfunction debounce(callback, time) {\n  let timerId;\n\n  return function(...arg) {\n    clearTimeout(timerId);\n    timerId = setTime...",
"full_content": "2024-08-08 13:45:51\n Александр Птицын -> 2071074234:\nhttps://t.me/c/2071074234/616/49262\nГК Иннотех\n- вакансия:  https://saratov.hh.ru/vacancy/104460530\n- зп: минимум 350, комфорт от 400\n\nЗадачки:\n\n//Необходимо реализовать функцию debounce таким образом, чтобы после многократного вызова функции debouncedFetch в консоли\n//вывелся только один результат \"return result 6\"\n\nfunction debounce(callback, time) {\n  let timerId;\n\n  return function(...arg) {\n    clearTimeout(timerId);\n    timerId = setTimeout(() => {\n      callback.apply(this, arg);\n    }, time);\n  };\n}\n\nconst fetch = x => {\n  setTimeout(() => {\n    console.log('return result ', x);\n  }, 3000);\n};\n\nconst debouncedFetch = debounce(fetch, 500);\n\ndebouncedFetch(2);\ndebouncedFetch(3);\ndebouncedFetch(4);\ndebouncedFetch(5);\ndebouncedFetch(6);"
},
{
"timestamp": "2024-07-01 15:50:53",
"content": "2024-07-01 15:50:53\n dm . -> 2071074234:\n- Иннотех (на проект DION)\n- Вакансия: hr написала\n- ЗП: от 250 net\n- Задачи:\n1) Написать функцию, которая удалит лишние буквы\n js\nfunction removeDuplicates(str) {\n    let result = '';\n    let prevChar = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let currentChar = str[i];\n        if (currentChar !== prevChar) {\n            result += currentChar;\n        }\n        prevChar = currentChar;\n    }\n\n    return result;\n}\n\nconst inputString = \"ннуууж...",
"full_content": "2024-07-01 15:50:53\n dm . -> 2071074234:\n- Иннотех (на проект DION)\n- Вакансия: hr написала\n- ЗП: от 250 net\n- Задачи:\n1) Написать функцию, которая удалит лишние буквы\n js\nfunction removeDuplicates(str) {\n    let result = '';\n    let prevChar = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let currentChar = str[i];\n        if (currentChar !== prevChar) {\n            result += currentChar;\n        }\n        prevChar = currentChar;\n    }\n\n    return result;\n}\n\nconst inputString = \"ннууужно ннннаааапппииииссссссааатттттттьыь фуууккккнннццццццциююю которая ннннаааа вввввхххоодддд пппрррииииинннннннмммааааеетт ээээту ссстрррокуу и ввоззвррраащщщиииттт еееё ссс ббббеееззз ллллииишшшннннееегггоо дуууббблиииррррооовааннния бббууккккввв\";\nconst outputString = removeDuplicates(inputString);\nconsole.log(outputString);\n- Вопросы:\n1) Почему react - библиотека?\n2) Какие паттерны знаешь?\n3) Какой шаблон проектирования  использует реакт: композицию или абстракцию?\n4) Какой паттерн использует редакс?\n- Успех: ✅\n- Комментарий: собеседующий просил зашарить весь экран, код писать в своем ide."
},
{
"timestamp": "2024-06-25 15:20:40",
"content": "2024-06-25 15:20:40\n dm . -> 2071074234:\n- Иннотех\n- Ссылки нет, hr написала\n- ЗП: 250-280 net\n- Задачи:\n1) нууужно    ннааппиииисссааатттттььь фукккнцццию которая нннаааа вввххходдд прррииинниааеет эээту ссстрроку и воозвратттит её ббббеееззз лллиииишшшнннееееггггооо дуббблиррроовааннния бббуккккв\n2) Что выведется в консоль\n js\nvar a = {foo: 10}\nvar b = a\nb.foo = 20\nconsole.log(a)\n3) Что выведется в консоль\n js\nlet a = {foo: 10}\nconst b = a\nb.foo = 20\nconsole.log(a)\n4) Задачка на понимание функ...",
"full_content": "2024-06-25 15:20:40\n dm . -> 2071074234:\n- Иннотех\n- Ссылки нет, hr написала\n- ЗП: 250-280 net\n- Задачи:\n1) нууужно    ннааппиииисссааатттттььь фукккнцццию которая нннаааа вввххходдд прррииинниааеет эээту ссстрроку и воозвратттит её ббббеееззз лллиииишшшнннееееггггооо дуббблиррроовааннния бббуккккв\n2) Что выведется в консоль\n js\nvar a = {foo: 10}\nvar b = a\nb.foo = 20\nconsole.log(a)\n3) Что выведется в консоль\n js\nlet a = {foo: 10}\nconst b = a\nb.foo = 20\nconsole.log(a)\n4) Задачка на понимание функции-конструктора и this\n- Вопросы:\n1) Реакт реализаует паттерн композиции или ассоциации? доказать свою точку зрения\n2) Какой паттерн реализует prototype в js? порассуждать\n3) Можем ли мы нарушать архитектурный паттерн в редаксе, по которому должен быть один единственный стейт на все приложение? доказать свою точку зрения\n- Фидбек: положительный, позвали на общение с командой и продуктоунером\n- Комментарий: собеседующий попросил включить камеру + расшарить весь экран, а не только браузер; обратил внимание на обс, попросил не записывать. Код писать в своем IDE, рефакторить \"глазами\", не запуская."
},
{
"timestamp": "2024-05-26 16:23:24",
"content": "2024-05-26 16:23:24\n Roman -> 2071074234:\nНазвание компании: Иннотех стрим Октопус\n- зп: просил от 300к\n- вакансия: hr сам предложил собес еще в этот стрим\nуспех собеса: отказ\nфидбэк: Не хватило уровня хард скиллов для их проекта. Но подробного фидбека в чем именно - не давали.\n\nВопросы:\n- про опыт, продукты, достижения, факапы, предыдущие места\n- как была устроена работа, почему так глубоко был погружен в продукт?\n- почему ушел с предыдущего места работы?\n- почему сейчас вышел на рынок, что не ...",
"full_content": "2024-05-26 16:23:24\n Roman -> 2071074234:\nНазвание компании: Иннотех стрим Октопус\n- зп: просил от 300к\n- вакансия: hr сам предложил собес еще в этот стрим\nуспех собеса: отказ\nфидбэк: Не хватило уровня хард скиллов для их проекта. Но подробного фидбека в чем именно - не давали.\n\nВопросы:\n- про опыт, продукты, достижения, факапы, предыдущие места\n- как была устроена работа, почему так глубоко был погружен в продукт?\n- почему ушел с предыдущего места работы?\n- почему сейчас вышел на рынок, что не устраивает на текущем месте?\n- что такое развитие для тебя?\n- с точки зрения финансовых ожиданий, что ты хочешь найти?\n\n- ты рассказал, что переходили с легаси на новый стек, расскажи, при выборе стека на что вы опирались, с какими проблемами столкнулись, что нужно было обсудить, чтобы не применять, было ли такое?\n- какой стек еще использовали, кроме реакта?\n- для использования стилей, что применяете?\n- преимущества использования CSS in JS по сравнению с обычными CSS файлами?\n- что касаемо локализации стилей, как это в чистом CSS и как это происходит в styled components? собеседующий хотел услышать про конфликт стилей\n- расскажи, про флексы и гриды, что за технологии, какие чаще применял?\n\n- расскажи про свои факапы \n- как ты себя ощущаешь, оцениваешь как коммуникатора, у нас большая команда, нужно со всеми успевать общаться\n\n\n- специфичность в CSS, как работает?\n- страница открывается с паддингами и непонятным отображением блоков. Еще не применил стили, а у страницы и блоков есть паддинги или марджины, как такого момента избежать - вопрос про сброс стилей браузерных\n- с помощью display: none можно спрятать элемент, какие еще знаешь способы, как спрятать элемент на веб-странице?\n- в чем разница display: none, opacity, и visibility?\n- этапы критического пути рендеринга?\n- event loop - что это такое, как работает?\n- что такое MutationObserver?\n- к чему относится загрузка изображений, клик - к каким таскам?\n\n- в какой последовательности выведется код?\n\nconsole.log(1);\n\nsetTimeout(() => {\n    console.log(2);\n});\n\nPromise.resolve(3).then(console.log);\n\nconsole.log(4);\n\nsetTimeout(() => {\n    console.log(5);\n}, 0);\n\nconsole.log(6);\n\n\n- что произойдет, если раскомментировать foo1() ?\n\nconst foo1 = () => {\n   console.log(\"foo1\")\n   \n   return Promise.resolve().then(foo1)\n}\n\n// foo1()\n\n\n- что произойдет, если раскомментировать foo2() ?\n\nconst foo2 = () => {\n   console.log(\"foo2\")\n   \n   setTimeout(foo2)\n}\n\n// foo2()\n\n\n- что-то в рамках CI/CD выполнял? Что конкретно?\n- какой был сборщик?\n- сборка фронтовой части, Vite или Webpack?\n- Какую ключевую роль, за что отвечает Webpack?\n- В какого формата файлы преобразует Webpack?\n- Есть такая проблема как раскатка на разные стенды и передача переменных окружения, чтобы наш фронт понимал, куда ходить на какой стенд - сталкивался с такими проблемами? Как решал?\n- сам руками всё настраивал, CI, линтеры, тесты прохождение, фиксил что-то там в процессе?\n- когда переходили на новый стек, были ли какие-то архитектурные проблемы, как решали их или не решалось?\n- какие плюсы React 18 версии по сравнению с предыдущими версиями?\n- что такое батчинг?\n\nЗадача:\nЕсть счетчик, кнопка клика, что пройзодет, когда кликнешь на эту кнопку?\nhttps://codesandbox.io/p/devbox/react-interview-wx3mp4?file=%2Fsrc%2FApp.jsx%3A5%2C25\n\n- если перед будет задача построить или организовать разработку приложения независимо в разных командах какие твои будут дальнейшие действия, что необходимо будет сделать?\n- опыт с module federation у тебя был, где работал, когда?\n- сам микрофронты настраивал или лид что-то делал?\n\n- если бы тебе необходимо было делать бесконечную загрузку в дропдауне, как бы ты ее реализовал с помощью обычного JS? использовать intersection observer"
},
{
"timestamp": "2024-05-23 15:14:06",
"content": "2024-05-23 15:14:06\n Roman -> 2071074234:\nНазвание компании: Иннотех стрим Состоятельные клиенты\n- зп: просил от 300к\n- вакансия: hr предложил собес в другой стрим\n- Успех собеса: ?\n\nВопросы:\n- про опыт\n- как отцентровать элемент\n- разница em и rem\n- доступность, что это такое, для чего нужна, как добиваешься на проекте\n- разница var, let, const\n- bind, call, apply\n- рассказать про стрелочную функцию\n- методы массивов - перечислить\n- рассказать про reduce\n- Промисы, его состояния, методы промисо...",
"full_content": "2024-05-23 15:14:06\n Roman -> 2071074234:\nНазвание компании: Иннотех стрим Состоятельные клиенты\n- зп: просил от 300к\n- вакансия: hr предложил собес в другой стрим\n- Успех собеса: ?\n\nВопросы:\n- про опыт\n- как отцентровать элемент\n- разница em и rem\n- доступность, что это такое, для чего нужна, как добиваешься на проекте\n- разница var, let, const\n- bind, call, apply\n- рассказать про стрелочную функцию\n- методы массивов - перечислить\n- рассказать про reduce\n- Промисы, его состояния, методы промисов\n- Event loop\n\nЗадача:\nhttps://codesandbox.io/p/sandbox/interview-counter-ndktc3?file=%2Ftask.txt%3A3%2C38\n\nВопросы после задачи: \n- для чего нужен useRef, для чего использовал\n- рассказать про CORS\n- как работал с гитом, через консоль или интерфейс\n- разница git rebase и git merge"
},
{
"timestamp": "2024-04-22 20:50:55",
"content": "2024-04-22 20:50:55\n 5429820319 -> 2071074234:\nНазвание компании: Иннотех (вакансия в ВТБ)\nСсылка на вакансию: hr сама написала\nЗП: говорил хочу 240 \nЗадачи: \nПодробно спрашивали про прошлый опыт и процессы в прошлой компании Из техники была работа браузера, react reconcilation, cors, пара кусков кода где нужно было объяснить что происходил или в какой последовательности выведется \nУспех собеса: дали оффер на 200к\nСобес был 15 апреля",
"full_content": "2024-04-22 20:50:55\n 5429820319 -> 2071074234:\nНазвание компании: Иннотех (вакансия в ВТБ)\nСсылка на вакансию: hr сама написала\nЗП: говорил хочу 240 \nЗадачи: \nПодробно спрашивали про прошлый опыт и процессы в прошлой компании Из техники была работа браузера, react reconcilation, cors, пара кусков кода где нужно было объяснить что происходил или в какой последовательности выведется \nУспех собеса: дали оффер на 200к\nСобес был 15 апреля"
},
{
"timestamp": "2024-04-16 15:45:57",
"content": "2024-04-16 15:45:57\n Artem -> 2071074234:\n- Название компании: Иннотех\n- Ссылка на вакансию: HR сама написала\n- ЗП: попросил от 250\n- Задачи: https://stackblitz.com/edit/js-8eprxw?file=index.js \nhttps://stackblitz.com/edit/react-ts-szb1ts?file=src%2FExampleOne.tsx\nУспех: ❌",
"full_content": "2024-04-16 15:45:57\n Artem -> 2071074234:\n- Название компании: Иннотех\n- Ссылка на вакансию: HR сама написала\n- ЗП: попросил от 250\n- Задачи: https://stackblitz.com/edit/js-8eprxw?file=index.js \nhttps://stackblitz.com/edit/react-ts-szb1ts?file=src%2FExampleOne.tsx\nУспех: ❌"
},
{
"timestamp": "2024-03-28 14:57:28",
"content": "2024-03-28 14:57:28\n Vitalya Bedik -> 2071074234:\n— Название компании: Иннотех (техсобес)\n— Ссылка на вакансию: https://hh.ru/vacancy/95333177?from=share_ios\n— ЗП: не обсуждали\n— Задачи: что выведет в консоль + вопросы + про опыт\n— Записи на ютуб: https://www.youtube.com/watch?v=CLKDuDvrnqQ\n— Успех собеса: ❓Pending\n— Фидбек о собесе: жду обратной связи",
"full_content": "2024-03-28 14:57:28\n Vitalya Bedik -> 2071074234:\n— Название компании: Иннотех (техсобес)\n— Ссылка на вакансию: https://hh.ru/vacancy/95333177?from=share_ios\n— ЗП: не обсуждали\n— Задачи: что выведет в консоль + вопросы + про опыт\n— Записи на ютуб: https://www.youtube.com/watch?v=CLKDuDvrnqQ\n— Успех собеса: ❓Pending\n— Фидбек о собесе: жду обратной связи"
},
{
"timestamp": "2024-03-21 10:36:48",
"content": "2024-03-21 10:36:48\n Александр -> 2071074234:\nНазвание компании: Иннотех\nСсылка на вакансию: https://nn.hh.ru/vacancy/93555047\nЗапись: https://youtu.be/3wfKfjohkw0\nЗп: 340 net\nУспех собеса: успех",
"full_content": "2024-03-21 10:36:48\n Александр -> 2071074234:\nНазвание компании: Иннотех\nСсылка на вакансию: https://nn.hh.ru/vacancy/93555047\nЗапись: https://youtu.be/3wfKfjohkw0\nЗп: 340 net\nУспех собеса: успех"
},
{
"timestamp": "2024-03-09 13:32:31",
"content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nh...",
"full_content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nhttps://youtu.be/X4T0G_n1jqo \n \nКомпания ВТБ 06.03  \nhttps://youtu.be/3wfKfjohkw0 \n \nКомпания: Сбер технологии 07.03 \nhttps://youtu.be/gt2RcGbzloQ \n \nКомпания: Иннотех 07.03 \nhttps://youtu.be/soujRRxtnC8 \nКомпания: IT ONE 07.03 \nhttps://youtu.be/RaZ-iZOJgDM"
},
{
"timestamp": "2024-01-17 23:10:41",
"content": "2024-01-17 23:10:41\n Daniil Max -> 2071074234:\n— Название компании: иннотех\n— Ссылка на вакансию: hr сама написала \n\nС вами готовы пообщаться на интервью в стрим Главная книга- Реализация СУБО Главная Книга в рамках задач по импортозамещения ЦФТ2 Main и выведению из нее функциональностей Главной Книги.\n\n— ЗП: 310-400к. hr сказала можно больше\n— Задачи: теория \n\n1. Отличие useEffect от useLayoutEffect \n2. какие хуки использую в react \n3. какие есть виды мемоизации в react \n4. HOC memo и как запре...",
"full_content": "2024-01-17 23:10:41\n Daniil Max -> 2071074234:\n— Название компании: иннотех\n— Ссылка на вакансию: hr сама написала \n\nС вами готовы пообщаться на интервью в стрим Главная книга- Реализация СУБО Главная Книга в рамках задач по импортозамещения ЦФТ2 Main и выведению из нее функциональностей Главной Книги.\n\n— ЗП: 310-400к. hr сказала можно больше\n— Задачи: теория \n\n1. Отличие useEffect от useLayoutEffect \n2. какие хуки использую в react \n3. какие есть виды мемоизации в react \n4. HOC memo и как запретить обновлять компонент с помощью memo \n5. зачем нужны ключи в реакте \n6. что такое согласование в react?\n7. как реакт понимает какие компоненты нужно обновлять\n8. что такое декларативный подход в реакт. разница чистого Js и реакт\n9. про классы, почему ушли от классов к функциональным компонентам\n\n— Успех собеса: ❌\n— Фитбек о собесе: оценили не синьором, фитбек странный получил \nПо итогам интервью коллеги не готовы  сделать вам предложение, не хватило знаний на позицию senior (пример- было отрывочно изложено в части рендера страницы в браузере, как работает virtual dom, как работает оптимизация дерева и какой алгоритм для этого используется, зачем нужен Key). Коллеги отметили хорошие коммуникативные навыки, фокус на бизнес пользу, всестороннюю развитость и заинтересованность в IT сфере. \nНа вопросы их ответил все, кроме FSD...) \n\n#иннотех"
},
{
"timestamp": "2024-01-10 08:42:19",
"content": "2024-01-10 08:42:19\n Daniil Max -> 2071074234:\n— Название компании: Иннотех, какой-то стрим\n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/j9Oa0Nh-zSA?si=ppEmK96-ijjYcqyt\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n\n#middle",
"full_content": "2024-01-10 08:42:19\n Daniil Max -> 2071074234:\n— Название компании: Иннотех, какой-то стрим\n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/j9Oa0Nh-zSA?si=ppEmK96-ijjYcqyt\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n\n#middle"
}
]
},
