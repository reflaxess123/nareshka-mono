      {
        "timestamp": "2025-06-11 14:33:38",
        "content": "2025-06-11 14:33:38\n Egor -> 2071074234:\nБюро 1440\nВакансия: hr написала\nЗп: от 350\nЗадачи: \n```\nconst str = 'value1.value2.value3.value4.value5';\n// RESULT\n/*\n{\n  value1: {\n    value2: {\n      value3: {\n        value4: {\n          value5:{}\n        }\n      }\n    }\n  }\n}\n*/\n\nconst toObject = (str) => {\n     const arr = str.split('.')\n     const result = {}\n    \n    const result = arr.reduceRight((acc, cur) => {\n        return {[curr]: acc}\n    },{})\n}\n\n\n==========\n\n// дан массив точек для график...",
        "full_content": "2025-06-11 14:33:38\n Egor -> 2071074234:\nБюро 1440\nВакансия: hr написала\nЗп: от 350\nЗадачи: \n```\nconst str = 'value1.value2.value3.value4.value5';\n// RESULT\n/*\n{\n  value1: {\n    value2: {\n      value3: {\n        value4: {\n          value5:{}\n        }\n      }\n    }\n  }\n}\n*/\n\nconst toObject = (str) => {\n     const arr = str.split('.')\n     const result = {}\n    \n    const result = arr.reduceRight((acc, cur) => {\n        return {[curr]: acc}\n    },{})\n}\n\n\n==========\n\n// дан массив точек для графика\nconst data = [\n    { time: 0, value: 1 },\n    { time: 1, value: 2 },\n    { time: 2, value: 2 },\n    { time: 3, value: 2 },\n    { time: 4, value: 2 },\n    { time: 5, value: 3 },\n    { time: 6, value: 3 },\n    { time: 7, value: 4 },\n    { time: 8, value: 4 },\n    { time: 9, value: 4 },\n    { time: 10, value: 5 },\n    { time: 11, value: 2 },\n];\n\nconst shortenArr = (arr) => {\n    if (!arr.length) {\n        return []\n    }\n    \n    const result = [arr[0]]\n    \n    for (let i = 1; i < arr.length; i++) {\n        const cur = arr[i]\n        const prev = arr[i - 1]\n        const next = arr[i + 1]\n        \n        if (cur.value !== prev.value  cur.value !== next?.value) {\n            result.push(cur)\n        }\n    }\n    \n    return result\n}\n \n// часто значение по оси Y одно и тоже на протяжении долгого времени\n// чтобы не рисовать тысячи лишних точек нужно определить только точки имеющие значение\n// в серии одинаковых точек значение имеют только первая и последняя\n// таки образом на выходе алгоритма должно получится\n \nconst result = [\n    { time: 0, value: 1 },\n    { time: 1, value: 2 },\n    { time: 4, value: 2 },\n    { time: 5, value: 3 },\n    { time: 6, value: 3 },\n    { time: 7, value: 4 },\n    { time: 9, value: 4 },\n    { time: 10, value: 5 },\n    { time: 11, value: 5 },\n];\n\n\n========\n\n\n// указать на проблемные места, объяснить почему\n \ninterface CommentEditorProps {\n  isShow: boolean;\n  index?: number;\n  initialComment?: string;\n  handleAddComment: (comment: string) => void;\n  handleChangeComment: (index: number, comment: string) => void;\n  onClose: () => void;\n}\nconst CommentEditor = ({\n  isShow,\n  index,\n  initialComment,\n  handleAddComment,\n  handleChangeComment,\n  onClose,\n}: CommentEditorProps) => {\n  const [value, setValue] = useState(initialComment  '');\n  const handleClick = () => {\n    if (index) {\n      handleChangeComment(index, value);\n    } else {\n      handleAddComment(value);\n    }\n  };\n  if (!isShow) {\n    return null;\n  }\n  return (\n    <div>\n      <input value={value} onChange={(e) => setValue(e.target.value)} />\n      <button onClick={handleClick}>{index ? 'Изменить' : 'Добавить'}</button>\n      <button onClick={onClose}>Отмена</button>\n    </div>\n  );\n};\n \n \n// example ['comment1', 'comment2', 'comment3']\ninterface Props {\n    initialComments: string[]\n}\nexport const Comments = ({initialComments}: Props) => {\n  const [showForm, setShowForm] = useState(false);\n  const [index, setIndex] = useState<number>();\n  const [comments, setComments] = useState(initialComments);\n  const handleAddComment = (comment: string) => {\n    setComments([...comments, comment]);\n  };\n  const handleChangeComment = (index: number, comment: string) => {\n    const newComments = [...comments];\n    newComments[index] = comment;\n    setComments(newComments);\n  };\n  return (\n    <div>\n      {comments.map((comment, index) => (\n        <div\n          key={index}\n          onClick={() => {\n            setIndex(index);\n            setShowForm(true);\n          }}\n        >\n          <p>{comment}</p>\n        </div>\n      ))}\n      <button onClick={() => setShowForm(true)}>Добавить комментарий</button>\n      <CommentEditor\n        isShow={showForm}\n        handleAddComment={handleAddComment}\n        handleChangeComment={handleChangeComment}\n        onClose={() => setShowForm(false)}\n        index={index}\n        initialComment={index ? comments[index] : undefined}\n      />\n    </div>\n  );\n}\n```"
      },
      {
        "timestamp": "2025-06-06 15:01:26",
        "content": "2025-06-06 15:01:26\n Антон -> 2071074234:\nБюро 1440  1 этап софтовый собес с тимлидом\n\nСпрашивал за опыт, почему ухожу. В целом просто говорили за опыт.\n\nВ конце была задача на подумать: как организовать отображение большой таблицы. Нужно перечислить, что у нас есть пагинация, бесконечный скролл, виртуализация, кеширование. Как это всё можно примерно сделать и какими либами",
        "full_content": "2025-06-06 15:01:26\n Антон -> 2071074234:\nБюро 1440  1 этап софтовый собес с тимлидом\n\nСпрашивал за опыт, почему ухожу. В целом просто говорили за опыт.\n\nВ конце была задача на подумать: как организовать отображение большой таблицы. Нужно перечислить, что у нас есть пагинация, бесконечный скролл, виртуализация, кеширование. Как это всё можно примерно сделать и какими либами"
      },
      {
        "timestamp": "2025-03-13 17:32:39",
        "content": "2025-03-13 17:32:39\n Лёша -> 2071074234:\nКомпания: БЮРО 1440 (техсобес)\nВакансия: hr написал\nЗп: запросил 300\n\nЗадачи:\n//что выведется\nfunction push(a: Number[]){\na.push(4)\nconsole.log(a.push(5))\nconsole.log(a)\n}\nconst a = [1,2,3]\npush(a)\nОтвет: \n5\n[1 2 3 4 5]\n\n\n//что выведется\nconst obj1 = {a: 1, b: 2}\nconst obj2 = {b: 3, c: 4}\nconst obj3 = {...obj1, ...obj2}\nconsole.log(obj3)\nОтвет: {a: 1, b: 3, c: 4}\n\n\n//что выведется\nconst person = {\n    name: 'Alyce',\n    adress: {\n        zip: 123456,\n    ...",
        "full_content": "2025-03-13 17:32:39\n Лёша -> 2071074234:\nКомпания: БЮРО 1440 (техсобес)\nВакансия: hr написал\nЗп: запросил 300\n\nЗадачи:\n//что выведется\nfunction push(a: Number[]){\na.push(4)\nconsole.log(a.push(5))\nconsole.log(a)\n}\nconst a = [1,2,3]\npush(a)\nОтвет: \n5\n[1 2 3 4 5]\n\n\n//что выведется\nconst obj1 = {a: 1, b: 2}\nconst obj2 = {b: 3, c: 4}\nconst obj3 = {...obj1, ...obj2}\nconsole.log(obj3)\nОтвет: {a: 1, b: 3, c: 4}\n\n\n//что выведется\nconst person = {\n    name: 'Alyce',\n    adress: {\n        zip: 123456,\n        city: 'Wonderland'\n    }\n};\nconst { name, adress: { city, zip } } = person;\nconsole.log(name, city, adress);\nОтвет: Alyce Wonderland Error\n\n\n// какой в итоге будет стейт\nconst [count, setCount] = useState(0)\nsetCount(count + 1)\nsetCount(count + 1)\nsetCount(count + 1)\nОтвет: 1\n\nЧто вызывает ререндер компонента?\nКак работает useMemo(), и что он делает?\n\nСделать интерфейс для кнопки из фигмы.(макет слишком большой для поста)\n\nКакие утилитарные типы знаешь (partial, required)?\n\n2 часть \n\n//Что выведется\nfor(var i = 0; i<5; i++){\n    setTimeout(()=>{\n        console.log(i)\n    }, 1000)\n}\n\nfor(let i = 0; i<5; i++){\n    setTimeout(()=>{\n        console.log(i)\n    }, 1000)\n}\nОтвет: \n55555 (через 1 сек)\n01234 (через 1 сек)\n\nВ чем разница между setTimeout() и window.setTimeout()\nЧем forEach отличается от for?\nЧто такое useLayoutEffect и его минус?\nКак работает обновление стейта, если мы несколько раз делаем setState(3)?\nКак работает обновление стейта, если мы несколько раз делаем setState({c: 3})?\n//Как работает\nconst count = useRef(null)\nuseEffect(() => {\n    console.log(\"click\", count.current);\n  }, [count.current]);\n\n//По клику на кнопку\ncount.current++\n\n\nЛайвкодинг:\n\nsandbox с решением: https://codesandbox.io/p/devbox/keen-dew-k9l535?workspaceId=ws_9DWHfci4iswbKHfzahnfEo\n\nНужно написать функцию, которая будет применять условие из комента для всего массива.\n\n// To draw a line across the 180th meridian,\n// if the longitude of the second point minus\n// the longitude of original (or previous) point is >= 180,\n// subtract 360 from the longitude of the second point.\n// If it is less than 180, add 360 to the second point.\n\n// if (doesCrossAntimeridian) {\n//   const startLng = geometry.coordinates[0][0];\n//   const endLng = geometry.coordinates[1][0];\n\n//   if (endLng - startLng >= 180) {\n//     geometry.coordinates[1][0] -= 360;\n//   } else if (endLng - startLng < 180) {\n//     geometry.coordinates[1][0] += 360;\n//   }\n// }\n\n\nconst line = [\n  [150.498, -60.086],\n  [151.749, -57.223],\n  [152.789, -54.344],\n  [153.666, -51.451],\n  [154.414, -48.549],\n...\n  [155.058, -45.637]]\n\nПравильного решения я не написал, но это вроде верное:\n\nfunction adjustForAntimeridian(line) {\n  const adjustedLine = [...line];\n\n  for (let i = 1; i < adjustedLine.length; i++) {\n    const startLng = adjustedLine[i - 1][0];\n    const endLng = adjustedLine[i][0];\n\n    if (endLng - startLng >= 180) {\n      adjustedLine[i][0] -= 360;\n    } else if (endLng - startLng < -180) {\n      adjustedLine[i][0] += 360;\n    }\n  }\n\n  return adjustedLine;\n}"
      },
      {
        "timestamp": "2025-03-12 18:51:20",
        "content": "2025-03-12 18:51:20\n Лёша -> 2071074234:\nКомпания: БЮРО 1440 2 этап (общение с тимлидом)\nзп: просил 300 net (для себя сделал пометку, что можно и больше просить)\nгибрид Москва (2 дня)\nвакансия: hr написал\nфидбек: позвали на техсобес\n\nВопросы:\nЧем занимался?\nРасскажи почему в поиске новой работы?\n...Куча вопросов конкретно по легенде...\nКакую ролевую модель у себя использовали?\nОтличия Rudux от Mobx.\nКак ты работал с таблицами (пагинация)?\nReact-dnd, что это такое и как ты это использовал?\nКак ты...",
        "full_content": "2025-03-12 18:51:20\n Лёша -> 2071074234:\nКомпания: БЮРО 1440 2 этап (общение с тимлидом)\nзп: просил 300 net (для себя сделал пометку, что можно и больше просить)\nгибрид Москва (2 дня)\nвакансия: hr написал\nфидбек: позвали на техсобес\n\nВопросы:\nЧем занимался?\nРасскажи почему в поиске новой работы?\n...Куча вопросов конкретно по легенде...\nКакую ролевую модель у себя использовали?\nОтличия Rudux от Mobx.\nКак ты работал с таблицами (пагинация)?\nReact-dnd, что это такое и как ты это использовал?\nКак ты работал с графиками?\nКак отрисовать график (svg, canvas)?\nКак лучше работать с графиком (svg, canvas)?\n\n99% времени мы общались по моему опыту и навыкам указанных в резюме."
      },
      {
        "timestamp": "2024-11-25 13:18:22",
        "content": "2024-11-25 13:18:22\n Qimm -> 2071074234:\nКомпания: Бюро 1440\nЗп: 180-210(вроде вилка такая, очень давно с ними на связи)\nВакансия: затерялась, по причине выше\n\nВопросов не было, только задачки:\n1) что выведет консоль, задачка с debounce, \n2) задача на замену значения ключей в объекте, те же консоли \n3) задачи по реакту( счетчик), несколько вариаций. Как сделать так, чтобы счеьчик запоминал предыдущие значение? (Дописать, додиктовать)\n4) задача как передать от дочернего компонента в родительский ...",
        "full_content": "2024-11-25 13:18:22\n Qimm -> 2071074234:\nКомпания: Бюро 1440\nЗп: 180-210(вроде вилка такая, очень давно с ними на связи)\nВакансия: затерялась, по причине выше\n\nВопросов не было, только задачки:\n1) что выведет консоль, задачка с debounce, \n2) задача на замену значения ключей в объекте, те же консоли \n3) задачи по реакту( счетчик), несколько вариаций. Как сделать так, чтобы счеьчик запоминал предыдущие значение? (Дописать, додиктовать)\n4) задача как передать от дочернего компонента в родительский значение\n5) типизировать кнопки по фигме(написать интерфейс), задать значения по умолчанию \n6) задача на цикл for , с сеттаймаутом и вариациями var и let\n7) еще задачи со счетчиком и условиями, что выведет и почему\nВо второй задаче в счетчике объект и каждый раз будет происходить ререндер, но значение не изменится\n8) задачка со счетчиком и useRef \nexport const Parent = ({ value }) => {\n  const [currentValue, setCurrentValue] = useState(value);\nconst [memoizedValue, setMemoizedValue] = useState(value);\n  useEffect(() => {\n    setCurrentValue(value);\n  }, [value]); // Выполняется каждый раз, когда value изменяется\n\n  return (\n    <div>\n      <div>Value: {value}</div>\n      <div>CurrentValue: {currentValue}</div>\n    </div>\n  );\n};\nexport const Parent = ({ value }) => {\n  const [currentValue, setCurrentValue] = useState(value);\n\n  // Функция для обработки данных от ребёнка\n  const handleChildData = (data) => {\n    console.log('Данные от ребёнка:', data);\n    setCurrentValue(data); // Пример: обновляем state родителя\n  };\n\n  return (\n    <div>\n      <div>Value: {value}</div>\n      <div>CurrentValue: {currentValue}</div>\n      <Child onSendData={handleChildData} /> {/* Передаём функцию в Child */}\n    </div>\n  );\n};\nexport const Child = ({ onEvent }) => {\n  const sendDataToParent = () => {\n    const data = 'Привет от ребёнка!'; // Данные, которые отправляются родителю\n    onEvent(data); // Вызов функции, переданной из родителя\n  };\n\n  return (\n    <button onClick={sendDataToParent}>\n      Отправить данные родителю\n    </button>\n  );\n};\nexport const Child = ({ onEvent }) => {\n  const sendDataToParent = () => {\n    const data = 'Привет от ребёнка!'; // Данные, которые отправляются родителю\n    onEvent(data); // Вызов функции, переданной из родителя\n  };\n\n  return (\n    <button onClick={sendDataToParent}>\n      Отправить данные родителю\n    </button>\n  );\n};"
      }
    ]
  },
  {
    "company": "Совкомбанк",
    "count": 6,
    "records": [
      {
        "timestamp": "2025-06-20 09:37:12",
        "content": "2025-06-20 09:37:12\n Egor -> 2071074234:\nСовкомбанк (какой то проект связанный с инвестициями в облигации для физ. лиц)\nВакансия https://spb.hh.ru/vacancy/108664443\nЗП: от 330\nВопросы: \nСпросил про интересную задачу\n+ - функционального программирования\n+ - ООП\n\nПосле того как узнал, что я не фанат ООП и никогда с ним не работал, остановил собеседование",
        "full_content": "2025-06-20 09:37:12\n Egor -> 2071074234:\nСовкомбанк (какой то проект связанный с инвестициями в облигации для физ. лиц)\nВакансия https://spb.hh.ru/vacancy/108664443\nЗП: от 330\nВопросы: \nСпросил про интересную задачу\n+ - функционального программирования\n+ - ООП\n\nПосле того как узнал, что я не фанат ООП и никогда с ним не работал, остановил собеседование"
      },
      {
        "timestamp": "2025-02-07 14:50:41",
        "content": "2025-02-07 14:50:41\n Артем -> 2071074234:\nКомпания: Совкомбанк\nВопросы\nКак сверстать кнопку\nСемантическая вертска\nasync defer in HTML\nprepend vs append vs inserBefor\nрендеринг страицы в браузер\nдекораторы в JS",
        "full_content": "2025-02-07 14:50:41\n Артем -> 2071074234:\nКомпания: Совкомбанк\nВопросы\nКак сверстать кнопку\nСемантическая вертска\nasync defer in HTML\nprepend vs append vs inserBefor\nрендеринг страицы в браузер\nдекораторы в JS"
      },
      {
        "timestamp": "2025-01-18 14:43:16",
        "content": "2025-01-18 14:43:16\n Ильдус Гизетдинов -> 2071074234:\nСовкомбанк(Казань)\nСсылка на вакансию: Hr написала\nЗп: не обсуждалось\nВопросы:\nКратко про опыт\nЧто такое симантика\nЗачем скрипты вставляем снизу а стили сверху\nReset и Normalaze.css\nbox-sizing:border-box\nВспышка не стилизованного контента\nCritical css\npreload, prefetch, preconnect\n??\n?.\n&&\n||=\n&&=\n...\nsort() toSorted()\nfunction Person(){}\nvoid function Person(){}()\nconst person = new Person()\nclass vs new\nКак сделать истиное константу для объ...",
        "full_content": "2025-01-18 14:43:16\n Ильдус Гизетдинов -> 2071074234:\nСовкомбанк(Казань)\nСсылка на вакансию: Hr написала\nЗп: не обсуждалось\nВопросы:\nКратко про опыт\nЧто такое симантика\nЗачем скрипты вставляем снизу а стили сверху\nReset и Normalaze.css\nbox-sizing:border-box\nВспышка не стилизованного контента\nCritical css\npreload, prefetch, preconnect\n??\n?.\n&&\n||=\n&&=\n...\nsort() toSorted()\nfunction Person(){}\nvoid function Person(){}()\nconst person = new Person()\nclass vs new\nКак сделать истиное константу для объект\nДискрипторы\nАтрибуты дискрипторов get set\nкак сделать константу объекта в объекте obj.a.c\npromis vs await\nслушатели событий\nкак отписаться от событий addEventListener и onClick\nReact Fiber\nBatching\nОтключение Batching (flushSync)\nЧто вызывает перендер\nfunction Test({ isAuth }) {\n  const data = useVerySlowHook();\n\n  // Компонент мемоизируется, чтобы избежать лишних ререндеров\n  const MemoizedComponent = useMemo(\n    () => <Component data={data} />,\n    [data]\n  );\n  if(!isAuth){\n   return <Auth /> \n  }\n  return (\n    <>\n      {MemoizedComponent}\n    </>\n  );\n}\n\ninterface vs type vs абстрактные классы"
      },
      {
        "timestamp": "2025-01-16 16:53:31",
        "content": "2025-01-16 16:53:31\n Ivan -> 2071074234:\nКомпания Совкомбанк\nЗП 230\nВопросы :\nКратко про опыт \nИнтересные задачи \nРаботал ли микрофронтами\nЧто такое семантика? Для чего нужна ?\nReset и normalize css\nВендерный префикс\nDefer async \ntoSorted\n??\n?.\n||=\n&&=\n…\nКакие бывают функции и в чем разница ?\nThis\nДелегирование событий\nEventloop\nКак можно повесить слушатель событий в нативном js?\nВсплытие событий\nReact , virtual dom, react fiber, react recosilation\nВо что компилируется jsx \nType interface абстра...",
        "full_content": "2025-01-16 16:53:31\n Ivan -> 2071074234:\nКомпания Совкомбанк\nЗП 230\nВопросы :\nКратко про опыт \nИнтересные задачи \nРаботал ли микрофронтами\nЧто такое семантика? Для чего нужна ?\nReset и normalize css\nВендерный префикс\nDefer async \ntoSorted\n??\n?.\n||=\n&&=\n…\nКакие бывают функции и в чем разница ?\nThis\nДелегирование событий\nEventloop\nКак можно повесить слушатель событий в нативном js?\nВсплытие событий\nReact , virtual dom, react fiber, react recosilation\nВо что компилируется jsx \nType interface абстрактный класс\nНаследование в класс"
      },
      {
        "timestamp": "2024-11-19 19:51:45",
        "content": "2024-11-19 19:51:45\n Гладких Александр -> 2071074234:\nКомпания Совкомбанк\nВакансия hr написала\nЗП: не обсуждали\nВопросы\n- Расскажи о своем опыте \n- Причины ухода\n- Назови 3 своих положительных качества и три отрицательных\n(На этот вопрос много времени ушло) \n- Расскажи о процессах которые идут после того как задача\nпришла от бизнеса\n- Вопросы про команду, про стек, про взаимодействие в команде\n- Работал ли с Next-ом и готов ли работать\n- Какаие либы использовали для форм и графиков\n\nЗадача\n\n- Бы...",
        "full_content": "2024-11-19 19:51:45\n Гладких Александр -> 2071074234:\nКомпания Совкомбанк\nВакансия hr написала\nЗП: не обсуждали\nВопросы\n- Расскажи о своем опыте \n- Причины ухода\n- Назови 3 своих положительных качества и три отрицательных\n(На этот вопрос много времени ушло) \n- Расскажи о процессах которые идут после того как задача\nпришла от бизнеса\n- Вопросы про команду, про стек, про взаимодействие в команде\n- Работал ли с Next-ом и готов ли работать\n- Какаие либы использовали для форм и графиков\n\nЗадача\n\n- Был один компонент и собеседующий по очередно \nдавал задачи и нужно было их реализовывать\n\n- создать кастомный инпут\n- реализовать возможность менять цвет инпута один оранжевый\nдругой черный например\n- тоже самое с placeholder  - ом\n- задезеблить 2 инпут\n- нужно исключить возможность разработчика который использует \nкастомный инпут поменять type\n- реализовать возможность у первого инпута чтобы была подсказка\n- реализовать отображение значения введенного в инпут \n- затем добавить button по нажатии добавлять в конец 1\n- реализовать отображение длины символов введых в инпуты\n\n\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport classNames from \"classnames\";\n\nimport \"./styles.css\";\n\ntype CustomInputProps = Omit<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  \"type\"\n> & {\n  hint?: React.ReactNode;\n};\n\nconst CustomInput = ({\n  placeholder,\n  className,\n  hint,\n  value: externalValue,\n  ...props\n}: CustomInputProps) => {\n  const [inputValue, setInputValue] = React.useState(externalValue || \"\");\n\n  const handleInputChange = (event) => {\n    const newValue = event.target.value;\n    setInputValue(newValue);\n  };\n\n  return (\n    <>\n      <input\n        className={`custom-input ${className}`}\n        placeholder={placeholder}\n        value={inputValue}\n        onChange={handleInputChange}\n        {...props}\n      />\n      {hint && <>{hint}</>}\n      <div>{inputValue.length}</div>\n    </>\n  );\n};\n\nfunction App() {\n  const [step, setStep] = React.useState(\"1\");\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setStep(e.target.value);\n  };\n\n  const handleAddOne = () => {\n    setStep((prev) => prev + \"1\");\n  };\n\n  return (\n    <div className=\"app\">\n      <div>{step}</div>\n\n      <button onClick={handleAddOne}>Увеличить шаг</button>\n\n      <CustomInput\n        value={step}\n        onChange={handleChange}\n        hint={<div>Введите размер шага</div>}\n      />\n\n      <CustomInput placeholder=\"Введите имя\" className=\"border-orange \" />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);"
      },
      {
        "timestamp": "2024-06-05 10:49:50",
        "content": "2024-06-05 10:49:50\n Санжар -> 2071074234:\nКомпания: Совкомбанк [1 этап]\nСсылка на вакансию: https://ufa.hh.ru/vacancy/98934348\nЗП: 350к-380к\nУспех: ✅\nФидбек: говорили про опыт (какие задачи решал, как и почему выбирал такие решения), иногда просили подробнее рассказать про некоторые технологии, были несколько простых лайвкод задач\n\nВопросы:\n- Что такое tree shaking\n- Что такое Virtual DOM\n- Как можно напрямую взаимодействовать с Virtual DOM во vue\n- Жизненый цикл компонента, разница хуков creat...",
        "full_content": "2024-06-05 10:49:50\n Санжар -> 2071074234:\nКомпания: Совкомбанк [1 этап]\nСсылка на вакансию: https://ufa.hh.ru/vacancy/98934348\nЗП: 350к-380к\nУспех: ✅\nФидбек: говорили про опыт (какие задачи решал, как и почему выбирал такие решения), иногда просили подробнее рассказать про некоторые технологии, были несколько простых лайвкод задач\n\nВопросы:\n- Что такое tree shaking\n- Что такое Virtual DOM\n- Как можно напрямую взаимодействовать с Virtual DOM во vue\n- Жизненый цикл компонента, разница хуков created и mounted, в каком из этих хуков дергал бы данные из апи, почему\n- Преимущества vite перед webpack\n\nЗадачи:\n1) Есть функция f, она должна строго принимать в качестве параметров a:string, b:string или a:number, b:number. Нужно типизировать ее в соответствии с требованиями\nfunction f(a, b) {}\n2) Написать тело функции pause которая будет откладывать выполнение функции some\nasync function f() {\n  await pause();\n  some();\n}\n\nfunction pause() {}\n3) Дописать код, который в результате последовательно выведет в логах a, b, c. Функции a, b, c нельзя переписывать\nfunction a(callback) {\n  setTimeout(() => {\n    callback(\"a\");\n  }, Math.random() * 10);\n}\n\nfunction b() {\n  setTimeout(() => {\n    callback(\"b\");\n  }, Math.random() * 10);\n}\n\nfunction c() {\n  setTimeout(() => {\n    callback(\"c\");\n  }, Math.random() * 10);\n}"
      }
    ]
  },
  {
    "company": "Финуслуги",
    "count": 5,
    "records": [
      {
        "timestamp": "2025-07-10 18:10:55",
        "content": "2025-07-10 18:10:55\n Даниил -> 2071074234:\nФинуслуги Финал\n1. Что предпочитаешь работать в команде или в одного?\n2. Как ты будешь доносить тимлиду, что он не прав?\n3. Как ты относишься к критике?\n4. Какие задачи ты делаешь в первую очередь?\n5. Бывало ли такое что переключался между несколькими контекстами?\n6. Что делаешь если прилетает срочная задача в 17:59?\n7. Что делаешь чтобы не выгореть?\n8. Как планируешь свой день?\n9. Было ли такое что просыпаешься и не хочешь работать?",
        "full_content": "2025-07-10 18:10:55\n Даниил -> 2071074234:\nФинуслуги Финал\n1. Что предпочитаешь работать в команде или в одного?\n2. Как ты будешь доносить тимлиду, что он не прав?\n3. Как ты относишься к критике?\n4. Какие задачи ты делаешь в первую очередь?\n5. Бывало ли такое что переключался между несколькими контекстами?\n6. Что делаешь если прилетает срочная задача в 17:59?\n7. Что делаешь чтобы не выгореть?\n8. Как планируешь свой день?\n9. Было ли такое что просыпаешься и не хочешь работать?"
      },
      {
        "timestamp": "2025-07-10 18:09:47",
        "content": "2025-07-10 18:09:47\n Даниил -> 2071074234:\nФинуслуги Техничка\n1. Какие семантические теги знаешь?\n2. Можно ли в section объявить header? // да можно в спеке не запрещается\n3. Напиши свой кастомный чекбокс без использования JS\n<label class=\"checkbox-container\">\n  <input name=\"checkbox\" type=\"checkbox\" class=\"checkbox\" />\n  <span class=\"custom-checkbox\"></span>\n  <span>соглашение</span>\n</label>\n.checkbox-container {\n  display: flex;\n  align-items: center;\n  column-gap: 8px;\n  position: relative;\n...",
        "full_content": "2025-07-10 18:09:47\n Даниил -> 2071074234:\nФинуслуги Техничка\n1. Какие семантические теги знаешь?\n2. Можно ли в section объявить header? // да можно в спеке не запрещается\n3. Напиши свой кастомный чекбокс без использования JS\n<label class=\"checkbox-container\">\n  <input name=\"checkbox\" type=\"checkbox\" class=\"checkbox\" />\n  <span class=\"custom-checkbox\"></span>\n  <span>соглашение</span>\n</label>\n.checkbox-container {\n  display: flex;\n  align-items: center;\n  column-gap: 8px;\n  position: relative;\n}\n\n.checkbox {\n  height: 0;\n  width: 0;\n  opacity: 0;\n  position: absolute;\n}\n\n.custom-checkbox {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 12px;\n  height: 12px;\n  border: 2px solid #ccc;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.checkbox:checked + .custom-checkbox {\n  background: url('https://img.icons8.com/?size=12&id=sz8cPVwzLrMP&format=png&color=000000');\n}\n\n\n5. Как расположить элемент по центру?\n6. Оптимизировал ли картинки для ретины и как? // использовать srcset с разными изображениями под разрешения (1x, 2x) и одно дефолтное.\n7. Занимался ли доступностью на странице?\n8. задача на вывод ошибок (было выше)\n9. какие типы в ts знаешь?\n10. отличие any от unknown\n11. какие утилитные типы знаешь\n12. реализуй partial свой  \ntype MyPartial<T> = {  \n  [K in keyof T]?: T[K]  \n}\n13. реализуй omit свой   \ntype MyOmit<T, K> = Pick<T, Exclude<keyof T, K>>\n14. Какие минусы классовых компонентов\n15. для чего нужен key\n16. задача на оптимизацию (была выше)\n17. Вопрос про метрики lighthouse какие знаешь и как оптимизировать\n18. Разница между ssr, ssg, spa\n19. Для чего используются scss модули"
      },
      {
        "timestamp": "2025-07-06 21:03:38",
        "content": "2025-07-06 21:03:38\n Mark Nikonorov ⚛ -> 2071074234:\nФинуслуги (техничка)\nзп 350\n1. Пользовался ли zustand? \n2. Какие семантические теги знаешь?\n3. Можно ли в section объявить header? // да можно в спеке не запрещается\n4. напиши кастомный чекбокс без использования js\n<label class=\"checkbox\">\n        <input type=\"checkbox\" class=\"checkbox__hidden\">\n        <span class=\"checkmark\"></span>\n        click me\n    </label>\n.checkbox {\n            position: relative;\n            display: flex;\n         ...",
        "full_content": "2025-07-06 21:03:38\n Mark Nikonorov ⚛ -> 2071074234:\nФинуслуги (техничка)\nзп 350\n1. Пользовался ли zustand? \n2. Какие семантические теги знаешь?\n3. Можно ли в section объявить header? // да можно в спеке не запрещается\n4. напиши кастомный чекбокс без использования js\n<label class=\"checkbox\">\n        <input type=\"checkbox\" class=\"checkbox__hidden\">\n        <span class=\"checkmark\"></span>\n        click me\n    </label>\n.checkbox {\n            position: relative;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n        }\n\n        .checkbox__hidden {\n            height: 0;\n            width: 0;\n            position: absolute;\n            top: 0;\n            left: 0;\n            opacity: 0;\n        }\n\n        .checkmark {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 2px;\n            width: 10px;\n            height: 10px;\n            background: none;\n            transition: background-color .3s ease-in-out;\n        }\n\n        .checkbox:has(.checkbox__hidden:checked)>.checkmark {\n            background: red;\n        }\n5. Как расположить элемент по центру? \n6. Оптимизировал ли картинки для ретины и как? // использовать srcset с разными изображениями под разрешения (1x, 2x) и одно дефолтное.\n7. Занимался ли доступностью на странице?\n8. задача на вывод ошибок (было выше)\n9. какие типы в ts знаешь?\n10. отличия any от unknown\n11. Какие утилитные типы знаешь \n12. реализуй partial свой\ntype MyPartial<T> = {\n  [K in keyof T]?: T[K]\n}\n13. реализуй omit свой\ntype MyOmit<T, K> = Pick<T, Exclude<keyof T, K>>\n14. Какие минусы классовых компонентов\n15. для чего нужен key\n16. задача на оптимизацию (была выше)\n17. Вопрос про метрики lighthouse какие знаешь и как оптимизировать\n19. Разница между ssr, ssg, spa\n20. Для чего используются scss модули"
      },
      {
        "timestamp": "2025-07-06 19:39:49",
        "content": "2025-07-06 19:39:49\n Mark Nikonorov ⚛ -> 2071074234:\nФинуслуги (финал)\nзп макс 350\n1. Что предпочитаешь работать в команде или в одного?\n2. Как ты будешь доносить тимлид, что он не прав?\n3. Как ты относишься к критике?\n4. Какие задачи ты делаешь в первую очередь?\n5. Бывало ли такое что переключался между несколькими контекстами?\n6. Что делаешь если прилетает срочная задача в 17:59?\n7. Что делаешь чтобы не выгореть?\n8. Как планируешь свой день?\n9. Было ли такое что просыпаешься и не хочешь работа...",
        "full_content": "2025-07-06 19:39:49\n Mark Nikonorov ⚛ -> 2071074234:\nФинуслуги (финал)\nзп макс 350\n1. Что предпочитаешь работать в команде или в одного?\n2. Как ты будешь доносить тимлид, что он не прав?\n3. Как ты относишься к критике?\n4. Какие задачи ты делаешь в первую очередь?\n5. Бывало ли такое что переключался между несколькими контекстами?\n6. Что делаешь если прилетает срочная задача в 17:59?\n7. Что делаешь чтобы не выгореть?\n8. Как планируешь свой день?\n9. Было ли такое что просыпаешься и не хочешь работать?"
      },
      {
        "timestamp": "2025-06-16 22:58:16",
        "content": "2025-06-16 22:58:16\n Эмир -> 2071074234:\nФинуслуги\nзп 250к\n\nТеория:\n1. Какие семантические теги ты знаешь?\nОтвет:\nNav figcaption aside section header. Footer. \n2. Как расположить объект в центре. \nDisplay flex. \nJustify content center. \nAlign items center. \n\n3. Сверстай кастомный чекбокс\n<label >\n<input type=\"checkbox-item\">\n‹span class=\"custom-checkbox\"></span>\n</label>\n\nCSS\n/*background-color: red;\nbackground-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0...",
        "full_content": "2025-06-16 22:58:16\n Эмир -> 2071074234:\nФинуслуги\nзп 250к\n\nТеория:\n1. Какие семантические теги ты знаешь?\nОтвет:\nNav figcaption aside section header. Footer. \n2. Как расположить объект в центре. \nDisplay flex. \nJustify content center. \nAlign items center. \n\n3. Сверстай кастомный чекбокс\n<label >\n<input type=\"checkbox-item\">\n‹span class=\"custom-checkbox\"></span>\n</label>\n\nCSS\n/*background-color: red;\nbackground-image: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e\")*/\n\n.checkbox-item {\n  position:absolute;\n  opacity: 0;\n  height: 0;\n  width: 0;\n}\n\n.custom-checkbox {\n  width:10px;\n  height: 20px;\n  border: 1px solid #ccc;\n  display: block;\n}\n\n.custom-checkbox:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n.checkbox-item:checked + .custom-checkbox {\n  background-color: #000\n}\n\n.checkbox-item:checked + .custom-checkbox:after {\n  width: 5px;\n  height: 10px;\n  display: block;\n}\n\n4. Что такое область видимости переменной \nОбласть видимости (scope) — это контекст, в котором переменная доступна (видна) в коде.\n\n5. Типы ts\nenum, object, array, unknown, any, void, never\n6.оптимизировать инпут (на каждую кнопку подавал запрос на сервер)\nimport * as React from \"https://cdn.skypack.dev/react@17.0.1\";\nimport * as ReactDOM from \"https://cdn.skypack.dev/react-dom@17.0.1\";\n\nconst App = () => {\n  const [text, setText] = React.useState(\"\");\n  \n  const ref = React.useRef('');\n  \n  const sendMessage = React.useCallback(() => {\n    console.log(\"SEND MESSAGE!\", ref.current);\n  }, []);\n  \n\n  return (\n    <div>\n      <div>Текст: {text}</div>\n      <input\n        type=\"text\"\n        name=\"message\"\n        value={text}\n        onChange={e => {\n          const value = e.target.value\n          ref.current = value;\n          setText(value)\n        }}\n      />\n\n      <Button handlerClick={sendMessage} />\n    </div>\n  );\n};\n\nconst Button =React.memo(({ handlerClick }) => {\n  console.log(\"Render Button\");\n  return <button onClick={handlerClick}>Click me!</button>;\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n7. Kiss dry yagni \nKISS – Keep It Simple, Stupid пиши код проще\nDRY – Don't Repeat Yourself не повторяйся\nYAGNI – You Aren’t Gonna Need It не пиши лишний код\n8. Solid \n5 принципов объектно-ориентированного проектирования, которые помогают создавать гибкий, поддерживаемый и расширяемый код.\n9. что выведется в консоли\n// setTimeout(function timeout() {\n//     console.log('1');\n// }, 0);\n\n// let p = new Promise(function(resolve, reject) {\n//     console.log('2');\n//     resolve();\n// });\n\n// p.then(function(){\n//     console.log('3');\n// });\n\n// console.log('4');"
      }
    ]
  },
  {
    "company": "Редсофт",
    "count": 4,
    "records": [
      {
        "timestamp": "2024-12-09 16:06:21",
        "content": "2024-12-09 16:06:21\n Aleksandr -> 2071074234:\nКомпания: РедСофт (Live coding)\nВакансия: https://hh.ru/vacancy/110876283?hhtmFrom=chat\nЗп: не обсуждалась\ncod:\n/**\n * Задача 1:\n * Создать массив состоящий из уникальных значений исходного и \n * вывести его значение в консоль\n */\n\n// const fruits = [\"kiwi\", \"apple\", \"kiwi\", \"orange\", \"kiwi\", \"apple\"];\n// const uniqueFruits = [... new Set(fruits)];\n\n// console.log(uniqueFruits); // [\"kiwi\", \"apple\", \"orrange\"]\n\n/**\n* Задача 2:\n* Необходимо расширить ...",
        "full_content": "2024-12-09 16:06:21\n Aleksandr -> 2071074234:\nКомпания: РедСофт (Live coding)\nВакансия: https://hh.ru/vacancy/110876283?hhtmFrom=chat\nЗп: не обсуждалась\ncod:\n/**\n * Задача 1:\n * Создать массив состоящий из уникальных значений исходного и \n * вывести его значение в консоль\n */\n\n// const fruits = [\"kiwi\", \"apple\", \"kiwi\", \"orange\", \"kiwi\", \"apple\"];\n// const uniqueFruits = [... new Set(fruits)];\n\n// console.log(uniqueFruits); // [\"kiwi\", \"apple\", \"orrange\"]\n\n/**\n* Задача 2:\n* Необходимо расширить функционал класса Array, написав функцию, \n* которая приводит массив к 1 уровню вложенности\n* ([1, 2, [1, 2, [1, 2]], [1, 2]]) => [1, 2, 1, 2, 1, 2, 1, 2]\n*/\n\nArray.prototype.flatten = function () {\n    for(let i = 0; i < this.length; i++) {\n        if(Array.isArray(this[i])) {\n            this.splice(i, 1, ...this[i].flatten())\n        }\n        \n    }\n    return this\n}\n\n// const myArray = [1, 2, [[1, 2], [1, 2]], [1, 2]]\n// console.log(myArray.flatten()); // [1, 2, 1, 2, 1, 2, 1, 2]\n// console.log(myArray);           // [1, 2, 1, 2, 1, 2, 1, 2]\n\n/**\n * Задача 3:\n * Необходимо написать функцию, которая принимает в аргумент функцию (fn) \n * и возвращает мемоизированную версию этой функции\n * Мемоизированная функция никогда не вызывается дважды с теме же аргументами, а возвращает закэшированное значение.\n */\n\nconst memoize = (fn) => {\n    const cache = new Map()\n    \n    return function (...args) {\n        const key = JSON.stringify(args)\n        if(cache.has(key)) {\n            return cache.get(key)\n        }\n        const result = fn(...args)\n        \n        cache.set(key, result)\n        \n        return result\n    }\n}\n\n// let callCount = 0;\n// const memoizedFn = memoize((a, b) => {\n//   callCount += 1;\n//   return a + b;\n// });\n\n// console.log(memoizedFn(1, 2)); // 3\n// console.log(memoizedFn(1, 2)); // 3\n// console.log(\"callCount\", callCount); // 1\n// console.log(memoizedFn(1, 3)); // 4\n// console.log(\"callCount\", callCount); // 2\n\n/**\n * Задача 4:\n * Необходимо написать функцию, которая принимает в аргумент функцию \n * (fn) и возвращает карированную версию этой функции.\n * Каррирование – это трансформация функций таким образом, \n * чтобы они принимали аргументы не как f(a, b, c), а как f(a)(b)(c), f(a, b)(c), f(a)(b, c).\n */\nconst curry = (fn) => {\n    return function runCurry(...args) {\n        if(args.length >= fn.length) {\n            return fn(...args)\n        } else {\n            return function (...nextArgs) {\n                return runCurry(...args, ...nextArgs)\n            }\n        } \n        \n    }\n}\n\n\nconst curriedFn = curry((a, b, c, d) => {\n  return a + b + c + d;\n});\n\n// console.log(curriedFn(1, 2, 3)(4)); // 10\n// console.log(curriedFn(1)(2)(3)(4)); // 10\n\n\n/**\n * Задача 5:\n * Необходимо написать функцию определяющую возможность сортировки \n * массива из цифр по группам,\n * каждая из которых - массив длинной groupSize, и состоит из \n * уникальных последовательных элементов\n * ([1,2,3,6,2,3,4,7,8], 3) => [1,2,3],[2,3,4],[6,7,8]\n * ([1,2,3,4,5], 4) Функция вернёт false\n */\n \n//  [1, 2, 3, 3, 4, 6, 7, 8], 2 => [1, 2], [3, 4], [3, 6], [7, 8]\nconst canSplit = (arr, groupSize) => {\n    if(arr.length % groupSize !== 0) return false\n    \n    const unique = {}\n    \n    arr.sort((a, b) => a - b)\n    \n    for(let i = 0; i < arr.length; i += 1) {\n        if (arr[i] > 0) {\n            let next = arr[i] + 1;\n            arr[i] = -1;\n            let currentGroupSize = 1;\n            let j = i + 1;\n            while (j < arr.length && currentGroupSize < groupSize) {\n                if (arr[j] === next) {\n                    next = arr[j] + 1;\n                    arr[j] = -1;\n                    currentGroupSize += 1;\n                }\n                j += 1;\n            }\n                    \n            if (currentGroupSize !== groupSize) return false\n        }\n    }\n    return true\n}\n\nconsole.log(canSplit([1, 2, 3, 6, 2, 3, 4, 7, 8], 3)); // true\nconsole.log(canSplit([1, 2, 3, 4, 5], 4)); // false"
      },
      {
        "timestamp": "2024-12-09 15:56:32",
        "content": "2024-12-09 15:56:32\n Aleksandr -> 2071074234:\nКомпания: РедСофт\nВакансия: https://hh.ru/vacancy/110876283?hhtmFrom=chat\nЗп: не обсуждалась\nВопросы:\n 1) Что такое виртуализация\n 2) Рассказать о PWA\n 3) Web Workers\n 4) JWT\n 5) WebSocet\n 6) Как распространяются события в js (очень подробно)\n 7) Все ли события всплывают\n 8) С какии колекциями ты работал в js\n 9) Как работает EventLoop\n 10) В контексте EventLoop где будет отрабатывать requestAnimationFrame()\n 11) Что такое Debounce\n 12) С каким utili...",
        "full_content": "2024-12-09 15:56:32\n Aleksandr -> 2071074234:\nКомпания: РедСофт\nВакансия: https://hh.ru/vacancy/110876283?hhtmFrom=chat\nЗп: не обсуждалась\nВопросы:\n 1) Что такое виртуализация\n 2) Рассказать о PWA\n 3) Web Workers\n 4) JWT\n 5) WebSocet\n 6) Как распространяются события в js (очень подробно)\n 7) Все ли события всплывают\n 8) С какии колекциями ты работал в js\n 9) Как работает EventLoop\n 10) В контексте EventLoop где будет отрабатывать requestAnimationFrame()\n 11) Что такое Debounce\n 12) С каким utility types в ts ты работал (про парочку из них расспросит)\n 13) В чем разница между any от unknow (как пользоваться unknow)\n 14) Разница между interface & type (в каких случаях применять interface | type)\n 15) Отличия событий в React и js\n 16) Как работает portal в React и как пользоваться\n 17) Будут ли всплывть события в portal и почему\n 18) Мини задачка, есть два состояния count и строка надо изменять count при изменении сртоки. Решение обьеденить состояния и  вынести в отдельный хук."
      },
      {
        "timestamp": "2024-12-06 16:40:05",
        "content": "2024-12-06 16:40:05\n Maksim -> 2071074234:\nКомпания: РедСофт(2 этап LiveCode)                                                                                                                                                                                    Задачи(было несколько вариантов решений):\n/*\n * Создать массив с уникальными значениями из исходного массива.\n * Для этого используем метод filter или объект Set.\n */\n\nconst fruits = [\"kiwi\", \"apple\", \"kiwi\", \"orange\", \"kiwi\", \"apple\"];\n\n// Ис...",
        "full_content": "2024-12-06 16:40:05\n Maksim -> 2071074234:\nКомпания: РедСофт(2 этап LiveCode)                                                                                                                                                                                    Задачи(было несколько вариантов решений):\n/*\n * Создать массив с уникальными значениями из исходного массива.\n * Для этого используем метод filter или объект Set.\n */\n\nconst fruits = [\"kiwi\", \"apple\", \"kiwi\", \"orange\", \"kiwi\", \"apple\"];\n\n// Используем объект Set для получения уникальных значений.\n// Set автоматически удаляет дублирующиеся значения.\nconst uniqueFruits = Array.from(new Set(fruits));\n\n// Выводим уникальные значения в консоль.\nconsole.log(uniqueFruits); // [\"kiwi\", \"apple\", \"orange\"]\n/*\n * Функция для приведения массива к 1 уровню вложенности\n */\nfunction flatten(array) {\n    const result = [];\n\n    // Рекурсивная функция для обработки элементов массива\n    const flattenHelper = (arr) => {\n        for (const item of arr) {\n            if (Array.isArray(item)) {\n                flattenHelper(item); // Если элемент массив — развернуть его\n            } else {\n                result.push(item); // Если не массив — добавить в результат\n            }\n        }\n    };\n\n    flattenHelper(array); // Запускаем обработку входного массива\n    return result;\n}\n\n// Пример использования\nconst nestedArray = [1, 2, [1, 2, [1, 2]], [1, 2]];\nconsole.log(flatten(nestedArray)); // [1, 2, 1, 2, 1, 2, 1, 2]\n// Расширяем прототип Array новым методом flatten\nArray.prototype.flatten = function() {\n    const result = [];\n\n    // Рекурсивная функция для разворачивания вложенных массивов\n    const flattenHelper = (arr) => {\n        for (const item of arr) {\n            if (Array.isArray(item)) {\n                flattenHelper(item); // Если элемент массив — развернуть его\n            } else {\n                result.push(item); // Если не массив — добавить в результат\n            }\n        }\n    };\n\n    flattenHelper(this); // Разворачиваем текущий массив\n\n    // Очищаем исходный массив и заполняем результатом\n    this.splice(0, this.length, ...result);\n\n    // Возвращаем изменённый массив для удобства\n    return this;\n};\n\n// Пример использования\nconst nestedArray = [1, 2, [1, 2, [1, 2]], [1, 2]];\nnestedArray.flatten(); // Изменяет исходный массив\nconsole.log(nestedArray); // [1, 2, 1, 2, 1, 2, 1, 2]\n* Задача 2:\n* Необходимо расширить функционал класса Array, написав функцию, которая приводит массив \n к 1 уровню вложенности\n* ([1, 2, [1, 2, [1, 2]], [1, 2]]) => [1, 2, 1, 2, 1, 2, 1, 2]\n*/\n\nArray.prototype.flatten = function(){\n        for (let i = 0; i < this.length; i ++){\n            if(Array.isArray(this[i])){\n                    this.splice(i, 1, ...this[i].flatten())\n            }\n        }\n    return this\n}\nfunction memoize(fn) {\n    const cache = {};\n\n    return function(...args) {\n        const key = JSON.stringify(args);\n\n        if (cache[key]) {\n            return cache[key];\n        } else {\n            const result = fn(...args);\n            cache[key] = result;\n            return result;\n        }\n    };\n}\n/**\n * Задача 4:\n * Необходимо написать функцию, которая принимает в аргумент функцию (fn) и возвращает карированную \n версию этой функции.\n * Каррирование – это трансформация функций таким образом, чтобы они принимали аргументы \n  не как f(a, b, c), а как f(a)(b)(c), f(a, b)(c), f(a)(b, c)\n */\n \n function curry(fn){\n     return function curried(...args){\n         if (args.length !== fn.length) {\n            return fn.bind(null, ...args);\n         } \n         return fn(...args);\n         \n         \n         \n        //  if(args.length >= fn.length){\n        //      return fn(...args)\n        //  }else{\n        //      return (...nextArgs) => curried(...args,...nextArgs)\n     }\n }\n\nconst curriedFn = curry((a, b, c, d) => {\n  return a + b + c + d;\n});\n\nconsole.log(curriedFn(1, 2, 3)(4)); // 10\nconsole.log(curriedFn(1)(2)(3)(4)); // 10"
      },
      {
        "timestamp": "2024-12-02 16:30:28",
        "content": "2024-12-02 16:30:28\n Maksim -> 2071074234:\nКомпания: РедСофт                                                                                                                                                                                                                                    Вакансия: https://hh.ru/vacancy/110876283?hhtmFrom=favorite_vacancy_list                                                                                                                                            ...",
        "full_content": "2024-12-02 16:30:28\n Maksim -> 2071074234:\nКомпания: РедСофт                                                                                                                                                                                                                                    Вакансия: https://hh.ru/vacancy/110876283?hhtmFrom=favorite_vacancy_list                                                                                                                                                                                                                                                     Зп: не обсуждали                                                                                                                                                                                                                                                 Вопросы:                                                                                                                                                                                                                                   1)Расскажи кратко о последнем месте работы                                                                                                                                                                            2) Знаешь что такое монорепозиторий!?                                                                                                                                                                        3)Работал со Storybook ,какой версией и знаешь ли чем отличается 7 от 8 версии)                                                                                     4)Расскажи про FSD ,где хранили APi                                                                                                                                                                                      5)Что слышал про SSO                                                                                                                                                                                                                   6) Расскажи про JWT                                                                                                                                                                                                               7)Работал с виртуализацией списка и для чего это                                                                                                                                               8)Расскажи про CORS                                                                                                                                                                                                                    9)Что знаешь про PWA                                                                                                                                                                                                                    10) Расскажи про всплытие и погружение,как это преостановить                                                                                                                               11)Про React поговорили(Fiber,recanseleishen,vdom)                                                                                                                                               12)Какие знаешь колекции(new Map ,"
      }
    ]
  },
  {
    "company": "Smart",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-05-12 16:26:04",
        "content": "2025-05-12 16:26:04\n Василий -> 2071074234:\nКомпания: Яндекс кинопоиск Smart TV\nПросил: 230\n\n1 задача\n\nfunction runOnce(fn) {\n  let called = false;\n  return function (...args) {\n    if (!called) {\n      called = true;\n      return fn(...args);\n    }\n    return undefined;\n  };\n}\n\n2 задача\n\nЧто выйдет в консоль. (добавил в прикрепленные картинки)\n\n3 задача \n\nArray.prototype.groupBy = function (fn) {\n  const result = {};\n\n  for (const item of this) {\n    const key = fn(item); // вычисляем ключ\n    ...",
        "full_content": "2025-05-12 16:26:04\n Василий -> 2071074234:\nКомпания: Яндекс кинопоиск Smart TV\nПросил: 230\n\n1 задача\n\nfunction runOnce(fn) {\n  let called = false;\n  return function (...args) {\n    if (!called) {\n      called = true;\n      return fn(...args);\n    }\n    return undefined;\n  };\n}\n\n2 задача\n\nЧто выйдет в консоль. (добавил в прикрепленные картинки)\n\n3 задача \n\nArray.prototype.groupBy = function (fn) {\n  const result = {};\n\n  for (const item of this) {\n    const key = fn(item); // вычисляем ключ\n    if (!result[key]) {\n      result[key] = []; // если ключа нет, создаём массив\n    }\n    result[key].push(item); // добавляем элемент в соответствующий массив\n  }\n\n  return result;\n};\n\n// Пример 1\nconst array1 = [\n  { id: 1 },\n  { id: 1 },\n  { id: 2 }\n];\nconst fn = (item) => item.id;\nconsole.log(array1.groupBy(fn));\n// { \"1\": [{ id: 1 }, { id: 1 }], \"2\": [{ id: 2 }] }\n\n// Пример 2\nconst array2 = [1, 2, 3];\nconsole.log(array2.groupBy(String));\n// { \"1\": [1], \"2\": [2], \"3\": [3] }"
      },
      {
        "timestamp": "2025-02-23 19:36:21",
        "content": "2025-02-23 19:36:21\n Дмитрий Петров -> 2071074234:\nКомпания: Международный институт Smart  \nЗП: 200-250  \nВакансия: https://spb.hh.ru/vacancy/116517740?hhtmFromLabel=suitable_employer_vacancies&hhtmFrom=vacancy  \nСтартап, идет набор в команду, есть возможность писать приложение с последними фреймворками, аналитик, макет и бизнес модель есть, задачи не горят, тимлид с опытом 12лет, вкатуны хз, а люди с опытом могут стать участниками интересного продукта LMS.\n\nБыли вопросы про опыт работы, по теор...",
        "full_content": "2025-02-23 19:36:21\n Дмитрий Петров -> 2071074234:\nКомпания: Международный институт Smart  \nЗП: 200-250  \nВакансия: https://spb.hh.ru/vacancy/116517740?hhtmFromLabel=suitable_employer_vacancies&hhtmFrom=vacancy  \nСтартап, идет набор в команду, есть возможность писать приложение с последними фреймворками, аналитик, макет и бизнес модель есть, задачи не горят, тимлид с опытом 12лет, вкатуны хз, а люди с опытом могут стать участниками интересного продукта LMS.\n\nБыли вопросы про опыт работы, по теории не было\n\n1 задача: Написать компонент счетчика. Видео ниже\n2 задача:\n\nfunction sum(a, b) {\n    console.log(\"sum called\")\n    return a + b\n}\n\nconst memoizeOne = (fn) => {\n    let lastArgs = null;\n    let lastResult = null;\n\n    return (...args) => {\n        if (lastArgs && args.length === lastArgs.length && args.every((arg, index) => arg === lastArgs[index])) {\n            return lastResult;\n        }\n\n        lastArgs = args;\n        lastResult = fn(...args);\n        return lastResult;\n    };\n}\n\nconst memoSum = memoizeOne(sum);\n\nconsole.log(memoSum(1, 2)) // sum called 3\nconsole.log(memoSum(1, 2)) // 3\nconsole.log(memoSum(2, 3)) // sum called 5\nconsole.log(memoSum(1, 2)) // sum called 3\n\n\nВнимание! Интервьюер просит расширить экран и ведет запись собеса."
      },
      {
        "timestamp": "2025-02-05 06:59:42",
        "content": "2025-02-05 06:59:42\n Сергей -> 2071074234:\nКомпания: Онлайн институт Smart\nВакансия: https://ekaterinburg.hh.ru/vacancy/116517740\nВопросы:\n- 20 минутный разговор об опыте и чем занимался(devops, технологии, Стейты, кибербезопасность, как было устроено тыстирование, нужно ли оно, и тд)\n- Задача на создание обычного Counter компонента с двумя кнопками(+ и -) с нуля, избавиться от лишних рендеров, почему в strictMode 2 рендера\n- Что будет если мы сделаем в стейте prev++\n- Что такое мемоизация, как ...",
        "full_content": "2025-02-05 06:59:42\n Сергей -> 2071074234:\nКомпания: Онлайн институт Smart\nВакансия: https://ekaterinburg.hh.ru/vacancy/116517740\nВопросы:\n- 20 минутный разговор об опыте и чем занимался(devops, технологии, Стейты, кибербезопасность, как было устроено тыстирование, нужно ли оно, и тд)\n- Задача на создание обычного Counter компонента с двумя кнопками(+ и -) с нуля, избавиться от лишних рендеров, почему в strictMode 2 рендера\n- Что будет если мы сделаем в стейте prev++\n- Что такое мемоизация, как она работает\n- Кэш vs Мемоизация\n- Задача на мемоизацию(Это не оптимальное решение, избыточное хранение в cache других значение, а не последнего)\n\nfunction sum(a,b) {\n  console.log('sum called')\n  return a + b;\n}\n\nconst memoizeOne = (func) => {\n  let cache = {};\n  return (...args) => {\n    const key = JSON.stringify(args);\n    if (cache[key]) {\n      return cache[key]\n    } else {\n      const cache = {}\n    }\n    const res = func(...args);\n    cache[key] = res;\n    return res\n  }\n}\n\nconst memoSum = memoizeOne(sum);\nconsole.log(memoSum(1,2)); // sum called 3\nconsole.log(memoSum(1,2)); // 3\nconsole.log(memoSum(2,3)); // sum called 5\nconsole.log(memoSum(1,2)); // sum called 3"
      },
      {
        "timestamp": "2025-01-30 07:27:27",
        "content": "2025-01-30 07:27:27\n Сергей -> 2071074234:\nКомпания: онлайн институт Smart (2 этап знакомство с командой)\nВакансия: https://ekaterinburg.hh.ru/vacancy/116517740\nВопросы:\nпросто разговор по душам по сути\n- Расскажи еще раз о себе кратко\n- Чем увлекаешься помимо работы\n- Лыжи или сноуборд)\n- Какие плюсы и минусы работы в команде/в одиночку\n- Кем видишь себя через год",
        "full_content": "2025-01-30 07:27:27\n Сергей -> 2071074234:\nКомпания: онлайн институт Smart (2 этап знакомство с командой)\nВакансия: https://ekaterinburg.hh.ru/vacancy/116517740\nВопросы:\nпросто разговор по душам по сути\n- Расскажи еще раз о себе кратко\n- Чем увлекаешься помимо работы\n- Лыжи или сноуборд)\n- Какие плюсы и минусы работы в команде/в одиночку\n- Кем видишь себя через год"
      }
    ]
  },
  {
    "company": "Алабуга",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-05-13 12:27:01",
        "content": "2025-05-13 12:27:01\n Ильдус Гизетдинов -> 2071074234:\nАлабуга\nЗп:250к\nВопросы:\n1)Рассказать про опыт\n2)Что такое dom\n3)Элемент div как будет представлен\n4)Перечисли селекторы по весу убыванию\n5)Какие свойства есть у position\n6)Раскажи про css функции\n7)Псевдоклассы и псевдоэлементы\n8)transition timing function\n9) Как выровнять изображение по центру без потери качества\n10)Как по БЭМ сделать footer с 3 вариациями и как бы их назвал\n11)Преимущество SCSS\n12)фреймворки для css\n13)Преимущество boostra...",
        "full_content": "2025-05-13 12:27:01\n Ильдус Гизетдинов -> 2071074234:\nАлабуга\nЗп:250к\nВопросы:\n1)Рассказать про опыт\n2)Что такое dom\n3)Элемент div как будет представлен\n4)Перечисли селекторы по весу убыванию\n5)Какие свойства есть у position\n6)Раскажи про css функции\n7)Псевдоклассы и псевдоэлементы\n8)transition timing function\n9) Как выровнять изображение по центру без потери качества\n10)Как по БЭМ сделать footer с 3 вариациями и как бы их назвал\n11)Преимущество SCSS\n12)фреймворки для css\n13)Преимущество boostrap\n14)Типы данных\n15)Разница между null и underfund \n16)typeOf null\n17)Замыкание\n18)This\n19)Что выведется\n20)promise\n21)Что выведется\n22)Как закрыть вебсокет соединение и какие принимает аргументы\n23)Какие события у вебсокет соединения можно отследить\n24)прото и прототайп\n25)object case\n26)Что происходит при создании экземпляра класса \n27)Куда девается конструктор при создании экземпляра класса\n28)Дженерик\n29)Вопросы про УтилитиTypes"
      },
      {
        "timestamp": "2024-10-20 10:50:12",
        "content": "2024-10-20 10:50:12\n аыеъа -> 2071074234:\nАлабуга\nВакансия: https://yelabuga.hh.ru/vacancy/107337122?hhtmFrom=resume\nЗп: 250к\nВопросы:\nРассказать про опыт\nСтандартные вопросы по js (var, let, const ; this и т.п.)\nРассказать про вебворкеры\nРаботал ли с web sockets\nОтличие useEffect и useLayoutEffect\nОтличие any от unknown\nБатчинг\nReconciliation в реакт\nЧто такое дженерики в TS и зачем они нужны\nРеализация своей виртуализации без использования сторонних библиотек\n\nfunction find(object, path) {\n  c...",
        "full_content": "2024-10-20 10:50:12\n аыеъа -> 2071074234:\nАлабуга\nВакансия: https://yelabuga.hh.ru/vacancy/107337122?hhtmFrom=resume\nЗп: 250к\nВопросы:\nРассказать про опыт\nСтандартные вопросы по js (var, let, const ; this и т.п.)\nРассказать про вебворкеры\nРаботал ли с web sockets\nОтличие useEffect и useLayoutEffect\nОтличие any от unknown\nБатчинг\nReconciliation в реакт\nЧто такое дженерики в TS и зачем они нужны\nРеализация своей виртуализации без использования сторонних библиотек\n\nfunction find(object, path) {\n  const keys = path.split('.')\n  for (let key of keys) {\n    if (key in object) object = object[key]\n    else return 'Invalid keys'\n  }\n  return object\n}"
      },
      {
        "timestamp": "2024-09-13 13:13:58",
        "content": "2024-09-13 13:13:58\n Timofei Syromiatnikov -> 2071074234:\n— Название: Алабуга\n— Вакансия: https://yelabuga.hh.ru/vacancy/105906496?hhtmFrom=resume\n— ЗП: сказал 280-300к\n— Вопросы:\n1) Расскажи про себя, про свой опыт.\n2) Что такое промис, какие методы у него есть?\n3) Что такое Web workers?\n4) Работал ли с websockets?\n5) Какие хуки использовал?\n6) Отличие useEffect и useLayoutEffect?\n7) Когда используем useMemo и useCallback?\n8) Можем ли написать функцию дебаунс с помощью useRef?\n9) Зачем использу...",
        "full_content": "2024-09-13 13:13:58\n Timofei Syromiatnikov -> 2071074234:\n— Название: Алабуга\n— Вакансия: https://yelabuga.hh.ru/vacancy/105906496?hhtmFrom=resume\n— ЗП: сказал 280-300к\n— Вопросы:\n1) Расскажи про себя, про свой опыт.\n2) Что такое промис, какие методы у него есть?\n3) Что такое Web workers?\n4) Работал ли с websockets?\n5) Какие хуки использовал?\n6) Отличие useEffect и useLayoutEffect?\n7) Когда используем useMemo и useCallback?\n8) Можем ли написать функцию дебаунс с помощью useRef?\n9) Зачем используем useRef?\n10) Что такое Unit types в TS (то есть Null, Undefined, Void, Never, Unknown)?\n12) Что такое батчинг в Реакте?\n13) Что такое деженерики в TS твоими словами? В чем отличие использование дженериков или просто задать везде any?\n14) Различие any от unknown?\n15) Работал ли с виртуализациец? Как ее реализуешь сам?\n16)  У нас есть таймер на странице, который мы сделали с помощью setTimeout. Когда пользователь сварачивает браузер, что будет с таймером? (Он остановится) И как пофиксить это? (С помощью web воркера). Ответить нужно устно\n\n— Задачи:"
      },
      {
        "timestamp": "2024-05-24 16:28:21",
        "content": "2024-05-24 16:28:21\n Daniil Max -> 2071074234:\n— Название компании: Алабуга\n— Ссылка на вакансию: ссылки нет, на hh спамил отклики \n— ЗП: 250К.\n— Задачи: теория\n\n1. Как реализуешь свою виртуализацию\n2. Rest и спред операторы \n3. useMemo, useCallback\n4. Способы клонирования объект \n5. React согласование, vdom\n\nОстальные вопросы не помню. Были базовые вопросы по теоритическим \"платиновым\" вопросом, которые можно найти в топике \"полезное\" \n\n— Успех собеса: ✅️\n— Фитбек о собесе: оффер, я самый лучши...",
        "full_content": "2024-05-24 16:28:21\n Daniil Max -> 2071074234:\n— Название компании: Алабуга\n— Ссылка на вакансию: ссылки нет, на hh спамил отклики \n— ЗП: 250К.\n— Задачи: теория\n\n1. Как реализуешь свою виртуализацию\n2. Rest и спред операторы \n3. useMemo, useCallback\n4. Способы клонирования объект \n5. React согласование, vdom\n\nОстальные вопросы не помню. Были базовые вопросы по теоритическим \"платиновым\" вопросом, которые можно найти в топике \"полезное\" \n\n— Успех собеса: ✅️\n— Фитбек о собесе: оффер, я самый лучший по словам руководителя за последние 3 месяца собесов \n— Комментарий:🥇ШОУ-ВКАТУН Александр Волков! 😎"
      }
    ]
  },
  {
    "company": "Интерфакс",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-07-06 20:44:57",
        "content": "2025-07-06 20:44:57\n Mark Nikonorov ⚛ -> 2071074234:\nИнтерфакс (финал)\n\n1. По каким процессам работаете?\n2. Откуда приходит задача?\n3. Бывало ли такое что задача приходит в формате название и все?\n4. Расскажи про сложные задачи\n5. Какие конфликтные ситуации возникали?\n6. Что мотивирует?",
        "full_content": "2025-07-06 20:44:57\n Mark Nikonorov ⚛ -> 2071074234:\nИнтерфакс (финал)\n\n1. По каким процессам работаете?\n2. Откуда приходит задача?\n3. Бывало ли такое что задача приходит в формате название и все?\n4. Расскажи про сложные задачи\n5. Какие конфликтные ситуации возникали?\n6. Что мотивирует?"
      },
      {
        "timestamp": "2025-07-06 20:27:46",
        "content": "2025-07-06 20:27:46\n Mark Nikonorov ⚛ -> 2071074234:\nИнтерфакс (техничка)\nзп 350к\n\n1. Написать функцию sleep (было выше)\n2. Написать debounce (было выше)\n3. Написать curry (было выше)\n4. Как развернуть массив с хаотичной вложенностью? (функция flattenArray)\nfunction flattenArray(arr) {\n    const stack = [...arr]; // Копируем массив в стек\n    const result = [];\n\n    while (stack.length) {\n        const next = stack.pop(); // Берем последний элемент\n\n        if (Array.isArray(next)) {\n           ...",
        "full_content": "2025-07-06 20:27:46\n Mark Nikonorov ⚛ -> 2071074234:\nИнтерфакс (техничка)\nзп 350к\n\n1. Написать функцию sleep (было выше)\n2. Написать debounce (было выше)\n3. Написать curry (было выше)\n4. Как развернуть массив с хаотичной вложенностью? (функция flattenArray)\nfunction flattenArray(arr) {\n    const stack = [...arr]; // Копируем массив в стек\n    const result = [];\n\n    while (stack.length) {\n        const next = stack.pop(); // Берем последний элемент\n\n        if (Array.isArray(next)) {\n            stack.push(...next); // Если элемент — массив, раскладываем его в стек\n        } else {\n            result.unshift(next); // Иначе добавляем в начало результата\n        }\n    }\n\n    return result;\n}\n5. Напиши функцию getCash(bills, amount), которая разменивает сумму amount на купюры из списка bills, используя минимальное количество купюр. Функция должна возвращать массив купюр в порядке убывания номиналов.\nconst getCash = (bills, total) => {\n    const sortedBills = [...bills].sort((a, b) => b - a); // Копируем и сортируем по убыванию\n    const result = [];\n    \n    for (const bill of sortedBills) {\n        while (total >= bill) {\n            result.push(bill);\n            total -= bill;\n        }\n    }\n    \n    return result;\n};\n6. расскажи про event loop\n7. методы промиса\n8. расскажи про call, apply, bind\n9. Для чего использовался bind в классовых компонентах?\n10. в чем плюсы ts\n11. для чего нужен unkown\n12. в чем разница между | и & в ts\n13. почему реакт популярный? расскажи как работает все что знаешь\n14. В каких случаях реакт компонент обновляется?\n15. Минусы контекста в react\n16. В чем плюсы стейт менеджеров? Какие использовал?\n17. Как оптимизировать фронтенд?\n18. Использовал ли next js и в чем его плюсы? Делал ли кастомные api routes?\n19. Какие минусы api routes?\n\nДалее поведенческие вопросы\n20. Был ли случай когда ты был не прав?\n21. Что делаешь чтобы не повторять прошлых ошибок?\n22. Как развиваешься лично?\n23. Как поддерживаешь мотивацию?\n24. Вот ты говоришь что быть заряженным важно, что нужно делать что бы поддерживать заряженный дух в команде?\n25. Как развиваешься во фронте?\n26. Как относишься к большим/сложным задачам?\n27. Что делаешь если не успеваешь в срок?\n28. Был ли опыт менторинга?\n29. На какой грейд себя оцениваешь? Кто такой синьер для тебя?\n30. Что делать если разрабочик синьер, но дальше расти не хочет?\n31. Как не выгореть?\n32. К чему стремишься в течении 5 лет?\n33. Что важно для тебя в команде? Как дать рости другим членам команды?\n34. Что мотивирует по жизни и в работе?\n35. Что демотивирует?"
      },
      {
        "timestamp": "2025-07-04 09:57:36",
        "content": "2025-07-04 09:57:36\n Евгений -> 2071074234:\nКомпания: Интерфакс\nЗП: 250\n\nРассказать про опыт, потом задачи\nЗадача 1: \nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\nЗадача 2: \nonst debounce = (cb, time) => {\n  let timerID; // создаем переменную для хранения id таймера\n\n  return (...args) => {\n    if (timerID) clearTimeout(timerID); // если таймер уже есть — сбрасываем его\n    timerID = setTimeout(() => cb(...args), time); // запускаем новый таймер с задержкой\n...",
        "full_content": "2025-07-04 09:57:36\n Евгений -> 2071074234:\nКомпания: Интерфакс\nЗП: 250\n\nРассказать про опыт, потом задачи\nЗадача 1: \nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\nЗадача 2: \nonst debounce = (cb, time) => {\n  let timerID; // создаем переменную для хранения id таймера\n\n  return (...args) => {\n    if (timerID) clearTimeout(timerID); // если таймер уже есть — сбрасываем его\n    timerID = setTimeout(() => cb(...args), time); // запускаем новый таймер с задержкой\n  };\n}\nпопросили решить еще старым способом \nfunction debounce(cb, time) {\n  let timerID; // создаем переменную для хранения id таймера\n\n  return function() {\n\n    if (timerID) clearTimeout(timerID); // сбрасываем предыдущий таймер, если есть\n\n    timerID = setTimeout(function() {\n      cb.apply(this, arguments); // вызываем cb с теми же аргументами и контекстом\n    }, time);\n  };\n}\n\nзадача 3: \nfunction curry(func) {\n  return function curr(...args) {\n      if(args.length >= func.length) {\n           return func(...args)\n      } else {\n      return function(...args2) {\n          return curr(...args, ...args2)\n      }\n  } \n  \n  }\n}\nconst sum = (a, b, c) => a + b + c;\nconst curriedSum = curry(sum);\nconsole.log(curriedSum(1)(2)(3)); // 6\nconsole.log(curriedSum(1, 2)(3)); // 6"
      },
      {
        "timestamp": "2025-06-25 15:15:45",
        "content": "2025-06-25 15:15:45\n Alexander K -> 2071074234:\nИнтерфакс \nзп 270+ \n\n1 Задача sleep функция \n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n2 Задача debounce функция \n\nconst debounce = (cb, time) => {\n  let timerID;\n  \n  return (...args) => {\n    if (timerID) clearTimeout(timerID);\n    \n    timerID = setTimeout(() => cb(...args), time);\n  }\n}\n\n3 Задача функция коррирования\n\nfunction curry(func) {\n  return function curried(...args) {\n    if (args.length >= fu...",
        "full_content": "2025-06-25 15:15:45\n Alexander K -> 2071074234:\nИнтерфакс \nзп 270+ \n\n1 Задача sleep функция \n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n2 Задача debounce функция \n\nconst debounce = (cb, time) => {\n  let timerID;\n  \n  return (...args) => {\n    if (timerID) clearTimeout(timerID);\n    \n    timerID = setTimeout(() => cb(...args), time);\n  }\n}\n\n3 Задача функция коррирования\n\nfunction curry(func) {\n  return function curried(...args) {\n    if (args.length >= func.length) {\n      // Если передано достаточно аргументов, выполнить функцию\n      return func(...args);\n    } else {\n      // Иначе вернуть новую функцию, ожидающую дополнительные аргументы\n      return function(...nextArgs) {\n        return curried(...args, ...nextArgs);\n      };\n    }\n  };\n}"
      }
    ]
  },
  {
    "company": "BI.Zone",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-02-10 15:57:48",
        "content": "2025-02-10 15:57:48\n Александр Богданов -> 2071074234:\nКомпания BI.ZONE\nВилка: 250-300к\nФинальный собес после технички(ОС будет в среду-четверг):\n- с чем нравится больше работать а с чем нет(какие задачи напрягают,сказал что важно не молчать если что не ясно,общаться,спрашивать..)\n- как планируешь расти в разработке или в тимлида\n- расскажи о последних интересных и трудных задачах которые тебе запомнились(рассказал про вебпак, FSD,таску  с яндекс-картами)\n- сам побольше накидывал-чтобы собес рас...",
        "full_content": "2025-02-10 15:57:48\n Александр Богданов -> 2071074234:\nКомпания BI.ZONE\nВилка: 250-300к\nФинальный собес после технички(ОС будет в среду-четверг):\n- с чем нравится больше работать а с чем нет(какие задачи напрягают,сказал что важно не молчать если что не ясно,общаться,спрашивать..)\n- как планируешь расти в разработке или в тимлида\n- расскажи о последних интересных и трудных задачах которые тебе запомнились(рассказал про вебпак, FSD,таску  с яндекс-картами)\n- сам побольше накидывал-чтобы собес растянуть\n- много сам рассказывал про проект,про планы"
      },
      {
        "timestamp": "2025-02-08 09:54:42",
        "content": "2025-02-08 09:54:42\n Александр Богданов -> 2071074234:\n-компания BI.ZONE – тех.собес 05.02.2025\n-ссылка на вакансию: https://voronezh.hh.ru/vacancy/115993216\n- ЗП: 250-300к\n-успех собеса: ✅переход на собес по софт-скиллам(финалка будет)\n  Вопросы:\n- событийный цикл\n- IntersectionObserver для чего\n- SOLID\n- отличие реакт vs вью vs Ангуляр\n- key зачем\n- способы копирования объектов\n- отличие http1/1 vs http2\n- отличие батчинг Реакт17 от 18 версии\n- псевдоклассы назови и псевдоэлементы, чем focus о...",
        "full_content": "2025-02-08 09:54:42\n Александр Богданов -> 2071074234:\n-компания BI.ZONE – тех.собес 05.02.2025\n-ссылка на вакансию: https://voronezh.hh.ru/vacancy/115993216\n- ЗП: 250-300к\n-успех собеса: ✅переход на собес по софт-скиллам(финалка будет)\n  Вопросы:\n- событийный цикл\n- IntersectionObserver для чего\n- SOLID\n- отличие реакт vs вью vs Ангуляр\n- key зачем\n- способы копирования объектов\n- отличие http1/1 vs http2\n- отличие батчинг Реакт17 от 18 версии\n- псевдоклассы назови и псевдоэлементы, чем focus отличается от focus-visible, что такое\n  focus-with-in\n- зачем псевдоэлементы\n- лаив-кодинг на js задача + 3 на реакте"
      },
      {
        "timestamp": "2024-12-11 18:55:06",
        "content": "2024-12-11 18:55:06\n Артем -> 2071074234:\nКомпания Bi.Zone\nВопросы\nбайдинг\nwebpack\nплагины\neslint\nparsel\nvite\ntsc\nmutationObserver\nxss\nлямбда функия vs стрелочная\nSOLID\nмикрофронтенд\ncompenentdidcatch\nangular vs vue vs react\nлогирование\nОтрефакторить код\nimport React, { useEffect, useState, useMemo } from 'react'; // Хуки React\nimport { useDispatch, useSelector } from 'react-redux'; // Хуки для работы с Redux\nimport { fetchPosts, fetchOffers } from './api'; // Функции для API-запросов\nimport { S...",
        "full_content": "2024-12-11 18:55:06\n Артем -> 2071074234:\nКомпания Bi.Zone\nВопросы\nбайдинг\nwebpack\nплагины\neslint\nparsel\nvite\ntsc\nmutationObserver\nxss\nлямбда функия vs стрелочная\nSOLID\nмикрофронтенд\ncompenentdidcatch\nangular vs vue vs react\nлогирование\nОтрефакторить код\nimport React, { useEffect, useState, useMemo } from 'react'; // Хуки React\nimport { useDispatch, useSelector } from 'react-redux'; // Хуки для работы с Redux\nimport { fetchPosts, fetchOffers } from './api'; // Функции для API-запросов\nimport { Select } from './components'; // Компонент для выбора (селект)\nimport { rowNumberOptions } from './config'; // Конфигурация для вариантов пагинации\nimport { enrichmentPost } from './utils'; // Функция для обработки постов\n\n/** \n * Компонент для отображения списка постов \n * \n * @param {Function} onChangePagination - Коллбек для изменения количества элементов на странице\n */\nconst Posts = ({ onChangePagination }) => {\n  const dispatch = useDispatch(); // Получаем метод для отправки экшенов\n\n  // Извлекаем данные из глобального Redux-хранилища\n  const { posts, offer, isLoading } = useSelector((state) => ({\n    posts: state.userPosts.data, // Список постов\n    offer: state.offer.data, // Объект с рекламным предложением\n    isLoading: state.userPosts.isLoading, // Флаг загрузки данных\n  }));\n\n  // Загружаем данные с сервера при первом рендере компонента\n  useEffect(() => {\n    // Отправляем запрос на загрузку постов\n    dispatch(fetchPosts());\n    // Отправляем запрос на загрузку рекламного предложения\n    dispatch(fetchOffers());\n  }, [dispatch]); // Зависимостью является только `dispatch`\n\n  /**\n   * Генерация опций для селекта пагинации.\n   * Используем useMemo, чтобы избежать ненужных пересчётов на каждом рендере.\n   */\n  const paginationOptions = useMemo(\n    () =>\n      rowNumberOptions.map((option) => ({\n        label: option.name, // Отображаемое название\n        value: option.id, // Значение\n      })),\n    [] // Зависимостей нет, так как rowNumberOptions статичен\n  );\n\n  /**\n   * Подготовка списка постов для отображения.\n   * Добавляем рекламное предложение после каждого 10-го поста\n   * и обогащаем посты дополнительной информацией.\n   */\n  const postsToRender = useMemo(() => {\n    // Если постов нет (загрузка завершилась с пустым результатом)\n    if (!posts) return [];\n\n    // Обработка постов: добавляем рекламу и обогащаем данные\n    return posts.flatMap((post, idx) => {\n      const enrichedPost = enrichmentPost(post); // Добавляем данные в пост\n      return idx % 10 === 0 // Если индекс кратен 10\n        ? [offer, enrichedPost] // Добавляем рекламу и пост\n        : [enrichedPost]; // Только пост\n    });\n  }, [posts, offer]); // Зависимости: массив постов и реклама\n\n  // Если данные всё ещё загружаются, показываем компонент Skeleton\n  if (isLoading) {\n    return <Skeleton />; // Заглушка для отображения во время загрузки\n  }\n\n  /**\n   * Основной рендер компонента.\n   * Отображаем список постов и компонент выбора пагинации.\n   */\n  return (\n    <div>\n      {/* Список постов */}\n      <ul>\n        {postsToRender.map((post, idx) => (\n          <li key={idx}>\n            {post.title} - {post.date} {/* Название поста и дата */}\n          </li>\n        ))}\n      </ul>\n\n      {/* Компонент выбора количества постов на странице */}\n      <Select\n        options={paginationOptions} // Опции для выбора\n        onSelect={onChangePagination} // Коллбек при изменении выбора\n      />\n    </div>\n  );\n};\n\nexport default Posts;"
      },
      {
        "timestamp": "2024-05-26 18:41:51",
        "content": "2024-05-26 18:41:51\n Roman -> 2071074234:\nНазвание компании: BI.ZONE\n- зп: просил от 300к\n- вакансия: hr сама написала, https://hh.ru/vacancy/95596534\n- успех собеса: по итогам технического интервью позвали на знакомство с руководителем проекта\n\nЛюбят, когда много вопросов задаешь!\n\nВопросы от собеседующего:\n- про опыт\n- как пришла идея сторибука, почему, зачем?\n- где тебе понадобился виртуальный список, что это такое, почему?\n- как делал подгрузку пачками в списке? Пагинацией или как?\n- что луч...",
        "full_content": "2024-05-26 18:41:51\n Roman -> 2071074234:\nНазвание компании: BI.ZONE\n- зп: просил от 300к\n- вакансия: hr сама написала, https://hh.ru/vacancy/95596534\n- успех собеса: по итогам технического интервью позвали на знакомство с руководителем проекта\n\nЛюбят, когда много вопросов задаешь!\n\nВопросы от собеседующего:\n- про опыт\n- как пришла идея сторибука, почему, зачем?\n- где тебе понадобился виртуальный список, что это такое, почему?\n- как делал подгрузку пачками в списке? Пагинацией или как?\n- что лучше написать свое решение или использовать готовую либу? Когда использовать свое, а когда готовую либу?\n- как бы ты делал аутентификацию, если бы тебе сказали делать на новом продукте?\n- куда бы клал токены - в хедеры или куки?\n- сталкивался ли или думал ли о xss атаках? что делал? в каком случае возникало?\n- будет ли xss атака, если в инпут ввести какой-то скрипт? (ответ собеседующего: не будет, этот скрипт на странице отобразится просто как текст, это благодаря реакту) \n- расскажи про CSP, как работает?\n- микрофронтенды приходилось делать, понравилось?\n- вышел на работу, вот продукт, дали тебе репозиторий, что будешь делать?\n- как ты декомпозируешь задачу, до какого уровня? Вот к тебе пришли, и сказали, у нас будет новая страница, там будет отображаться, например список атак. Вот сам себе сделай нужное количество задач , мы тебе дадим аналитику на эту фичу, ссылки на макеты. Вот ты бы как сделал, одну задачу или несколько, если несколько, то до какого уровня их пилил?\n- есть ли у тебя какие-то активности для обучения и развития, что ты предпринимаешь для этого, что ты смотришь, слушаешь?\n- что ты делаешь для души, когда устаешь кодить, или ты не устаешь кодить?\n\nКурсы, которые проходил/проходит собеседующий:\nhttps://advancedreact.com/\nhttps://courses.joshwcomeau.com/css-for-js\nhttps://www.totaltypescript.com/\nhttps://typescript-exercises.github.io/\nhttps://typehero.dev/"
      }
    ]
  },
  {
    "company": "AmoCRM",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-07-16 11:23:01",
        "content": "2025-07-16 11:23:01\n Али -> 2071074234:\nКомпания: amoCRM\nЗП: от 170к\nВакансия: https://hh.ru/vacancy/121891630\nВопросы про опыт: \n  1. как пришел в IT\n  2. чем хочешь заниматься сейчас\n  3. какое для себя видишь развитие\n  4. почему меняешь работу\n  5. предметные вопросы про опыт\n\nУстные задачи:\n  1. у тебя есть бандл, твоя задача его оптимизировать(только js). сборка приложения происходит на webpack.\n   2. у тебя есть проект, у него есть более 10 разделов с разной бизнес логикой. у проекта нету...",
        "full_content": "2025-07-16 11:23:01\n Али -> 2071074234:\nКомпания: amoCRM\nЗП: от 170к\nВакансия: https://hh.ru/vacancy/121891630\nВопросы про опыт: \n  1. как пришел в IT\n  2. чем хочешь заниматься сейчас\n  3. какое для себя видишь развитие\n  4. почему меняешь работу\n  5. предметные вопросы про опыт\n\nУстные задачи:\n  1. у тебя есть бандл, твоя задача его оптимизировать(только js). сборка приложения происходит на webpack.\n   2. у тебя есть проект, у него есть более 10 разделов с разной бизнес логикой. у проекта нету автоматического тестирования. что ты будешь делать, чтобы исправить это\nлайвкод\nЗадача 1 \n//Напишите функцию, которая генерирует случайный цвет в формате HEX (#ffffff)\n\nconst generateRandomHexColor = () => {};\n\nconsole.log(generateRandomHexColor) //#ffffff\nconsole.log(generateRandomHexColor) //#abcdef\nconsole.log(generateRandomHexColor) //#1abc24\nОтвет:\nconst generateRandomHexColor = () => {\nconst letters = '0123456789abcdef';\nlet color = '#';\n\nfor (let i = 0; i < 6; i++) {\ncolor += letters[Math.floor(Math.random() * 16)];\n}\n\nreturn color;\n}\n // После этого просит решение в 1 строку\n\nconst generateRandomHexColor = () =>\n  `#${Math.random().toString(16).slice(2, 8)}`;\n\n\nЗадача 2\njs \n// Напишите метод, который генерирует случайный 4-х значный код от 0000 до 9999.\n// Каждый вызов метода должен возвращать новый, неповторяющийся код.\n// После того как все коды будут использованы, метод должен обнулить свой счетчик.\n\n// getCode() // 0000\n// getCode() // 2214\n// getCode() // 0200\n\nconst createRandomCode = () =>{}\n\nОтвет:\njs \nconst max = 9999;\nlet stack = [];\n\nconst createRandomCode = () => {\n  if (stack.length === 0) {\n    for (let i = 0; i < max; i++) {\n      stack.push(i);\n    }\n    stack.sort((a, b) => Math.random() - 0.5);\n  }\n  return stack.pop().toString().padStart(4, \"0\");\n};\nconsole.log(getCode())\nтак же спрашивает про другие возможные решения задачи"
      },
      {
        "timestamp": "2025-07-07 06:58:51",
        "content": "2025-07-07 06:58:51\n Антон -> 2071074234:\namoCRM\nЗп: 250\n\n0) Вопросы про опыт\n1) Сколько нужно было апрувов для пуша в фичи в ветку\n2) Какие линтеры и форматировщики использвали\n3) Отсматриваете свои фичи и как кто смотрит\n4) useEffect синхронный или асинхронный?\n5) Какие реализует жизненные циклы\n6) Для чего нужна cleanup функция useEffect\n7) Для чего используется key в react\n8) Что используешь для key\n9) Расскажи про flux всё, что знаешь\n10) Расскажи про event loop всё, что знаешь\n11) Написать...",
        "full_content": "2025-07-07 06:58:51\n Антон -> 2071074234:\namoCRM\nЗп: 250\n\n0) Вопросы про опыт\n1) Сколько нужно было апрувов для пуша в фичи в ветку\n2) Какие линтеры и форматировщики использвали\n3) Отсматриваете свои фичи и как кто смотрит\n4) useEffect синхронный или асинхронный?\n5) Какие реализует жизненные циклы\n6) Для чего нужна cleanup функция useEffect\n7) Для чего используется key в react\n8) Что используешь для key\n9) Расскажи про flux всё, что знаешь\n10) Расскажи про event loop всё, что знаешь\n11) Написать функцию генерации рандомного hex цвета:\n\nconst generateRandomHexColor = () => {\nconst letters = '0123456789abcdef';\nlet color = '#';\n\nfor (let i = 0; i < 6; i++) {\ncolor += letters[Math.floor(Math.random() * 16)];\n}\n\nreturn color;\n}\n\n12) Решить вторую задачу\n\n```js\nconst groupDataBySkill = (data) => {\nreturn data.reduce((acc, item) => {\nif (!acc[item.skill] {\nacc[item.skill] = []\n}\nacc[item.skill].push(item);\nreturn acc;\n, {}}\n}"
      },
      {
        "timestamp": "2025-06-17 09:21:01",
        "content": "2025-06-17 09:21:01\n Артем Покатилов -> 2071074234:\nКомпания: amoCRM\nЗП: до 200 тысяч (в вакансии)\nВакансия: https://hh.ru/vacancy/118361880\nВопросы про опыт:\n1. В целом отдаешь предпочтение готовым решениям или сам изобретаешь велосипед?\n2. На перфоманс проверяете, когда затаскиваете новую библиотеку?\n3. Как проводили код ревью? На что обращали внимание?\n4. Сколько по времени тратили на просмотр кода на ревью?\n\nПро React:\n1. Почему выбирают React, а не нативный JavaScript? Какие преимущество да...",
        "full_content": "2025-06-17 09:21:01\n Артем Покатилов -> 2071074234:\nКомпания: amoCRM\nЗП: до 200 тысяч (в вакансии)\nВакансия: https://hh.ru/vacancy/118361880\nВопросы про опыт:\n1. В целом отдаешь предпочтение готовым решениям или сам изобретаешь велосипед?\n2. На перфоманс проверяете, когда затаскиваете новую библиотеку?\n3. Как проводили код ревью? На что обращали внимание?\n4. Сколько по времени тратили на просмотр кода на ревью?\n\nПро React:\n1. Почему выбирают React, а не нативный JavaScript? Какие преимущество дает эта библиотека? И что ты знаешь о методах оптимизации в React.\n2. Хук useEffect. В какой момент он срабатывает? Для чего используется? Можем ли мы подписываться на какие то события в браузере? \n3. Как клин ап функция в useEffect реализована?\n4. Для чего могут использоваться keys? Как их правильно задавать?\n5. В чем недостаток через Math.random() делать keys?\n6. С какими стейт менеджерами работал?\n7. Расскажи что такое flux архитектура? Как работает цикл внутри flux\n\nПро TypeScript:\n1. Сталкивался ли с Дженериками? Что это и для чего использовать?\n2. Какие utility types знаешь? С какими сталкивался в работе? Что они делают?\n\nПро JavaScript:\n1. Расскажи про EventLoop\n\nЗадачи:\n1. Условие\n//Напишите функцию, которая генерирует случайный цвет в формате HEX (#ffffff)\n\nconst generateRandomHexColor = () => {};\n\nconsole.log(generateRandomHexColor) //#ffffff\nconsole.log(generateRandomHexColor) //#abcdef\nconsole.log(generateRandomHexColor) //#1abc24\nОтвет:\nconst generateRandomHexColor = () => {\n  return '#' + (Math.random().toString(16).slice(2, 8));\n};\n2. Условие\n//Напишите функцию, которая генерирует случайный цвет в формате HEX (#ffffff)\n\nconst generateRandomHexColor = () => {};\n\nconsole.log(generateRandomHexColor) //#ffffff\nconsole.log(generateRandomHexColor) //#abcdef\nconsole.log(generateRandomHexColor) //#1abc24\nОтвет:\nconst createRandomCode = () => {\n    const stack = []\n  \n  function fill(){\n      for (let i = 0; i<= 9999; i++){\n        stack.push(i.toString().padStart(4, '0'))\n      }\n      stack.sort((a, b) => Math.random() - 0.5)\n  }\n  \n  function generator(){\n      if(stack.length === 0){\n      fill()\n      }\n      return stack.pop()\n  }\n  \n  return generator\n}\n\nconst getCode = createRandomCode()\nconsole.log(getCode())\n3.\nconsole.log(1);\n\nsetTimeout(() => {\n    console.log(2);\n  \n    setTimeout(() => {\n    console.log(3);\n    }, 100);\n}, 0);\n\nsetTimeout(() => {\n    console.log(4);\n  \n    new Promise((resolve) => {\n    console.log(5);\n  \n    resolve(6);\n}).then((number) => {\n    setTimeout(() => {\n    console.log(7);\n    }, 0);\n  \n    return number * number / 2;\n}).then(console.log);\n}, 50);\n//Ответ: 1 2 4 5 18 7 3"
      },
      {
        "timestamp": "2025-06-03 12:22:12",
        "content": "2025-06-03 12:22:12\n Никита -> 2071074234:\namoCRM\nЗП: от 180\n\nПо итогу дали оффер\n\nЗАДАЧА 1\nconst hexString = '0123456789abcdef'\n\nconst generateRandomHexColor = () => {\n    let result = '#'\n    for (let i = 0; i < 6; i++){\n    const randomIndex = Math.floor(Math.random() * hexString.length)\n    result += hexString[randomIndex]\n    }\n    return result\n};\n\nconsole.log(generateRandomHexColor());\n// #fffffff;\nconsole.log(generateRandomHexColor());\n// #abcdef;\nconsole.log(generateRandomHexColor());\n/...",
        "full_content": "2025-06-03 12:22:12\n Никита -> 2071074234:\namoCRM\nЗП: от 180\n\nПо итогу дали оффер\n\nЗАДАЧА 1\nconst hexString = '0123456789abcdef'\n\nconst generateRandomHexColor = () => {\n    let result = '#'\n    for (let i = 0; i < 6; i++){\n    const randomIndex = Math.floor(Math.random() * hexString.length)\n    result += hexString[randomIndex]\n    }\n    return result\n};\n\nconsole.log(generateRandomHexColor());\n// #fffffff;\nconsole.log(generateRandomHexColor());\n// #abcdef;\nconsole.log(generateRandomHexColor());\n// #lbodif;\n\nЗАДАЧА 2\njs \n// Напишите метод, который генерирует случайный 4-х значный код от 0000 до 9999.\n// Каждый вызов метода должен возвращать новый, неповторяющийся код.\n// После того как все коды будут использованы, метод должен обнулить свой счетчик.\n\n// getCode() // 0000\n// getCode() // 2214\n// getCode() // 0200\n\nconst createRandomCode = () =>{\n    const end = 9999\n    let stack = []\n}\n\nfunction fillStack(){\n    for (let i = 0; i<= end; i++){\n    stack.push(i.toString().padStart(4, '0'))[\n    }\n    stack.sort((a, b) => {\n    return Math.random() - 0.5\n    });\n}\n\nfunction generator(){\n    if(stack.length === 0){\n    fillStack()\n    }\n    return stack.pop()\n}\n\nreturn generator\n}\n\nconst getCode = createRandomCode()\nconsole.log(getCode())\n\nЗАДАЧА 3\nconsole.log(1);\n\nsetTimeout(() => {\n    console.log(2);\n\n    setTimeout(() => {\n    console.log(3);\n    }, 100);\n}, 0);\n\nsetTimeout(() => {\n    console.log(4);\n\n    new Promise((resolve) => {\n    console.log(5);\n\n    resolve(6);\n}).then((number) => {\n    setTimeout(() => {\n    console.log(7);\n    }, 0);\n\n    return number * number / 2;\n}).then(console.log);\n}, 50); [\n\n// 1 2 4 5 18 7 3\n\nЗАДАЧА 4\nКак можно улучшить код?\nconst fetchData = () => {\n    return Promise.resolve([\n        {\n            name: \"John\",    ]\n            age: 30,\n            skill: \"JS\"\n        },\n        {\n            name: \"Mary\",\n            age: 15,\n            skill: \"PHP\"\n        },\n        {\n            name: \"Peter\",\n            age: 25,\n            skill: \"GO\"\n        },\n        {\n            name: \"Jorge\",\n            age: 10,\n            skill: \"GO\"\n        }\n    ]);\n});\n\nconst groupDataBySkill = (data) => {\n    return data.reduce((total, item) => {\n        total[item.skill] = total[item.skill] ??= [];\n        total[item.skill] = [...total[item.skill], item];\n    }\n    return total;\n}, {});\n};\n\nconst main = async () => {\n    const data = await fetchData();\n    const mappedData = groupDataBySkill(data);\n    console.log(mappedData);\n};\n\nmain();\n\nОТВЕТ\nconst groupDataBySkill = (data) => {\n    return data.reduce((total, item) => {\n\n        if (!total[item.skill]){\n            total[item.skill] = []\n        }\n        total[item.skill].push(item)\n\n        total[item.skill] = total[item.skill] ??= [];\n        total[item.skill] = [...total[item.skill], item];\n\n        return total;\n    }, {});\n};\n\nconst main = async () => {\n    try {\n        const data = await fetchData();\n        const mappedData = groupDataBySkill(data);\n        console.log(mappedData);\n    } catch(err) {\n        console.error('Error: ', err)\n    }\n};\nmain();"
      }
    ]
  },
  {
    "company": "RecruitTech",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-04-24 13:10:47",
        "content": "2025-04-24 13:10:47\n Daniil Max -> 2071074234:\nНазвание компании: RecruitTech\n— Ссылка на вакансию: потеряна\n— ЗП: 250К~300K\n— Задачи: теория, лайвкодинг \nЗапись на ютуб: https://www.youtube.com/watch?v=IuXeSM0H1-k\n— Успех собеса: нет\n— Фидбек от HR: не общались больше после собеса\n\nP.s. На собесе собеседующий позволял себе насмешки и вёл себя с явным высокомерием. Когда я спокойно сказал, что чувствую давление и токсичную атмосферу, он просто встал и ушел.",
        "full_content": "2025-04-24 13:10:47\n Daniil Max -> 2071074234:\nНазвание компании: RecruitTech\n— Ссылка на вакансию: потеряна\n— ЗП: 250К~300K\n— Задачи: теория, лайвкодинг \nЗапись на ютуб: https://www.youtube.com/watch?v=IuXeSM0H1-k\n— Успех собеса: нет\n— Фидбек от HR: не общались больше после собеса\n\nP.s. На собесе собеседующий позволял себе насмешки и вёл себя с явным высокомерием. Когда я спокойно сказал, что чувствую давление и токсичную атмосферу, он просто встал и ушел."
      },
      {
        "timestamp": "2025-03-13 15:33:50",
        "content": "2025-03-13 15:33:50\n Timofei Syromiatnikov -> 2071074234:\nКомпания: RecruitTech\nВакансия: https://hh.ru/vacancy/117741116\nЗП: 250-300к\nЗадачи:\n1)  \n// Необходимо реализовать функцию sleep, которая при вызове приостанавливает выполнение кода на указанное количество миллисекунд\n// Ожидается, что sleep будет работать как промис и корректно поддерживать await\n\nfunction sleep(delay) {\n}\n\nsleep(3000).then()\n\nasync function foo() {\nawait sleep(5000);\n}\n\n2) \n// Напиши функцию filterObjectByKeys. А потом...",
        "full_content": "2025-03-13 15:33:50\n Timofei Syromiatnikov -> 2071074234:\nКомпания: RecruitTech\nВакансия: https://hh.ru/vacancy/117741116\nЗП: 250-300к\nЗадачи:\n1)  \n// Необходимо реализовать функцию sleep, которая при вызове приостанавливает выполнение кода на указанное количество миллисекунд\n// Ожидается, что sleep будет работать как промис и корректно поддерживать await\n\nfunction sleep(delay) {\n}\n\nsleep(3000).then()\n\nasync function foo() {\nawait sleep(5000);\n}\n\n2) \n// Напиши функцию filterObjectByKeys. А потом протипизируй её (дженериком)\nconst obj = { a: 1, b: 2, c: 3, d: 4 };\n\n\nfunction filterObjectByKeys(obj) {\n}\n\nconst filtered1 = filterObjectByKeys(obj, [\"a\", \"c\"]); \n// { a: 1, c: 3 }\n\nconst filtered2 = filterObjectByKeys(obj, [\"b\", \"d\"]); \n// { b: 2, d: 4 }\n\nconst filtered3 = filterObjectByKeys(obj, []); \n// {}\n\nconsole.log(filtered1, filtered2, filtered3);\n\n3) \nimport { useSyncExternalStore } from 'react';\n\n// много подписчиков (где-то хранить) -> каждый подписчик (слушатель) должен быть уникальным (не должно быть дублей)\n// cards changed -> notify listeners\n// короче написать для стора все методы и организовать функционал оповещения всех слушателей при добавлении, удалении карточек\nexport const cardStore = {\n    cards: [],\n    listeners: new Set(),\n    \n    subscribe() {},\n    getState() {},\n    addCard() {},\n    removeCard() {}\n};\n\n// экстра задание, надо решить проблему утечки памяти при использовании subscribe функции (надо добавить unsubscribe функцию и возвращать ее в subscribe).\nconst unsubFn = cardStore.subscribe(() => {\n    console.log('reaction')\n})\nunsubFn()\n\nexport const CardList = () => {\n    const cards = useSyncExternalStore(cardStore.subscribe, cardStore.getState); // тут еще проблема с контекстом будет у методов объекта, надо контекст приписать, например с помощию bind cardStore.subscribe.bind(cardStore)\n    \n    return (\n        <>\n            <button onClick={() => cardStore.addCard('New Card')}>Add card</button>\n            <hr />\n            <ul>\n                {cards.map(card => (\n                    <li key={card.id}>\n                        {card.text} \n                        <button onClick={() => cardStore.removeCard(card.id)}>Remove</button>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n}"
      },
      {
        "timestamp": "2025-01-28 09:59:51",
        "content": "2025-01-28 09:59:51\n Кирилл -> 2071074234:\nНазвание компании: RecruitTech\nСсылка на вакансию: https://hh.ru/vacancy/115270437\nЗП: 120-150 тыс., формат работы только офис\n\nДолжен был быть тех собес, но за пару часов поменяли на софт собес, который длился 10 минут)\n\nВопросы: \n1. Расскажи о себе\n2. Расскажи про проект\n3. 5 достижений и 5 факапов\n\nУспех собеса: ❌\nФидбек о собсесе от HR: в пользу другого кандидата был выбор сделан",
        "full_content": "2025-01-28 09:59:51\n Кирилл -> 2071074234:\nНазвание компании: RecruitTech\nСсылка на вакансию: https://hh.ru/vacancy/115270437\nЗП: 120-150 тыс., формат работы только офис\n\nДолжен был быть тех собес, но за пару часов поменяли на софт собес, который длился 10 минут)\n\nВопросы: \n1. Расскажи о себе\n2. Расскажи про проект\n3. 5 достижений и 5 факапов\n\nУспех собеса: ❌\nФидбек о собсесе от HR: в пользу другого кандидата был выбор сделан"
      },
      {
        "timestamp": "2024-10-25 20:06:43",
        "content": "2024-10-25 20:06:43\n Mike -> 2071074234:\nКомпания: RecruitTech\nЗП:до 150к\nВакансия:https://hh.ru/vacancy/108637623?hhtmFrom=employer_vacancies\n0.Много вопросов по легенде \n1.сильные/слабые стороны \n2.useMemo \n3.Глубокая копия объекта \n4.Set \n5.Методы массива, которые не мутируют массив \n6.useEffect/useLayoutEffect \n7.event/currentTarget \n8.Задача 1 - развернуть строку \n1. str.split('') — разбивает строку на массив символов. \n2. reverse() — переворачивает массив. \n3. join('') — соединяет массив о...",
        "full_content": "2024-10-25 20:06:43\n Mike -> 2071074234:\nКомпания: RecruitTech\nЗП:до 150к\nВакансия:https://hh.ru/vacancy/108637623?hhtmFrom=employer_vacancies\n0.Много вопросов по легенде \n1.сильные/слабые стороны \n2.useMemo \n3.Глубокая копия объекта \n4.Set \n5.Методы массива, которые не мутируют массив \n6.useEffect/useLayoutEffect \n7.event/currentTarget \n8.Задача 1 - развернуть строку \n1. str.split('') — разбивает строку на массив символов. \n2. reverse() — переворачивает массив. \n3. join('') — соединяет массив обратно в строку. \n9.Задача 2"
      }
    ]
  },
  {
    "company": "Nedra Digital",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-05-26 18:51:25",
        "content": "2025-05-26 18:51:25\n Ivan -> 2071074234:\n- Nedra digital\n- мидл\n- зп от 200\n\n- Вопрос по резюме - Подробно рассказать про построение графиков, какими способами, по какой технологии, с пом какой библиотеки делал.\n- Спросил про канвас, пиксель, хотя в резюме у меня о нем ничего не было\n\nЗадача 1.1 (как пояснили - экспериментальная): нужно сделать чтобы конфетки разлетались не по сторонам, а с гравитацией, после взрыва чтобы падали вниз\n\napp.stage.on(\"pointerdown\", (e) => {\n  createExplosion(e.glob...",
        "full_content": "2025-05-26 18:51:25\n Ivan -> 2071074234:\n- Nedra digital\n- мидл\n- зп от 200\n\n- Вопрос по резюме - Подробно рассказать про построение графиков, какими способами, по какой технологии, с пом какой библиотеки делал.\n- Спросил про канвас, пиксель, хотя в резюме у меня о нем ничего не было\n\nЗадача 1.1 (как пояснили - экспериментальная): нужно сделать чтобы конфетки разлетались не по сторонам, а с гравитацией, после взрыва чтобы падали вниз\n\napp.stage.on(\"pointerdown\", (e) => {\n  createExplosion(e.global.x, e.global.y);\n});\n\n// Создание взрыва частиц\nfunction createExplosion(x, y) {\n  const particleCount = 50;\n  for (let i = 0; i < particleCount; i++) {\n    const particle = new PIXI.Graphics();\n    particle.beginFill(0xffffff * Math.random());\n    particle.drawCircle(0, 0, 2 + Math.random() * 4);\n    particle.endFill();\n\n    particle.x = x;\n    particle.y = y;\n\n    // Случайное направление и скорость\n    const speed = 2 + Math.random() * 5;\n    const angle = Math.random() * Math.PI * 2;\n    particle.vx = Math.cos(angle) * speed;\n    particle.vy = Math.sin(angle) * speed;\n\n    // Время жизни частицы\n    particle.life = 60 + Math.random() * 60;\n\n    app.stage.addChild(particle);\n    particles.push(particle);\n  }\n}\n\n// Игровой цикл\napp.ticker.add(() => {\n  for (let i = particles.length - 1; i >= 0; i--) {\n    const particle = particles[i];\n    particle.x += particle.vx;\n    particle.y += particle.vy;\n    particle.life--;\n\n    // Удаление \"мёртвых\" частиц\n    if (particle.life <= 0) {\n      app.stage.removeChild(particle);\n      particles.splice(i, 1);\n    }\n  }\n});\n\n\n- Отличие GET от POST запроса.\n- Что делает команда git rebase?\n- Что такое CORS Аббревиатура?\n- Что такое JWT-токен и зачем используется?\n- Как браузер делает рендер страницы?\n- Допустим, тебе нужно написать функцию на JavaScript, которая принимает какое-то число, делает внутри какой-то сложный расчет и отдает число. Сделать именно таким образом, чтобы для одного и того же аргумента вот этот расчет уже не производиться два раза, а давался предыдущий результат. Как бы ты это сделал?\n- Допустим, есть массив. Функция, которая принимает массив. В этом массиве 100 урлов лежит. Функция должна все их опросить и вернуть массив ответов в том же порядке, в котором они лежали. Как бы ты это делал? Что бы использовал чтобы получив ошибку, вернуть результат?\n- Допустим, у нас в приложении есть большая коллекция данных. Есть контакты на 100 тысяч человек. То есть у сервера мы указываем, в каком виде данных мы будем это хранить. Выбираем между массивом и объектом.\n\nЗадача 2.1\n\nPromise.resolve().then(() => console.log(1));\nsetTimeout(() => console.log(2));\nPromise.resolve().then(() => console.log(3));\nconsole.log(4);\n\n\nЗадача 2.2\n\nfunction failedJob() {\n  return new Promise(function (resolve, reject) {\n    reject();\n  });\n}\n\nconst promise = failedJob();\n\npromise\n  .then(function () {\n    console.log(\"Success 1\");\n  })\n  .then(function () {\n    console.log(\"Success 2\");\n  })\n  .then(function () {\n    console.log(\"Success 3\");\n  })\n  .catch(function () {\n    console.log(\"Error 1\");\n  })\n  .then(function () {\n    console.log(\"Success 4\");\n  });\n\n\nЗадача 2.3\n\nasync function foo() {\n  await Promise.resolve(1);\n  console.log(2);\n}\n\nconsole.log(3);\nfoo();\nconsole.log(4);\n\n\nЗадача 2.4\n\nasync function foo() {\n  const result = await new Promise(resolve => {\n    setTimeout(() => resolve('Done'), 1000);\n  });\n  console.log(result);\n  return 'Finished';\n}\n\nfoo().then(console.log);\nconsole.log('Start');\n\n\n- У нас есть приложение на реакте написанное. Оно очень большое, тяжелое, грузится долго, как-то браузер тормозит. Тебе надо это все ускорить. Как бы ты к этой проблеме подходил?\n- Что такое утечка памяти в реалиях фронта?\n- Как понять, что у нас утечка памяти в приложении? А если без реакт фич?\n- При планировании архитектуры и приложения есть принцип инверсии записимостей, что это? (последний паттерн из SOLID)"
      },
      {
        "timestamp": "2024-12-11 14:32:44",
        "content": "2024-12-11 14:32:44\n Mikhail Sorokin -> 2071074234:\nNedra digital\nВакансия —  https://hh.ru/vacancy/108676471\nЗп - на тот момент не обсуждали, я называл сумму от 300 000 на руки",
        "full_content": "2024-12-11 14:32:44\n Mikhail Sorokin -> 2071074234:\nNedra digital\nВакансия —  https://hh.ru/vacancy/108676471\nЗп - на тот момент не обсуждали, я называл сумму от 300 000 на руки"
      },
      {
        "timestamp": "2024-11-14 08:27:22",
        "content": "2024-11-14 08:27:22\n аыеъа -> 2071074234:\nNedra Digital Финал\nЗП: 250к\nВакансия: написала hr\nВидео:",
        "full_content": "2024-11-14 08:27:22\n аыеъа -> 2071074234:\nNedra Digital Финал\nЗП: 250к\nВакансия: написала hr\nВидео:"
      },
      {
        "timestamp": "2024-11-05 09:01:30",
        "content": "2024-11-05 09:01:30\n аыеъа -> 2071074234:\nNedra Digital\nЗП: 250к\nВакансия: написала hr\nВопросы:\nСпособы копирования объекта\nПреимущества и  недостатки объектов и массивов при работе с большими данными\nБыл ли опыт с canvas и хочешь ли его изучать?\nКакие проблемы и методы их решения есть при лагах на странице?\n\nДали 20 минут на задачку\n//  По клику кнопка должна:\n//  1. Дизейблиться на 5 секунд\n//  2. Показывать обратный отсчёт\n\n\n// Решение\nimport React, { useState, useEffect } from \"react\";\nimpor...",
        "full_content": "2024-11-05 09:01:30\n аыеъа -> 2071074234:\nNedra Digital\nЗП: 250к\nВакансия: написала hr\nВопросы:\nСпособы копирования объекта\nПреимущества и  недостатки объектов и массивов при работе с большими данными\nБыл ли опыт с canvas и хочешь ли его изучать?\nКакие проблемы и методы их решения есть при лагах на странице?\n\nДали 20 минут на задачку\n//  По клику кнопка должна:\n//  1. Дизейблиться на 5 секунд\n//  2. Показывать обратный отсчёт\n\n\n// Решение\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Container } from \"./style\";\n\nconst App = () => {\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [count, setCount] = useState(0);\n\n  let timer;\n\n  const onResentEmail = () => {\n    setIsDisabled(true);\n    setCount(5);\n    timer = setInterval(() => {\n      setCount((prev) => prev - 1);\n    }, 1000);\n    console.log(\"resend email\");\n  };\n\n  useEffect(() => {\n    if (count <= 0) {\n      setIsDisabled(false);\n      clearInterval(timer);\n    }\n  }, [timer, count]);\n\n  return (\n    <Container>\n      <Button onClick={onResentEmail} disabled={isDisabled}>\n        Resend Email\n      </Button>\n      {isDisabled && <div>{count}</div>}\n    </Container>\n  );\n};\n\nexport default App;"
      }
    ]
  },
  {
    "company": "R-Vision",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-06-11 23:04:11",
        "content": "2025-06-11 23:04:11\n Артём -> 2071074234:\nКомпания: R-vision (Р-вижн)\nЗп: от 300\n\n1) Расскажи о себе, о своём опыте\n2) Что для тебя сложная форма\n3) Как себя оцениваешь, на какую позицию\n4) Event loop\n5) Что будет в консоли\nfunction fn() {\n    console.log(this)\n}\n\nconst newObj = {\n    somefn() {\n        return this\n    }\n}\n\nconsole.log(newObj.somefn())\n\nconst example1 = new fn()\nconsole.log(example1)\n6) Что будет с приложением при таком написании функций:\nfunction fn() {\n    return new Promise((...",
        "full_content": "2025-06-11 23:04:11\n Артём -> 2071074234:\nКомпания: R-vision (Р-вижн)\nЗп: от 300\n\n1) Расскажи о себе, о своём опыте\n2) Что для тебя сложная форма\n3) Как себя оцениваешь, на какую позицию\n4) Event loop\n5) Что будет в консоли\nfunction fn() {\n    console.log(this)\n}\n\nconst newObj = {\n    somefn() {\n        return this\n    }\n}\n\nconsole.log(newObj.somefn())\n\nconst example1 = new fn()\nconsole.log(example1)\n6) Что будет с приложением при таком написании функций:\nfunction fn() {\n    return new Promise((res, rej) => {\n        return fn()\n    })\n}\nfn()\n\nfunction fn2() {\n    return fn()\n}\nfn2()\n7) CSS, с какими библиотеками работал, что больше нравится\n8) Какие компоненты стоит оборачивать в Storybook\n9) Задача на рефакторинг компонента, с его трансляции на экрана,\nпоправить только стили\n10) Чтобы верстал на grid, а что на flex. Приведи примеры из опыта\n11) Почему в некоторых ситуациях reduce будет не оптимально работать если в качестве аккумулятора будет объект или массив\n12) Что может триггерить ререндер в React\n13) Как мемо сравнивает пропсы под капотом, что мы можем передать туда вторым аргументом\n14) Если в списке мы явно не укажем key, что react поставит в качестве ключей\n15) useEffect\n16) useLayoutEffect\n17) Для чего нам нужен стор, какие использовал, с какими знаком\n18) useContext, какие минусы\n19) Подробно про React Hook Form\n20) Какой тип реализован ниже (Omit)\ntype customOmit<T, K extends keyof T> = {\n  [P in keyof T as P extends K ? never : P]: T[P];\n}\n21) Реализовать игру пятнашки, решения нет, вот ссылка на игру\nhttps://puzzlelove.ru/pyatnashki-online-free\nВ конце должно быть пусто (0)\nМассив должен быть отсортирован"
      },
      {
        "timestamp": "2024-12-06 22:29:26",
        "content": "2024-12-06 22:29:26\n Maksim -> 2071074234:\nКомпания: R-Vision(2 этап(душный лид))                                                                                                                                                        Вопросы + Задачи:                                                                                                                                                                                             Подробно про опыт,Как ставили задачи ,кто ставил задачи ,как ...",
        "full_content": "2024-12-06 22:29:26\n Maksim -> 2071074234:\nКомпания: R-Vision(2 этап(душный лид))                                                                                                                                                        Вопросы + Задачи:                                                                                                                                                                                             Подробно про опыт,Как ставили задачи ,кто ставил задачи ,как заимодествовал с бекендом,все очень подробно,про запоминающие задачи которыми гордишься(очень подробно распрашивал (Софт)                                                             Задачи:\nArray.prototype.reduce = function(callback, initialValue) {\n\n    // Начальное значение аккумулятора\n    let accumulator = initialValue;\n\n    // Итерация по массиву\n    for (let i = 0; i < this.length; i++) {\n        // Если начальное значение не задано, устанавливаем первый элемент как начальное\n        if (accumulator === undefined && i === 0) {\n            accumulator = this[i];\n        } else {\n            // Применение функции-колбэка\n            accumulator = callback(accumulator, this[i], i, this);\n        }\n    }\n\n    // Возврат итогового аккумулятора\n    return accumulator;\n};\n// Реализовать полифиил Array.reduce\n\n        Array.prototype.reduce = function<T,U>(this:T[],callback:(accumulator:U,currentValue:T,index:number,\n        array:T[]) => U,initialValue?:U):U {\n\n        let accumulator = initialValue as U\n\n    for (let i = 0; i < this.length; i++){\n\n    //     if( accumulator  === undefined && i === 0){\n\n    //     accumulator = this[i]\n\n    // }  else {\n            accumulator = callback(accumulator,this[i] , i ,this)\n        // }\n\n    }\n        return accumulator\n\n        }\n\n\n[1,2,3].reduce((result, item, index, array) => {\n    return result + item + index + array.length;\n},0);"
      },
      {
        "timestamp": "2024-11-27 12:57:13",
        "content": "2024-11-27 12:57:13\n Стас Тихомиров -> 2071074234:\nКомпания:R-Vision (Р-Вижн)\nВакансия: https://yoshkar-ola.hh.ru/vacancy/108733983?from=employer&hhtmFrom=employer\nЗП: не обсуждали\n\nЗадачи:\nчто будет в массиве если\nconst arr = [1,2,3]\narr['5'] = 'test'\nеще\narr['xyz'] = 'test'\n\nВопросы: \n- Расскажи про опыт\n- Как зафризить объект\n- Что такое this\n- Хуки\n- React.memo\n- FSD\n- Про webworker\n- Способы оптимизации приложения\n- REST vs GraphQL\n- Методы REST\n- JWT\n- Про разные архитектуры какие еще есть...",
        "full_content": "2024-11-27 12:57:13\n Стас Тихомиров -> 2071074234:\nКомпания:R-Vision (Р-Вижн)\nВакансия: https://yoshkar-ola.hh.ru/vacancy/108733983?from=employer&hhtmFrom=employer\nЗП: не обсуждали\n\nЗадачи:\nчто будет в массиве если\nconst arr = [1,2,3]\narr['5'] = 'test'\nеще\narr['xyz'] = 'test'\n\nВопросы: \n- Расскажи про опыт\n- Как зафризить объект\n- Что такое this\n- Хуки\n- React.memo\n- FSD\n- Про webworker\n- Способы оптимизации приложения\n- REST vs GraphQL\n- Методы REST\n- JWT\n- Про разные архитектуры какие еще есть\n- Паттерны проектирования\n- SOLID\n- interface vs type\n- any vs unknown\n- never\n- Generic\n- Utility Types\n- Специфичность css\n- position (какие есть, подробно) что по умолчанию\n- display (какие есть, подробно )\n- flex vs grid подробно\n- TDD"
      },
      {
        "timestamp": "2024-11-26 11:06:41",
        "content": "2024-11-26 11:06:41\n Maksim -> 2071074234:\nКомпания: R-Vision                                                                                                                                                                                                            Ваканси: https://hh.ru/vacancy/108733983                                                                                                                                                                                                   ...",
        "full_content": "2024-11-26 11:06:41\n Maksim -> 2071074234:\nКомпания: R-Vision                                                                                                                                                                                                            Ваканси: https://hh.ru/vacancy/108733983                                                                                                                                                                                                                                                Зп: не обсуждали                                                                                                                                                                                                                   Вопросы: 1)Расскажи про опыт 2)Делал ли динамаческие формы 3)Разница graphQL от Reast Api 4)Плюсы и минусы FSD 5)Какие способы оптимизации знаешь 6)Расскажи про Promise 7)Работал ли с генераторами и для чего они 8)Какие сборки знаешь и какими сабирал проекты 9)В кого в будущем развиваться хотел бы 10)Про Proxy 11)Какими способами можем заблочить страницу(while(true) и т.д) 12)Расскажи про EventLoop + задача ниже прикреплю 13)Если нам нужен метод filter,а его нету как нам реализовать (записать в прототип)) 13)Работал ли с Ts ,на сколько себя оцениваешь 13)Про джинерики расскажи 14)Про утилити type 15)Отличие any от uncknow 16)Работал с infer?  17)когда вводим в браузерную строку Enter что происходит 18)Про SSE , websocket 19)Перед тем как устанавливать npm что бы ты делал 20) Про Lcp Fid Cls 21)Про jwt  22) На проекте зависла страница твои действия Задача:// 1  \nconst doSomething = () => {  \n    Promise.resolve().then(() => {  \n        doSomething();  \n    });  \n};  \n\ndoSomething();  \n\n// 2  \nconst doSomething2 = () => {  \n    doSomething2();  \n};  \n\ndoSomething2();  \n\n// 3  \nconst first = new Promise((resolve, reject) => {  \n    setTimeout(resolve, 500, \"one\");  \n});  \n\nconst second = new Promise((resolve, reject) => {  \n    setTimeout(resolve, 1000, \"two\");  \n});  \n\nPromise.race([first, second]).then(res => console.log(res));"
      }
    ]
  },
  {
    "company": "Финам",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-01-28 09:33:37",
        "content": "2025-01-28 09:33:37\n Ilya -> 2071074234:\nКомпания: Финам \nВакансия: hr написала \nЗП: 250+\n\nЗадача:\n\nНаписать с нуля приложение с SSR. Отрендерить список с https://rickandmortyapi.com/, сделать верстку как на сайте, сделать по клику на сущность переход на новую страницу с подгрузкой данных.\n\nШарить весь экран, можно гуглить",
        "full_content": "2025-01-28 09:33:37\n Ilya -> 2071074234:\nКомпания: Финам \nВакансия: hr написала \nЗП: 250+\n\nЗадача:\n\nНаписать с нуля приложение с SSR. Отрендерить список с https://rickandmortyapi.com/, сделать верстку как на сайте, сделать по клику на сущность переход на новую страницу с подгрузкой данных.\n\nШарить весь экран, можно гуглить"
      },
      {
        "timestamp": "2024-11-01 14:03:55",
        "content": "2024-11-01 14:03:55\n аыеъа -> 2071074234:\nФинам\nЗП: 250к\nВакансия: https://hh.ru/vacancy/109079560\nВопросы:\nБыли поведенческие вопросы, что ты сделаешь в той или иной ситуации\nЧто происходит после нажатия enter в браузере\nКакие порты существуют (80 http, 443 https)\nЧто такое SSL, какие есть типы шифрования (симметричные и асимметричные)\nКакие unit тесты можно написать для задачки ниже\nЗадачка:\nСоздать хук с запросом к постам и вывести их\nПри нажатии на пост открывать и закрывать комменты к посту...",
        "full_content": "2024-11-01 14:03:55\n аыеъа -> 2071074234:\nФинам\nЗП: 250к\nВакансия: https://hh.ru/vacancy/109079560\nВопросы:\nБыли поведенческие вопросы, что ты сделаешь в той или иной ситуации\nЧто происходит после нажатия enter в браузере\nКакие порты существуют (80 http, 443 https)\nЧто такое SSL, какие есть типы шифрования (симметричные и асимметричные)\nКакие unit тесты можно написать для задачки ниже\nЗадачка:\nСоздать хук с запросом к постам и вывести их\nПри нажатии на пост открывать и закрывать комменты к посту\nimport React from 'react';\nimport './style.css';\n\nconst POSTS_ENDPOINT = 'https://jsonplaceholder.typicode.com/posts';\n// Post Comments: 'https://jsonplaceholder.typicode.com/posts/{id}/comments';\n\ninterface Post {\n  userId: number;\n  id: number;\n  title: string;\n  body: string;\n}\n\ninterface Comment {\n  postId: number;\n  id: number;\n  name: string;\n  email: string;\n  body: string;\n}\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Hello StackBlitz!</h1>\n      <p>Start editing to see some magic happen :)</p>\n    </div>\n  );\n}"
      },
      {
        "timestamp": "2024-07-25 13:11:02",
        "content": "2024-07-25 13:11:02\n Ilya -> 2071074234:\n25.07 Финам\n-зп: 250-270\n- вопросы: \n1) this\n2) как работает реакт\n3) способы оптимизации(useCallback, useMemo, memo)\n4) Стадии события\n5) расскажи про наследования\n6) расскажи про _proto_, prototype \n7) всегда ли стоит использовать мемоизацию\n8) области видимости в js \n- задачи:\nнаписать хук, который делает запрос и возвращает data, loading, erro и написать функцию которая берет два массива и отдает один с элементами, которые есть и в первым и во втором\n...",
        "full_content": "2024-07-25 13:11:02\n Ilya -> 2071074234:\n25.07 Финам\n-зп: 250-270\n- вопросы: \n1) this\n2) как работает реакт\n3) способы оптимизации(useCallback, useMemo, memo)\n4) Стадии события\n5) расскажи про наследования\n6) расскажи про _proto_, prototype \n7) всегда ли стоит использовать мемоизацию\n8) области видимости в js \n- задачи:\nнаписать хук, который делает запрос и возвращает data, loading, erro и написать функцию которая берет два массива и отдает один с элементами, которые есть и в первым и во втором\n\n\nimport { useState, useEffect } from 'react';\n\n// Имитация функции загрузки профиля пользователя\nconst loadUserProfile = (userid) => {\n    return Promise.resolve({ id: userid, name: \"User1\" });\n};\n\nconst useUserProfile = (userid) => {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        // Сбрасываем состояние при изменении userid\n        setLoading(true);\n        setError(null);\n        \n        // Загружаем профиль пользователя\n        loadUserProfile(userid)\n            .then((userData) => {\n                setData(userData);\n            })\n            .catch((err) => {\n                setError(err);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [userid]); // Зависимость от userid\n\n    return { data, loading, error };\n};\n\nexport default useUserProfile;\n\n\nfunction intersectArrays(array1, array2) {\n    // Создаем множество из второго массива для быстрого поиска\n    const set2 = new Set(array2);\n    \n    // Фильтруем первый массив, оставляя только те элементы, которые есть во втором массиве\n    const intersection = array1.filter(item => set2.has(item));\n    \n    return intersection;\n}\n\n// Пример использования:\nconst array1 = [1, 2, 3, 4, 5];\nconst array2 = [4, 5, 6, 7, 8];\nconst result = intersectArrays(array1, array2);\n\nconsole.log(result); // [4, 5]"
      },
      {
        "timestamp": "2024-06-10 17:57:05",
        "content": "2024-06-10 17:57:05\n Tonidevs -> 2071074234:\nФинам техскрин\nвакансия: hr написал\nЗП: 200-250к\nУспех: фидбек положительный, но без оффера\n\nвопросы\n- как в Nextjs реализован SSR\n- накидай сценарий реализации большой задачи\n- каким требованиям должен отвечать HTML - чтобы называться хорошим? - про seo, семантику и доступность, альтернативный текст\n- теоретический кейс про доступность: как решить доступность кнопки в кнопке? - про атрибут role=\"button\"\n- механизмы перерисовки реакта\n- критерии выбор...",
        "full_content": "2024-06-10 17:57:05\n Tonidevs -> 2071074234:\nФинам техскрин\nвакансия: hr написал\nЗП: 200-250к\nУспех: фидбек положительный, но без оффера\n\nвопросы\n- как в Nextjs реализован SSR\n- накидай сценарий реализации большой задачи\n- каким требованиям должен отвечать HTML - чтобы называться хорошим? - про seo, семантику и доступность, альтернативный текст\n- теоретический кейс про доступность: как решить доступность кнопки в кнопке? - про атрибут role=\"button\"\n- механизмы перерисовки реакта\n- критерии выбора хранения данных в стейт менеджере\n- способы получения данных с бекенда\n- сужение типов в TypeScript\n- разница type от interface\n\nзадачи\n- первая задача на семантику, надо раскидать было страницу и подвох был с формой\n<form>\n  <fieldset>\n    <legend>Contact Information</legend>\n    <div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" name=\"name\">\n    </div>\n    <div>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" name=\"email\">\n    </div>\n  </fieldset>\n  <button type=\"submit\">Send</button>\n</form>\n\n\n- на верстку покрасить абзацы\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <title>HTML + CSS</title>\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n  </head>\n  <body>\n    <h1>This is a simple HTML + CSS template!</h1>\n    <!-- 1. Покрасить каждый второй абзац списка c id=a в красный .\n   2. Нужно все h2 с классом bbb из элемента с классом fff покрасить в синий. -->\n    <div id=\"a\">\n      <p>first</p>\n      <p>second</p>\n      <p>third</p>\n      <p>fourth</p>\n      <p>fifth</p>\n    </div>\n\n    <div class=\"fff\">\n      <h2 class=\"bbb\">+++</h2>\n      <p>---</p>\n\n      <h2 class=\"bbb\">+++</h2>\n      <p>---</p>\n      <p class=\"bbb\">---</p>\n    </div>\n\n    <h2 class=\"bbb\">---</h2>\n    <p class=\"bbb\">---</p>\n    <p class=\"fff\">---</p>\n  </body>\n</html>\n\n- на понимания области видимости переменных в асинхронных контекстах\nfor(var i = 0; i < 4; i++){\n  setTimeout(() => console.log(i), 0);\n}\n\n- на замыкание \n/**\n * Нужно написать функцию, которая принимает число N и возвращает функцию,\n * вызов которой первые N раз возвращает 'yes', а потом – 'no'.\n */\n\nfunction canGetCount(n) {\n  let count = 0;\n\n  return function () {\n    count++;\n    if (count <= n) {\n      return \"yes\";\n    } else {\n      return \"no\";\n    }\n  };\n}\n\nconst getOne = canGetCount(2);\n\nconsole.log(getOne(), 1); // yes 1\nconsole.log(getOne(), 2); // yes 2\nconsole.log(getOne(), 3); // no 3\nconsole.log(getOne(), 4); // no 4\n\n- сделать каунтер на реакт\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nfunction Counter() {\n  let [count, setCount] = useState(0);\n\n  useEffect(() => {\n    let id = setInterval(() => {\n      setCount((prev) => prev + 1);\n    }, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return <h1>{count}</h1>;\n}\n\nexport { Counter };"
      }
    ]
  },
  {
    "company": "Datagile",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-04-23 01:07:34",
        "content": "2025-04-23 01:07:34\n Ber -> 2071074234:\nКомпания: datagile\nВакансия: https://spb.hh.ru/vacancy/108806806?hhtmFrom=employer_vacancies\nЗП: не обговаривали - сказали можем вернуться к вопросу после тех собеса\n\nТеория:\n1. Какой у тебя опыт? Какой проект разрабатываешь?\n2. Был ли у тебя опыт менторства?\n3. Как именно проходило у тебя ментроство? Что включало?\n4. Был ли опыт лидить команду?\n\nЗадачи: точно как здесь https://t.me/c/2071074234/489/119370\n\nМои вопросы:\n1. Ты спрашивала про менторство - эт...",
        "full_content": "2025-04-23 01:07:34\n Ber -> 2071074234:\nКомпания: datagile\nВакансия: https://spb.hh.ru/vacancy/108806806?hhtmFrom=employer_vacancies\nЗП: не обговаривали - сказали можем вернуться к вопросу после тех собеса\n\nТеория:\n1. Какой у тебя опыт? Какой проект разрабатываешь?\n2. Был ли у тебя опыт менторства?\n3. Как именно проходило у тебя ментроство? Что включало?\n4. Был ли опыт лидить команду?\n\nЗадачи: точно как здесь https://t.me/c/2071074234/489/119370\n\nМои вопросы:\n1. Ты спрашивала про менторство - это важно для вас? То есть много студентов или в каком ключе?\nОтвет: да, бывают случаи, когда есть стажеры и хорошо, когда есть человек, который может взять менторство\n2. Какой у вас флоу? Кто следит за гитом? Есть ли отвественные люди за merge в ветку main?\nОтвет: сперва было только две ветки main и dev, но сейчас ввели feat\n3. А как именно у вас расставляются задачи? От лида и продакта?\nОтвет: да, примерно так. При этом есть бизнес-аналитик, который конкретизирует задачи\n4. Вы используется докер для фронтенд проекта? Как думаешь нужен он вообще?\nОтвет: (несколько неуверенно) нет, не используем.\n5. То есть у вас есть девопсы, которые качественно следят за деплоем? Не случаются конфликты при CI, например?\nОтвет: да, есть девопсы - они всё настраивают как должно быть\n6. Есть ли у вас тестировщики? Как они работают?\nОтвет: да, есть, но в основном ручные\n\n7. Вопрос к HR: какая дальше последовательность найма?\nОтвет: сперва надо нам оценить твой грейд, потом будет ясно и до конца недели ответим"
      },
      {
        "timestamp": "2025-04-18 12:35:22",
        "content": "2025-04-18 12:35:22\n Ivan Kulyaev -> 2071074234:\nКомпания: datagile\nВакансия: https://spb.hh.ru/vacancy/108806806?hhtmFrom=employer_vacancies\nЗп: 230 - 270к на руки (сказали, что это типикал мидл зп)\n\nИз теории только вопросы по опыту\n\nЗадачи:\n\n\n// 1\n\nimport React, { useState, useEffect } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nfunction A() {\n  console.log('A');\n  return <B />;\n}\n\nfunction B() {\n  console.log('B');\n  return <C />;\n}\n\nfunction C() {\n  console.log('C');\n  ret...",
        "full_content": "2025-04-18 12:35:22\n Ivan Kulyaev -> 2071074234:\nКомпания: datagile\nВакансия: https://spb.hh.ru/vacancy/108806806?hhtmFrom=employer_vacancies\nЗп: 230 - 270к на руки (сказали, что это типикал мидл зп)\n\nИз теории только вопросы по опыту\n\nЗадачи:\n\n\n// 1\n\nimport React, { useState, useEffect } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nfunction A() {\n  console.log('A');\n  return <B />;\n}\n\nfunction B() {\n  console.log('B');\n  return <C />;\n}\n\nfunction C() {\n  console.log('C');\n  return null;\n}\n\nfunction D() {\n  console.log('D');\n  return null;\n}\n\nfunction App() {\n  const [state, setState] = useState(0);\n\n  useEffect(() => {\n    setState((state) => state + 1);\n  }, []);\n\n  console.log('App');\n\n  return (\n    <div>\n      <A state={state} />\n      <D />\n    </div>\n  );\n}\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(<App />);\n\n\n// 2\n\n\nimport React, { useState } from 'react';\nimport { screen } from '@testing-library/dom';\nimport userEvent from '@testing-library/user-event';\nimport { createRoot } from 'react-dom/client';\n\nfunction App() {\n  const [state, setState] = useState(0);\n  console.log(\"App \" + state);\n\n  return (\n    <div>\n      <button\n        onClick={() => {\n          setState(count => count + 1);\n          setState(count => count * 2);\n        }}\n      >\n        click me\n      </button>\n    </div>\n  );\n}\n\n(async () => {\n  const root = createRoot(document.getElementById('root'));\n  root.render(<App />);\n\n  userEvent.click(await screen.findByText('click me'));\n})();\n\n\n// 3\n\n\nimport { useState, useEffect } from \"react\";\n\nexport default function App() {\n  const [counter, setCounter] = useState(0);\n\n  console.log(\"render\", counter);\n\n  useEffect(() => {\n    console.log(\"effect\", counter);\n\n    return () => {\n      console.log(\"cleanup\", counter);\n    };\n  }, [counter]);\n\n  useEffect(() => {\n    setCounter((prev) => prev + 1);\n  }, []);\n\n  return null;\n}\n\n\n// 4 \n\n\nimport React from \"react\";\n\nconst Inner = () => {\n  console.log(\"render inner\");\n  return null;\n};\n\nconst App = () => {\n  const [counter, setCounter] = React.useState(0);\n\n  console.log(\"render-1\", counter);\n\n  React.useEffect(() => {\n    setCounter(1);\n    console.log(\"effect-1\", counter);\n  }, [counter]);\n\n  React.useEffect(() => {\n    console.log(\"effect-2\", counter);\n    setCounter(2);\n  }, [counter]);\n\n  console.log(\"render-2\", counter);\n\n  return <Inner />;\n};\n\nexport default App;\n\n\n// 5\n\nЛастовая задача в виде тз, которое надо было делать поэтапно\n\n1. Получение данных\n Запросить список задач методом GET с API:\nhttps://jsonplaceholder.typicode.com/todos\n\n Вывести список задач с текстом задачи (title)\n\n2. Загрузка\n Пока идёт загрузка, отображать 'loading...'\n\n3. Счётчик задач\n Отобразить количество всех задач в списке\n\n4. Расширенное отображение\n Для каждой задачи дополнительно вывести:\n\nuserId\n\nсостояние завершённости (completed)\n\n5. Фильтрация\n Добавить фильтр, который:\n\nоставляет только незавершённые задачи (completed: false)\n\n6. Сортировка\n Отсортировать список задач по userId в порядке убывания\n\n7. Группировка\n Добавить возможность группировать задачи по пользователям (userId)"
      },
      {
        "timestamp": "2024-12-11 14:08:23",
        "content": "2024-12-11 14:08:23\n Mikhail Sorokin -> 2071074234:\nDatagile\nВакансия — https://hh.ru/vacancy/108806806\nЗп — не обсуждали, но я указывал сумму от 300 000 на руки\n\n- что делает браузер после того, как мы ввели адрес в адресной строке\n- отличие http от https\n- что такое CORS\n- способы оптимизации скорости приложения\n- как происходит кеширование\n\nдве задачи на event loop  в реакте, где нужно было сказать, в каком порядке выведутся логи\nК сожалению, произошел какой-то глюк с OBS, собес не записался,...",
        "full_content": "2024-12-11 14:08:23\n Mikhail Sorokin -> 2071074234:\nDatagile\nВакансия — https://hh.ru/vacancy/108806806\nЗп — не обсуждали, но я указывал сумму от 300 000 на руки\n\n- что делает браузер после того, как мы ввели адрес в адресной строке\n- отличие http от https\n- что такое CORS\n- способы оптимизации скорости приложения\n- как происходит кеширование\n\nдве задачи на event loop  в реакте, где нужно было сказать, в каком порядке выведутся логи\nК сожалению, произошел какой-то глюк с OBS, собес не записался, и задачи сохранить не получилось. Пример похожей задачи\n\nexport function Logs3() {\n  console.log(1);\n\n  useEffect(() => {\n    console.log(2);\n  }, []);\n\n  return <Child />;\n}\n\nfunction Child() {\n  console.log(3);\n\n  useEffect(() => {\n    console.log(4);\n  }, []);\n\n  return \"Logs3\";\n}\n\nЕще была задача в реакте - дан url, с него надо получить список todo, у которых есть название, состояние (выполнен или нет) и пользователь,к которому привязан todo. Необходимо получить список todo, показать процесс загрузки, сделать обработку ошибок, отобразить состояние каждой задачи(выполнена/ не выполнена), сделать чекбокс, при нажатии на который отображаются только сделанные задачи, а также чекбокс, который группирует задачи по userId"
      },
      {
        "timestamp": "2024-11-01 06:20:11",
        "content": "2024-11-01 06:20:11\n Сергей -> 2071074234:\nКомпания: Datagile\nЗП: 250k+\nВакансия: https://hh.ru/vacancy/108806806?hhtmFrom=employer_vacancies\nВопросы:\n- Расскажи про опыт, какая интересная задача была\n- Event loop\n- Omit/Pick\n- В основном лайвкодинг был:\n/// Что выведет? Как исправить?\nconst funcs = [];\n\nfor (var i = 0; i < 5; i++) {\n    funcs.push(function() {\n        console.log(i);\n    });\n}\n\n// Вызов функций\nfuncs.forEach(fn => fn());\n\n\n// объеденить массив, чтобы элементы не повторялись\n\nco...",
        "full_content": "2024-11-01 06:20:11\n Сергей -> 2071074234:\nКомпания: Datagile\nЗП: 250k+\nВакансия: https://hh.ru/vacancy/108806806?hhtmFrom=employer_vacancies\nВопросы:\n- Расскажи про опыт, какая интересная задача была\n- Event loop\n- Omit/Pick\n- В основном лайвкодинг был:\n/// Что выведет? Как исправить?\nconst funcs = [];\n\nfor (var i = 0; i < 5; i++) {\n    funcs.push(function() {\n        console.log(i);\n    });\n}\n\n// Вызов функций\nfuncs.forEach(fn => fn());\n\n\n// объеденить массив, чтобы элементы не повторялись\n\nconst a = [1, 2, 3, 4, 5];\nconst b = [3, 4, 5, 6, 7];\n\nconst mergedArray = [...new Set([...a, ...b])]\n\n\n// объеденить массив, чтобы id не повторялись\n\nconst a = [{ id: 1 }, { id: 2 }, { id: 3 }, { id: 4 }, { id: 5 }];\nconst b = [{ id: 3 }, { id: 4 }, { id: 5 }, { id: 6 }, { id: 7 }];\n\nconst mergedArray = mergedArr(a,b)\n\nfunction mergedArr(a,b) {\n  return [...a, ...b].filter((item, index, arr) => \n    index === arr.findIndex(obj => obj.id === item.id)\n )\n}\n\nconsole.log(mergedArray)\n\n\nconst a = [\n  {id: 1, name: 'React'},\n  {id: 2, name: 'JS'}\n]\n\ninterface IObj {\n  [key: string]: number\n}\n\nconst res = a.reduce((acc, obj) => {\n  acc[obj.name] = obj.id;\n  return acc;\n}, {} as IObj)\n\n// {React: 1, JS: 2}\n\nconst array = [\n  { id: 3, name: 'Object 3' },\n  { id: 1, name: 'Object 1' },\n  { id: 2, name: 'Object 2' },\n];\narray.sort((a, b) => a.id - b.id);\nconsole.log(array);\n\n\nconst [counter, setCounter] = useState(0);\n\nconsole.log('counter', counter)\n\nuseEffect(() => {\n    console.log(\"Effect\", counter);\n\n    return () => {\n        console.log(\"Cleanup\", counter);\n    };\n}, [counter]);\n\nuseEffect(() => {\n    setCounter(prev => prev + 1)\n    console.log('mount')\n}, []);\n\n\n// counter 0\n// mount\n// counter 1\n// cleaunup 0\n// effect 1\n\n\n// End должно вывести через 2 секунды, как реализовать?\n\nfunction delay() {\n\n}\n\nconsole.log('start')\ndelay(2000)\nconsole.log('end')\n\n\n/*\n * 1. Типизировать орг. структуру\n * 2. Вывести список пользователей\n */\nexport default function Test() {\n  interface IOrgStruct {\n    key: string;\n    name: string;\n    type: 'department' | 'group' | 'user';\n    children?: IOrgStruct[] \n  }\n  const orgStruct: IOrgStruct[] = [\n    {\n      key: '1',\n      name: 'department1',\n      type: 'department',\n      children: [\n        {\n          key: '1.1',\n          name: 'group1',\n          type: 'group',\n          children: [\n            {\n              key: '1.1.1',\n              name: 'user1',\n              type: 'user',\n            },\n            {\n              key: '1.1.2',\n              name: 'user2',\n              type: 'user',\n            },\n          ],\n        },\n      ],\n    },\n    {\n      key: '2',\n      name: 'department2',\n      type: 'department',\n      children: [\n        {\n          key: '2.1',\n          name: 'group2',\n          type: 'group',\n          children: [\n            {\n              key: '2.1.1',\n              name: 'user3',\n              type: 'user',\n            },\n            {\n              key: '2.1.2',\n              name: 'user4',\n              type: 'user',\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n  const getNodeNames = (list: IOrgStruct[], type: any) => {\n    const names: string[] = [];\n    list.forEach(obj => {\n      if (obj.type === 'user') {\n        names.push(obj.name)\n      } else if (obj.children) {\n        names.push(...getNodeNames(obj.children, type))\n      }\n    })\n    // TODO: обойти дерево list и собрать список имен узлов\n    // names.push('user1');\n    return names;\n    \n  };\n\n  const names = getNodeNames(orgStruct, 'user');\n\n  return <>{JSON.stringify(names)}</>; // => [\"user1\"]\n}"
      }
    ]
  },
  {
    "company": "Prooftech IT",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-03-05 10:52:39",
        "content": "2025-03-05 10:52:39\n RdK -> 2071074234:\nProoftech IT 2 этап\nНаписала  hr\nЗП: 270\n\nВопросы:\n1. Расскажи про себя\n2. Итересная задача которую делал\n3. Почему ищешь работу\n4. Типы данных\n5. == vs === \n6. Что выведет в консоли Number(' 12 3 ')\n7. Let var const разница\n8. С вызовом функций  были вопросы не записал\n9. С созданием массива 4 разных варианта, есть только ответ\n10. [].push(1,2).unshift.length ( будет ошибка)\n11. '22' && [] && 1 && null && undefined  что будет\n12. Пару задач на промисы тож...",
        "full_content": "2025-03-05 10:52:39\n RdK -> 2071074234:\nProoftech IT 2 этап\nНаписала  hr\nЗП: 270\n\nВопросы:\n1. Расскажи про себя\n2. Итересная задача которую делал\n3. Почему ищешь работу\n4. Типы данных\n5. == vs === \n6. Что выведет в консоли Number(' 12 3 ')\n7. Let var const разница\n8. С вызовом функций  были вопросы не записал\n9. С созданием массива 4 разных варианта, есть только ответ\n10. [].push(1,2).unshift.length ( будет ошибка)\n11. '22' && [] && 1 && null && undefined  что будет\n12. Пару задач на промисы тоже не записал  что выведет в консоль (не записал)\n13. расскажи про ЕвентЛуп\n\nЗадачи\n\nconst palindrom = (str) => {\n  return str === str.split('').reverse().join('');\n};\n\nconst pasteArray = (arr1, arr2, startIndex) => {\n  return arr1.map((val, index) => \n    index >= startIndex && index < startIndex + arr2.length ? arr2[index - startIndex] : val\n  );\n};\nconst promiseAll = (proms) => { \n  const result = []; \n  let count = 0; \n \n  return new Promise((resolve, reject) => { \n    proms.forEach((pr, idx) => { \n      pr.then((res) => { \n        result[idx] = res; \n        count += 1; \n        if (count === proms.length) resolve(result); \n      }).catch(reject); \n    }); \n  }); \n};"
      },
      {
        "timestamp": "2025-03-03 18:50:51",
        "content": "2025-03-03 18:50:51\n Nikolai -> 2071074234:\nProoftech IT 1 этап\nhttps://prooftechit.com/hr/?vacancy_id=276\nЗП: 270\n\nВопросы:\n1. Какие селекторы знаешь? \n2. Приоритет селекторов в числовых значениях.\n3. Что такое медиазапросы и для чего применяются?\n4. Какие использовал препроцессоры?\n5. Как можно выровнять элемент по центру (с абстрактной задачкой)? Какие способы знаешь?\n6. Для чего использовал переменные в CSS? Для каких-нибудь хитрых применений?\n7. Работал ли с анимацией?\n8. Различия между пос...",
        "full_content": "2025-03-03 18:50:51\n Nikolai -> 2071074234:\nProoftech IT 1 этап\nhttps://prooftechit.com/hr/?vacancy_id=276\nЗП: 270\n\nВопросы:\n1. Какие селекторы знаешь? \n2. Приоритет селекторов в числовых значениях.\n3. Что такое медиазапросы и для чего применяются?\n4. Какие использовал препроцессоры?\n5. Как можно выровнять элемент по центру (с абстрактной задачкой)? Какие способы знаешь?\n6. Для чего использовал переменные в CSS? Для каких-нибудь хитрых применений?\n7. Работал ли с анимацией?\n8. Различия между последним стандартом HTML и предыдущими?\n9. Типы данных в JS какие есть?\n10. Отличие стрелочной от обычной?\n11. var let const отличия?\n12. Как работает event loop?\n13. Как можно запланировать микрозадачу?\n14. Если есть постоянный процесс который генерит микрозадачи заблочит ли он event loop?\n15. Что такое Promise, какие есть методы?\n16. Какие методы применения Promise? Какой используешь? (async await)\n17. Применял ли генераторы?\n18. Применял ли на практике Map Set? В чем отличие Map Set? \n19. Что происходит после того как вбил в строку браузера URL?\n20. В каком месте event loop используется requestAnimationFrame?\n21. Чем тип отличается от интерфейса?\n22. И & от ИЛИ | чем отличается?\n23. Что такое generics?\n24. Как можно типизировать json внутри которого есть вложенное свойство json (рекурсивная вложенность)? \n25. Как сделать интрефейс чтобы часть полей была опциональной, а часть опустить? \n\"26. Дан интерфейс в него вложен еще один интерфейс, а в нем поля со значениями string или number, можно\nли сделать так чтобы вместо этих значний была функция возвращающая string или number?\"\n27. Что такое Virtual DOM, как устроен и работает? Эвристический алгоритм\n28. Что такое хуки и какие использовал в работе?\n29. Расскажи про Context где использовал? Какой минус у Context?\n30. Какие есть методы оптимизации работы приложений?\n31. С какими системами CI/CD работал? \n32. Какие методы работы с ветками встречал? \n33. Какой был gitflow?\n34. Чем отличается merge от rebase?\n35. Есть несколько коммитов и попросили в один объеденить - как это сделать? (засквошить)\n\nСсылка: https://youtu.be/sZ6PZg2vGaw\nУспех собеса: пока неизвестно\nФибек: добавлю позже как станет известен результат"
      },
      {
        "timestamp": "2025-02-26 07:28:23",
        "content": "2025-02-26 07:28:23\n RdK -> 2071074234:\n1. Prooftech IT 1 этап\n2. Написал hr\n3. Зп от 270\n4. Вопросы\n5. Что выводит в консоль\n6. Что такое прототипы и как происходит наследованные\n7. Как сделать неизменяемые поля объекта (Object.freeze)\n8. Как проверить два объекта что они равны или нет \n(через JSON.stringify(value) он захотел. Нужен цикл как на скрине все это устно \n9. Какие есть типы в js\n10. Чем отличается map от reduce  \n11. Что такое промисы\n12. Отличия promise All promise allSetteled\n13. К...",
        "full_content": "2025-02-26 07:28:23\n RdK -> 2071074234:\n1. Prooftech IT 1 этап\n2. Написал hr\n3. Зп от 270\n4. Вопросы\n5. Что выводит в консоль\n6. Что такое прототипы и как происходит наследованные\n7. Как сделать неизменяемые поля объекта (Object.freeze)\n8. Как проверить два объекта что они равны или нет \n(через JSON.stringify(value) он захотел. Нужен цикл как на скрине все это устно \n9. Какие есть типы в js\n10. Чем отличается map от reduce  \n11. Что такое промисы\n12. Отличия promise All promise allSetteled\n13. Как еще можно асинхронно выполнить код  (webworkers и serwerworkers)\n14. Отличия webworkers от serwerworkers (что делают)\n15. Отличие динамической типизации от статической\n16. Что такое declare TS\n17.  Что такое Type guards\n18. Отличие interface type\n19. Методы жизненного цикла в UseEffect\n20. Оптимизация в реакте (memo useMemo useCallback)\n21. Отличие useLayutEfffect\n22. useRef и forwardRef"
      },
      {
        "timestamp": "2024-11-01 14:08:11",
        "content": "2024-11-01 14:08:11\n андрей -> 2071074234:\n1.Prooftech IT в Газпром\n2.ЗП 200к\nВопросы\n1. Сколько тегов Header, footer, main может быть на странице. Если есть section, и там есть эти теги\n2. Специфичность селекторов\n3. Откуда у примитивов методы\n4. Как будет отсортирован массив чисел с помощью sort() \n5. Отличие Arrow function от declaration\n6. \nconsole.log(1);\nsetTimeout(() => console.log(2), 0);\nnew Promise((resolve, reject) => {\n  console.log(3);\n  reject();\n})\n  .then(() => console.log(4))\n  ...",
        "full_content": "2024-11-01 14:08:11\n андрей -> 2071074234:\n1.Prooftech IT в Газпром\n2.ЗП 200к\nВопросы\n1. Сколько тегов Header, footer, main может быть на странице. Если есть section, и там есть эти теги\n2. Специфичность селекторов\n3. Откуда у примитивов методы\n4. Как будет отсортирован массив чисел с помощью sort() \n5. Отличие Arrow function от declaration\n6. \nconsole.log(1);\nsetTimeout(() => console.log(2), 0);\nnew Promise((resolve, reject) => {\n  console.log(3);\n  reject();\n})\n  .then(() => console.log(4))\n  .catch(() => console.log(5));\nconsole.log(6);\n7.\n// какой будет тип\nconst point = {\n  x: 10,\n  y: 20,\n};\ntype T1 = typeof point;\ntype T2 = keyof T1;\n8. \n// какой будет тип test\nlet test\ntest = 123\n9. В каких ситуация можно сталкнуться с типом never\n10. \n// это валидный код?\nlet test: 'hello' = 'hello'\n11.\n// какой будет тип name\nconst name = 'ivan'\n12. Эмитация componentDidMount() используя хуки\n13. Как реализовать бесконечный скролинг карточек на странице\n14. Виртуализация списка\n15. \n\nНапишите функцию removeDuplicates, которая принимает массив и возвращает новый массив без дубликатов.\n*/\nconst removeDuplicates = () => {};\nconsole.log(removeDuplicates([1, 2, 2, 3, 4, 4, 5]));\n// [1, 2, 3, 4, 5]\n16. \n// Напишите функцию, которая возвращает\n//плоскую версию массива (глубина вложенности неизвестна) */\nconst flat = () => {};\n\nconsole.log(flat([[0, [1, [2]]], [3, [4, 5, 6], 7], [8], 9, [10]]));\n// [0,1,2,3,4,5,6,7,8,9,10]"
      }
    ]
  },
  {
    "company": "Автомакон",
    "count": 4,
    "records": [
      {
        "timestamp": "2024-11-11 06:02:05",
        "content": "2024-11-11 06:02:05\n Сергей -> 2071074234:\nКомпания: Автомакон\nЗП: 200+\nВопросы:\n- Про опыт поговорили\n- задача на SetCount(count+1) vs setCount(prev => prev+1), что если из этих вариантов подряд в одном действии вызывать\n- EventLoop\n- Как можно добавить потоки в JS\n- Подробно про redux, какая последовательность действий\n- Задача на промисы\n- Про asnyc и defer\n- про Event Bus\n- Подробно про авторизацию, access token, refresh где хранятся\n- Session/localStorage/indexDB\n- cdn",
        "full_content": "2024-11-11 06:02:05\n Сергей -> 2071074234:\nКомпания: Автомакон\nЗП: 200+\nВопросы:\n- Про опыт поговорили\n- задача на SetCount(count+1) vs setCount(prev => prev+1), что если из этих вариантов подряд в одном действии вызывать\n- EventLoop\n- Как можно добавить потоки в JS\n- Подробно про redux, какая последовательность действий\n- Задача на промисы\n- Про asnyc и defer\n- про Event Bus\n- Подробно про авторизацию, access token, refresh где хранятся\n- Session/localStorage/indexDB\n- cdn"
      },
      {
        "timestamp": "2024-10-30 10:36:43",
        "content": "2024-10-30 10:36:43\n memphis -> 2071074234:\n«Автомакон»\n- зп: 250\n- запись: https://www.youtube.com/watch?v=Ehq04o9eHKY\n- вакансия: https://job.automacon.ru/web_dev\nстатус: ⌛️",
        "full_content": "2024-10-30 10:36:43\n memphis -> 2071074234:\n«Автомакон»\n- зп: 250\n- запись: https://www.youtube.com/watch?v=Ehq04o9eHKY\n- вакансия: https://job.automacon.ru/web_dev\nстатус: ⌛️"
      },
      {
        "timestamp": "2024-09-23 18:00:12",
        "content": "2024-09-23 18:00:12\n Никита -> 2071074234:\n— Название Автомакон\n— Вакансия https://simferopol.hh.ru/vacancy/104393975?hhtmFrom=employer_vacancies\n— зп: 270net назвал\n— видео:",
        "full_content": "2024-09-23 18:00:12\n Никита -> 2071074234:\n— Название Автомакон\n— Вакансия https://simferopol.hh.ru/vacancy/104393975?hhtmFrom=employer_vacancies\n— зп: 270net назвал\n— видео:"
      },
      {
        "timestamp": "2024-07-07 12:26:26",
        "content": "2024-07-07 12:26:26\n dm . -> 2071074234:\n- Автомакон\n- https://simferopol.hh.ru/vacancy/102196928?hhtmFrom=employer_vacancies\n- ЗП: 200-250 gross\n- Задачи:\n1) Типизировать объект comments:\n ts\ninterface Comment<T> {\n    id: T;\n    text: string;\n    children?: Comment<T>[]; \n}\n- Вопросы:\n1) Какая разница между типом и интерфейсом?\n2) В реакт отрисовать комментарии так, что можно было по кнопке \"+\" открывать и скрывать вложенные комментарии.\n \nconst comments: Comment<number>[] = [\n  {\n    id: 1,\n ...",
        "full_content": "2024-07-07 12:26:26\n dm . -> 2071074234:\n- Автомакон\n- https://simferopol.hh.ru/vacancy/102196928?hhtmFrom=employer_vacancies\n- ЗП: 200-250 gross\n- Задачи:\n1) Типизировать объект comments:\n ts\ninterface Comment<T> {\n    id: T;\n    text: string;\n    children?: Comment<T>[]; \n}\n- Вопросы:\n1) Какая разница между типом и интерфейсом?\n2) В реакт отрисовать комментарии так, что можно было по кнопке \"+\" открывать и скрывать вложенные комментарии.\n \nconst comments: Comment<number>[] = [\n  {\n    id: 1,\n    text: \"message 1\",\n    children: [\n  {\n    id: 2,\n    text: \"message 2\"\n  }\n]\n  }\n]\n3) Имитировать подгрузку новых комментариев и на 2 секунды показывать лоадер перед показом вложенных комментариев."
      }
    ]
  },
  {
    "company": "Промсвязьбанк",
    "count": 4,
    "records": [
      {
        "timestamp": "2024-12-11 12:56:02",
        "content": "2024-12-11 12:56:02\n Mikhail Sorokin -> 2071074234:\nПромсвязьбанк\nВакансия — https://hh.ru/vacancy/106962131\nЗп — на тот момент не обсуждалось, я называл желаемую сумму от 300 000 на руки",
        "full_content": "2024-12-11 12:56:02\n Mikhail Sorokin -> 2071074234:\nПромсвязьбанк\nВакансия — https://hh.ru/vacancy/106962131\nЗп — на тот момент не обсуждалось, я называл желаемую сумму от 300 000 на руки"
      },
      {
        "timestamp": "2024-08-29 18:30:19",
        "content": "2024-08-29 18:30:19\n Kirill Anikeev -> 2071074234:\nПСБ (Промсвязьбанк)\nссылка: https://hh.ru/vacancy/88892284\nзп: 300\nВопросы:\nрассказать про опыт (долго общались)\nметоды у примитивов\nхранение информации в браузере\nкоманды git\nмного вопросов про классы\nподробно про solid (применение каждого пункта)\nевент луп\nwhile(true) зависнет ли ?\nзадача на реализацию стека и очереди\nclass Queue{\n    constructor(){\n        this.stack1 = new Stack();\n        this.stack2 = new Stack();\n    }\n    enqueue(){\n    ...",
        "full_content": "2024-08-29 18:30:19\n Kirill Anikeev -> 2071074234:\nПСБ (Промсвязьбанк)\nссылка: https://hh.ru/vacancy/88892284\nзп: 300\nВопросы:\nрассказать про опыт (долго общались)\nметоды у примитивов\nхранение информации в браузере\nкоманды git\nмного вопросов про классы\nподробно про solid (применение каждого пункта)\nевент луп\nwhile(true) зависнет ли ?\nзадача на реализацию стека и очереди\nclass Queue{\n    constructor(){\n        this.stack1 = new Stack();\n        this.stack2 = new Stack();\n    }\n    enqueue(){\n        //put implementation here\n    }\n    dequeue(){\n        //put implementation here\n    }\n}"
      },
      {
        "timestamp": "2024-08-29 11:28:55",
        "content": "2024-08-29 11:28:55\n аыеъа -> 2071074234:\nНазвание: ПСБ (Промсвязьбанк)  \nЗП: не обсуждали\n  \nВопросы: те же вопросы что и выше, (поиск по сообщениям \"ПСБ\" и \"Промсвязьбанк\") но есть дополнение:\n\nЗадача на нахождение числа в середине из 2 массивов, интервьюер ожидает решение без слияния массивов, тоесть за O(1) по памяти\n\nЗадача на что выведется в консоль, кода не осталось, но есть ответ - 6 7 1 3 4 5 \n\nwhile (true) будет ли переполнение стека? Ответ — нет, чтобы произошло переполнение, нужна ре...",
        "full_content": "2024-08-29 11:28:55\n аыеъа -> 2071074234:\nНазвание: ПСБ (Промсвязьбанк)  \nЗП: не обсуждали\n  \nВопросы: те же вопросы что и выше, (поиск по сообщениям \"ПСБ\" и \"Промсвязьбанк\") но есть дополнение:\n\nЗадача на нахождение числа в середине из 2 массивов, интервьюер ожидает решение без слияния массивов, тоесть за O(1) по памяти\n\nЗадача на что выведется в консоль, кода не осталось, но есть ответ - 6 7 1 3 4 5 \n\nwhile (true) будет ли переполнение стека? Ответ — нет, чтобы произошло переполнение, нужна рекурсия\n \n<section> \n<div>A</div>\n<div>B</div> \n</section>\nПеречислить все способы поставить A и B в одну строку\n\nКак выглядит интерфейс из TS в JS'е? Ответ — Никак, типы из TS не видны при транспиляции в JS\n \nЗадача с литкода, просто объяснил решение устно и интервьюера это устроило. https://leetcode.com/problems/valid-anagram/description/"
      },
      {
        "timestamp": "2024-07-14 02:55:01",
        "content": "2024-07-14 02:55:01\n Евгений Лямин -> 2071074234:\n— Промсвязьбанк\n— вакансия: https://spb.hh.ru/vacancy/88892284?hhtmFrom=employer_vacancies\n— зп: сказал 250-280\n— Вопросы:\n1. Про опыт, больше про задачи которыми гордишься\n2. Чем бы хотелось заниматься, какой проект ищешь?\n4. Как развиваешься?\n5. Расскажи про Event Loop\n6. Можем ли мы запланировать много requestanimationfraim?  как они будут выполнятся\n7. установилось соеднинение с сервером какой метод http запроса отправляется после этого на се...",
        "full_content": "2024-07-14 02:55:01\n Евгений Лямин -> 2071074234:\n— Промсвязьбанк\n— вакансия: https://spb.hh.ru/vacancy/88892284?hhtmFrom=employer_vacancies\n— зп: сказал 250-280\n— Вопросы:\n1. Про опыт, больше про задачи которыми гордишься\n2. Чем бы хотелось заниматься, какой проект ищешь?\n4. Как развиваешься?\n5. Расскажи про Event Loop\n6. Можем ли мы запланировать много requestanimationfraim?  как они будут выполнятся\n7. установилось соеднинение с сервером какой метод http запроса отправляется после этого на сервер\n8. как браузер понимает что нам пришла html и ее надо как то обработать\n9. Как будет себя вести браузер, как отобразит, если у нас а head link на стили размером 5 мб а в body один тег H1\n10. Расскажи про атрибуты  тега  script. Про asynс  и defer\n11. Какие занешь браузерный апи и вобще способы что бы сохранять информацию\n12. Отличие SessionStorage и LocalStorage\n13. Что таккое cookie? Какие особенности? Какие настройки cookie?\n14. Какие есть способы интеграции с бекэндом?\n15. Расскажи про Rest api\n16. Какие паттерны шаблоны проектирования есть\n16. Расскажи про ООП\n17. Раскажи что такое SOLID\n\n— Задачи\n1.\nclass Queue {\n    constructor() {\n        this.stack1 = new Stack();\n        this.stack2 = new Stack();\n    }\n\n    // Добавить в очередь\n    enqueue(data) {\n        this.stack1.push(data);\n    }\n\n    // Вернуть следующий в очереди\n    dequeue() {\n        if (this.stack2.size() === 0) {\n            while (this.stack1.size() > 0) {\n                this.stack2.push(this.stack1.pop());\n            }\n        }\n        return this.stack2.pop();\n    }\n\n    // Сколько в очереди\n    count() {\n        return this.stack1.size() + this.stack2.size();\n    }\n}\n2.  Сделать оптимальный вариант, это O(k), брать последние элементы масива сравнивать и записывать пока не наберем k елементов, смысла пов сему массива проходить нету\n// Есть два сервиса которые возвращают список активных заявок на кредит\n// отсортированных по возрастанию id,\n// id - сквозное для обоих сервисов,\n// необходимо получить список из k последних заявок на кредит:\nconst getDecisions1 = [\n  { id: 1, result: 'approved' },\n  { id: 3, result: 'waiting' },\n  { id: 15, result: 'approved' },\n  { id: 20, result: 'approved' },\n  { id: 26, result: 'waiting' },\n  { id: 30, result: 'approved' },\n];\n\nconst getDecisions2 = [\n  { id: 2, result: 'approved' },\n  { id: 4, result: 'waiting' },\n  { id: 14, result: 'approved' },\n  { id: 16, result: 'waiting' },\n  { id: 23, result: 'waiting' },\n  { id: 31, result: 'approved' },\n  { id: 32, result: 'approved' },\n];\n\nconst getLastDecisions = (decision1, decision2, k) => {}\n\nconsole.log(getLastDecisions(getDecisions1, getDecisions2, 6));\n3.  Что бцудет выведено в консоль? как вывести все буквы?\nPromise.reject(\"a\")\n  .catch((p) => p + \"b\")\n  .catch((p) => p + \"c\")\n  .then((p) => p + \"d\")\n  .then((p) => console.log(p));\n\nconsole.log(\"f\");"
      }
    ]
  },
  {
    "company": "Спортс",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-07-18 14:50:14",
        "content": "2025-07-18 14:50:14\n Игорь -> 2071074234:\nСпортс Финал\nВакансия: написал сам hr\nЗП: 300+\n\n1) Как пришел в разработку\n2) Почему именно фронтенд\n3) Расскажи про первое место работы\n4) Почему принимал решения уйти с прошлых мест работы\n5) Расскажи про интересные задачи\n6) Что ищешь / Что хотел бы видеть?\n7) С чем бы не хотел столкнуться?\n8) Что по деньгам?",
        "full_content": "2025-07-18 14:50:14\n Игорь -> 2071074234:\nСпортс Финал\nВакансия: написал сам hr\nЗП: 300+\n\n1) Как пришел в разработку\n2) Почему именно фронтенд\n3) Расскажи про первое место работы\n4) Почему принимал решения уйти с прошлых мест работы\n5) Расскажи про интересные задачи\n6) Что ищешь / Что хотел бы видеть?\n7) С чем бы не хотел столкнуться?\n8) Что по деньгам?"
      },
      {
        "timestamp": "2025-07-08 15:00:35",
        "content": "2025-07-08 15:00:35\n Игорь -> 2071074234:\nКомпания: Спортс (Sports.ru) \nСсылка на ваку: сам написал hr\nВилка: хз (назвал 250-300, сказали в вилке все норм)\n\n1. вопросы по опыту\n2. грейд разработчиков в команде?\n3. как код ревью проходит?\n4. если уйдешь с проекта как думаешь что станет работать хуже?\n5. представь что есть три открытые вкладки (потом вкладка на пк и тф) перечисли способы общения между ними?\n6. как разделяли зону ответственности на проектах?\n7. как по загруженности на проектах?\n8. ...",
        "full_content": "2025-07-08 15:00:35\n Игорь -> 2071074234:\nКомпания: Спортс (Sports.ru) \nСсылка на ваку: сам написал hr\nВилка: хз (назвал 250-300, сказали в вилке все норм)\n\n1. вопросы по опыту\n2. грейд разработчиков в команде?\n3. как код ревью проходит?\n4. если уйдешь с проекта как думаешь что станет работать хуже?\n5. представь что есть три открытые вкладки (потом вкладка на пк и тф) перечисли способы общения между ними?\n6. как разделяли зону ответственности на проектах?\n7. как по загруженности на проектах?\n8. с чем бы не хотел работать?\n9. что хотел бы поднатоскать/изучить?\n10. мы пишем на Vue тебе норм, как к такому относишься?\n\nЗадачи как здесь - https://t.me/c/2071074234/489/138602"
      },
      {
        "timestamp": "2025-06-19 07:57:21",
        "content": "2025-06-19 07:57:21\n Артём -> 2071074234:\nКомпания: Спортс (Sports.ru)\nЗп: от 300\nФинал\n\n1) Как пришел в разработку\n2) Почему именно фронтенд\n3) Расскажи про все места работы где был, по порядку\n4) Почему принимал решения уйти с прошлых мест работы\n5) Расскажи про интересные задачи\n6) Чем гордишься на проекте (рассказать про что-то чего нет в резюме)\n7) Что не нравится в текущей команде, что хотелось бы улучшить\n8) Что нравится в команде, что хотел бы \"перенести\" на новую команду\n9) Как подходиш...",
        "full_content": "2025-06-19 07:57:21\n Артём -> 2071074234:\nКомпания: Спортс (Sports.ru)\nЗп: от 300\nФинал\n\n1) Как пришел в разработку\n2) Почему именно фронтенд\n3) Расскажи про все места работы где был, по порядку\n4) Почему принимал решения уйти с прошлых мест работы\n5) Расскажи про интересные задачи\n6) Чем гордишься на проекте (рассказать про что-то чего нет в резюме)\n7) Что не нравится в текущей команде, что хотелось бы улучшить\n8) Что нравится в команде, что хотел бы \"перенести\" на новую команду\n9) Как подходишь к оптимизации приложения"
      },
      {
        "timestamp": "2025-06-19 07:41:57",
        "content": "2025-06-19 07:41:57\n Артём -> 2071074234:\nКомпания: Спортс (Sports.ru)\nЗп: от 300\n\n1) вопросы по опыту\n2) какой грейд в команде у остальных разработчиков из фронтов\n3) как действуешь когда приходит задача без тз\n4) как код ревью проходит\n5) как развиваешься? что изучаешь/читаешь\n6) писали тесты на проекте? на чем и какие\n7) если уйдешь с проекта, как думаешь, что станет работать хуже или какой функционал на проекте 'висит' на тебе?\n8) Кому передашь этот функционал как уйдешь\n9) Представь что ест...",
        "full_content": "2025-06-19 07:41:57\n Артём -> 2071074234:\nКомпания: Спортс (Sports.ru)\nЗп: от 300\n\n1) вопросы по опыту\n2) какой грейд в команде у остальных разработчиков из фронтов\n3) как действуешь когда приходит задача без тз\n4) как код ревью проходит\n5) как развиваешься? что изучаешь/читаешь\n6) писали тесты на проекте? на чем и какие\n7) если уйдешь с проекта, как думаешь, что станет работать хуже или какой функционал на проекте 'висит' на тебе?\n8) Кому передашь этот функционал как уйдешь\n9) Представь что есть 3 открытые вкладки с одного домена, перечисли все способы общения между ними\n10) Представь что есть страница которая долго грузится/лагает. Как бы ты оптимизировал её и с чего бы начинал\n\n11) задача на Event Loop\nconst promise1 = new Promise((res, rej) => {\n    setTimeout(() => {\n        res(1)\n    }, 300)\n})\n\npromise1.then((res) => console.log(res))\n    .then((res1) => console.log(res1))\n    .then((res3) => {\n        res3++\n        console.log(res3)\n        console.log(res1)\n    }).catch((e) => console.error(e))\n12) Реализвать LoggerService\nclass LoggerService {\n    static instance\n\n    constructor() {\n        if (LoggerService.instance) {\n           throw new Error(\"Use LoggerService.getInstance() instead of new.\");\n        }\n        LoggerService.instance = this\n    }\n\n    static getInstance() {\n        if (!LoggerService.instance) {\n            LoggerService.instance = new LoggerService()\n        }\n        return LoggerService.instance\n    }\n\n    log(message) {\n        console.log(`[SPORTS:LOG]${message}`)\n    }\n\n    error(message) {\n        console.error(`[SPORTS:LOG]${message}`)\n    }\n}\n13) Смержить массивы\nconst sites = [\n    {id: 1, name: 'site 1'},\n    {id: 2, name: 'site 2'},\n\n]\n\nconst pages = [\n    {id: 1121, title: 'page 1', site_id: 1},\n    {id: 2234, title: 'page 2', site_id: 2},\n    {id: 3321, title: 'page 3', site_id: 1},\n\n]\n\n\nconst joinSitesToPages = (sites, pages) => {\n    const siteIdToSite = sites.reduce((acc, site) => {\n        acc[site.id] = site\n        return acc\n    }, {})\n\n    return pages.map((page) => ({\n        id: page.id,\n        title: page.title,\n        site: siteIdToSite[page.site_id]\n    }))\n\n}"
      }
    ]
  },
  {
    "company": "Ай-Теко",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-07-10 18:16:31",
        "content": "2025-07-10 18:16:31\n . Salamov -> 2071074234:\nНазвание компании: Ай-Теко\nВакансия : https://hh.ru/vacancy/122037424?from=share_ios\n\nВопросы: \n1) Расскажи о последнем проекте, чем занимался\n2) На чем был написан Бэк\n\n3) в чем разница между type u interface\n4) Расскажи про TypeGuard \n5) после выхода релиза в проекте и обновляется приложение, расскажи подробно пошагово как ты получаешь код от редактора. (Как у тебя в репозиторий попадает код)\n\n6) Что такое коммит хуки\n7) Кто настраивал линтеры \n8) ...",
        "full_content": "2025-07-10 18:16:31\n . Salamov -> 2071074234:\nНазвание компании: Ай-Теко\nВакансия : https://hh.ru/vacancy/122037424?from=share_ios\n\nВопросы: \n1) Расскажи о последнем проекте, чем занимался\n2) На чем был написан Бэк\n\n3) в чем разница между type u interface\n4) Расскажи про TypeGuard \n5) после выхода релиза в проекте и обновляется приложение, расскажи подробно пошагово как ты получаешь код от редактора. (Как у тебя в репозиторий попадает код)\n\n6) Что такое коммит хуки\n7) Кто настраивал линтеры \n8) Как работает Хаски\n9) Расскажи про сборку бандла\n10) Какие бывают уровни оптимизации помимо тришэкинга\n11) Какая структура была в проекте (микрофонты, монорепо и т.п.)\n12) Принципы микрофонтов\n\n\nЗадачи: \n\n```ts\n\n//1) Напиши типизацию: \nfunction getUserInfo(firstName, lastName, birthYear, country) {\n  return ${firstName} ${lastName}, born in ${birthYear}, lives in ${country};\n}\n```\n\n\n//2) сделай рефакторинг кода : \nAsync Function fetchReq(q) {\n  const response = fetch(‘https://some?{q}’\n  return response.json()\n}\n\n\ndocument.querySelertol(“#input”).addEventListener(“keyup”, async e => {\n   const query = e.target.value\n   await fetchReq(query)\n })\n\n\n//3) Сделать рефакторинг: \n\nInterface Vanya {\n  name: string\n  surname: string\n  number: string\n}\n\ninterface Masha {\n   name: string\n   surname: string\n   number: number\n}\n\ninterface Volodya {\n  name: string\n  surname: string\n  phone: {\n     ex: 134\n     re: 873\n  }\n}"
      },
      {
        "timestamp": "2025-04-07 13:53:02",
        "content": "2025-04-07 13:53:02\n Максим Соломыкин -> 2071074234:\nКомпания - ИЦ Ай-теко (в МКБ)\nЗП - 180к\nВакансия - https://hh.ru/vacancy/119217606?from=applicant_recommended&hhtmFrom=main\n\nВопросы \n- вендорные преф\n- satisfies ts\n- Proxy и Reflect\n- Event loop\n- тег picture\n- can i use\n- web vitails(подробно)\n- intersection observer\n- как оптимизировал приложения(gzip, React.lazy, code chancks, кэширование, useMemo, useCallback)\n- useEffect useLayoutEffect\n- rem em\n- уязвимости \n- type и interface\n\nЗадача:...",
        "full_content": "2025-04-07 13:53:02\n Максим Соломыкин -> 2071074234:\nКомпания - ИЦ Ай-теко (в МКБ)\nЗП - 180к\nВакансия - https://hh.ru/vacancy/119217606?from=applicant_recommended&hhtmFrom=main\n\nВопросы \n- вендорные преф\n- satisfies ts\n- Proxy и Reflect\n- Event loop\n- тег picture\n- can i use\n- web vitails(подробно)\n- intersection observer\n- как оптимизировал приложения(gzip, React.lazy, code chancks, кэширование, useMemo, useCallback)\n- useEffect useLayoutEffect\n- rem em\n- уязвимости \n- type и interface\n\nЗадача: Реализовать метод scramble, изначально это просто функция с параметрами, написать полностью реализацию внутри функции"
      },
      {
        "timestamp": "2024-12-05 16:57:30",
        "content": "2024-12-05 16:57:30\n Сергей -> 2071074234:\nКомпания: ай-теко\nВакансия: hr написала сама\nВопросы:\n- Довольно подробный разговор про опыт, поведенческое интервью от части. Большую часть времени занял\n- Самая интересная задача, в чем ее сложность\n- С чем хотел бы работать\n- Какие у тебя сильные и слабые стороны\n- Способы оптимизации\n- Props\n- Context\n- Событийный цикл\n- Задача сделать тудулист, с добавлением и удалением элементов",
        "full_content": "2024-12-05 16:57:30\n Сергей -> 2071074234:\nКомпания: ай-теко\nВакансия: hr написала сама\nВопросы:\n- Довольно подробный разговор про опыт, поведенческое интервью от части. Большую часть времени занял\n- Самая интересная задача, в чем ее сложность\n- С чем хотел бы работать\n- Какие у тебя сильные и слабые стороны\n- Способы оптимизации\n- Props\n- Context\n- Событийный цикл\n- Задача сделать тудулист, с добавлением и удалением элементов"
      },
