    ]
  },
  {
    "company": "Digital Sector",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-05-28 15:01:18",
        "content": "2025-05-28 15:01:18\n Егор -> 2071074234:\nDigital sector\n140к-160к (кажется для них и это много) сейчас в вакансии стоит до 140к\nвакансия: https://krasnodar.hh.ru/vacancy/120465627 (только офис в Краснодаре)\n\n-кратко о себе\n-работал с формами, как работал? что использовал?\n-писал свои хуки?\n-flex vs grid\n-тег picture\n-как оцентровать див\n- box-sizing в CSS\n- стилизация чекбоксов\n-display: none, opacity, hidden (их отличия)\n-страница долго загружается, что будешь делать?\n-как применить ленивую заг...",
        "full_content": "2025-05-28 15:01:18\n Егор -> 2071074234:\nDigital sector\n140к-160к (кажется для них и это много) сейчас в вакансии стоит до 140к\nвакансия: https://krasnodar.hh.ru/vacancy/120465627 (только офис в Краснодаре)\n\n-кратко о себе\n-работал с формами, как работал? что использовал?\n-писал свои хуки?\n-flex vs grid\n-тег picture\n-как оцентровать див\n- box-sizing в CSS\n- стилизация чекбоксов\n-display: none, opacity, hidden (их отличия)\n-страница долго загружается, что будешь делать?\n-как применить ленивую загрузку к картинкам?\n-глубокое и неглубокое копирование объекта\n- Virtual Dom?\n- Portal в React\n- вопрос про cleanup в useEffect\n-localstorage, session, cookie\n-как избежать props drilling?\n- context и state manager\n\n1 задача\n\n// что выведет? (доп. как исправить? ответ: сделать копию объекта)\nconst a = {\n    name: \"Петя\"\n}\nconst b = a\nb.name = \"Вася\"\n\nconsole.log(b.name) // Вася\nconsole.log(a.name) // Вася\nЗадача 2\nfunction test() {\n    let num = 1;\n\n    return function () {\n        console.log(num);\n        num++;\n    };\n}\n\ntest()(); // что выведет console.log(num)? 1\ntest()(); // что выведет console.log(num)? 1\nЗадача 3\n// в какой последовательности?\nsetTimeout(() => {\n    console.log(1);\n});\n\nconst proml = new Promise((resolve, reject) => {\n    console.log(3);\n    return resolve(4);\n});\n\nconsole.log(2);\n\nproml.then((resp) => {\n    console.log(resp);\n});\n\n(function () {\n    console.log(5);\n})();\n// 3 2 5 4 1"
      },
      {
        "timestamp": "2025-05-22 09:38:04",
        "content": "2025-05-22 09:38:04\n Max -> 2071074234:\nDigital sector\n160к\nвакансия: https://krasnodar.hh.ru/vacancy/120465627 (только офис в Краснодаре)\nвопросы:\n- кратко о себе\n- работал с формами, как работал? что использовал?\n- писал свои хуки?\n- flex vs grid\n- тег picture\n- как оцентровать див\n- display: none, opacity?\n- страница долго загружается, что будешь делать?\n- как применить ленивую загрузку к картинкам?\n- intersectionObserver\n- load vs Domcontentload\n- глубокое и неглубокое копирование объекта\n- ...",
        "full_content": "2025-05-22 09:38:04\n Max -> 2071074234:\nDigital sector\n160к\nвакансия: https://krasnodar.hh.ru/vacancy/120465627 (только офис в Краснодаре)\nвопросы:\n- кратко о себе\n- работал с формами, как работал? что использовал?\n- писал свои хуки?\n- flex vs grid\n- тег picture\n- как оцентровать див\n- display: none, opacity?\n- страница долго загружается, что будешь делать?\n- как применить ленивую загрузку к картинкам?\n- intersectionObserver\n- load vs Domcontentload\n- глубокое и неглубокое копирование объекта\n- localstorage, session, cookie\n- как избежать props drilling?\n- + и - context и state manager\n- useRef\n1 Задача:\n// в какой последовательности?\nsetTimeout(() => {\n    console.log(1);\n});\n\nconst proml = new Promise((resolve, reject) => {\n    console.log(3);\n    return resolve(4);\n});\n\nconsole.log(2);\n\nproml.then((resp) => {\n    console.log(resp);\n});\n\n(function () {\n    console.log(5);\n})();\n// 3 2 5 4 1\n2 задача:\nfunction test() {\n    let num = 1;\n\n    return function () {\n        console.log(num);\n        num++;\n    };\n}\n\ntest()(); // что выведет console.log(num)? 1\ntest()(); // что выведет console.log(num)? 1\nЗадача 3:\n// что выведет? (доп. как исправить? ответ: сделать копию объекта)\nconst a = {\n    name: \"Петя\"\n}\nconst b = a\nb.name = \"Вася\"\n\nconsole.log(b.name) // Вася\nconsole.log(a.name) // Вася"
      }
    ]
  },
  {
    "company": "GhostBusters",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-18 10:32:02",
        "content": "2025-07-18 10:32:02\n Aintripin -> 2071074234:\nКомпания: GhostBusters (17.07.2025)\nВакансия: Frontend-разработчик (part time)\n\nЗП: от $10 до $15 в час\n\n2 этап:\n\n1. пытаемся отправить видос и аудио. не получается из-за инета. Как решить? Я предложил делать кеширование на стороне клиента в indexedDB. По размеру будет норм: в firefox там 2 гига лимит, chrome до 60% может использовать места диска. Если не хватит, попросим ещё. Предварительно смотреть через API сколько место есть и в зависимости от эт...",
        "full_content": "2025-07-18 10:32:02\n Aintripin -> 2071074234:\nКомпания: GhostBusters (17.07.2025)\nВакансия: Frontend-разработчик (part time)\n\nЗП: от $10 до $15 в час\n\n2 этап:\n\n1. пытаемся отправить видос и аудио. не получается из-за инета. Как решить? Я предложил делать кеширование на стороне клиента в indexedDB. По размеру будет норм: в firefox там 2 гига лимит, chrome до 60% может использовать места диска. Если не хватит, попросим ещё. Предварительно смотреть через API сколько место есть и в зависимости от этого менять битрейт/разрешение\n\n2. если у нас инет нестабильный и мы пытаемся его отправить, мы забиваем канал. В итоге ничё не отправляем, зависаем в этом кругу. А нам бы аудио отправить хотя бы. Как это сделать?\n\n3. Щас они собирают на бэке видосы в .webm формате. Самый ли это оптимальный способ?"
      },
      {
        "timestamp": "2025-07-18 10:31:16",
        "content": "2025-07-18 10:31:16\n Aintripin -> 2071074234:\nКомпания: GhostBusters (17.07.2025)\nВакансия: Frontend-разработчик (part time)\n\nЗП: от $10 до $15 в час\n\n1 этап:\n\nВопросы:\n1. Как вы объясните архитектуру webRTC и ключевые этапы установления соединения между двумя участниками? \n2. Какие API и стратегии вы бы использовали для адаптации media stream к изменяющимся условиям сети, например, для уменьшения задержек или улучшения качества при низкой пропускной способности?\n3. На сайте чат с AI, куда ты на...",
        "full_content": "2025-07-18 10:31:16\n Aintripin -> 2071074234:\nКомпания: GhostBusters (17.07.2025)\nВакансия: Frontend-разработчик (part time)\n\nЗП: от $10 до $15 в час\n\n1 этап:\n\nВопросы:\n1. Как вы объясните архитектуру webRTC и ключевые этапы установления соединения между двумя участниками? \n2. Какие API и стратегии вы бы использовали для адаптации media stream к изменяющимся условиям сети, например, для уменьшения задержек или улучшения качества при низкой пропускной способности?\n3. На сайте чат с AI, куда ты наговариваешь ответ, получается твой транскрипт и там кнопка \"редактировать\". Её убрать нужно. Вообще, оставить только вопросы от ИИ, чтобы юзер на своей стороне не видел свои ответы на вопросы. Раньше это делалось, когда было плохое распознавание.  \n4. При плохой скорости интернета у них может не записаться ответ. У меня в firefox вообще запись отказывалась писаться, в принципе. Говорили про то, как бы решал эти вопросы"
      }
    ]
  },
  {
    "company": "mos.ru",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-03-12 13:52:30",
        "content": "2025-03-12 13:52:30\n Nikolai -> 2071074234:\nИсходный код (mos.ru)\nЗП 220 на руки\nhttps://hh.ru/vacancy/117822377\n\n1. Отличия HTML5 от HTML предыдущих стандартов\n2. Какие атрибуты aria знаешь для поддержки доступности?\n3. Какой будет наверху квадрат, по середине, и внизу?\n\n.wrapper {\nposition: relative;\n}\n\n.red, .green, .blue {\nposition: absolute;\nwidth:120px;\nheight: 120px;\n}\n\n.green, .blue {\n top: 40px; \nleft: 40px;\n}\n\n.red {\nbackground-color: red; \nz-index: 2; \n}\n\n.green { \nbackground-color: \n...",
        "full_content": "2025-03-12 13:52:30\n Nikolai -> 2071074234:\nИсходный код (mos.ru)\nЗП 220 на руки\nhttps://hh.ru/vacancy/117822377\n\n1. Отличия HTML5 от HTML предыдущих стандартов\n2. Какие атрибуты aria знаешь для поддержки доступности?\n3. Какой будет наверху квадрат, по середине, и внизу?\n\n.wrapper {\nposition: relative;\n}\n\n.red, .green, .blue {\nposition: absolute;\nwidth:120px;\nheight: 120px;\n}\n\n.green, .blue {\n top: 40px; \nleft: 40px;\n}\n\n.red {\nbackground-color: red; \nz-index: 2; \n}\n\n.green { \nbackground-color: \ngreen; z-index: 1;\n}\n\nblue {\nbackground-color: blue; \nz-index: 3;\n}\n\n<div class=\"\"wrapper\"\">\n  <div class=\"\"red\"\">\n  <div class=\"\"green\"\">\n    <div class = \"\"blue\"\">\n\n4. Отличия var let ( всплытие, функциональная область видимости или глобальная, повторное объяление, \nсвойство объекта window в глобальной области)\n5. Что в консоли будет?\n\nvar a;\nconsole. log()?\na = 5;\nvar a = 10;\nconsole. log()?\nvar a;\nconsole. log()?\n\n6. Написать функцию счетчик (про замыкания вопрос) \n\nfunction a() {\n  let b = 0;\n  return function(){\n    return ++b;\n}\nconst c = a();\nc();\nc();\n\n7. Какие есть фазы у событий? \n8. Можно ли заменить срабатывание события со всплытия на погружение? (3 аргумент в addEventListener)\n9. Как перехватить событие отправки формы у родителя которое не отправилось( сделали event.preventDefault)? \nУ event есть логическое значение defaultPrevented - показывает были ли отмена по умполчанию тру или фолс.\"\n10. Как создать объект у которого нет прототипа? Object.create()\n11. Что в консоли будет и как исправить \n\ntry {\n    setTimeout(() => {\n        throw new Error('CustomError');\n    }, 1000);\n} catch (e) {\n    console.log(e);\n}\n\nОтвет:\n\ntry {\n    setTimeout(() => {\n        try {\n            throw new Error('CustomError');\n        } catch (e) {\n            console.log(e);\n        }\n    }, 1000);\n} catch (e) {\n    console.log(e);\n}\n\n12. Что значит статический анализ? Это анализ в процессе написания кода, то есть в процессе написания кода видим ошибки сразу.\n13. Что такое дженерики? \n14. Написать дженерик который будет возвращать все ключи типа которые в него передаем? \n(тут можно использовать object и Object)\n\n\ntype Student = {\n    age: number;\n    grade: string;\n}\n\n// type StudentKeys = ObjectKeys<Student>\n\ntype ObjectKeys<T extends Object> = keyof T\n\n15. Какой будет вывод и как поправить?\n\n\nconst [counter, setCounter] = useState(0);\n\nconst handleClick = () => {\n    setCounter(counter+1);\n    console.log({\n    };\n};\n\n<button onClick={handleClick}>increment</button>\n\n\n16. Как ререндер происходит? (Component => Snapshot => View)\n17. Загрузилась страница и нужно поставить фокус на заголовок после загрузки страницы\n\nconst headerRef = useRef();\n//\n<h1 ref={headerRef}>Заголовок</h1>\n\nответ:\nconst headerRef = useRef();\n\nuseEffect(() => {\n    headerRef.current.focus();\n}, []);\n//\n<h1 ref={headerRef} tabIndex=\"\"0\"\">Заголовок</h1>\n\n\nСсылка на запись: https://www.youtube.com/watch?v=sCGFt_nB8HU\nРезультат: фейл\nФидбек: До свидания братишка, подтянешь базу станешь мидлом)"
      },
      {
        "timestamp": "2024-10-31 08:46:55",
        "content": "2024-10-31 08:46:55\n Timofei Syromiatnikov -> 2071074234:\n— Компания: mos.ru\n— Вакансия: https://hh.ru/vacancy/108974710\n— ЗП: 250-280к\n— Вопросы:\n1) Расскажи что происходит после того как мы вбили ссылку на страницу и нажали enter (начиная с парсинга дома)\n2) Расскажи подробно все этапы, как происходит обновление данных в Redux\n3) Как принудительно обновить React компонент\n4) Как работает z-index и какие есть крайние случаи (был вопрос про случай где дочерний z-index был 3, а родительский 1, до...",
        "full_content": "2024-10-31 08:46:55\n Timofei Syromiatnikov -> 2071074234:\n— Компания: mos.ru\n— Вакансия: https://hh.ru/vacancy/108974710\n— ЗП: 250-280к\n— Вопросы:\n1) Расскажи что происходит после того как мы вбили ссылку на страницу и нажали enter (начиная с парсинга дома)\n2) Расскажи подробно все этапы, как происходит обновление данных в Redux\n3) Как принудительно обновить React компонент\n4) Как работает z-index и какие есть крайние случаи (был вопрос про случай где дочерний z-index был 3, а родительский 1, дочерний все равно унаследует родительский, т.е 1)\n5) Расскажи главные различия html4 от html5 (семантика и accessibility)\n6) Стоит ли нам оборачивать всё приложение в useMemo, useCallback, и почему?\n— Задачи:\n1) Напиши функцию, которая будет делить массив чисел на последовательные диапазоны\n[1,4,5,2,3,9,8,11,0] => \"0-5,8-9,11\"\n[1,4,3,2] => \"1-4\"\n[1,4] => \"1,4\"\n\nconst getRanges = (arr) => {}"
      }
    ]
  },
  {
    "company": "Cloud.Ru",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-08-29 18:38:23",
        "content": "2024-08-29 18:38:23\n Kirill Anikeev -> 2071074234:\ncloud.ru созвон с командой\nссылка: hr сама написала\nзп: 280-300\nВопросы:\nтехнических вопросов не было\nмного расспрашивали про опыт\nразличные софтовые вопросы. Типо сильные стороны, слабые стороны\nВ какой команде бы хотел работать?\nкак относишься к больному темпу разработки\nкак решал конфликтные вопросы?\nчто будешь делать, если начальник игнорирует твои идеи?\nчем отличается синьер от мидла?\nвопросы про общение с бизнесом?",
        "full_content": "2024-08-29 18:38:23\n Kirill Anikeev -> 2071074234:\ncloud.ru созвон с командой\nссылка: hr сама написала\nзп: 280-300\nВопросы:\nтехнических вопросов не было\nмного расспрашивали про опыт\nразличные софтовые вопросы. Типо сильные стороны, слабые стороны\nВ какой команде бы хотел работать?\nкак относишься к больному темпу разработки\nкак решал конфликтные вопросы?\nчто будешь делать, если начальник игнорирует твои идеи?\nчем отличается синьер от мидла?\nвопросы про общение с бизнесом?"
      },
      {
        "timestamp": "2024-08-22 18:43:03",
        "content": "2024-08-22 18:43:03\n Kirill Anikeev -> 2071074234:\n—Cloud.ru\nвакансия: hr сама написала\n-зп 300\nОчень позитивный интервьюер. Совсем не душный, много шутили, смеялись\nВопросы про опыт, про задачи\nвопросы про области видимости, разные мини задачки (к сожалению запись пришлось прервать так как комп не тянул, так что много задач потерялось)\nlet x = { a: 1, b: 2 };\nfunction fn(x) {\n  let c = x.a;\n  x.a = 5;\n  console.log(c); // 1\n}\nfn(x);\nconsole.log(x); // { a: 5, b: 2 }\nзадачки про промисы\nвопросы ...",
        "full_content": "2024-08-22 18:43:03\n Kirill Anikeev -> 2071074234:\n—Cloud.ru\nвакансия: hr сама написала\n-зп 300\nОчень позитивный интервьюер. Совсем не душный, много шутили, смеялись\nВопросы про опыт, про задачи\nвопросы про области видимости, разные мини задачки (к сожалению запись пришлось прервать так как комп не тянул, так что много задач потерялось)\nlet x = { a: 1, b: 2 };\nfunction fn(x) {\n  let c = x.a;\n  x.a = 5;\n  console.log(c); // 1\n}\nfn(x);\nconsole.log(x); // { a: 5, b: 2 }\nзадачки про промисы\nвопросы про ивент луп\nчто такое requestAnimationFrame и requestIdleCallback\nметоды массивов\nкак прервать запросы ( про AbortController и как это реализовать)\nчто такое declare в ts\nрассуждение в целом про ts\nunknown vs any\nинтерфейсы и типы, разница\nвопросы про реакт, почему библиотека\nминусы и плюсы реакта\nрассказать про рекансилейшен,\n этапы жизненного цикла компонента\nэтапы рендеринга \nподробно про useEffect, разница с useLayoutEffect\nпро HOC\nоптимизация в реакте и не только\nмемоизация (memo, useMemo, useCallback)\nзадача на рефакторинг \nimport React from 'react';\nimport { cn } from '@bem-react/classname';\nimport { Order } from './Order';\n\nconst ordersListClassName = cn('orders-list');\n\ninterface OrdersListProps {\n  orders: Order[];\n  onClick: (orderId: string) => void;\n  disabledIds?: string[];\n}\n\nconst OrdersList: React.FC<OrdersListProps> = ({\n  orders,\n  onClick,\n  disabledIds = [],\n}) => {\n  return (\n    <ul className={ordersListClassName()}>\n      {orders.map((order) => {\n        const orderClassName = cn('order', { disabled: disabledIds.includes(order.id) });\n\n        return (\n          <Order\n            key={order.id}\n            order={order}\n            className={orderClassName}\n            onClick={() => onClick(order.id)}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default OrdersList;\nпро асинхронные скрипты\nтришейкинг\nкодсплитинг\nprefetch, preload\nпсевдоклассы, псевдоэлементы, модно ли получить к ним доступ из js\nспособы центровки элемента в css"
      }
    ]
  },
  {
    "company": "Wanted",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-09-27 11:56:24",
        "content": "2024-09-27 11:56:24\n Stepan Ch. -> 2071074234:\nWanted\nссылка: https://hh.ru/vacancy/107558111\nзп: 200-230\nуспех:  ?\n\n1. Вопросы про опыт.\n2. Микрофронты были на проекте?\n3. Расскажиж про свой Ui Ki.\n4. Плюсы и минусы микрофронтов?\n5. Какой протокол использовали на проекте?\n6. Расскажи про EventLoop.\n7. Задачи на EventLoop: все из платины\n8. Задачи из платины\n9. Задача по реакту все в точности как на платине! И обработка запросов и всего.\n\nИтог: учим платину + легенду = лутаем оффер",
        "full_content": "2024-09-27 11:56:24\n Stepan Ch. -> 2071074234:\nWanted\nссылка: https://hh.ru/vacancy/107558111\nзп: 200-230\nуспех:  ?\n\n1. Вопросы про опыт.\n2. Микрофронты были на проекте?\n3. Расскажиж про свой Ui Ki.\n4. Плюсы и минусы микрофронтов?\n5. Какой протокол использовали на проекте?\n6. Расскажи про EventLoop.\n7. Задачи на EventLoop: все из платины\n8. Задачи из платины\n9. Задача по реакту все в точности как на платине! И обработка запросов и всего.\n\nИтог: учим платину + легенду = лутаем оффер"
      },
      {
        "timestamp": "2024-07-20 17:22:16",
        "content": "2024-07-20 17:22:16\n Руслан -> 2071074234:\nwanted\n— ссылка: https://hh.ru/vacancy/103318370\n— ЗП: до 300к\n— Вопросы:\nНужно разработать с нуля 3 лендинга с сео индексацией, + 2 страницы авторизации регистер и логин + 3 страницы личного кабинета с формами. Макеты и бэк готовы, как будешь реализовывать\n1. Какой сборщик возьмешь - webpack или vite\n2. Для серверного рендеринга что возьмешь\n3. Нам нужен ssr или ssg\n4. на webpack или vite настраивал ssr или ssg без next.js\n5. что будешь использовать дл...",
        "full_content": "2024-07-20 17:22:16\n Руслан -> 2071074234:\nwanted\n— ссылка: https://hh.ru/vacancy/103318370\n— ЗП: до 300к\n— Вопросы:\nНужно разработать с нуля 3 лендинга с сео индексацией, + 2 страницы авторизации регистер и логин + 3 страницы личного кабинета с формами. Макеты и бэк готовы, как будешь реализовывать\n1. Какой сборщик возьмешь - webpack или vite\n2. Для серверного рендеринга что возьмешь\n3. Нам нужен ssr или ssg\n4. на webpack или vite настраивал ssr или ssg без next.js\n5. что будешь использовать для стилизации\n6. Что такое семантическая верстка, для чего\n7. что такое accessibility\n8. float, flex, grid что возьмешь\n9. для чего нужна табличная верстка - для емейл писем\n10. в чем отличие между png, jpeg, webp, svg\n11. что использовал бы для создания форм и почему\n12. Верно ли что formik и react hook form используются только для управления состоянием формы, а для валидации формы используются другие библиотеки\n13. В нашем приложении нужно отправлять данные на бекенд с помощью каких инструментов будешь это делать\n14. Работал ли с react query, что лучше, fetch или react query  и почему\n15. Мы дошли до личного кабинета пользователя. Там у нас имеется большое количество форм, состояний, флагов, данных о пользователе. Где будешь хранить все эти флаги, состояния, данные. Сказал про zustand либо redux.\n16. В каком случае zustand, в каком redux\n17. Селекторы в редакс, подробно\n18. почему лучше использовать селекторы, а не обращаться  к стору напрямую\n19. Работал ли с редакс сагами, стал бы их сейчас использовать и для чего\n20. в приложение необходимо добавить интернализацию - английский и немецкий языки, как будешь это делать. приходилось ли работать с right-to-left"
      }
    ]
  },
  {
    "company": "Ittrain",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-04-15 02:39:21",
        "content": "2025-04-15 02:39:21\n Ber -> 2071074234:\n— Название компании: iTTrain (аутстафф), технический этап iTTrain, после скриннинга\n— Ссылка на вакансию: hr написала сама\n— ЗП: просил от 190 тр на руки\n— Вопросы:\n1)  Какая интересная задача была в работе?\nСейчас что делаешь и разрабатываешь?\nКак именно это сделано сейчас?\n2) С чем работал, кроме React? С Angular, Vue работал? В чем отличие, если работал?\nСовет: тут лучше понимать основные отличия\n3) Какие стэйт-менеджеры знаешь? В чем их отличие? Чтобы ...",
        "full_content": "2025-04-15 02:39:21\n Ber -> 2071074234:\n— Название компании: iTTrain (аутстафф), технический этап iTTrain, после скриннинга\n— Ссылка на вакансию: hr написала сама\n— ЗП: просил от 190 тр на руки\n— Вопросы:\n1)  Какая интересная задача была в работе?\nСейчас что делаешь и разрабатываешь?\nКак именно это сделано сейчас?\n2) С чем работал, кроме React? С Angular, Vue работал? В чем отличие, если работал?\nСовет: тут лучше понимать основные отличия\n3) Какие стэйт-менеджеры знаешь? В чем их отличие? Чтобы бы взял, если проект с нуля\nОтветил: что взял бы либо RTK, либо TanStack Query - собеседующий одобрил\n4) Какие у тебя есть красные флаги при код-ревью?\nОтветил: что обязательно просматриваю, что написаны тесты. Сам обязательно пишу тесты,\nа по стилю - у нас в целом настроены линтеры, так что с этим проблем не бывает,\nплюс, проверяю обязательно логику работы, поскольку зачастую тесты пишутся после разработки\nСобеседующий такой ответ поддержал\n5) Какие у тебя есть сильные и слабые стороны?\nОтветил: сперва пошутил: ты хочешь прямо в глубь человека пробраться?) Собеседущий чуть разрядился - тоже посмеялись,\nя ответил в итоге, что скуруплезность может быт как минус, когда лид просит быстрее сделать, но это и плюсом считаю\n6) Как работает EventLoop?\n7) Если понимаешь, что EventLoop это механизм среды выполнения кода JS, можешь другие среды описать? Node.js - Как там работает?\n8) Зачем вообще требуется разделение на макрозадачи и микрозадачи? Для чего это так устроено?\n9) А зачем вообще в целом асинхронность нужна в JS?\n10) Чем отличается type от interface?\n11) Что такое type guards? Можешь конкретный пример рассказать использования его на своей практике?\n12) \n// Расскажи подробно как работает этот код?\n// Что такое замыкание?\n// Куда попадают аргументы функции как локальные переменные?\n// Что будет, если arraySorted изменить на стрелочную функцию? Чем отличается ее поведение от ordinary function конкретно в данной задаче?\n\nconst arrUnSort = [1, 4, 26, 9, 2];\nconst arrSort = [];\n\nfunction arraySorted(arrUnSort, arrSort) {\n    arrSort = arrUnSort.sort();\n}\n\narraySorted(arrUnSort, arrSort);\n\nconsole.log(arrSort);\n13) Ответ: надо использоват Promise.allSettled\nfunction fetchData1() {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            console.log('Data 1 fetched');\n            resolve('Data 1');\n        }, 2000);\n    })\n}\n\nfunction fetchData2() {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            console.log('Data 2 fetched');\n            resolve('Data 2');\n        }, 1000);\n    })\n}\n\nfunction fetchData3() {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            console.log('Data 3 fetched');\n            reject('Data 3');\n        }, 3000);\n    })\n}\n\nasync function fetchAllData() {\n\n}\n\n// Создать асинхронную функцию fetchAllData, которая параллельно запускает все три функции \n// fetchData1, fetchData2, fetchData3\n// Фукнция должна вернуть массив данных, если все вызова завершатся успешно\n// Либо вывести в консоль сообщение об ошибке и вернуть частичные данные, если хотя бы один неуспешный \n// Обеспечьте корректное завершение программы в случае ошибки и правильную обработку данных\nfetchAllData().then(data => console.log('Partial Data', data))\n\n// Доп вопросы: \n// В каком порядке будут выполнятся результаты функций fetchData1, fetchData2, fetchData3?\n// надо ли тут fetchAllData().then(data => console.log('Partial Data', data)) использовать finally?\n14) Реши эту задачу разными вариантами:\n1-й вариант: можешь использовать объекты - тут я использовать для first объект с полем count и в second сделал функцию обращения к полю count объект first через this\n2-й варинат: надо задействовать обе фукнции - тут не смог сделать - а сделал через одну функцию\nВерный ответ: надо было через каррирование сделать, задействуя обе переменные как функции"
      },
      {
        "timestamp": "2025-03-14 15:39:12",
        "content": "2025-03-14 15:39:12\n Nikolai -> 2071074234:\niTTrain \nЗП 240\n\nЗадачи:\n// Создать асинхронную функцию fetchAllData, которая параллельно запускает все три функции fetchData1, fetchData2 и fetchData3.\n// Функция должна вернуть массив данных, если все три вызова завершатся успешно, либо вывести в консоль сообщение об ошибке и вернуть частичные данные (если два из трех вызовов завершились успешно).\n// Обеспечьте корректное завершение программы в случае ошибки и правильную обработку данных.\n\nfunction f...",
        "full_content": "2025-03-14 15:39:12\n Nikolai -> 2071074234:\niTTrain \nЗП 240\n\nЗадачи:\n// Создать асинхронную функцию fetchAllData, которая параллельно запускает все три функции fetchData1, fetchData2 и fetchData3.\n// Функция должна вернуть массив данных, если все три вызова завершатся успешно, либо вывести в консоль сообщение об ошибке и вернуть частичные данные (если два из трех вызовов завершились успешно).\n// Обеспечьте корректное завершение программы в случае ошибки и правильную обработку данных.\n\nfunction fetchData1() {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            console.log('Data 1 fetched');\n            resolve('Data 1');\n        }, 2000);\n    });\n}\n\nfunction fetchData2() {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            console.log('Data 2 fetched');\n            resolve('Data 2');\n        }, 1000);\n    });\n}\n\nfunction fetchData3() {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            console.log('Data 3 fetched');\n            resolve('Data 3');\n        }, 3000);\n    });\n}\n\nasync function fetchAllData() {\n}\n\nfetchAllData().then(data => console.log('Partial Data:', data));\n\n\n-----------------------------------------------------------------------------------------------------------------\n\n\nconst first = null;\nconst second = null;\n\n// необходимо с помощью только этих двух констант, не создавая других в глобальном контексте,\n// написать две функции, чтобы следующие строчки кода работали.\n\nconsole.log(second()); // 0\nconsole.log(second()); // 1\nconsole.log(second()); // 2\nconsole.log(second());\n\n-----------------------------------------------------------------------------------------------------------------\n\n//что будет в консоли и исправить ошибку\n\nconst arrUnSort = [1,4,28,9,2];\nfunction arraySorted(arrUnSort, arrSort) {\n    arrSort = arrUnSort.sort();\n}\n\narraySorted(arrUnSort, arrSort);\n\nconsole.log(arrSort);\n\n\nВопросы: \n1. Расскажи о себе\n2. Подробнее про сокеты как обрабатывали как работали с ними и какие либы использовали\n3. С чем работал кроме реакта?\n4. С чем успел поработать внутри реакта? С какими стейт менеджерами?\n5. Какую самую сложную-большую задачку решали?\n6. Какая самая большая ошибка была и как ее решил?\n7. Проводили ретро почему так получилось? \n8. Процессы внутри команды как задача доходила до прода с самого начала постановки задачи?\n9. Писали ли тесты? По какому процессу? (TDD)\n10. Работал ли с тайпскриптом, чем пользовался? \n11. Использовал ли какие-то кастомные библиотечки для типизации?\n12. Расскажи про красные флаги на код ревью? \n13. О своих сильных и слабых сторонах по 3 штуки наверно?\n14. Event loop \n15. Про микро и макро задачи зачем такое разделение и в чем основное отличие?\n16. Зачем нужна асинхронность в JS? Почему нельзя выполнять все в одном потоке? \n17. Расскажи все что знаешь о промисах? \n18. Отличие type от interface?\n19. Расскажи про дженерики в TS и Utility types\n20. Расскажи про тайпгварды что такое и зачем\n21. Как понимаешь работу стейт менеджера в реакте любого, что есть, чего нет, как под капотом работают?\n22. Чем отличается мутация от эффектов?\n\nуспех: неизвестен\nфидбек: пока не было"
      }
    ]
  },
  {
    "company": "Медиалогия",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-11-17 08:33:16",
        "content": "2024-11-17 08:33:16\n Вадим -> 2071074234:\nКомпания: Медиалогия\nВакансия: https://hh.ru/vacancy/108523441?hhtmFrom=employer_vacancies\nЗП: 200-250\nВопросы: \nВсе вопросы из поведенческого интервью\n-Процессы от оценки задачи до ее мержа в ветку;\n-Много говорили про задачи мои, погружал в контекст, показывал свою экспертизу в глубь от боли заказчика до реализации фичи;\n-CI CD;\n-Самая сложная задача;\n-Участвовал ли в code rewiew, на что обращал внимание;\n-какие инструменты использовали для управления ...",
        "full_content": "2024-11-17 08:33:16\n Вадим -> 2071074234:\nКомпания: Медиалогия\nВакансия: https://hh.ru/vacancy/108523441?hhtmFrom=employer_vacancies\nЗП: 200-250\nВопросы: \nВсе вопросы из поведенческого интервью\n-Процессы от оценки задачи до ее мержа в ветку;\n-Много говорили про задачи мои, погружал в контекст, показывал свою экспертизу в глубь от боли заказчика до реализации фичи;\n-CI CD;\n-Самая сложная задача;\n-Участвовал ли в code rewiew, на что обращал внимание;\n-какие инструменты использовали для управления пакетами в монорепе(workspaces), про lerna так же."
      },
      {
        "timestamp": "2024-10-29 16:41:14",
        "content": "2024-10-29 16:41:14\n Вадим -> 2071074234:\nКомпания: Медиалогия \nЗП : от 200\nВакансия: https://hh.ru/vacancy/108523441?hhtmFrom=employer_vacancies\nВопросы: \nобщетеоретический блок.\n1) знает ли про книгу чистый код роберта мартина? каких принципов придерживается для поддержание чистоты кода?\n2) какие принципы программирования знает. знает ли что такое принцип открытости/закрытости, что такое принцип единственной ответственности, что такое зацепление, что такое связность?\n3) дебаггинг: как мыслит, ...",
        "full_content": "2024-10-29 16:41:14\n Вадим -> 2071074234:\nКомпания: Медиалогия \nЗП : от 200\nВакансия: https://hh.ru/vacancy/108523441?hhtmFrom=employer_vacancies\nВопросы: \nобщетеоретический блок.\n1) знает ли про книгу чистый код роберта мартина? каких принципов придерживается для поддержание чистоты кода?\n2) какие принципы программирования знает. знает ли что такое принцип открытости/закрытости, что такое принцип единственной ответственности, что такое зацепление, что такое связность?\n3) дебаггинг: как мыслит, какие логические шаги предпринимает, какие технические средства использует?\n4) знает ли какие-нибудь паттерны из программирования типа синглтона.\n5) что такое алгоритмическая сложность, какие виды у нее бывают и какими способами её можно минимизировать?\n\n\njs:\n1) замыкание\n2) как работают ссылки на данные в js, как работает сборщик мусора\n3) что такое this, как его привязать и зачем это нужно\n4) что такое event loop и как он работает\n5) рассказать про обработку событий (три стадии распространения, остановка распространения, кастомные события, обработка в event loop, использование в задачах не связанных напрямую с интерфейсом типа кликов мышью и тд)\n6) worker - что такое, для чего нужны\n7) promise-ы. реализация через Promise API и через async await.\n\nts:\n1) зачем придумали typescript если уже есть javascript?\n2) чем отличается interface от type alias?\n3) рассказать про generic\n4) что такое any и чем оно отличается от uknown?\n5) что такое enum и зачем они нужны? какие типы enum есть?\n6) как работает утилитарный тип данных Record?\n7) что такое вывод типов в type script и как он работает? вывод типов на английском еще переводится как type inference.\n8) что такое совместимость типов в type script и как она работает?\n9) если фронтенд описал с помощью typescript-а тип данных результата работы ручки или ендпойнта, как отреагирует typescript, если во время работы приложение бэк вернёт данные другого типа?\n\nreact:\n1) рассказать про жизненный цикл компонента\n2) рассказать про хуки\n3) DOM vs Virtual DOM\n4) рассказать про алглоритм согласование или как он еще называется \"reconciliation\""
      }
    ]
  },
  {
    "company": "Азиатско-Тихоокеанский Банк",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-16 14:14:07",
        "content": "2025-07-16 14:14:07\n Ivan -> 2071074234:\nКомпания: Азиатско-тихоокеанский банк\nЗП: 250+\n\n1. Про опыт\n2. Про интересные задачи\n3. Почему уходишь\n4. websocket vs sse\n5. tcp vs udp\n6.  Отправляешь запрос на создание ресурса, но сервер не может его создать прямо сейчас и возвращает ссылку по которой будет создан ресурс. Какой статус код будет у такого ответа?\n7. Мы отправляем запрос на бэк, но ответ будет готов через пару часов. За это время пользователь может закрыть браузер. Как такое реализовать?...",
        "full_content": "2025-07-16 14:14:07\n Ivan -> 2071074234:\nКомпания: Азиатско-тихоокеанский банк\nЗП: 250+\n\n1. Про опыт\n2. Про интересные задачи\n3. Почему уходишь\n4. websocket vs sse\n5. tcp vs udp\n6.  Отправляешь запрос на создание ресурса, но сервер не может его создать прямо сейчас и возвращает ссылку по которой будет создан ресурс. Какой статус код будет у такого ответа?\n7. Мы отправляем запрос на бэк, но ответ будет готов через пару часов. За это время пользователь может закрыть браузер. Как такое реализовать?\n8. Есть ли пет проекты?\n\nЗадача 1\nНаписать myMap + типизация\nconst myMap = <T, U>(arr: T[], fn: (item: T, index: number, array: T[]) => U): U[] => {\nconst resultArr: U[] = []\n\nfor (let i = 0; i < arr.length; i++) {\n const itemResult = fn(arr[i], i, arr)\n resultArr.push(itemResult)\n}\nreturn resultArr\n}\n\nЗадача 2\nЕсть два апи. Одно возвращает ссылку на картинку, другое список пород собак. Нужно при клике по кнопке выводить картинку и список пород.\n\n\nimport \"./styles.css\";\nimport { useState, useEffect } from \"react\";\n\nconst RANDOM_DOG_API = \"https://dog.ceo/api/breeds/image/random\";\nconst DOG_BREEDS_API = \"https://dogapi.dog/api/v2/breeds\";\n\nexport default function App() {\n  const [dogImage, setDogImage] = useState(\"\");\n  const [dogBreeds, setDogBreeds] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const fetchImage = async () => {\n    try {\n      const response = await fetch(RANDOM_DOG_API);\n      if (!response.ok) throw new Error(`Ошибка: ${response.status}`);\n      const data = await response.json();\n      setDogImage(data.message);\n    } catch (err) {\n      console.error(err);\n      setError(\"Не удалось загрузить изображение собаки\");\n    }\n  };\n\n  const fetchBreeds = async () => {\n    try {\n      const response = await fetch(DOG_BREEDS_API);\n      if (!response.ok) throw new Error(`Ошибка: ${response.status}`);\n      const { data } = await response.json();\n      setDogBreeds(data);\n    } catch (err) {\n      console.error(err);\n      setError(\"Не удалось загрузить список пород\");\n    }\n  };\n\n  const load = async () => {\n    setLoading(true);\n    setError(\"\");\n    await Promise.all([fetchImage(), fetchBreeds()]);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    load();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <button onClick={load}>Загрузить заново</button>\n      {loading && <p>Загрузка...</p>}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      <div>\n        {dogImage ? (\n          <img src={dogImage} alt=\"Собака\" />\n        ) : (\n          <div>Изображение собаки пока не загружено...</div>\n        )}\n      </div>\n      <ul>\n        {dogBreeds.map((breed) => (\n          <li key={breed.id}>{breed.attributes.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}"
      },
      {
        "timestamp": "2025-02-26 13:24:16",
        "content": "2025-02-26 13:24:16\n Матвей Захаров -> 2071074234:\nКомпания: Азиатско-Тихоокеанский Банк\nВакансия: https://hh.ru/vacancy/117429513?hhtmFrom=employer_vacancies \nНе записалось\n\nВопросы:\n- HTTP (и http 1.0), Resp API +  много про неочевидные коды ошибок (409, 425)\n- Пропускная способность WebSocket\n- Все тонкости про react-hook-form и zod  (как устроены, синтаксис, как работают, и вопросы в формате: \"Схемы, определяющие структуру и валидацию данных в multi-step формах\"\n- Рассказать про HOC: useImpe...",
        "full_content": "2025-02-26 13:24:16\n Матвей Захаров -> 2071074234:\nКомпания: Азиатско-Тихоокеанский Банк\nВакансия: https://hh.ru/vacancy/117429513?hhtmFrom=employer_vacancies \nНе записалось\n\nВопросы:\n- HTTP (и http 1.0), Resp API +  много про неочевидные коды ошибок (409, 425)\n- Пропускная способность WebSocket\n- Все тонкости про react-hook-form и zod  (как устроены, синтаксис, как работают, и вопросы в формате: \"Схемы, определяющие структуру и валидацию данных в multi-step формах\"\n- Рассказать про HOC: useImperativeHandler, forwardRef, memo (+ что memo принимает вторым аргументом)\n- Что такое каррирование, что для него необходимо\n- Что вернёт typeof псевдомассива arguments у function declaration\n\nЗадача: \nhttps://catfact.ninja/#/Breeds/getBreeds В codesandbox в react отрисовать данные отсюда"
      }
    ]
  },
  {
    "company": "Mapsly",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-12-11 13:13:21",
        "content": "2024-12-11 13:13:21\n Igor -> 2071074234:\nНазвание компании - Mapsly\n\nВакансия - https://t.me/javascript_jobs/726718\n\nЗадачи - https://docs.google.com/document/d/1GL9fd7ISMofgVREH7eLLugZ9Ysq0JzLf9tWu3ZJ0Nus/edit?usp=sharing\n\nЗапись в YouTube - https://youtu.be/mu0MUhLEHdE?si=l1hRlgxMaEhMYrpB",
        "full_content": "2024-12-11 13:13:21\n Igor -> 2071074234:\nНазвание компании - Mapsly\n\nВакансия - https://t.me/javascript_jobs/726718\n\nЗадачи - https://docs.google.com/document/d/1GL9fd7ISMofgVREH7eLLugZ9Ysq0JzLf9tWu3ZJ0Nus/edit?usp=sharing\n\nЗапись в YouTube - https://youtu.be/mu0MUhLEHdE?si=l1hRlgxMaEhMYrpB"
      }
    ]
  },
  {
    "company": "Orionpro",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-29 17:00:00",
        "content": "2024-11-29 17:00:00\n Стас Тихомиров -> 2071074234:\nКомпания: OrionPro\nВакансия: написала hr\nЗП: не обсуждали\n\nПоказывали проект, почтовый клиент. Так же показывали storybook.\n\nЗадачи:\n-как бы ты делал создание, удаление почтового ящика, как ты будешь декомпозировать задачу\n-сколько бы ты делал коммитов при добавлении папки в почтовый клиент (условно, создать модалку, создать инпут для написания названия папки, создать выпадающий список с родительскими папками)-это решение\n- на сколько бы ты дела...",
        "full_content": "2024-11-29 17:00:00\n Стас Тихомиров -> 2071074234:\nКомпания: OrionPro\nВакансия: написала hr\nЗП: не обсуждали\n\nПоказывали проект, почтовый клиент. Так же показывали storybook.\n\nЗадачи:\n-как бы ты делал создание, удаление почтового ящика, как ты будешь декомпозировать задачу\n-сколько бы ты делал коммитов при добавлении папки в почтовый клиент (условно, создать модалку, создать инпут для написания названия папки, создать выпадающий список с родительскими папками)-это решение\n- на сколько бы ты делал самостоятельно, имеется ввиду вот задача, декомпозиция, обсудили с лидом. Дальше надо ли тебя контролировать и т.д.\n- как развиваешься\n- что делаешь помимо работы\n- обсуждали mvp проекта что должно быть, какой функционал"
      }
    ]
  },
  {
    "company": "Riverside",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-20 07:20:08",
        "content": "2024-11-20 07:20:08\n Rolls -> 2071074234:\nКомпания - riverside\nВакансия - hr написала \nЗП: 4000$\n\nВопросы: \n1. Жизненный цикл компоненты в классовом компоненте ? \n2. Что такое useCallBack, useMemo, memo, lazy loading, lazy import ? \n3. Отличие useEffect от useLayoutEffect ?\n4. Что такое батчинг ?\n5. Как работает виртуальный дом (virtual dom, как происходит сравнение и в целом механика работы) ? \n6. Копирование объекта (поверхносто и глубоко )\n7. Также вопросы про то как собирать проект с нуля ( ...",
        "full_content": "2024-11-20 07:20:08\n Rolls -> 2071074234:\nКомпания - riverside\nВакансия - hr написала \nЗП: 4000$\n\nВопросы: \n1. Жизненный цикл компоненты в классовом компоненте ? \n2. Что такое useCallBack, useMemo, memo, lazy loading, lazy import ? \n3. Отличие useEffect от useLayoutEffect ?\n4. Что такое батчинг ?\n5. Как работает виртуальный дом (virtual dom, как происходит сравнение и в целом механика работы) ? \n6. Копирование объекта (поверхносто и глубоко )\n7. Также вопросы про то как собирать проект с нуля ( выбор организации проекта, язык программирования, фрейворк, cтилизация , репа для тим разработки, cборщик, контейнеризация, транспиллеры, линтеры и форматтеры, структура проекта и арха, UI компоненты и дизайн системы, оптимизация производительности, загрузка и обработка состояний, обработка ошибок, доступность, безопасность (xss и запросы), интернализация, роутинг, управление состоянием (Стейт менеджер), тестирование, CI/CD, деплой на vps или платформу ( verсel к примеру , если нужно быстро развернуть приложение), логирование и мониторинг"
      }
    ]
  },
  {
    "company": "Снэп-Айти",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-19 11:59:09",
        "content": "2024-11-19 11:59:09\n Егор -> 2071074234:\nКомпания: Снэп-Айти (на проект сбера)\nВакансия: https://rostov.hh.ru/vacancy/110249981\nЗП: 200+\n\nПопросил скачать репу: https://github.com/dev-nes-ilya/test-tasks\nУстановить пакеты и запустить, дальше добавить функцию addTask и removeTask..\nСделать вывод элементов из массива.\nВторая задача: починить компонент Schedule",
        "full_content": "2024-11-19 11:59:09\n Егор -> 2071074234:\nКомпания: Снэп-Айти (на проект сбера)\nВакансия: https://rostov.hh.ru/vacancy/110249981\nЗП: 200+\n\nПопросил скачать репу: https://github.com/dev-nes-ilya/test-tasks\nУстановить пакеты и запустить, дальше добавить функцию addTask и removeTask..\nСделать вывод элементов из массива.\nВторая задача: починить компонент Schedule"
      }
    ]
  },
  {
    "company": "Рамблер",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-27 11:48:18",
        "content": "2024-11-27 11:48:18\n Егор -> 2071074234:\nКомпания: Рамблер (проект Сбера)\nВакансия: hr написала\nЗП: от 200к\n\nВопросы:\n- Расскажи про свой опыт\n- Плюсы и минусы использования Redux Toolkit и RTK Query\n- Как происходит работа с API в RTK\n- Как получить response в RTK и обработать его\n- REST\n- Методы REST (get, post...)\n- SSE, Polling, Long Polling\n- Websocket\n- Можно ли в get запросе указать body и что будет\n- Можно ли в query-params указать массив (да)\n- Reack Hook Form плюсы\n- CDN что такое и за...",
        "full_content": "2024-11-27 11:48:18\n Егор -> 2071074234:\nКомпания: Рамблер (проект Сбера)\nВакансия: hr написала\nЗП: от 200к\n\nВопросы:\n- Расскажи про свой опыт\n- Плюсы и минусы использования Redux Toolkit и RTK Query\n- Как происходит работа с API в RTK\n- Как получить response в RTK и обработать его\n- REST\n- Методы REST (get, post...)\n- SSE, Polling, Long Polling\n- Websocket\n- Можно ли в get запросе указать body и что будет\n- Можно ли в query-params указать массив (да)\n- Reack Hook Form плюсы\n- CDN что такое и зачем надо\n- На что обращаешь внимание при код ревью\n- Оценка сложности алгоритма\n- Как оптимизировать запросы к серверу, если у нас идет 15 запросов для отрисовки таблицы, то что сделать, чтобы страница не блочилась и пользователь мог дальше с ней взаимодействовать? Ответ: вынести на маленькие части и выполнять их. Подгружать только видимые части таблицы.\n- Как отменить запрос на сервер (AbortController)\n- Как скопировать код нужный тебе для решения и как бы ты его внедрял в свой проект. Ответ: работа с безопасностью, нужно защищать страницу от XSS атак. Использовать iframe и выносить этот функционал в песочницу, ограничить доступ к DOM.\n\nЗадач не было"
      }
    ]
  },
  {
    "company": "Bean Counter",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-09-24 10:59:16",
        "content": "2024-09-24 10:59:16\n Stepan Ch. -> 2071074234:\n- BEAN COUNTER\n- от 200к\n- вакансия: hh.ru/vacancy/107532599\n- Вопросы с платины",
        "full_content": "2024-09-24 10:59:16\n Stepan Ch. -> 2071074234:\n- BEAN COUNTER\n- от 200к\n- вакансия: hh.ru/vacancy/107532599\n- Вопросы с платины"
      }
    ]
  },
  {
    "company": "Рунити",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-02-27 11:12:07",
        "content": "2025-02-27 11:12:07\n Матвей Захаров -> 2071074234:\nКомпания: Рунити\nВакансия: https://hh.ru/vacancy/116762526\nЗапись: https://youtu.be/a0DFvzcS8NA\n\nВопросы:\n- Что такое event loop\n- Всплытие/Погружение, stopPropagation, stopImmidiatePropagation\n- Map, WerMap, Set, WeakSet\n- Promise.all, Promise.allSettled\n- Что происходит после ввода адреса в поисковик\n- Для чего нужны async defer ускриптов \n- Мемоизация в реакте\n- Классовые компоненты (жизненный цикл, методы)\n- useLayoutEffect, UseEffect, forwa...",
        "full_content": "2025-02-27 11:12:07\n Матвей Захаров -> 2071074234:\nКомпания: Рунити\nВакансия: https://hh.ru/vacancy/116762526\nЗапись: https://youtu.be/a0DFvzcS8NA\n\nВопросы:\n- Что такое event loop\n- Всплытие/Погружение, stopPropagation, stopImmidiatePropagation\n- Map, WerMap, Set, WeakSet\n- Promise.all, Promise.allSettled\n- Что происходит после ввода адреса в поисковик\n- Для чего нужны async defer ускриптов \n- Мемоизация в реакте\n- Классовые компоненты (жизненный цикл, методы)\n- useLayoutEffect, UseEffect, forwardRef\n- Рассказать про reconsilation\n\nЗадачи: \nНа реакт:\n\nimport \"./styles.css\";\n\n/*\n  Реализуй компонент TaskList, который отображает список задач\n  с возможностью фильтрации по статусу и поиск по названию.\n  Разметка и стили уже заданы, требуется добавить логику\n  работы компонента (фильтрация и поиск).\n  P.S. Для выполненной задачи нужно задать класс 'completed'.\n*/\n\nconst tasks = [\n  { id: 1, title: \"Сделать дизайн макета\", completed: true },\n  { id: 2, title: \"Реализовать авторизацию\", completed: false },\n  { id: 3, title: \"Сверстать новый экран\", completed: false },\n  { id: 4, title: \"Написать тест для компонента A\", completed: false },\n  { id: 5, title: \"Написать тест для компонента B\", completed: false },\n  { id: 6, title: \"Написать тест для компонента C\", completed: false },\n  { id: 7, title: \"Написать тест для компонента D\", completed: false },\n  { id: 8, title: \"Реализовать валидацию\", completed: false },\n  { id: 9, title: \"Реализовать отправку данных\", completed: false },\n];\n\nconst TaskList = () => {\n  return (\n    <div className=\"task-list-container\">\n      <div className=\"filter-buttons\">\n        <button>Все</button>\n        <button>Выполненные</button>\n        <button>Не выполненные</button>\n      </div>\n      <div className=\"search-input\">\n        <input type=\"text\" placeholder=\"Поиск задач...\" />\n      </div>\n      {/* Место для списка задач */}\n    </div>\n  );\n};\n\nexport default TaskList;\n\n`\nна js\n\nСобрать все примитивы\nconst result = getAllPrimitives({\n  a: {\n    l: { u: 8 },\n    b: 1,\n  },\n  c: {\n    d: 2,\n    e: { f: 7 },\n    g: {\n      m: {\n        p: {\n          o: 10,\n        },\n      },\n    },\n  },\n  j: 4,\n});\n\nresult(\"lalala\");\n// [8, 1, 2, 7, 10, 4]\n\nfunction getAllPrimitives(obj) {\n  // Your implementation\n}\n\n`\nна консоль\nlet fullname = \"NAME_111\";\nlet obj = {\n  fullname: \"NAME_222\",\n  prop: {\n    fullname: \"NAME_333\",\n    getFullname: function () {\n      return this.fullname;\n    },\n  },\n};\n\nlet simpleObject = {\n  full_name: \"NAME_444\",\n};\n\nconsole.log(obj.prop.getFullname()); //#1\nlet test = obj.prop.getFullname;\nconsole.log(test()); //#2\nconsole.log(obj.prop.getFullname.call(simpleObject)); //#3\nconsole.log(obj.prop.getFullname.bind({ fullname: \"NAME_555\" })); //#4\n\nconsole.log(\"1\");\n\nsetTimeout(() => {\n  console.log(\"2\");\n\n  Promise.resolve(\"3\").then(console.log);\n}, 0);\n\nlet p = new Promise(function (resolve, reject) {\n  console.log(\"4\");\n  resolve();\n});\n\np.then(function () {\n  console.log(\"5\");\n});\n\nsetTimeout(() => {\n  console.log(\"6\");\n\n  Promise.resolve().then(() => {\n    console.log(\"7\");\n  });\n}, 0);\n\nPromise.resolve().then(() => {\n  console.log(\"8\");\n});\n\nconsole.log(\"9\");\n\n\nimport React from \"react\";\nimport \"./styles.css\";\n\n// КНОПОЧКУ НЕ ТЫКАТЬ!\n// В каком порядке отработают console.log при нажатии на кнопку?\n// Доп. вопрос - какой будет state в console.log?\nexport default function App() {\n  const [state, setState] = React.useState(0);\n\n  React.useEffect(() => {\n    console.log(\"effect\", state);\n\n    return () => {\n      console.log(\"clean-up function\", state);\n    };\n  }, [state]);\n\n  const handleChange = () => {\n    setState(state + 1);\n  };\n\n  return (\n    <>\n      <button onClick={handleChange}>+1</button>&nbsp;\n      {state}\n    </>\n  );\n}"
      }
    ]
  },
  {
    "company": "Корпорация Элар",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-06 15:08:57",
        "content": "2024-07-06 15:08:57\n Artur -> 2071074234:\nКорпорация Элар\n\n— Вакансия: https://hh.ru/vacancy/101436992?hhtmFrom=employer_vacancies\n— ЗП: говорил 200к+\n\nВопросы:\n— что такое jsx\n— какие хуки знаешь, что они делают\n— что такое редьюсер в редаксе\n— есть ли опыт использования ssr\n— какие архитектурные подходы знаешь\n— что скажешь про FSD\n— для валидации форм что используешь\n— как pixel perfect делаешь\n— sass/scss\n— работал ли node.js\n— с redis работал ли",
        "full_content": "2024-07-06 15:08:57\n Artur -> 2071074234:\nКорпорация Элар\n\n— Вакансия: https://hh.ru/vacancy/101436992?hhtmFrom=employer_vacancies\n— ЗП: говорил 200к+\n\nВопросы:\n— что такое jsx\n— какие хуки знаешь, что они делают\n— что такое редьюсер в редаксе\n— есть ли опыт использования ssr\n— какие архитектурные подходы знаешь\n— что скажешь про FSD\n— для валидации форм что используешь\n— как pixel perfect делаешь\n— sass/scss\n— работал ли node.js\n— с redis работал ли"
      }
    ]
  },
  {
    "company": "Название Компании Beget",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-04-06 09:07:21",
        "content": "2024-04-06 09:07:21\n Санжар -> 2071074234:\n- Название компании Beget\n- Ссылка на вакансию https://spb.hh.ru/vacancy/94771093?hhtmFrom=employer_vacancy_responses\n- ЗП: запросил 250 минимум, комфорт 350\n- Задачи: теория (много по ООП), без лайвкодинга\n- Успех: ❌\n- Фидбек: интервью было комфортным, сам интервьюер был адекватным,  дал ок на финал, договорились о дате финала, но через 4 часа написал hr: \"Извини, обсудили с руководителем твои результаты, но все-таки тема ООП для нас критически важна, ...",
        "full_content": "2024-04-06 09:07:21\n Санжар -> 2071074234:\n- Название компании Beget\n- Ссылка на вакансию https://spb.hh.ru/vacancy/94771093?hhtmFrom=employer_vacancy_responses\n- ЗП: запросил 250 минимум, комфорт 350\n- Задачи: теория (много по ООП), без лайвкодинга\n- Успех: ❌\n- Фидбек: интервью было комфортным, сам интервьюер был адекватным,  дал ок на финал, договорились о дате финала, но через 4 часа написал hr: \"Извини, обсудили с руководителем твои результаты, но все-таки тема ООП для нас критически важна, к сожалению не сможем продолжить. Просим прощения.\" В проекте у них ООП, хотят отходить от этого в composition api + pinia\n\nВопросы:\n- расскажи про этапы обработки события в js\n- способы завести реактивную переменную во vue composition api, их особенности\n- какие есть модификаторы доступа атрибутов у класса (private, public, protect), в чем их отличия. Какой есть модификатор доступа в typescript (readonly)\n- что такое инъекция в ООП\n- что такое наследование в ООП\n- что такое статические атрибуты класса\n- что такое абстрактный класс, чем отличается от обычного\n- расскажи про SOLID принципы\n- что происходит при вводе адреса сайта в браузер\n- как работает поиск ip адреса в dns сервере\n- какие знаешь гит команды, опиши последовательность их применений в работе над задачей\n- перечисли структуры данных в typescript\n- как можно указать тип массива в typescript\n- что такое бандл, чем он отличается от чанков\n- может ли бандл состоять из одного файла\n- какие типы хэшей знаешь в вебпаке\n- можно ли включить изображения в бандл, т.е. не выгружать их из сервера, как этого добиться\n\nчто будет выведено в консоль?\ntry { \n    var a = 25\n    console.log(a)\n    throw new Error()\n} catch (error) {\n    console.log(a)\n}\nconsole.log(a)\nбудет ли вывод в консоли? как можно перехватить ошибку колбэка setTimeout, не затрагивая его колбэк?\ntry {\n    setTimeout(() => {\n        throw new Error()\n    })\n} catch (error) {\n   console.log(error) \n}\nкак можно перехватить ошибку промиса в setTimeout, не затрагивая его колбэк?\ntry {\n    setTimeout(() => {\n        promise.reject(new Error())\n    })\n} catch (error) {\n   console.log(error) \n}\n\nчто будет выведено в консоль?\nconst a = [1,2,3,4]\nconst b = [5,6,7,8]\na.concat(b)\nconsole.log(a)"
      }
    ]
  },
  {
    "company": "X5",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-21 05:56:19",
        "content": "2024-11-21 05:56:19\n Alexander Morozov -> 2071074234:\n- Компания: X5 Retail group\n- Вакансия: https://hh.ru/vacancy/102827724\n- ЗП: 250к\n- Вопросы: Базовые вопросы про опыт, команду и процессы. \n1) Способы позиционирования элемента по центру, с подробным объяснениям как и почему выбираешь тот или иной способ.\nАльгоритмическая секция: \n1) Провести код ревью компонента, код реализовывал хлебные крошки. Уменьшение сложности, упрощение и повышение читаемости кода. \n2) Задача с 2 циклами, уменьшить с...",
        "full_content": "2024-11-21 05:56:19\n Alexander Morozov -> 2071074234:\n- Компания: X5 Retail group\n- Вакансия: https://hh.ru/vacancy/102827724\n- ЗП: 250к\n- Вопросы: Базовые вопросы про опыт, команду и процессы. \n1) Способы позиционирования элемента по центру, с подробным объяснениям как и почему выбираешь тот или иной способ.\nАльгоритмическая секция: \n1) Провести код ревью компонента, код реализовывал хлебные крошки. Уменьшение сложности, упрощение и повышение читаемости кода. \n2) Задача с 2 циклами, уменьшить соложность алгоритма с O(n^2) до O(n). Задача не сохранилась. \n3) Реализовать рабочий компонент со списком (загрузка, фильтрация, реаализация модального окна через <dialog>)"
      }
    ]
  },
  {
    "company": "Click2Money",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-03 13:00:15",
        "content": "2024-06-03 13:00:15\n Artur -> 2071074234:\nКомпания: Click2Money\nСсылка: https://hh.ru/vacancy/100330907?hhtmFrom=vacancy_search_list\nСсылка на собес: https://disk.yandex.ru/i/du2Id4WROTL4eQ\nЗП: я сказал вроде 150к+\nУровень: Middle\nУспех собеса: ?\n\nВопросы:\n— Типы данных js\n— null и undefined, разница\n— Замыкание\n— Промис\n— Как можно избежать ссылочной зависимости при копировании объекта\n— Деструктуризация массива\n— Event loop\n— Способы хранения данных в браузере\n— Разница session и localstorage\n...",
        "full_content": "2024-06-03 13:00:15\n Artur -> 2071074234:\nКомпания: Click2Money\nСсылка: https://hh.ru/vacancy/100330907?hhtmFrom=vacancy_search_list\nСсылка на собес: https://disk.yandex.ru/i/du2Id4WROTL4eQ\nЗП: я сказал вроде 150к+\nУровень: Middle\nУспех собеса: ?\n\nВопросы:\n— Типы данных js\n— null и undefined, разница\n— Замыкание\n— Промис\n— Как можно избежать ссылочной зависимости при копировании объекта\n— Деструктуризация массива\n— Event loop\n— Способы хранения данных в браузере\n— Разница session и localstorage\n— Как сервер запрещает чтение куки из браузере\n— Virtual DOM\n— React хуки, как работают основные\n— useImperativeHandle что за хук\n— Стратегии оптимизации в React\n— Для чего TS\n— Джейнерики, что это\n\nЗадачи:\n\n1. Что выведет консоль?\n\nconsole.log([...'Lydia']); //\n\n2. Что выведет консоль?\n\nfunction addToList(item, list) {\n   return list.push(item);\n}\nconst result addToList('apple', ['banana']);\n\nconsole.log(result); //\n\n3. Написать функцию, которая преобразует массив в объект\n\nfunction transform(arr) {\n\n}\n\nconst arr = [\n   {name: 'name', value: 'Aнатолий'},\n   {name: 'age', value: '40'}\n]\n\nconsole.log(transform(arr)) // { name: \"Анатолий', age: 40 }"
      }
    ]
  },
  {
    "company": "Триафлай",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-20 10:05:08",
        "content": "2024-10-20 10:05:08\n Artyom Sozykin -> 2071074234:\nКомпания: Триафлай\nВакансия: https://novosibirsk.hh.ru/vacancy/107930772?hhtmFrom=resume\nЗП: 250к\nВопросы:\n1) Какие методы из классовых компонентов реализованы в функциональных в качестве хуков?\n2) Что нельзя сделать на функциональных, что можно делать только в классовых (назвал: наследование, errorBoundary и shouldComponentUpdate)\n3) Вопрос о том как типизировать библиотеки (файлы d.ts declare)\n4) Были вопросы по легенде, о том какие самые слож...",
        "full_content": "2024-10-20 10:05:08\n Artyom Sozykin -> 2071074234:\nКомпания: Триафлай\nВакансия: https://novosibirsk.hh.ru/vacancy/107930772?hhtmFrom=resume\nЗП: 250к\nВопросы:\n1) Какие методы из классовых компонентов реализованы в функциональных в качестве хуков?\n2) Что нельзя сделать на функциональных, что можно делать только в классовых (назвал: наследование, errorBoundary и shouldComponentUpdate)\n3) Вопрос о том как типизировать библиотеки (файлы d.ts declare)\n4) Были вопросы по легенде, о том какие самые сложные или долгие задачи выполнял\n5) Коротко про каждый хук\n6) Eventloop\n7) Для чего нужны промисы\n\nУспех: оффер на 280к✅"
      }
    ]
  },
  {
    "company": "Evercode Lab",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-11 12:47:23",
        "content": "2025-07-11 12:47:23\n Ivan -> 2071074234:\nКомпания: Evercode Lab\nЗП: 250-300+\n\nЭто был первый тех этап с разговорами про опыт. Больше было похоже софтовое интервью. \nЕсли окей, то зовут в свой офис на 2-ю часть. Потом еще финальная с сео/директором тк позиция senior.\nДлилось чуть меньше часа.\n\n1. Про опыт\n2. Про интересную задачу\n3. Про факап и какие сделал выводы из него\n4. Каких задач ждешь, что для тебя развитие?\n5. Какие могут быть проблемы с вебсокетом? Когда вебсокет нужен, а когда не очень...",
        "full_content": "2025-07-11 12:47:23\n Ivan -> 2071074234:\nКомпания: Evercode Lab\nЗП: 250-300+\n\nЭто был первый тех этап с разговорами про опыт. Больше было похоже софтовое интервью. \nЕсли окей, то зовут в свой офис на 2-ю часть. Потом еще финальная с сео/директором тк позиция senior.\nДлилось чуть меньше часа.\n\n1. Про опыт\n2. Про интересную задачу\n3. Про факап и какие сделал выводы из него\n4. Каких задач ждешь, что для тебя развитие?\n5. Какие могут быть проблемы с вебсокетом? Когда вебсокет нужен, а когда не очень?\n6. Как решаешь конфликтные ситуации?\n7. Если тимлид не прав, а ты прав, то как продавить свое решение чтоб прод не упал в итоге?\n8. Есть несколько задач в спринте одинаковых по приоритету, в каком порядке будешь делать и почему?\n9. Клиент зарегистрировался, попал на главную, перешел в личный кабинет. Личный кабинет грузится 30 сек. Что с этим делать? (тут надо задавать больше вопросов потому что это их реальный кейс и там тяжелые ручки на бэке. Вообще не про фронт проблема в итоге оказалась))) )\n10. На какой грейд себя оцениваешь?\n11. Какой оффер выберешь если получишь 2 с одинаковыми условиями (у них онли офис и они очень переживают на этот счет)"
      }
    ]
  },
  {
    "company": "Сибинтек",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-28 06:05:52",
        "content": "2025-03-28 06:05:52\n Андрей Мелицков -> 2071074234:\nКомпания Сибинтек\nЗП 250\n\nтехсобес с двумя специалистами, один чуть заикается. Копают в глубь на понимание рендеров в реакт. Открывают чат в тг и все задачи скидывают туда и просят читать код и рассказывать что делает и как улучшить. Скину задачи ниже:\n\nМожно ли вызывать в ефекте ретурн и как это будет работать, заблочит ли он выполнение функции ниже:\n\nuseEffect(() => {\nif(!visible) return;\n//... \n//...\nshowModal();\n}, [visible])\n\nЧто просиходи...",
        "full_content": "2025-03-28 06:05:52\n Андрей Мелицков -> 2071074234:\nКомпания Сибинтек\nЗП 250\n\nтехсобес с двумя специалистами, один чуть заикается. Копают в глубь на понимание рендеров в реакт. Открывают чат в тг и все задачи скидывают туда и просят читать код и рассказывать что делает и как улучшить. Скину задачи ниже:\n\nМожно ли вызывать в ефекте ретурн и как это будет работать, заблочит ли он выполнение функции ниже:\n\nuseEffect(() => {\nif(!visible) return;\n//... \n//...\nshowModal();\n}, [visible])\n\nЧто просиходит и Как исправить, чтоб не было ошибки при таком выполнении кода\n\nconst [count, setCount] = useState(0)\n\nuseEffect(() => {\n   // код\n   setCount(count + 1)\n\n}, [count, ....])\n\nБудет ли React  воспринимать useCount, как пользовательский хук?\nconst useCount = (cnt) => cnt + 1; \n\nfunction MyComponent() {\n  const count = useCount(0); \n\n  return (\n    <div>\n      <p>Count: {count}</p>\n    </div>\n  );\n}\n\n\nЧто происходит в этом коде, сколько рендеров, как улучшить:\n   const ToggleComponent = () => {\n     const [isVisible, setIsVisible] = useState(false);\n     const inputRef = useRef(null);\n\n     const toggleVisibility = () => {\n       setIsVisible(prev => !prev);\n       if (inputRef.current) {\n         inputRef.current.focus();\n       }\n     };\n\n     return (\n       <>\n         <button onClick={toggleVisibility}>Toggle Input</button>\n         {isVisible && <input ref={inputRef} />}\n       </>\n     );\n   };\n\n\nКриво работает счетчик, как исправить(нужно в setCount(prev => prev + 1))\n   const Counter = () => {\n     const [count, setCount] = useState(0);\n\n     useEffect(() => {\n       const timer = setInterval(() => {\n         setCount(count + 1);\n       }, 1000);\n\n       return () => clearInterval(timer);\n     }, []);\n\n     return <div>Count: {count}</div>;\n   };\n\n\nЧто в этом коде не так, как улучшить(асинхронщина в асинхронном эфекте, нужно вынести отдельную функцию)\n   const DataFetcher = () => {\n     const [data, setData] = useState(null);\n\n     useEffect(async () => {\n       const response = await fetch('/api/data');\n       const jsonData = await response.json();\n       setData(jsonData);\n     }, []);\n\n     return <div>{data ? JSON.stringify(data) : 'Loading...'}</div>;\n   };\n\n\nЧто происходит в коде и как себя ведет здесь рендер и val в дочернем компоненте\nimport React, { useRef, useState, useEffect } from 'react'\n\nconst CountDisplay = (props) =>{\n  const [val] = useState(props.c)\n  return <div>{val}</div>\n}\n\n\nconst App = () => {\n  const [count, setCount] = useState(0)\n\n  const handleClick = () => {\n    setCount(c => c + 1)\n  }\n  \n  return (<div>\n    <button onClick={handleClick}>\n      <span>⚛️</span> {count}\n    </button>\n    <CountDisplay c={count} />\n  </div>\n  )\n}\n\n\nexport default App\n\nЧто за код, что делает, в чем ошибка(я нашел только что не записи новых компонентов в функции в список уже имеющийся, не обьявлен стэйт на верхнем уровне, чтоб в него записывать и по коду возвращаем тот список что вошел)\n\nimport { useState, useEffect } from 'react';\nimport { useInfiniteScroll } from './hooks';\n\nconst App = () => {\n  const [page, setPage] = useState(1);\n\n  const fetchData = async (pageNumber) => {\n    try {\n      const response = await fetch(`https://api.example.com/data?page=${pageNumber}`);\n      if (!response.ok) throw new Error('Network error');\n      const json = await response.json();\n      return json.data;\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  };\n\n  const [items, isLoading, error] = useInfiniteScroll(fetchData, page, 10);\n\n  return (\n    <div>\n      {items.map(item => (\n        <div key={item.id}>\n          <p>{item.title}</p>\n        </div>\n      ))}\n      {isLoading && <p>Загрузка...</p>}\n      {error && <p>Ошибка: {error.message}</p>}\n    </div>\n  );\n};\n\nexport default App;\n\n---\n\n**\n\nimport { useState, useRef, useEffect } from 'react';\n\nconst useInfiniteScroll = (fetchMoreItems, items, threshold = 5) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const observer = useRef(null);\n\n  const lastItemElement = useRef(null);\n\n  useEffect(() => {\n    if (observer.current) observer.current."
      }
    ]
  },
  {
    "company": "Restoclub",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-12 17:03:07",
        "content": "2025-03-12 17:03:07\n Nodar -> 2071074234:\nКомпания: Restoclub\nВакансия: https://hh.ru/vacancy/117697420?hhtmFrom=chat\nЗп: 250+\nЗадач не было.\n\nВопросы от pm:\nСпрашивал про опыт в резюме, про проект и  команду, как ставились задачи. Формат разговорный\n\nВопросы от фронта(Формат вопрос-ответ):\nВопрос про архитектуру(fsd), преимущества и недостатки\n\nJS\n1) Типы данных js\n2) function declaration/expression отличия\n3) map/set отличия\n4) cookie,sessionStorage, localStorage для чего, отличия\n5) Функции в...",
        "full_content": "2025-03-12 17:03:07\n Nodar -> 2071074234:\nКомпания: Restoclub\nВакансия: https://hh.ru/vacancy/117697420?hhtmFrom=chat\nЗп: 250+\nЗадач не было.\n\nВопросы от pm:\nСпрашивал про опыт в резюме, про проект и  команду, как ставились задачи. Формат разговорный\n\nВопросы от фронта(Формат вопрос-ответ):\nВопрос про архитектуру(fsd), преимущества и недостатки\n\nJS\n1) Типы данных js\n2) function declaration/expression отличия\n3) map/set отличия\n4) cookie,sessionStorage, localStorage для чего, отличия\n5) Функции высшего порядка(HOF), что это, приведи пример\n6) var,let,const отличия\n7) eventLoop, микро и макротаски, как работает\n8) Промисы, как работают, методы промисов(race,all)\n9) this, что это, как работает в обычных и стрелочных функциях\n10) модули в js (import export es6+),common js(require)\n\nReact\n1) Для чего useEffect, методы жизненного цикла компонента, отличия useEffect от useLayoutEffect\n2) Как реакт понимает когда надо сделать ререндер\n3) Передача пропсов, примитивы и ссылки, что вызовет ререндер(вопрос про useCallback и memo)\n4) Что будет, если поместить тяжелые вычисления в useEffect(будет ли блокировка)\n5) Вопрос про хранение данных в react(useState,state managerы, useRef, context)"
      }
    ]
  },
  {
    "company": "Тензор",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-04-15 01:56:49",
        "content": "2025-04-15 01:56:49\n Ber -> 2071074234:\n— Название компании: Тензор, 1 этап (технический) в Тензор с командой, после скриннинга\nСобес был в команду, которая заниматься UI-платформой, ищут разработчика UI\n— Ссылка на вакансию: https://spb.hh.ru/vacancy/119226602\n— ЗП: просил от 180 тр на руки\n— Вопросы (все были на устное размышление): \n1) Расскажи о своем опыте? Какой стек используешь?\n2) Почему уходишь с работы?\n3) Есть задача: есть скролл, пользователь скроллит - как сделать так, чтобы при пер...",
        "full_content": "2025-04-15 01:56:49\n Ber -> 2071074234:\n— Название компании: Тензор, 1 этап (технический) в Тензор с командой, после скриннинга\nСобес был в команду, которая заниматься UI-платформой, ищут разработчика UI\n— Ссылка на вакансию: https://spb.hh.ru/vacancy/119226602\n— ЗП: просил от 180 тр на руки\n— Вопросы (все были на устное размышление): \n1) Расскажи о своем опыте? Какой стек используешь?\n2) Почему уходишь с работы?\n3) Есть задача: есть скролл, пользователь скроллит - как сделать так, чтобы при перезагрузке страницы пользователь оказался на том же месте?\n4) Доп условие: а если бэкенд будет отправлять данные чанками? В каком виде будешь согласовывать данные чанка с бэкенд-разработчиком? И как будешь решать задачу из пункта 3)\n5) Есть список данных - как сделать так, что при изменении списка одним пользователем - изменненые данные отображались для всех других пользователей?\nОтвет: надо использовать websocket\n6) Доп вопрос для пункта 5): а если задача такая, что на основе этого списка и еще других данных расчитывается и отрисовывается статистика (графики), то как сделать так, чтобы дополнительные данные подгружались только один раз при условии, например, что у пользователся открыто 5 вкладок?\nТо есть список сам, да, отправляешь ты через socket.io, но при этом не надо подгружать доп данные при каждом изменении списка\nОтвет: ответил, что доп данные для статистики надо загрузить при первом посещении пользователя и сохранить в localStorage или в indexedDB, если тяжелые данные. Компонент статистики сделать дочерним для компонента со списком - то есть при именении списка будет ререндер родительского, а дочерний будет обернут в memo (и будет ререндер дочернего только при изменении данных списка) и внутри дочернего будет проверяться наличие доп данных в localStorage для статистики.\nСобеседующий сказал: да, принимается\n7) Какие принципы ООП?\n8) На примере двух классов раскрой каждый принцип\n9) Какие есть модификаторы в классах? И почему они нужны? Какие именно приниципы ООП они реализовывают?\n10) Что в целом является Interface в парадигме ООП?\n11) Какие конкретно можешь примеры рассказать применения interface в TS? Почему именно он введен в TS? Что он дает относительно ООП? \n12) В чем отличие interface и type в TS? Почему ввели interface, ведь можно же всё делать с type?\n\n— Успех собеса: пока не ответили - ответным сообщением отпишу\n— Фитбек о собесе от HR: пока жду ответ"
      }
    ]
  },
  {
    "company": "Название Компани: Marfatech",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-03-13 15:43:16",
        "content": "2024-03-13 15:43:16\n V -> 2071074234:\nНазвание компани: Marfatech\nВакансия: -\nЗП: 250K\nВопросы (Очень мало тех.вопросов): \n﻿﻿- Как бы ты сравнил react и vue?\n- Знаешь ли как настроить webpack с нуля?\n- Про webpack-module-federation\n- Про тесты\n- Про перфоманс\n- Отличие GET и POST\n- Про enum\n\nЗадаю много вопросов\nЗапись собеседования: https://youtu.be/DjdbhMMTZZM?si=R1yOHDEOHDx6QH9H\nУспех собеседования: ✅ дали оффер\nОтвет HR: У нас очень положительная обратная связь)",
        "full_content": "2024-03-13 15:43:16\n V -> 2071074234:\nНазвание компани: Marfatech\nВакансия: -\nЗП: 250K\nВопросы (Очень мало тех.вопросов): \n﻿﻿- Как бы ты сравнил react и vue?\n- Знаешь ли как настроить webpack с нуля?\n- Про webpack-module-federation\n- Про тесты\n- Про перфоманс\n- Отличие GET и POST\n- Про enum\n\nЗадаю много вопросов\nЗапись собеседования: https://youtu.be/DjdbhMMTZZM?si=R1yOHDEOHDx6QH9H\nУспех собеседования: ✅ дали оффер\nОтвет HR: У нас очень положительная обратная связь)"
      }
    ]
  },
  {
    "company": "Infrakap",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-04 12:58:40",
        "content": "2024-10-04 12:58:40\n Михаил -> 2071074234:\nInfraKAP\nвакансия hh.ru/vacancy/107244672\nв целом видео можно не смотреть, вопросы были из разряда \"пользовался?\"-\"да пользовался\" и немного дополнял что и зачем. в основном разговоры \"за жизнь\"",
        "full_content": "2024-10-04 12:58:40\n Михаил -> 2071074234:\nInfraKAP\nвакансия hh.ru/vacancy/107244672\nв целом видео можно не смотреть, вопросы были из разряда \"пользовался?\"-\"да пользовался\" и немного дополнял что и зачем. в основном разговоры \"за жизнь\""
      }
    ]
  },
  {
    "company": "Alderasoft",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-02-07 15:19:47",
        "content": "2025-02-07 15:19:47\n Александр Богданов -> 2071074234:\nКомпания ALDERASOFT (г.Томск, аутстаф):\n-по пункту в резюме: «Как скачивание фаилов в pdf реализовал»\n-разница null vs undefined\n-Symbol что такое и зачем\n-пользовался ли var, почему не используем эту переменную\n-можем ли через const поменять свойства объекта\n-можем ли сделать чтобы нельзы было менять своиства объекта(«заморозить...»)\n-замыкание;eventLoop\n-виды функций, контекст, методы сохранения контекста,\n-сказал что я не прав bind/call/a...",
        "full_content": "2025-02-07 15:19:47\n Александр Богданов -> 2071074234:\nКомпания ALDERASOFT (г.Томск, аутстаф):\n-по пункту в резюме: «Как скачивание фаилов в pdf реализовал»\n-разница null vs undefined\n-Symbol что такое и зачем\n-пользовался ли var, почему не используем эту переменную\n-можем ли через const поменять свойства объекта\n-можем ли сделать чтобы нельзы было менять своиства объекта(«заморозить...»)\n-замыкание;eventLoop\n-виды функций, контекст, методы сохранения контекста,\n-сказал что я не прав bind/call/apply можно применить к стрелкам и так делал в классовых компонентах\n-все про промиссы + статичные методы промисса + async/await + избегаем коллбек-хелл_а...\n- методы массива основные\n-немного про абортконтроллер + отмена запросов с аксиос\n- делал ли дженерики и в каких случаях(в кастомных утилитных случаях)\n- разница м/у interface vs type, infer? Any vs unknown vs never\n- все про реакт расскажи кратко\n- способы оптимизации\n- react vs view vs angular\n- хуки реакта\n- Контекст в реакте зачем как работает\n // Написать тип для  multiplyBy2\nconst sum = (a, b) => a + b;\nsum.multiplyBy2 = (a, b) => sum(a, b) * 2;\n// Ответ:\ntype SumWithMultiply = {\n  (a: number, b: number): number; // описание функции sum\n  multiplyBy2?: (a: number, b: number) => number; // свойство multiplyBy2\n};"
      }
    ]
  },
  {
    "company": "- Интеграционные Решения",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-04-29 17:00:13",
        "content": "2025-04-29 17:00:13\n Максим Соломыкин -> 2071074234:\nКомпания - Интеграционные решения\nЗП - 200 - 300 на руки\nВакансия - hr написал\n\nВопросы:\n1. Кратко про опыт\n2. Что такое батчинг в реакт\n2. Разница интерфейсов и типов\n3. Что такое ref и зачем нужен\n4. Что такое cleanup функция в useEffect\n5. Разница между any / never / unknown\n\nЗадачи:\n\n1. Реализовать метод groupBy\n\nРешение:\nconst data = [\n    { id: 1, type: 'fruit', name: 'apple' },\n    { id: 2, type: 'vegetable', name: 'carrot' },\n    { id:...",
        "full_content": "2025-04-29 17:00:13\n Максим Соломыкин -> 2071074234:\nКомпания - Интеграционные решения\nЗП - 200 - 300 на руки\nВакансия - hr написал\n\nВопросы:\n1. Кратко про опыт\n2. Что такое батчинг в реакт\n2. Разница интерфейсов и типов\n3. Что такое ref и зачем нужен\n4. Что такое cleanup функция в useEffect\n5. Разница между any / never / unknown\n\nЗадачи:\n\n1. Реализовать метод groupBy\n\nРешение:\nconst data = [\n    { id: 1, type: 'fruit', name: 'apple' },\n    { id: 2, type: 'vegetable', name: 'carrot' },\n    { id: 3, type: 'fruit', name: 'banana' },\n];\n\nconst groupBy = (items, key) => {\n    const mapa = {};\n    items.forEach(item => {\n        const groupKey = item[key];\n        if (!mapa[groupKey]) {\n            mapa[groupKey] = [];\n        }\n        mapa[groupKey].push(item);\n    });\n    return mapa;\n};\n\nconsole.log(groupBy(data, 'type'));\n\n2. Реализовать функцию compose\nconst compose = (...func) => {\n}\n\nconst add = (x) => x + 2;\nconst multiply = (x) => x * 3;\nconst subtract = (x) => x - 4;\n\nconst composedFunction = compose(add, multiply, subtract);\n\nconsole.log(composedFunction(5)); // (5 + 2) * 3 - 4 = 17\n\nРешение:\n\nconst compose = (...funcs) => (x) => {\n    return funcs.reduce((acc, fn) => fn(acc), x);\n};\n\nconst add = (x) => x + 2;\nconst multiply = (x) => x * 3;\nconst subtract = (x) => x - 4;\n\nconst composedFunction = compose(add, multiply, subtract);\n\nconsole.log(composedFunction(5)); // (5 + 2) * 3 - 4 = 17\n\n3. Реализовать кастомный хук useDebounce\n\nРешение:\n\nimport { useEffect, useState } from 'react';\n\nexport const useDebounce = (value) => {\n  const [debounceValue, setDebounceValue] = useState(value);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setDebounceValue(value);\n    }, 500);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [value]);\n\n  return debounceValue;\n};"
      }
    ]
  },
  {
    "company": "Prootech",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-02-21 14:16:15",
        "content": "2025-02-21 14:16:15\n Никита -> 2071074234:\nКомпания: Prootech\nВакансия: писала hr\nЗП: до 300\n1. Сколько может быть header main footer\n2. Специфичность селекторов\n3. id, id + class, id какой стиль применится\n4. Как определяется какой стиль применится(веса)\n5. Почему можно вызвать у примитива методы\n6. Как отсортируется массив, если в sort не передать колбэк\n7. Что такое TS\n8. Когда встретим тип never\n9. Что такое typeof и keyof\n10. let a - какой тип запишет TS (any). Как избавится(прописать прави...",
        "full_content": "2025-02-21 14:16:15\n Никита -> 2071074234:\nКомпания: Prootech\nВакансия: писала hr\nЗП: до 300\n1. Сколько может быть header main footer\n2. Специфичность селекторов\n3. id, id + class, id какой стиль применится\n4. Как определяется какой стиль применится(веса)\n5. Почему можно вызвать у примитива методы\n6. Как отсортируется массив, если в sort не передать колбэк\n7. Что такое TS\n8. Когда встретим тип never\n9. Что такое typeof и keyof\n10. let a - какой тип запишет TS (any). Как избавится(прописать правило в tsconfig)?\n11. Можно ли использовать index к статическому массиву\n12. Через что сделать componentWillMount\n13. Что будет если в useEffect будет пустой массив зависимостей.\n14. Приходит много карточек товара, при скроле нужно показывать новые,  как бы делал ( InterectionObserver и виртуализация)?\n\nЗадача на Promise\n\n\n\n\nconsole.log(1)\n\nsetTimeout(() => console.log(2), 0)\n\nnew Promise((res, rej) => {\nconsole.log(3)\nreject()\n}).then(() => console.log(4))\n.cath(() => console.log(6))\n\nconsole.log(6)\n\n\nУдалить дубликаты\n\n\n\nconst removeDuplicates = (arr) => {\n    let result = [];\n    for (let num of arr) {\n        if (!result.includes(num)) {\n            result.push(num);\n        }\n    }\n    return result;\n};\n\nconsole.log(removeDuplicates([1, 2, 2, 3)]\n\n\n\nНаписать свой flatt\n\n\n\nconst flat = (arr) => {\n    let result = [];\n    for (let item of arr) {\n        if (Array.isArray(item)) {\n            result.push(...flat(item)); // Рекурсивный вызов для вложенных массивов\n        } else {\n            result.push(item);\n        }\n    }\n    return result;\n};\n\nconsole.log(flat([[0, [1, [2]]], [3, [4, 5, 6], 7], [8], 9, [10]]));\n// [0,1,2,3,4,5,6,7,8,9"
      }
    ]
  },
  {
    "company": "Элвис",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-25 17:32:49",
        "content": "2024-11-25 17:32:49\n Артем -> 2071074234:\nКомпания Элвис\nЗП: 200\nВопросы\nспросил про опыт\nEvent loop\n1 3 4 5 2 6",
        "full_content": "2024-11-25 17:32:49\n Артем -> 2071074234:\nКомпания Элвис\nЗП: 200\nВопросы\nспросил про опыт\nEvent loop\n1 3 4 5 2 6"
      }
    ]
  },
  {
    "company": "Pravotech",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-03 09:54:05",
        "content": "2024-10-03 09:54:05\n Михаил -> 2071074234:\nКомпания PravoTech\nвакансия hh.ru/vacancy/107713293\nзп 200к\n\nВопросы:\n1. Написать ToDoList на классах (с добавление и удалением тудушек).\nЧерез 15 минут как начал писать (осталось кнопки добавить) сказал что это очень долго, мидл бы уже все сделал и стили накатил\nПо этому зареджектил собес",
        "full_content": "2024-10-03 09:54:05\n Михаил -> 2071074234:\nКомпания PravoTech\nвакансия hh.ru/vacancy/107713293\nзп 200к\n\nВопросы:\n1. Написать ToDoList на классах (с добавление и удалением тудушек).\nЧерез 15 минут как начал писать (осталось кнопки добавить) сказал что это очень долго, мидл бы уже все сделал и стили накатил\nПо этому зареджектил собес"
      }
    ]
  },
  {
    "company": "Рв-Системс",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-06-27 15:27:06",
        "content": "2025-06-27 15:27:06\n Daniil Daniil -> 2071074234:\nКомпания РВ-системс\n1 этап, созвон с hr\n\nВначале спрашивает и уточняет по резюме(подробно по крайнему месту работы)\nДальше мини тех скрининг:\n1. Типы данных\n2. Замыкание\n3. Что такое http, из чего состоит, заголовки, методы\n4. Что такое порталы в реакте\n5. Контекст\n6. Куки\n7. web component и из чего состоит. Какие технологии используются\n8. Что такое Прототип\n9. Solid\n10. Set,Map и их младшие братья\nРассказывал максимально подробно, по этому могл...",
        "full_content": "2025-06-27 15:27:06\n Daniil Daniil -> 2071074234:\nКомпания РВ-системс\n1 этап, созвон с hr\n\nВначале спрашивает и уточняет по резюме(подробно по крайнему месту работы)\nДальше мини тех скрининг:\n1. Типы данных\n2. Замыкание\n3. Что такое http, из чего состоит, заголовки, методы\n4. Что такое порталы в реакте\n5. Контекст\n6. Куки\n7. web component и из чего состоит. Какие технологии используются\n8. Что такое Прототип\n9. Solid\n10. Set,Map и их младшие братья\nРассказывал максимально подробно, по этому могла скипнуть некоторые вопросы, так что лучше как можно подробнее рассказывать"
      }
    ]
  },
  {
    "company": "Московский Аэропорт Домодедово",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-29 13:09:54",
        "content": "2024-10-29 13:09:54\n Гасим Мурасов -> 2071074234:\nКомпания: Московский аэропорт Домодедово\nЗП: макс 170к по вакансии\nВакансия: https://hh.ru/vacancy/108795479?hhtmFrom=resume\nИз вопросов:\nспрашивал про опыт и расскажи о себе\nкак попал в ИТ\nЗадача: написать функцию, возвращающую случайное число и симулировать запрос.\nвот код: https://interview.tbank.ru/link/nvzDnNbkn5jK/result",
        "full_content": "2024-10-29 13:09:54\n Гасим Мурасов -> 2071074234:\nКомпания: Московский аэропорт Домодедово\nЗП: макс 170к по вакансии\nВакансия: https://hh.ru/vacancy/108795479?hhtmFrom=resume\nИз вопросов:\nспрашивал про опыт и расскажи о себе\nкак попал в ИТ\nЗадача: написать функцию, возвращающую случайное число и симулировать запрос.\nвот код: https://interview.tbank.ru/link/nvzDnNbkn5jK/result"
      }
    ]
  },
  {
    "company": "Рсхб - Отд.Корп.Аналитики",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-19 11:02:46",
        "content": "2024-06-19 11:02:46\n Tonidevs -> 2071074234:\nРСХБ - отд.корп.аналитики\n— вакансия сами написали\n— ЗП: до 300 думаю, вилку не озвучили\n— успех: чуть душно было в конце, ну так норм по задачам\n\nВОПРОСЫ\n- в основном про опыт и про поболтать, дальше сразу LC\n\nЗАДАЧИ\n- что будет в консоли\nvar a = 1;\nvar b = 1;\nvar c = '1';\nvar d = 1.0;\nvar f = 1.0000000000000001;\n\nconsole.log(a == b);\nconsole.log(a == c);\nconsole.log(a === c);\nconsole.log(a == d);\nconsole.log(a === d);\nconsole.log(a == f);\n\n~~~~~~~~~...",
        "full_content": "2024-06-19 11:02:46\n Tonidevs -> 2071074234:\nРСХБ - отд.корп.аналитики\n— вакансия сами написали\n— ЗП: до 300 думаю, вилку не озвучили\n— успех: чуть душно было в конце, ну так норм по задачам\n\nВОПРОСЫ\n- в основном про опыт и про поболтать, дальше сразу LC\n\nЗАДАЧИ\n- что будет в консоли\nvar a = 1;\nvar b = 1;\nvar c = '1';\nvar d = 1.0;\nvar f = 1.0000000000000001;\n\nconsole.log(a == b);\nconsole.log(a == c);\nconsole.log(a === c);\nconsole.log(a == d);\nconsole.log(a === d);\nconsole.log(a == f);\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nvar a = {k: 0};\nvar b = {k: 0};\nconsole.log(a == b);\nconsole.log(a === b);\n- исправь функцию чтобы было хей арнольд\nconst fn = (person) => {\n  if (person === { name: 'amy' }) {\n    return 'hey amy';\n  }\n  return 'hey arnold';\n};\n\nfn({ name: 'amy' });\n- реши задачу\nКак задать параметр, пропустив предыдущий необязательный\n\nfunction foo(a: string, b: string = 'b', c: string = 'c') { ... }\n\nКак оставить 2-й параметр со значением по умолчанию, а для первого и третьего задать свои значения?\n\nfoo('undefined, 'b', 'c')\n\n- что будет в консоли и почему\nconst _obj = {\n  name: \"Petr\",\n  sayHi: function() {\n    alert(`Hi ${this.name}`);\n  }\n}\n\nfunction stringify(obj) {\n  return JSON.stringify(obj);\n}\n\nfunction parse(str) {\n  return JSON.parse(str);\n}\n\nparse(stringify(_obj)).sayHi();\n\n- как будет работать этот код, каждый \nEvent loop\n// 1\nwhile (1) {}\n\n// 2\nfunction fn() {\n  setTimeout(fn);\n}\nfn();\n\n// 3\nfunction fn() {\n  return Promise.resolve()\n    .then(fn);\n}\nfn();\n\n- накодить компонент Count\n+-----------------------+\n| count: 1              | <- текст \n| +--------------+      |\n| |Update counter|      | <- кнопка\n| +--------------+      |\n|                       |\n+-----------------------+\nобщий цвет фона - синий\nцвет кнопки красный\nзадача со звездочкой - цвет текста на кнопке меняется при нажатии\n\nexport default function App() {\n    const [count, setCount] = useState(0)\n    const [isTextColorChanged, setIsTextColorChanged] = useState(false)\n    \n    const updateCounter = () => {\n        setCount(count + 1)\n        setIsTextColorChanged(!isTextColorChanged)\n    }\n    \n    return (\n        <div style={{backgroundColor:\"blue\"}}>\n        <div>count {count}</div>\n        <button\n        onClick={updateCounter}\n        style={{backgroundColor: 'red', color: isTextColorChanged ? 'black' : 'white'}}\n        >\n            upd\n        </button>\n        </div>\n        )\n}"
      }
    ]
  },
  {
    "company": "АФЛТ Систем",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-07 08:39:41",
        "content": "2025-07-07 08:39:41\n Даниил -> 2071074234:\nАФЛТ СИСТЕМ\nЗП от 230к \nЧто происходит когда вводится url в строку браузера \nЧто такое event-loop\nчто такое this\nкак внутри DOM ведет себя this, на что ссылается \nРассказать про утечку памяти\nразница между SSR, SSG, ISR\nРассказать про SEO, оптимизация, как работает поисковой робот\nЧто такое рекурсия\n  Задача 1\n  \nconst sumOfSquares = (arr) => {\n    return reduce(el, acc => {\n  return el * el + acc\n}, 0, arr)\n}\n  Задача 2 -реализовать класс Subscription\n...",
        "full_content": "2025-07-07 08:39:41\n Даниил -> 2071074234:\nАФЛТ СИСТЕМ\nЗП от 230к \nЧто происходит когда вводится url в строку браузера \nЧто такое event-loop\nчто такое this\nкак внутри DOM ведет себя this, на что ссылается \nРассказать про утечку памяти\nразница между SSR, SSG, ISR\nРассказать про SEO, оптимизация, как работает поисковой робот\nЧто такое рекурсия\n  Задача 1\n  \nconst sumOfSquares = (arr) => {\n    return reduce(el, acc => {\n  return el * el + acc\n}, 0, arr)\n}\n  Задача 2 -реализовать класс Subscription\n    \ntype Subscriber<T> = (value: T) => void;\n\nclass Subscription<T> {\n  private subscribers: Set<Subscriber<T>> = new Set();\n\n  // Добавить подписчика\n  subscribe(callback: Subscriber<T>): void {\n    this.subscribers.add(callback);\n  }\n\n  // Удалить подписчика\n  unsubscribe(callback: Subscriber<T>): void {\n    this.subscribers.delete(callback);\n  }\n\n  // Вызвать всех подписчиков с новым значением\n  next(value: T): void {\n    for (const subscriber of this.subscribers) {\n      subscriber(value);\n    }\n  }\nЗадача 3\nРеализовать классовый компонент - https://stackblitz.com/edit/vitejs-vite-9m23ea5w?file=src%2Fcontainers%2Fuser-container%2Findex.tsx,src%2Fcomponents%2Fempty%2Fstyles.module.css,src%2Fcomponents%2Fempty%2Findex.tsx,src%2Fcontainers%2Fuser-container%2Fstyles.module.css"
      }
    ]
  },
  {
    "company": "Dinord",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-01-24 14:30:51",
        "content": "2024-01-24 14:30:51\n Mr 🐈 -> 2071074234:\nНазвание компании: Dinord\nЗП: до 200к\n\nПроцесс:\nБез камер, теория по базе (JS/TS/React/ эвентлуп) \n\nзадача \nна консоль лог промисы сеттаймауты\n\nзадача\nнужно получить с из a и b\n\nconst a = [{id:1, color: red}]\nconst b = [{id:1, size: 32}]\n\nconst c = [{id:1, color: red, size: 32}]\n\nрешение: const c = a.map(itemA => {\n    const itemB = b.find(itemB => itemB.id === itemA.id);\n    return {...itemA, ...itemB};\n});",
        "full_content": "2024-01-24 14:30:51\n Mr 🐈 -> 2071074234:\nНазвание компании: Dinord\nЗП: до 200к\n\nПроцесс:\nБез камер, теория по базе (JS/TS/React/ эвентлуп) \n\nзадача \nна консоль лог промисы сеттаймауты\n\nзадача\nнужно получить с из a и b\n\nconst a = [{id:1, color: red}]\nconst b = [{id:1, size: 32}]\n\nconst c = [{id:1, color: red, size: 32}]\n\nрешение: const c = a.map(itemA => {\n    const itemB = b.find(itemB => itemB.id === itemA.id);\n    return {...itemA, ...itemB};\n});"
      }
    ]
  },
  {
    "company": "Аласкар",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-26 19:36:32",
        "content": "2024-06-26 19:36:32\n Руслан -> 2071074234:\n— Аласкар технологии\n— Ссылка: https://hh.ru/vacancy/102308591\n— ЗП: 150\n— Задачи:\n/**\n  Есть массив операций.\n  Необходимо операции отсортировать по дате и сгруппировать их по году, а в качестве \n  значений представить массивы c датами в формате MM-DD.\n  Пример результата:\n  result = {\n    \"2017\": [\n      \"07-31\",\n      \"08-22\"\n    ],\n    \"2018\": [\n      \"01-01\"\n      \"02-22\"\n    ]\n  }\n*/\n\nconst operations = [\n    { \"date\": \"2017-07-31\", \"amount\": \"542...",
        "full_content": "2024-06-26 19:36:32\n Руслан -> 2071074234:\n— Аласкар технологии\n— Ссылка: https://hh.ru/vacancy/102308591\n— ЗП: 150\n— Задачи:\n/**\n  Есть массив операций.\n  Необходимо операции отсортировать по дате и сгруппировать их по году, а в качестве \n  значений представить массивы c датами в формате MM-DD.\n  Пример результата:\n  result = {\n    \"2017\": [\n      \"07-31\",\n      \"08-22\"\n    ],\n    \"2018\": [\n      \"01-01\"\n      \"02-22\"\n    ]\n  }\n*/\n\nconst operations = [\n    { \"date\": \"2017-07-31\", \"amount\": \"5422\" },\n    { \"date\": \"2017-06-30\", \"amount\": \"5220\" },\n    { \"date\": \"2017-05-31\", \"amount\": \"5365\" },\n    { \"date\": \"2017-08-31\", \"amount\": \"5451\" },\n    { \"date\": \"2017-09-30\", \"amount\": \"5303\" },\n    { \"date\": \"2018-03-31\", \"amount\": \"5654\" },\n    { \"date\": \"2017-10-31\", \"amount\": \"5509\" },\n    { \"date\": \"2017-12-31\", \"amount\": \"5567\" },\n    { \"date\": \"2018-01-31\", \"amount\": \"5597\" },\n    { \"date\": \"2017-11-30\", \"amount\": \"5359\" },\n    { \"date\": \"2018-02-28\", \"amount\": \"5082\" },\n    { \"date\": \"2018-04-14\", \"amount\": \"2567\" }\n];\n\nfunction sortOperations(operations) {}\n/**\nНапишите функцию, которая найдет все наборы анаграмм в строке. \nАнаграммы - слова, составленные из одного и того же набора букв (рост-сорт-трос)\n*/\n\nconst str = 'адрес карп кума куст мир мука парк рим среда стук рост сорт трос';\n\nfunction getAnagrams(str) {\n  const words = str.split(' ');\n  const anagrams = {};\n  words.forEach(word => {\n    const sortedWord = word.split('').sort().join('');\n    if(!anagrams[sortedWord]) {\n      anagrams[sortedWord] = []\n    }\n    anagrams[sortedWord].push(word)\n  })\n  \n  return Object.values(anagrams)\n}\nВопросы:\n1. Отличие proto - prototype\n2. Как используется super в классах\n3. Отличие useCallback от useMemo\n4. Event loop\n5. Случаи использования кастомных дженериков в проектах\n6. Call, bind, apply\n7. Что такое контекст"
      }
    ]
  },
  {
    "company": "Stream Telecom",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-03-20 13:52:13",
        "content": "2024-03-20 13:52:13\n 5429820319 -> 2071074234:\nНазвание компании: Stream Telecom \nСсылка на вакансию: hr сама написала\nЗП: 160К \nЗадачи: была задача на Палиндром, далее сделать свой Pick и Omit, потом спросили про сложность алгоритмов, было немого базовых вопросов по JS, на все про все меньше часа\nУспех собеса: ❌, сказали что нашли дешевле\n\nСобес был перед 8 марта, ходил ради практики",
        "full_content": "2024-03-20 13:52:13\n 5429820319 -> 2071074234:\nНазвание компании: Stream Telecom \nСсылка на вакансию: hr сама написала\nЗП: 160К \nЗадачи: была задача на Палиндром, далее сделать свой Pick и Omit, потом спросили про сложность алгоритмов, было немого базовых вопросов по JS, на все про все меньше часа\nУспех собеса: ❌, сказали что нашли дешевле\n\nСобес был перед 8 марта, ходил ради практики"
      }
    ]
  },
  {
    "company": "Lady & Gentleman City",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-26 11:11:21",
        "content": "2024-11-26 11:11:21\n Артем -> 2071074234:\nКомпания: lady & gentleman CITY\nВопросы:\n Спросили про опыт\nв массиве ищем элемент по id какая сложность алгоритма(n(1))\nЗадачи:\nПеревернуть строку но не буквы\nfunction reverseWords(sentence) {\n    // Разделяем предложение на слова\n    let words = sentence.split(' ');\n    // Разворачиваем массив слов\n    let reversedWords = words.reverse();\n    // Объединяем слова обратно в строку\n    let reversedSentence = reversedWords.join(' ');\n    return reversedSen...",
        "full_content": "2024-11-26 11:11:21\n Артем -> 2071074234:\nКомпания: lady & gentleman CITY\nВопросы:\n Спросили про опыт\nв массиве ищем элемент по id какая сложность алгоритма(n(1))\nЗадачи:\nПеревернуть строку но не буквы\nfunction reverseWords(sentence) {\n    // Разделяем предложение на слова\n    let words = sentence.split(' ');\n    // Разворачиваем массив слов\n    let reversedWords = words.reverse();\n    // Объединяем слова обратно в строку\n    let reversedSentence = reversedWords.join(' ');\n    return reversedSentence;\n}\nесть upperCase нужно разделить на пробел если заглавная буква \nfunction splitCamelCase(word) {\n    // Находим индекс первой заглавной буквы\n    let index = -1;\n    for (let i = 0; i < word.length; i++) {\n        if (word[i] === word[i].toUpperCase()) {\n            index = i;\n            break;\n        }\n    }\n\n    // Если заглавная буква найдена, разделяем слово и вставляем пробел\n    if (index !== -1) {\n        return word.slice(0, index) + ' ' + word.slice(index);\n    }\n\n    // Если заглавная буква не найдена, возвращаем исходное слово\n    return word;\n}\nдобавить этот метод в прототип стринг\nString.prototype.splitCamelCase = function() {\n    return this.split('').reduce((acc, char, index) => {\n        if (char === char.toUpperCase() && index > 0) {\n            return acc + ' ' + char;\n        }\n        return acc + char;\n    }, '');\n};\n\nlet sss = \"camelCasingNotation\";\n\n// Выводим результат на экран\nconsole.log(sss.splitCamelCase()); // \"camel Casing Notation\"\nПравильно оттепезировать функцию \nimport React from 'react';\n\n// Определяем обобщенный интерфейс Props\ninterface Props<T> {\n    optionList: T[];\n    onSelect: (option: T) => void;\n}\n\n// Определяем тип City\ntype City = {\n    name: string;\n    coordinates: [number, number];\n};\n\n// Пример массива городов\nconst cities: City[] = [{ coordinates: [123456, 654321], name: \"Moscow\" }];\n\n// Обновляем компонент Select, чтобы он принимал обобщенные пропсы\nfunction Select<T>({ optionList, onSelect }: Props<T>) {\n    return (\n        <select onChange={(e) => onSelect(optionList[e.target.selectedIndex])}>\n            {optionList.map((option, index) => (\n                <option key={index} value={index}>\n                    {(option as any).name} {/* Предполагаем, что у всех опций есть свойство name */}\n                </option>\n            ))}\n        </select>\n    );\n}\n\n// Используем компонент Select с типизированным аргументом функции onSelect\nconst App = () => {\n    const handleSelect = (value: City) => {\n        console.log(value);\n    };\n\n    return (\n        <Select<City> optionList={cities} onSelect={handleSelect} />\n    );\n};\n\nexport default App;"
      }
    ]
  },
  {
    "company": "Катюша Принт",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-02 14:53:58",
        "content": "2024-10-02 14:53:58\n Михаил -> 2071074234:\nКатюша Принт\nвакансия hh.ru/vacancy/107700543\nзп 200к\nпосле 01:08 можно не смотреть, т.к. до конца чисто про компанию рассказывает",
        "full_content": "2024-10-02 14:53:58\n Михаил -> 2071074234:\nКатюша Принт\nвакансия hh.ru/vacancy/107700543\nзп 200к\nпосле 01:08 можно не смотреть, т.к. до конца чисто про компанию рассказывает"
      }
    ]
  },
  {
    "company": "Divante",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-06 12:40:28",
        "content": "2024-11-06 12:40:28\n Artem D -> 2071074234:\nКомпания: Divante\nЗП: Не обсуждали\nВакансия: написали в линкед напрямую\nФормат удобен тем, что можно в чатгпт скормить ответы, но из-за таймера на ответ очень нервно. Надеюсь они не отслеживали нажатие ПКМ :D",
        "full_content": "2024-11-06 12:40:28\n Artem D -> 2071074234:\nКомпания: Divante\nЗП: Не обсуждали\nВакансия: написали в линкед напрямую\nФормат удобен тем, что можно в чатгпт скормить ответы, но из-за таймера на ответ очень нервно. Надеюсь они не отслеживали нажатие ПКМ :D"
      }
    ]
  },
  {
    "company": "Aladdin",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-27 17:37:22",
        "content": "2024-11-27 17:37:22\n Daniil -> 2071074234:\nКомпания Aladdin\nВакансия https://hh.ru/vacancy/109907412?hhtmFrom=negotiation_list\nЗП запрашивал 280\nВопросы: \n- Про опыт, спрашивал по конкретной реализации фич на прошлых проектах\n-  Про виртуализацию списков\n- Как можно вызвать ререндер child из parent не прокидывая пропсы в сhild\n- Спрашивал о работе веб-сервера Nginx, что это и зачем вообще надо\n- TS : отличия типов от интерфейса\n- Utility types\n- Методы массивов\n- useEffect , useLayoutEffect\n-  д...",
        "full_content": "2024-11-27 17:37:22\n Daniil -> 2071074234:\nКомпания Aladdin\nВакансия https://hh.ru/vacancy/109907412?hhtmFrom=negotiation_list\nЗП запрашивал 280\nВопросы: \n- Про опыт, спрашивал по конкретной реализации фич на прошлых проектах\n-  Про виртуализацию списков\n- Как можно вызвать ререндер child из parent не прокидывая пропсы в сhild\n- Спрашивал о работе веб-сервера Nginx, что это и зачем вообще надо\n- TS : отличия типов от интерфейса\n- Utility types\n- Методы массивов\n- useEffect , useLayoutEffect\n-  дженерики + спросил можно ли указать дженерик в JSX при рендере компонента. Ответ: можно запись <Child<T> data ={T}/> \n-  useRef, forwardRef + вопрос можно ли реф прокинуть в дочерний компонент просто как пропс. Ответ: можно, но реакт выдаст ошибку что реф пытаетесь прокинуть без forward\nЗадачи: \n1) Написать функцию как каррированную которая аргументами принимает числа, после всех вызовов идет пустой вызов без аргументов, который свидетельствует об окончании работы фк. Если функция сразу вызвана без аргументов то вернет 0. \n2) Задача на EventLoop"
      }
