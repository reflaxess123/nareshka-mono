      {
        "timestamp": "2024-10-15 11:59:58",
        "content": "2024-10-15 11:59:58\n Katerina -> 2071074234:\nКомпания: ай теко\nВакансия: https://spb.hh.ru/vacancy/106341557?from=employer&hhtmFrom=employer\nЗП: 250к\nВопросы: один в один - https://t.me/c/2071074234/489/67643\n\nПроект в сбер! вопросы от проекта к проекту меняются, т.к. собесят чуваки с проекта непосредственно )",
        "full_content": "2024-10-15 11:59:58\n Katerina -> 2071074234:\nКомпания: ай теко\nВакансия: https://spb.hh.ru/vacancy/106341557?from=employer&hhtmFrom=employer\nЗП: 250к\nВопросы: один в один - https://t.me/c/2071074234/489/67643\n\nПроект в сбер! вопросы от проекта к проекту меняются, т.к. собесят чуваки с проекта непосредственно )"
      }
    ]
  },
  {
    "company": "Код Безопасности",
    "count": 4,
    "records": [
      {
        "timestamp": "2024-11-15 07:42:24",
        "content": "2024-11-15 07:42:24\n Sergey F -> 2071074234:\nКомпания: Код безопасности\nВакашка: HR сама написала\nЗП: указала 240-270\n\nВопросы:\nОчень подробно расспросили про свой опыт работы, с чего начался мой путь программиста. Какие где технологии юзал, почему такие, кто выбирал стек, как учил новые вещи. После моего рассказа, примерно 20 минут, лид сказал, что он услышал, что хотел и хочет пропустить техническую часть интервью и сразу перешел к проекту и задачам. Спросили, когда смогу приступить. Первый со...",
        "full_content": "2024-11-15 07:42:24\n Sergey F -> 2071074234:\nКомпания: Код безопасности\nВакашка: HR сама написала\nЗП: указала 240-270\n\nВопросы:\nОчень подробно расспросили про свой опыт работы, с чего начался мой путь программиста. Какие где технологии юзал, почему такие, кто выбирал стек, как учил новые вещи. После моего рассказа, примерно 20 минут, лид сказал, что он услышал, что хотел и хочет пропустить техническую часть интервью и сразу перешел к проекту и задачам. Спросили, когда смогу приступить. Первый собес, где я прошел чисто на софтах. Беседа прошла в дружеской обстановке, по сути сидели хихикали и половину времени говорили о всяких жизненных забавных штуках.\n\nКлассическая техническая секция лидом была скипнута, ни одного технического вопроса по базовым вещам, как это принято, меня не спросили. Ни одной строчки кода не попросили написать."
      },
      {
        "timestamp": "2024-10-16 17:31:30",
        "content": "2024-10-16 17:31:30\n Artyom Sozykin -> 2071074234:\nКод Безопасности\nhttps://hh.ru/vacancy/107617818?hhtmFrom=employer_vacancies\nЗП: 250к\n\nЛайфкодинга нет, были только вопросы по теории, рассуждения о реализации",
        "full_content": "2024-10-16 17:31:30\n Artyom Sozykin -> 2071074234:\nКод Безопасности\nhttps://hh.ru/vacancy/107617818?hhtmFrom=employer_vacancies\nЗП: 250к\n\nЛайфкодинга нет, были только вопросы по теории, рассуждения о реализации"
      },
      {
        "timestamp": "2024-10-11 18:12:19",
        "content": "2024-10-11 18:12:19\n Mike -> 2071074234:\nКомпания: Код Безопасности\nВакансия: https://hh.ru/vacancy/107617818?hhtmFrom=employer_vacancies\nЗП: не озвучили\nВопросы:\n1. много про легенду + переспрашивали по резюме\n2.Погружение/всплытие\n3.Замыкание\n4.Статические методы\n5.Как обмениваться данными в реакте без редакса\n6.Пропс дриллинг\n7.паттерн синглтон\n8.управляемые/неправляемые компоненты\n9.НОС\n10.Функциональном компоненте как размонтирование отследить\n11. type vs interface\n12. type guards\n13. any v...",
        "full_content": "2024-10-11 18:12:19\n Mike -> 2071074234:\nКомпания: Код Безопасности\nВакансия: https://hh.ru/vacancy/107617818?hhtmFrom=employer_vacancies\nЗП: не озвучили\nВопросы:\n1. много про легенду + переспрашивали по резюме\n2.Погружение/всплытие\n3.Замыкание\n4.Статические методы\n5.Как обмениваться данными в реакте без редакса\n6.Пропс дриллинг\n7.паттерн синглтон\n8.управляемые/неправляемые компоненты\n9.НОС\n10.Функциональном компоненте как размонтирование отследить\n11. type vs interface\n12. type guards\n13. any vs uknown"
      },
      {
        "timestamp": "2024-09-26 12:16:00",
        "content": "2024-09-26 12:16:00\n Stepan Ch. -> 2071074234:\n- Код безопасности \n- 200к \n- Вакансия: https://hh.ru/vacancy/107617818\n\nВопросы: \nМноно про легенду (опыт)\nОбычные вопросы с платины:\n1. Статические методы классов\n2. This\n3. Замыкание\n4. Context React\n5. Редакс\n6. React portal\n7. Type vs Interface\n8. TypeGuards\n9. React классы\n10. useEffect, монтирование",
        "full_content": "2024-09-26 12:16:00\n Stepan Ch. -> 2071074234:\n- Код безопасности \n- 200к \n- Вакансия: https://hh.ru/vacancy/107617818\n\nВопросы: \nМноно про легенду (опыт)\nОбычные вопросы с платины:\n1. Статические методы классов\n2. This\n3. Замыкание\n4. Context React\n5. Редакс\n6. React portal\n7. Type vs Interface\n8. TypeGuards\n9. React классы\n10. useEffect, монтирование"
      }
    ]
  },
  {
    "company": "Altenar",
    "count": 4,
    "records": [
      {
        "timestamp": "2025-07-11 14:32:33",
        "content": "2025-07-11 14:32:33\n Артем Покатилов -> 2071074234:\nAltenar\nзп: от 260к просил\nhr сам написал\n\nВопросы:\nРассказать про задачи какие делал\nКакие стейтменеджеры использовал?\nЧто такое Context в React?\nЕсть два стора в Redux как их объединить?\nЗачем нужен тип never? В чем отличие от void?\nЧто такое оптимистический ответ на фронте?\n\nЗадачи:\nТакие же как тут (https://t.me/c/2071074234/489/153144) и тут (https://t.me/c/2071074234/489/145263)",
        "full_content": "2025-07-11 14:32:33\n Артем Покатилов -> 2071074234:\nAltenar\nзп: от 260к просил\nhr сам написал\n\nВопросы:\nРассказать про задачи какие делал\nКакие стейтменеджеры использовал?\nЧто такое Context в React?\nЕсть два стора в Redux как их объединить?\nЗачем нужен тип never? В чем отличие от void?\nЧто такое оптимистический ответ на фронте?\n\nЗадачи:\nТакие же как тут (https://t.me/c/2071074234/489/153144) и тут (https://t.me/c/2071074234/489/145263)"
      },
      {
        "timestamp": "2025-07-08 11:49:16",
        "content": "2025-07-08 11:49:16\n Никита -> 2071074234:\nAltenar финал\nЗП: от 240\n\nГде сейчас проживаете?\nКакие хобби?\nКак будете выбирать оффер из нескольких?\nПредставьте что условия в оффере одинаковые, компании одинаковые, собес прошёл везде отлично. Как будете выбирать?\nСобираетесь ли переезжать?\nКак относитесь к посещению офиса 2 раза в неделю?\nКак вы оцените свой уровень как разработчика? Почему не сеньор?\nКак развиваетесь в свободное время?",
        "full_content": "2025-07-08 11:49:16\n Никита -> 2071074234:\nAltenar финал\nЗП: от 240\n\nГде сейчас проживаете?\nКакие хобби?\nКак будете выбирать оффер из нескольких?\nПредставьте что условия в оффере одинаковые, компании одинаковые, собес прошёл везде отлично. Как будете выбирать?\nСобираетесь ли переезжать?\nКак относитесь к посещению офиса 2 раза в неделю?\nКак вы оцените свой уровень как разработчика? Почему не сеньор?\nКак развиваетесь в свободное время?"
      },
      {
        "timestamp": "2025-07-08 11:15:20",
        "content": "2025-07-08 11:15:20\n Никита -> 2071074234:\nAltenar встреча с лидом\nЗП: от 230\n\nВопросы\nКак для тебя выглядит налаженный процесс постановки задачи?\nКак была построена работа с аналитиками и дизайнерами?\nБывало такое что что-то шло не так в коммуникации, что-то не учли где-то?\nРаботал с zustand или valtio?\nСпрашивал про конкретные библиотеки из резюме, почему именно их выбрал при решении задачи\nРасскажи как у вас был построен процесс внедрения новых библиотек, кто принимал решение за их внедрение?...",
        "full_content": "2025-07-08 11:15:20\n Никита -> 2071074234:\nAltenar встреча с лидом\nЗП: от 230\n\nВопросы\nКак для тебя выглядит налаженный процесс постановки задачи?\nКак была построена работа с аналитиками и дизайнерами?\nБывало такое что что-то шло не так в коммуникации, что-то не учли где-то?\nРаботал с zustand или valtio?\nСпрашивал про конкретные библиотеки из резюме, почему именно их выбрал при решении задачи\nРасскажи как у вас был построен процесс внедрения новых библиотек, кто принимал решение за их внедрение?\nРасскажи про свой самый болшой факап на работе?\nЧто в свободное время делаешь?\nКак относишься к мату?\nКакой лучший мем по твоему мнению на данный момент?"
      },
      {
        "timestamp": "2025-06-28 18:41:24",
        "content": "2025-06-28 18:41:24\n Никита -> 2071074234:\nAltenar\nЗП: от 200\n\nКак распределялись задачи на спринт?\nКак внутри команды договаривались о внедрении новой технологии/библиотеки?\nБыли ли моменты когда твоё решение или решение команды не нравилось (про внедрение технологий), как решали?\nКакой у тебя был уровень в команде?\n\nКакие есть подходы управления состоянием в реакте, в каких случаях лучше использовать?\nЧем отличается концепция Redux и MobX?\nКак бы ты организовывал работу с большим стором?(слайс...",
        "full_content": "2025-06-28 18:41:24\n Никита -> 2071074234:\nAltenar\nЗП: от 200\n\nКак распределялись задачи на спринт?\nКак внутри команды договаривались о внедрении новой технологии/библиотеки?\nБыли ли моменты когда твоё решение или решение команды не нравилось (про внедрение технологий), как решали?\nКакой у тебя был уровень в команде?\n\nКакие есть подходы управления состоянием в реакте, в каких случаях лучше использовать?\nЧем отличается концепция Redux и MobX?\nКак бы ты организовывал работу с большим стором?(слайсы)\nКак работают слайсы, могут ли они общаться друг с другом?\nМожем ли мы как-то передать информацию между слайсами?\nКак создать несколько инстансов одного стора, чтобы изолировать? (засунуть в контекст)\n\nЗадачи были по typescript и рефактор react-приложения:\nhttps://clck.ru/3MqWt2\nhttps://clck.ru/3MqWtt"
      }
    ]
  },
  {
    "company": "Datsteam",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-12-11 12:33:26",
        "content": "2024-12-11 12:33:26\n Mikhail Sorokin -> 2071074234:\nDatsTeam\nВакансия — https://hh.ru/vacancy/109563730\nЗп — на тот момент не обсуждалось, я называл желаемую сумму от 300 000 на руки\n\n - реакт приложение, отрефакторить его (\n   проблемы, которые нашел:\n      - неправильный нейминг переменных\n      - лишний useCallback(не было потомков, которые бы ререндерились)\n      - if стоял перед useEffect\n      - в useEffect передавалась функция с async\n      - у useEffect отсутствовал массив зависимостей\n ...",
        "full_content": "2024-12-11 12:33:26\n Mikhail Sorokin -> 2071074234:\nDatsTeam\nВакансия — https://hh.ru/vacancy/109563730\nЗп — на тот момент не обсуждалось, я называл желаемую сумму от 300 000 на руки\n\n - реакт приложение, отрефакторить его (\n   проблемы, которые нашел:\n      - неправильный нейминг переменных\n      - лишний useCallback(не было потомков, которые бы ререндерились)\n      - if стоял перед useEffect\n      - в useEffect передавалась функция с async\n      - у useEffect отсутствовал массив зависимостей\n      - логика работы с данными и их отображение находились в одном компоненте\n      - отсутствовало отображение загрузки\n      - отсутствовало отображение ошибок\n      - отсутствовал атрибут key  \n      - не вынесены константы                    \n)\n - \n\n- что буду делать, если  разработчик выполняет задачи слишком долго\n- какая главная задача у лида"
      },
      {
        "timestamp": "2024-11-14 10:50:36",
        "content": "2024-11-14 10:50:36\n аыеъа -> 2071074234:\nDatsTeam Техсобес\nЗП: 250к\nВакансия: https://hh.ru/vacancy/109607942?\nВопросы:\nЧем image отличается от контейнера в docker\nСпособы хранения памяти на фронте и их различия\nСпособы оптимизации фронта\n// Рефактор компоненты (уже сделанный)\n\nimport {useEffect, useState, useCallback} from \"react\";\n\nexport default function PokemonsNamesList({limit = 10}) {\n    const url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=0`;\n    const [activePokemonName...",
        "full_content": "2024-11-14 10:50:36\n аыеъа -> 2071074234:\nDatsTeam Техсобес\nЗП: 250к\nВакансия: https://hh.ru/vacancy/109607942?\nВопросы:\nЧем image отличается от контейнера в docker\nСпособы хранения памяти на фронте и их различия\nСпособы оптимизации фронта\n// Рефактор компоненты (уже сделанный)\n\nimport {useEffect, useState, useCallback} from \"react\";\n\nexport default function PokemonsNamesList({limit = 10}) {\n    const url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=0`;\n    const [activePokemonName, setActivePokemonName] = useState('')\n    const [pokemonsNames, setPokemonsNames] = useState([]);\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    \n    const fetchPokemons = async () => {\n        try {\n            setErrorMessage(null)\n            const res = await fetch(url)\n            const data = await res.json()\n            setPokemonsNames(data.results)\n            \n            if (!res.ok) {\n                throw new Error('Ошибка')\n            }\n            \n        } catch (e) {\n            setErrorMessage(e.message)\n        }\n        \n    }\n\n    useEffect(() => {\n        fetchPokemons()\n    }, [limit]);\n    \n\n    return (\n        <ul>\n            {pokemonsNames.map((pokemon) => {\n            const {name} = pokemon\n                return (\n                    <li\n                        key={name}\n                        onClick={() => setActivePokemonName(name)}\n                        className={activePokemonName === name ? 'item--active' : 'item'}\n                    >\n                        {name}\n                    </li>\n                )\n            })}\n        </ul>\n    );\n}"
      },
      {
        "timestamp": "2024-07-13 08:48:32",
        "content": "2024-07-13 08:48:32\n Ярослав Мудрый -> 2071074234:\nDatsTeam\n-вакансия: https://hh.ru/vacancy/102430785\n-зп: 300k\n\nзадачи:\nпосчитать сумму в массиве, если встречается символ, то далее элементы конкатинируем как к строке\n\nfunction sum(…args) {\nif (args.every(arg => typeof arg === ‘number’)) {\nreturn args.reduce((acc, curr) => acc + curr, 0);\n} else {\nreturn args.join(‘’);\n}\n}\n\nconsole.log(sum(1,2,3)) // 6\nconsole.log(sum(1,2,’3’)) // ’33’\nconsole.log(sum(‘1’, 2, 3)) // ‘123’\n\nнайти первые индексы ...",
        "full_content": "2024-07-13 08:48:32\n Ярослав Мудрый -> 2071074234:\nDatsTeam\n-вакансия: https://hh.ru/vacancy/102430785\n-зп: 300k\n\nзадачи:\nпосчитать сумму в массиве, если встречается символ, то далее элементы конкатинируем как к строке\n\nfunction sum(…args) {\nif (args.every(arg => typeof arg === ‘number’)) {\nreturn args.reduce((acc, curr) => acc + curr, 0);\n} else {\nreturn args.join(‘’);\n}\n}\n\nconsole.log(sum(1,2,3)) // 6\nconsole.log(sum(1,2,’3’)) // ’33’\nconsole.log(sum(‘1’, 2, 3)) // ‘123’\n\nнайти первые индексы элементов массива, которые в сумме дают заданное число\n\nconst nums = [5, 3, 2, 8, 4, 1];\nconst target = 9;\n\nfunction getResult(nums, target) {\n    const numIndices = {};\n    for (let i = 0; i < nums.length; i++) {\n        const complement = target - nums[i];\n        if (numIndices.hasOwnProperty(complement)) {\n            return [numIndices[complement], i];\n        }\n        numIndices[nums[i]] = i;\n    }\n    return [];\n}\n\nconsole.log(getResult(nums, target)); // [0, 3]\n\n\nнаписать функцию, которая делает заданное количество попыток загрузить данные\n\nfunction get(url, limit) {\n    let counter = 0;\n    const attempt = () => {\n        fetch(url).then((response) => {\n            if (!response.ok) {\n                throw new Error(\"Request failed with status \" + response.status);\n            }\n            return response.json();\n        })\n        .catch((err) => {\n            if (counter < limit) {\n                counter++;\n                attempt();\n            } else {\n                return new Error(err);\n            }\n        });\n    }\n    return attempt(limit);\n}\n// Пример использования\nget(\"https://example.com/data\", 5)\n.then((res) => console.log(res))\n.catch((err) => console.error(err));"
      }
    ]
  },
  {
    "company": "ЭД-Айти",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-01-15 11:39:26",
        "content": "2025-01-15 11:39:26\n Ильдус Гизетдинов -> 2071074234:\nКомпания Эд-Айти\nдо 220к\nhttps://kazan.hh.ru/vacancy/113777606?hhtmFrom=negotiation_list\nОчень чуть чуть про опыт, потом только задачи\n// Преварительная задача, в решении учитывать что объектов может быть \n// условно миллиард, а типов миллион, исходить из необходимости максимально снизить затраты по времени и ресурсам\n// Написать функцию вывода строкой через запятую названий (name) объектов\n// Брать только объекты связанные с типами у которых...",
        "full_content": "2025-01-15 11:39:26\n Ильдус Гизетдинов -> 2071074234:\nКомпания Эд-Айти\nдо 220к\nhttps://kazan.hh.ru/vacancy/113777606?hhtmFrom=negotiation_list\nОчень чуть чуть про опыт, потом только задачи\n// Преварительная задача, в решении учитывать что объектов может быть \n// условно миллиард, а типов миллион, исходить из необходимости максимально снизить затраты по времени и ресурсам\n// Написать функцию вывода строкой через запятую названий (name) объектов\n// Брать только объекты связанные с типами у которых class=\"Устройства\"\n\nОбъекты\n const objects = [\n   { id: 1, name: \"Test 1\", object_type: 1 },\n   { id: 2, name: \"Test 2\", object_type: 1 },\n   { id: 3, name: \"Test 3\", object_type: 2 },\n   { id: 4, name: \"Test 4\", object_type: 3 },\n ]\n\n   //Типы\n   const object_types = [\n     { id: 1, class: \"Устройства\" },\n     { id: 2, class: \"Устройства\" },\n     { id: 3, class: \"Порты\" },\n     { id: 4, class: \"Кабели\" }\n   ]\n\n function getNames(objects, object_types){\n   const getIds = new Set();\n\n   for(let types of object_types){\n     if(types.class === \"Устройства\"){\n       getIds.add(types.id)\n     }\n   }\n     const res = []\n   for(let obj of objects){\n     if(getIds.has(obj.object_type)){\n       res.push(obj.name)\n     }\n   }\n\n\n }\n\n\n/* 1. Отложенный вызов\nНеобходимо реализовать текстовый поиск с участием бэкенда (только эмуляция)\nРеагируем на каждую набранную букву, но вызываем функцию поиска на бэк (callApi) \nтолько если пауза в наборе составила 1 секунду\n- Использовать готовые библиотеки нельзя, делаем на голом js\n- HTML форму реализовывать не надо, только реакцию на условный onChange(value)\n- React окружение не использовать\n*/\n const callApi = (value:string) => console.log(value)\n function debounse(fn,delay=1000){\n   let timeout\n   return function(...arg){\n     clearTimeout(timeout);\n     timeout = setTimeout(()=>{fn(...arg)},delay)\n   }\n }\n\n\n/*\n2. Получить объект с отчётом из массива\n  Я хочу получить функцию которая примет этот массив на вход и вернёт объект, \n  который скажет сколько у меня субъектов в регионе 1 и сколько в регионе 2\n  Дополнительные объявления переменны-массивов использовать нельзя, нужен return {какое то действие создающее объект из массива}\n  Логику реализовать внутри этой функции getResult\n*/\n\n\nconst Task2 = () => {\n  interface ISubjectRegion {name:string, region:number}\n  interface IResult {[key:ISubjectRegion['region']]: number}\n\n  const sourceData:ISubjectRegion[] = [\n    {name: \"Субъект 1\", region: 1},\n    {name: \"Субъект 2\", region: 2},\n    {name: \"Субъект 3\", region: 2},\n    {name: \"Субъект 4\", region: 2},\n    {name: \"Субъект 5\", region: 4}\n  ]\n\n  const expectedResult:IResult = {\n    1: 1, //1 субъект в регионе 1\n    2: 3 //3 субъекта в регионе 2\n  }\n\n  //!!! Логику реализовать внутри этой функции !!!\n  const getResult = (data: ISubjectRegion[]):IResult => {\n    return data.reduce((acc, item)=>{\n      if(item.region === 1 || item.region === 2){\n        acc[item.region] = (acc[item.region] || 0 ) + 1\n      }\n      return acc\n    },{} as IResult)\n  }\n  //Это выведет результат её работы справа\n  return {expectedResult: expectedResult, result: getResult(sourceData) }\n}\n//Это выведет результат её работы справа\nshowTaskResult(2, Task2())\n\n/* 3. TS\nНаписать типизацию подходящую для двух объектов, не потерять типизацию \"за\" ключами в endpoints, то есть key:string и Record<string не подходят\nПринять что сами ключи endpoints нам известны на этапе типизации каждого объекта: \n\"getVtemplates\" и \"postVtemplates\" для vtemplateObject\n\"getReports\" и \"putReports\" для reportObject\n*/\n\ntype TObj<K extends string> = {\n  entity: string,\n  endpoints: Record<K,TEndpoint>\n}\n\n\ntype TEndpoint = {\n  method: string,\n  url: string,\n}\n\n//---\n\nconst vtemplateObject:TObj<'getVtemplates' | 'postVtemplates'> = {\n  entity: \"vtemplate\",\n  endpoints: {\n    getVtemplates: {\n      method: \"GET\",\n      url: \"vtemplate\"\n    },\n    postVtemplates: {\n      method: \"POST\",\n      url: \"vtemplate\"\n    }\n  }\n};"
      },
      {
        "timestamp": "2024-11-11 10:13:42",
        "content": "2024-11-11 10:13:42\n Ivan -> 2071074234:\nКомпания: Эд-Айти\nЗП: 200\nФинальное собеседование:\nОбщение с генеральным директором\nСпрашивал про опыт \nКак построено взаимодействие в команде \nПро интересные задачи \nРассказывал про проект",
        "full_content": "2024-11-11 10:13:42\n Ivan -> 2071074234:\nКомпания: Эд-Айти\nЗП: 200\nФинальное собеседование:\nОбщение с генеральным директором\nСпрашивал про опыт \nКак построено взаимодействие в команде \nПро интересные задачи \nРассказывал про проект"
      },
      {
        "timestamp": "2024-10-11 18:23:27",
        "content": "2024-10-11 18:23:27\n Mike -> 2071074234:\nКомпания:Эд-Айти\nВакансия:https://hh.ru/vacancy/108075422?hhtmFrom=employer_vacancies\nзп:200к\nБез вопросов, решали задачи\nhttps://app.coderpad.io/KZZC3J3M",
        "full_content": "2024-10-11 18:23:27\n Mike -> 2071074234:\nКомпания:Эд-Айти\nВакансия:https://hh.ru/vacancy/108075422?hhtmFrom=employer_vacancies\nзп:200к\nБез вопросов, решали задачи\nhttps://app.coderpad.io/KZZC3J3M"
      }
    ]
  },
  {
    "company": "Учи.ру",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-08-29 07:55:49",
        "content": "2024-08-29 07:55:49\n Руслан -> 2071074234:\nУчи.ру\n— зп: от 260к\n— вакансия: https://hh.ru/vacancy/103991244\n— Вопросы: \n1. Про опыт и интересные задачи\n2. Процессы в команде\n3. Идеальное место работы, ред флаги.\n4. Что происходит после ввода адреса в браузере до момента отрисовки в браузере, максимально подробно\n4. http vs https\n5. про mvc, mvvm \n6. на что обращаешь внимание при ревью кода, что в твоем понимании хорошо написанный код\n7. grid vs flex\n— задачи:\n— повторяются отсюда https://t.me/c/...",
        "full_content": "2024-08-29 07:55:49\n Руслан -> 2071074234:\nУчи.ру\n— зп: от 260к\n— вакансия: https://hh.ru/vacancy/103991244\n— Вопросы: \n1. Про опыт и интересные задачи\n2. Процессы в команде\n3. Идеальное место работы, ред флаги.\n4. Что происходит после ввода адреса в браузере до момента отрисовки в браузере, максимально подробно\n4. http vs https\n5. про mvc, mvvm \n6. на что обращаешь внимание при ревью кода, что в твоем понимании хорошо написанный код\n7. grid vs flex\n— задачи:\n— повторяются отсюда https://t.me/c/2071074234/489/56010, были еще, не сохранились."
      },
      {
        "timestamp": "2024-08-27 09:34:21",
        "content": "2024-08-27 09:34:21\n Serj Shalygin -> 2071074234:\nНазвание: Учи ру\nЗП: 300+\nВакансия: отклик на хх\n\nВопросы\nrebase или merge и почему?\nкакой командой отменить запушеный в мастер код?\nкак найти кнопку которую невозможно найти?\nкакие паттерны проектирования есть?\nзачем нужен Redux? почему бы не юзать Context?\nкак оценить сложность алгоритма?\nкакие критерии оценки когда мы будем использовать при ревью?\nкогда использовать grid а когда flex?\nчто произойдет при вводе в строку браузера адреса и нажатия...",
        "full_content": "2024-08-27 09:34:21\n Serj Shalygin -> 2071074234:\nНазвание: Учи ру\nЗП: 300+\nВакансия: отклик на хх\n\nВопросы\nrebase или merge и почему?\nкакой командой отменить запушеный в мастер код?\nкак найти кнопку которую невозможно найти?\nкакие паттерны проектирования есть?\nзачем нужен Redux? почему бы не юзать Context?\nкак оценить сложность алгоритма?\nкакие критерии оценки когда мы будем использовать при ревью?\nкогда использовать grid а когда flex?\nчто произойдет при вводе в строку браузера адреса и нажатия Enter?\nчто важно чтобы было в команде и чего небыло?\n\nвидео 1 = https://youtu.be/wL_n4DiKEbU\nвидео 2 - https://youtu.be/ctwKpZGXol0\n\nОБС не записала 3 часть видео кончилось место на жестком😢"
      },
      {
        "timestamp": "2024-03-31 12:19:49",
        "content": "2024-03-31 12:19:49\n Roman -> 2071074234:\n- Название компании: Учи.ру\n- Ссылка на вакансию: отликался и собесился осенью, уже нет ссылки\n- ЗП: У миддлов 3 грейда. От 180к до 260-270к. Но могут и выше поднять оффер, если очень хорош\n- Задача: https://codesandbox.io/p/sandbox/4duxj\n\nЗадача такая: Дана таблица, в её ячейки можно вбить формулу суммы или среднего прмиерно так =SUM(1,2)\nПри нажатии enter формула вычисляется и в ячейку подставляется результат.\n\nЗадача в том, чтобы при клике на ячейку, ...",
        "full_content": "2024-03-31 12:19:49\n Roman -> 2071074234:\n- Название компании: Учи.ру\n- Ссылка на вакансию: отликался и собесился осенью, уже нет ссылки\n- ЗП: У миддлов 3 грейда. От 180к до 260-270к. Но могут и выше поднять оффер, если очень хорош\n- Задача: https://codesandbox.io/p/sandbox/4duxj\n\nЗадача такая: Дана таблица, в её ячейки можно вбить формулу суммы или среднего прмиерно так =SUM(1,2)\nПри нажатии enter формула вычисляется и в ячейку подставляется результат.\n\nЗадача в том, чтобы при клике на ячейку, в которой уже посчитался результат - в ней появлялась прежняя формула.\n\nТо есть: в ячейке 1 значение 5, в ячейке два значени 7. Если мы вбиваем в ячейку 3 формулу =SUM(1,2) и жмём enter, то там появляется 12. Если мы снова кликаем по этой ячейке, то вместо 12 снова появляется =SUM(1,2)\n- Успех: ❌\n- Фидбэк: Задача не была решена, зоны роста: рефакторинг и реакт"
      }
    ]
  },
  {
    "company": "Farzoom",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-03-14 16:32:01",
        "content": "2025-03-14 16:32:01\n Ильдус Гизетдинов -> 2071074234:\nFarZoom(2 этап)\nЗадачи:\n1) \nconst groupByCity = (peopleArray) => {\n // Создаю пустой объект для результата группировки\n const result = {};\n \n // Итерируюсь по каждому человеку в массиве\n peopleArray.forEach(person => {\n   // Получаю город и имя из текущего объекта\n   const { city, name } = person;\n   \n   // Проверяю, существует ли уже этот город в результирующем объекте\n   if (result[city]) {\n     // Если город уже есть в результате, добавляю...",
        "full_content": "2025-03-14 16:32:01\n Ильдус Гизетдинов -> 2071074234:\nFarZoom(2 этап)\nЗадачи:\n1) \nconst groupByCity = (peopleArray) => {\n // Создаю пустой объект для результата группировки\n const result = {};\n \n // Итерируюсь по каждому человеку в массиве\n peopleArray.forEach(person => {\n   // Получаю город и имя из текущего объекта\n   const { city, name } = person;\n   \n   // Проверяю, существует ли уже этот город в результирующем объекте\n   if (result[city]) {\n     // Если город уже есть в результате, добавляю имя в существующий массив\n     result[city].push(name);\n   } else {\n     // Если город встречается впервые, создаю новый массив с именем\n     // Для городов с одним человеком можно было бы сразу присвоить строку,\n     // но так код будет проще и единообразнее\n     result[city] = [name];\n   }\n });\n \n // Теперь проверяю, есть ли в каждом городе только один человек\n // Если да, то заменяю массив на строку (согласно формату expectedResult)\n for (const city in result) {\n   if (result[city].length === 1) {\n     // Если в городе только один человек, заменяю массив на строку\n     result[city] = result[city][0];\n   }\n }\n \n // Возвращаю сгруппированный результат\n return result;\n}\n2)Там 2 компонента  и нужно что бы при нажатии на кнопку обновлялся id в главном компоненте добавить key={name}\n3) Нужно сделать свой join\nfunction fnJoin(mass, separator=','){\n // Инициализирую пустую строку для результата\n let str = '';\n \n // Использую цикл по всем элементам массива\n for(let i = 0; i < mass.length; i++){\n   // Добавляю текущий элемент\n   str += mass[i];\n   \n   // Добавляю разделитель после всех элементов кроме последнего\n   // Используя условный (тернарный) оператор вместо if-else\n   str += i < mass.length - 1 ? separator : '';\n }\n \n return str;\n}"
      },
      {
        "timestamp": "2025-02-17 12:14:10",
        "content": "2025-02-17 12:14:10\n Ilya -> 2071074234:\nКомпания: FarZoom (скрининг)\nЗП: undefined\nВакансия: написала hr\n\nВопросы:\n1) Где хранить токен\n2) Структура http запроса\n3) Как отправляются куки\n4) Как устанавливаются куки со стороны сервера\n5) Отличие get от post\n6) Что быстрее выполнится промис или таймаут\n7) Как бразуер понимает, что нужно закешировать запрос",
        "full_content": "2025-02-17 12:14:10\n Ilya -> 2071074234:\nКомпания: FarZoom (скрининг)\nЗП: undefined\nВакансия: написала hr\n\nВопросы:\n1) Где хранить токен\n2) Структура http запроса\n3) Как отправляются куки\n4) Как устанавливаются куки со стороны сервера\n5) Отличие get от post\n6) Что быстрее выполнится промис или таймаут\n7) Как бразуер понимает, что нужно закешировать запрос"
      },
      {
        "timestamp": "2024-10-23 10:52:11",
        "content": "2024-10-23 10:52:11\n аыеъа -> 2071074234:\nFarZoom\nЗП: не обсуждали\nВакансия: Написала hr\nБыли только устные вопросы\nВидео:",
        "full_content": "2024-10-23 10:52:11\n аыеъа -> 2071074234:\nFarZoom\nЗП: не обсуждали\nВакансия: Написала hr\nБыли только устные вопросы\nВидео:"
      }
    ]
  },
  {
    "company": "Ооо Айти Фаундейшн",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-02-07 04:56:17",
        "content": "2025-02-07 04:56:17\n Klimenty Karavaev -> 2071074234:\nКомпания: АйТи фаундейшн (2 этап, общение с командой)\nВакансия: https://hh.ru/vacancy/115758717\nВопросы: задавал я, а не они. про продукт, про код, про тех долг, они подробно рассказывали. показали код также, по нему прошлись немного.\nЗадачи: не было",
        "full_content": "2025-02-07 04:56:17\n Klimenty Karavaev -> 2071074234:\nКомпания: АйТи фаундейшн (2 этап, общение с командой)\nВакансия: https://hh.ru/vacancy/115758717\nВопросы: задавал я, а не они. про продукт, про код, про тех долг, они подробно рассказывали. показали код также, по нему прошлись немного.\nЗадачи: не было"
      },
      {
        "timestamp": "2025-02-03 16:01:00",
        "content": "2025-02-03 16:01:00\n Nikita -> 2071074234:\nНазвание компании: айти фаундейшн\nСсылка на вакансию: https://hh.ru/vacancy/115758717?hhtmFrom=chat\nЗП: от 250000\nЗапись:",
        "full_content": "2025-02-03 16:01:00\n Nikita -> 2071074234:\nНазвание компании: айти фаундейшн\nСсылка на вакансию: https://hh.ru/vacancy/115758717?hhtmFrom=chat\nЗП: от 250000\nЗапись:"
      },
      {
        "timestamp": "2025-01-31 15:49:47",
        "content": "2025-01-31 15:49:47\n Лёша -> 2071074234:\nКомпания -  ООО АйТи Фаундейшн / ERP \"Стройка\"\nВакансия -  https://hh.ru/vacancy/115758717\nЗП -  300\n\n- Задачи: не было\n- Вопросы:\n1. Расскажи о себе\n2. Свои главные достижения\n3. React.lazy и бандлы в webpack\n4. Какие хуки приходилось использовать\n5. Что такое sse и как реализовывал (почему выбрал тот или иной подход)(websockets)\n6. Что такое FSD\n7. Что такое Virtual DOM (layout, painting, reflow)\n8. Процессы на твоем текущем месте работы и их преимущест...",
        "full_content": "2025-01-31 15:49:47\n Лёша -> 2071074234:\nКомпания -  ООО АйТи Фаундейшн / ERP \"Стройка\"\nВакансия -  https://hh.ru/vacancy/115758717\nЗП -  300\n\n- Задачи: не было\n- Вопросы:\n1. Расскажи о себе\n2. Свои главные достижения\n3. React.lazy и бандлы в webpack\n4. Какие хуки приходилось использовать\n5. Что такое sse и как реализовывал (почему выбрал тот или иной подход)(websockets)\n6. Что такое FSD\n7. Что такое Virtual DOM (layout, painting, reflow)\n8. Процессы на твоем текущем месте работы и их преимущества/недостатки\n\n- Ссылка на запись - не делал\n- Успех собеса ✅\n- Фитбек о собесе от HR: позвали на финальное знакомство с командой.\n\n- От себя: У меня в резюме указаны задачи, которые очень сильно перекликаются с их запросами (Об этом они и спрашивали) + реальный опыт в организации из которой у них пол отдела (может и не пол отдела😁, но 50% собеса мы обсуждали этот опыт)."
      }
    ]
  },
  {
    "company": "Kaspersky",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-07-03 19:45:33",
        "content": "2025-07-03 19:45:33\n Ivan -> 2071074234:\nКасперский (финальное интервью)\n\n1. Рассказал свою легенду.\n2. Рассказал про интресные задачи (технологии, трудности и тд).\n3. Был ли опыт с бекендом и есть ли желание? (у них надо ноду и bff).\n4. Про сокеты.\n5. Обработка ошибок (ерор баундари, СЕНТРИ, логеры)\n6. Еще интересную задачу рассказать\n7. Работа с девтулз (лайтхаус перформанс)\n8. Про утечки памяти (клинапы, замыкания, обнулять ссылки на дом ноды и тд)\n9. TS vs JS (ок ли тебе без TS?)\n10. Как к л...",
        "full_content": "2025-07-03 19:45:33\n Ivan -> 2071074234:\nКасперский (финальное интервью)\n\n1. Рассказал свою легенду.\n2. Рассказал про интресные задачи (технологии, трудности и тд).\n3. Был ли опыт с бекендом и есть ли желание? (у них надо ноду и bff).\n4. Про сокеты.\n5. Обработка ошибок (ерор баундари, СЕНТРИ, логеры)\n6. Еще интересную задачу рассказать\n7. Работа с девтулз (лайтхаус перформанс)\n8. Про утечки памяти (клинапы, замыкания, обнулять ссылки на дом ноды и тд)\n9. TS vs JS (ок ли тебе без TS?)\n10. Как к легаси относишься? Что для тебя легаси?\n11. Про техдолг.\n12. Почему уходишь с прошлого места работы?\n13. Чего не хочется видеть в новой команде?\n14. Какие планы на будущее?\n15.Секция вопросов к команде."
      },
      {
        "timestamp": "2025-06-30 19:23:42",
        "content": "2025-06-30 19:23:42\n Ivan -> 2071074234:\nКомпания: Касперский\nТолько задачи, на решение 2 часа\n\n1. Задача на стилизацию.  Работая в файле css расположить блоки как на образце. (flex/grid) \ndiv.container\n   div.gray\n   div.blue\n   div.red\n2. На той же разметке реализовать js чтоб при клике на блок логировать его цвет\nquerySelector('.container') > addEventListener('click') > event.target.classList[0]\n3. \nfunction query(data, fields, order) {\n  if (\n    !Array.isArray(fields) ||\n    typeof order !=...",
        "full_content": "2025-06-30 19:23:42\n Ivan -> 2071074234:\nКомпания: Касперский\nТолько задачи, на решение 2 часа\n\n1. Задача на стилизацию.  Работая в файле css расположить блоки как на образце. (flex/grid) \ndiv.container\n   div.gray\n   div.blue\n   div.red\n2. На той же разметке реализовать js чтоб при клике на блок логировать его цвет\nquerySelector('.container') > addEventListener('click') > event.target.classList[0]\n3. \nfunction query(data, fields, order) {\n  if (\n    !Array.isArray(fields) ||\n    typeof order !== 'function' ||\n    data.some(item => !fields.every(f => f in item))\n  ) {\n    throw new Error('Incorrect params');\n  }\n\n  // Копия массива и сортировка\n  const sorted = [...data].sort(order);\n\n  // Возвращаем только нужные поля\n  return sorted.map(item => {\n    const filtered = {};\n    fields.forEach(f => {\n      filtered[f] = item[f];\n    });\n    return filtered;\n  });\n}\n4. Рефакторинг react\n- deps useEffect\n- убрать async в useEffect, then().catch()\n- добавить ключи в список\n- поправить семантику ul li\n- завести стейт под ошибку\n- useState([]) (положить пустой массив как дефолтное значение)\n5. Задача написать следующий функционал. Кнопка которая создает под собой элементы с уникальными числами. При клике по этим элементы они удаляются.\nconst [uniqNums, setUniqNums] = useState([])\n\nconst add = () => {\nsetUniqNums(prev => [...prev, Date.now()])\n}\nconst remove = () => {\nsetUniqNums(prev => prev.filter(item => item !== num) )\n}\n//в разметке добавить открисовку списка из uniqNums\n6. flattenMap\nfunction flattenMap(obj) {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if(value === null) {\n      return acc\n    }\n    if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n      const nested = flattenMap(value);\n\n      Object.entries(nested).forEach(([nestedKey, nestedValue]) => {\n        acc[`${key}/${nestedKey}`] = nestedValue;\n      });\n    } else {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\n7. getMaxSum\nfunction getMaxSum(nums) {\nlet maxSum = nums[0]\nlet currentSum = nums[0]\nfor(let i = 1;i < nums.length;i++) {\ncurrentSum = Math.max(nums[i], currentSum + nums[i])\nmaxSum = Math.max(maxSum, currentSum)\n}\nreturn maxSum\n}\n8. \nasync function asyncFilter(arr, fn) {\nconst results = await Promise.all(arr.map(fn))\nreturn arr.filter((_, i) => results[i])\n}"
      },
      {
        "timestamp": "2024-05-29 20:20:59",
        "content": "2024-05-29 20:20:59\n Andrei Chirkov -> 2071074234:\n29.05\nНазвание: Лаборатория Касперского\nВакансия: https://spb.hh.ru/vacancy/98952318\nЗП: 250 - 300\nСсылка на видео: https://www.youtube.com/watch?v=P3zwG82NgjM\nУспех: ✅ , зовут на второй этап\nЗадачи, скорее всего у вас будут те же: \n\n// Задача 1 алгос\n/* eslint-disable */\n// Нужно написать функцию isEqual, которая сравнивает объекты\n// tip: пример объектов, функция должа обрабатывать объекты любой структуры\n// tip: точно известно, что порядок сл...",
        "full_content": "2024-05-29 20:20:59\n Andrei Chirkov -> 2071074234:\n29.05\nНазвание: Лаборатория Касперского\nВакансия: https://spb.hh.ru/vacancy/98952318\nЗП: 250 - 300\nСсылка на видео: https://www.youtube.com/watch?v=P3zwG82NgjM\nУспех: ✅ , зовут на второй этап\nЗадачи, скорее всего у вас будут те же: \n\n// Задача 1 алгос\n/* eslint-disable */\n// Нужно написать функцию isEqual, которая сравнивает объекты\n// tip: пример объектов, функция должа обрабатывать объекты любой структуры\n// tip: точно известно, что порядок следования свойств не будет меняться\n// tip: объект может содержать примитивы, объекты, массивы\n\n// Не решил ее \nconst redCar = {\n  wheels: 4,\n  brake: 4,\n  speed: 180,\n  options: [\n    { optionKey: \"123-234-345\", optionName: \"color\" },\n    { optionKey: \"234-345-987\", optionName: \"warranty\" }\n  ]\n}; // reference\n\nconst yellowCar = {\n  wheels: 3,\n  brake: 2,\n  speed: 70,\n  options: [\n    { optionKey: \"665-232-345\", optionName: \"isBroken\" },\n    { optionKey: \"234-345-987\", optionName: \"warranty\" }\n  ]\n}; // false\n\nconst blueCar = {\n  wheels: 4,\n  brake: 4,\n  speed: 180,\n  options: [\n    { optionKey: \"123-234-345\", optionName: \"isBroken\" },\n    { optionKey: \"234-345-987\", optionName: \"warranty\" }\n  ]\n}; // false\n  \n// Задача 2 алгос\n// Отсортируйте нечетные числа так, чтобы четные числа остались на своих местах:\n\n// const input = [5, 4, 1, 6, 3, 8];\n// const output = [1, 4, 3, 6, 5, 8];\n\n// Задача 3 промис\n// провести review кода + переписать на ES6\n// Вот результат:\n\nimport fs from 'fs'\n\nasync function getFile(path) {\nreturn new Promise((res, rej) => {\n  fs.readFile(path, function (err, data) {\n    if (err) {\n        rej(err)\n    } else {\n        res(JSON.parse(data))\n    }\n  })\n})\n\n\n// Задача 4 промис\n// провести review кода\n// Как последовательно вызвать асинхронные ф друг за другом\n// Ответ: через   for await цикл\n\nconst updater = async (storage, data) => { /* ... */ }\n\nconst list = [\n    updater1,\n    updater2,\n    ...,\n    updaterN\n]\n\nasync function doStorageUpdate(storage, data) {\n    for await (updater of list) {\n      updater(storage, data)\n    }\n    // list.forEach(updater => updater(storage, data));\n}\n\n\n// Задача 5 \n// Напишите код, с помощью которого при клике на\n// прямоугольник будет выведен его цвет\n\n// Вот так:\nconst container = document.querySelector('.container');\n\ncontainer.addEventListener('click', (event) => {\nconsole.log(event.target.className)\n\n// Задача 6: нарисовать флаг (я сделал на гридах)\n\n// Задача 7 массивы\n// Написать функцию add, которая принимает число\n// и может вызываться бесконечное число раз,\n// пока не будет вызвана без аргументов - тогда возвращается сумма переданных\n// ранее чисел:\n\nfunction add(num) {\n  let sum = num || 0\n\n  function inner(num2) {\n    if (num2 === undefined) {\n      return sum\n    } else {\n      sum += num2\n      return inner\n    }\n  }\n\n  return num === undefined ? 0 : inner\n}\nconsole.log(add());\nconsole.log(add(9)())\nconsole.log(add(9)(10)())\nconsole.log(add(9)(10)(11)())\n\n// Задача 8 \n// // Как генерировать исключение + как его обработать/перехватить?\n// Тут поговорить про вызов ошишибок и проброс их везде\n\n\n// Задача 9: // При каждом клике на кнопку Add должна появляться\n// новая кнопка со случайным текстом (например цифровым id).\n// При клике на появившуюся кнопку она должна удаляться.\nimport '../main'\nimport React, { useCallback, useState } from \"react\";\n\nfunction App() {\n  const [index, setIndex] = useState(0)\n  const [buttonList, setButtonList] = useState([])\n\n  const add = useCallback(() => {\n    setButtonList(prevButtons => [...prevButtons, index])\n    setIndex(prev => prev + 1)\n  }, [index])\n\n  const remove = (b) => {\n    setButtonList(buttonList.filter(button => b !== button))\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <button onClick={add}>Add</button>\n      <div className=\"box-wrapper\">\n        {buttonList.map(b => (\n          <button onClick={() => remove(b)} key={b}>{b}</button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App"
      }
    ]
  },
  {
    "company": "BetBoom",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-10-08 08:41:41",
        "content": "2024-10-08 08:41:41\n Никита -> 2071074234:\nКомпания: BetBoom\nВакансия: https://hh.ru/vacancy/106763579\nЗП: не обсуждали\nВопросы:\n- Как работают эвенты в DOM\n- Event loop\n- Этапы построения отрисовки страницы в браузере\n- Семантическая верстка\n- В чем отличие Grid от Flexbox\n- Связь классов и прототипов в JS\n- Как без классов реализовать constructor\n- Как сымитировать класс на обычной функции\n- Какие хуки в реакте знаю и использую\n- Когда использовать хуки useCallback или useMemo\n- useRef для чег...",
        "full_content": "2024-10-08 08:41:41\n Никита -> 2071074234:\nКомпания: BetBoom\nВакансия: https://hh.ru/vacancy/106763579\nЗП: не обсуждали\nВопросы:\n- Как работают эвенты в DOM\n- Event loop\n- Этапы построения отрисовки страницы в браузере\n- Семантическая верстка\n- В чем отличие Grid от Flexbox\n- Связь классов и прототипов в JS\n- Как без классов реализовать constructor\n- Как сымитировать класс на обычной функции\n- Какие хуки в реакте знаю и использую\n- Когда использовать хуки useCallback или useMemo\n- useRef для чего нужен\n- Чем отличается useLayoutEffect от useEffect\n- Что такое рендеринг в реакте\n- Что такое виртуальный DOM\n- Можно ли в теории обойтись без использования виртуального DOM\n- Что такое Enum и почему его не любят\n- Какие анимации делал\n- Как следить за производительностью приложений\n- Из-за чего может тормозить страница\nЗадачи:\n\n// 1. Получить значения всех ключей объекта\nconst user = { name: 'John', email: 'John@gmail.com', city:\n// type Valueof =\n// 'John' | 'John@gmail.com' | 'NY'\n// type UserProperties = ValueOf"
      },
      {
        "timestamp": "2024-09-24 19:27:42",
        "content": "2024-09-24 19:27:42\n Бахтияр -> 2071074234:\nКомпания: BetBoom\nВакансия: https://t.me/c/2071074234/616/64730\nЗП: 300K\nОС: 27 или 30 ответ \nВопросы:\n1. Расскажи о себе.\n2. Что ищешь?\n3. Где у вас было SEO (метаданные)?\n4. Как ты начал свой путь в программировании?\n5. Был ли опыт работы с PHP?\n6. Что такое CORS и для чего он нужен?\n7. Что такое куки? Как они появляются, как передаются, где они могут добавляться?\n8. Что означает Security Policy?\n9. Все про прототипы.\n10. В чем разница между prototyp...",
        "full_content": "2024-09-24 19:27:42\n Бахтияр -> 2071074234:\nКомпания: BetBoom\nВакансия: https://t.me/c/2071074234/616/64730\nЗП: 300K\nОС: 27 или 30 ответ \nВопросы:\n1. Расскажи о себе.\n2. Что ищешь?\n3. Где у вас было SEO (метаданные)?\n4. Как ты начал свой путь в программировании?\n5. Был ли опыт работы с PHP?\n6. Что такое CORS и для чего он нужен?\n7. Что такое куки? Как они появляются, как передаются, где они могут добавляться?\n8. Что означает Security Policy?\n9. Все про прототипы.\n10. В чем разница между prototype и proto?\n11. Map, Set.\n12. Promise.\n13. Делаем запрос через await, что возвращает await?\n14. Микро- и макрозадачи.\n15. Замыкание в JS: для чего нужно?\n16. Virtual DOM.\n17. Utility Types: какие знаешь, какие использовал?\n18. Enum: что по умолчанию возвращает при обращении к ключу? Какие типы у Enum?\n19. Как компилируются const в TS?\n20. Как заморозить объект?\n21. Способы изоляции стилей.\n22. Каскад в CSS.\n23. Специфичность в CSS.\n24. event.stopPropagation(): для чего нужен?\n25. Что будет, если кликнуть на потомка через родителя?\n26. На одном уровне два HTML-элемента: чем обернуть\nЗадача 1:\n\n/*\n\nКак вызвать функцию, чтобы на выходе сумма аргументов была со значением 18, при этом второй параметр должен отработать по умолчанию и использовать дефолтное значение.\n\n*/\n\nconst foo = (a, b = 4, c = 5) => {\n    return a + b + c;\n}\n\nЗадача 2:\n\nvar type = 'Single';\n\n// Объект bet с методом getBetType\nvar bet = {\n    type: 'Express', \n    getBetType: function () {\n        console.log(this.type); \n    }\n};\n\nbet.getBetType(); \n\n\nvar getType = bet.getBetType;\n\ngetType(); // Выведет 'Single', так как this теперь ссылается на глобальный объект (window), где определена переменная type"
      },
      {
        "timestamp": "2024-04-03 16:01:53",
        "content": "2024-04-03 16:01:53\n Vitalya Bedik -> 2071074234:\n— Название компании: BetBoom (единственный этап - знакомство + тех собес)\n— Ссылка на вакансию: https://hh.ru/vacancy/95455483?hhtmFrom=chat\n— ЗП: не обсуждали\n— Задачи: Теория + про опыт + сам проект + задача\n— Записи на ютуб: https://www.youtube.com/watch?v=quqFk19ai-U\n— Успех собеса:  ❓\n— Фидбек о собесе: до конца этой недели должен быть фидбек",
        "full_content": "2024-04-03 16:01:53\n Vitalya Bedik -> 2071074234:\n— Название компании: BetBoom (единственный этап - знакомство + тех собес)\n— Ссылка на вакансию: https://hh.ru/vacancy/95455483?hhtmFrom=chat\n— ЗП: не обсуждали\n— Задачи: Теория + про опыт + сам проект + задача\n— Записи на ютуб: https://www.youtube.com/watch?v=quqFk19ai-U\n— Успех собеса:  ❓\n— Фидбек о собесе: до конца этой недели должен быть фидбек"
      }
    ]
  },
  {
    "company": "Легкорем",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-09-23 18:42:49",
        "content": "2024-09-23 18:42:49\n Ada500 -> 2071074234:\nЛегкорем\n-ЗП: от 180 до 250 тыс.\n- Вакансия: https://hh.ru/vacancy/106238024\nВопросы: лид говорит, что в течении 15 лет использовал данные вопросы и мало кто отвечал, подозрительно что смогли ответить)\nЧто будет в консоле? \nconst res = parseInt('3*9', 10); \nconsole.log(res); \n\nЧто выведит консоль? \nconst f=function g(){ return 23 } \n console.log(typeof g()) \n\nЧто здесь происходит? \n(function f() { \n   function f() { return 1 } \n   return f() \n   functio...",
        "full_content": "2024-09-23 18:42:49\n Ada500 -> 2071074234:\nЛегкорем\n-ЗП: от 180 до 250 тыс.\n- Вакансия: https://hh.ru/vacancy/106238024\nВопросы: лид говорит, что в течении 15 лет использовал данные вопросы и мало кто отвечал, подозрительно что смогли ответить)\nЧто будет в консоле? \nconst res = parseInt('3*9', 10); \nconsole.log(res); \n\nЧто выведит консоль? \nconst f=function g(){ return 23 } \n console.log(typeof g()) \n\nЧто здесь происходит? \n(function f() { \n   function f() { return 1 } \n   return f() \n   function f() { return 2 } \n})() \n\n// Правда ли что a = b? \nconst a =[1,2,3] \nconst b =[1,2,3] \n\n//Какова длина a.length массива a \nlet a =[] \na[1]=5 \na[3]=53 \ndelete a[3] \nconsole.log(a.length) \n\n//Что такое реквизиты в React?\n\n//Для чего используется useMemo? \n\n//Как очистить ресурсы в функциональном компоненте? \n\n//Как реализовать асинхроную(ленивую загрузку) redux редьюсеров? \n\n//что такое 302 при ответе http\n// Какие знаю мутабельные методы массива?  \n\n Спрашивал также что такое atomic design и сортировать указанный массив имён по убыванию."
      },
      {
        "timestamp": "2024-09-17 12:46:04",
        "content": "2024-09-17 12:46:04\n Анжелика -> 2071074234:\nЛегкорем\n- зп: 220\n- вакансия \n- успех ✅\nhttps://hh.ru/vacancy/106238024",
        "full_content": "2024-09-17 12:46:04\n Анжелика -> 2071074234:\nЛегкорем\n- зп: 220\n- вакансия \n- успех ✅\nhttps://hh.ru/vacancy/106238024"
      },
      {
        "timestamp": "2024-08-30 07:40:23",
        "content": "2024-08-30 07:40:23\n Max -> 2071074234:\nНазвание: Легкорем\nЗП: 230\nВопросы:\nЗадача: \nчто выведет консоль\nconst result = parseInt(\"3*9», 10)\n\nconsole.log(result); //3\n\nЗадача:\nconst f = function g () { return 23}\nconsole.log(  g () )\nЧто будет в консоли?/ g is not defined\n\nВывести oldestUser из массива пользователей :\n\nconst oldestUser = users.reduce((max, user) => user.age > max.age ? user : max, users[0]);\n\nПодсчитать средний возраст \n\n/ Функция для расчёта среднего возраста\nfunction calculateA...",
        "full_content": "2024-08-30 07:40:23\n Max -> 2071074234:\nНазвание: Легкорем\nЗП: 230\nВопросы:\nЗадача: \nчто выведет консоль\nconst result = parseInt(\"3*9», 10)\n\nconsole.log(result); //3\n\nЗадача:\nconst f = function g () { return 23}\nconsole.log(  g () )\nЧто будет в консоли?/ g is not defined\n\nВывести oldestUser из массива пользователей :\n\nconst oldestUser = users.reduce((max, user) => user.age > max.age ? user : max, users[0]);\n\nПодсчитать средний возраст \n\n/ Функция для расчёта среднего возраста\nfunction calculateAverageAge(array) {\n  // Суммируем все возраста\n  const totalAge = array.reduce((sum, person) => sum + person.age, 0);\n\n  // Вычисляем средний возраст\n  const averageAge = totalAge / array.length;\n\n  return averageAge;\n}\n\nЧто будет в типе с использованием omit и pick?\n\nКак очистить компонент при разминировании ?\n\nКак настроить асинхронную подгрузку (ленивую подгрузку) редьюсеров в редаксе?\n\nКак автогенерировать типы ts для данных с бэка?"
      }
    ]
  },
  {
    "company": "Egar Technology",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-01-29 22:50:40",
        "content": "2025-01-29 22:50:40\n Михаил Барыкин -> 2071074234:\nКомпания: EGAR Technology\nСсылка на вакансию: Написала HR\nЗП: Просил от 250к\nЗадачи: все задачи совпадают с -> https://t.me/c/2071074234/489/36888 (но последнюю задачу - хук - \nпопросят типизировать:\nimport { useState, useEffect } from 'react'; \n \ninterface UseOperationQueryResult<T> { \n  data: T | null; \n  isLoading: boolean; \n  isError: boolean; \n  error: string | null; \n} \n \nconst useOperationQuery = <T>(params: any): UseOperationQueryResult<...",
        "full_content": "2025-01-29 22:50:40\n Михаил Барыкин -> 2071074234:\nКомпания: EGAR Technology\nСсылка на вакансию: Написала HR\nЗП: Просил от 250к\nЗадачи: все задачи совпадают с -> https://t.me/c/2071074234/489/36888 (но последнюю задачу - хук - \nпопросят типизировать:\nimport { useState, useEffect } from 'react'; \n \ninterface UseOperationQueryResult<T> { \n  data: T | null; \n  isLoading: boolean; \n  isError: boolean; \n  error: string | null; \n} \n \nconst useOperationQuery = <T>(params: any): UseOperationQueryResult<T> => { \n  const [data, setData] = useState<T | null>(null); \n  const [isLoading, setIsLoading] = useState<boolean>(false); \n  const [isError, setIsError] = useState<boolean>(false); \n  const [error, setError] = useState<string | null>(null); \n \n  useEffect(() => { \n    const fetchData = async () => { \n      setIsLoading(true); \n      setIsError(false); \n      setError(null); \n \n      try { \n        const response = await fetch('/test', { \n          method: 'POST', \n          headers: { \n            'Content-Type': 'application/json', \n          }, \n          body: JSON.stringify(params), \n        }); \n \n        if (!response.ok) { \n          throw new Error('Network response was not ok'); \n        } \n \n        const result: T = await response.json(); \n        setData(result); \n      } catch (error) { \n        setIsError(true); \n        setData(null)\n        setError((error as Error).message); \n      } finally { \n        setIsLoading(false); \n      } \n    }; \n \n    fetchData(); \n  }, [params]); \n \n  return { data, isLoading, isError, error }; \n}; \n \nexport default useOperationQuery;\n\n)\n\nВопросы:\n  - Селекторы в CSS\n  - * {} - для чего звездочка\n  - Event loop\n  - this\n  - call, bind, apply\n  - React.Fragment - для чего и какие пропсы принимает\n  - useEffect vs useLayoutEffect\n  - управляемый vs неуправляемый компонент в React\n  - какие тесты бывают(unit, интеграционные, e2e)\n  - Cypress, Playwright - что это\n  - где хранить авторизационные токены - в куках(и почему)\n  - виды атак(XSS, csrf и т.д)\n  - CORS"
      },
      {
        "timestamp": "2024-07-08 20:02:25",
        "content": "2024-07-08 20:02:25\n Руслан -> 2071074234:\nEgar technology\n— Ссылка: hr сама написала\n— Зп: условились на 280, попытались пробить на 250 - реджектнул\n— Задачи:\nПросто выводить числа в зависимости от условий \nfor (let i = 1; i <= 100; i++) {\n  if (i % 3 === 0 && i % 5 === 0) {\n    console.log(\"FizzBuzz\");\n  } else if (i % 3 === 0) {\n    console.log(\"Fizz\");\n  } else if (i % 5 === 0) {\n    console.log(\"Buzz\");\n  } else {\n    console.log(i);\n  }\n}\nfunction bookingCalculate(nights, startDate = new D...",
        "full_content": "2024-07-08 20:02:25\n Руслан -> 2071074234:\nEgar technology\n— Ссылка: hr сама написала\n— Зп: условились на 280, попытались пробить на 250 - реджектнул\n— Задачи:\nПросто выводить числа в зависимости от условий \nfor (let i = 1; i <= 100; i++) {\n  if (i % 3 === 0 && i % 5 === 0) {\n    console.log(\"FizzBuzz\");\n  } else if (i % 3 === 0) {\n    console.log(\"Fizz\");\n  } else if (i % 5 === 0) {\n    console.log(\"Buzz\");\n  } else {\n    console.log(i);\n  }\n}\nfunction bookingCalculate(nights, startDate = new Date()) {\n  const weekdayRate = 1500;\n  const weekendRate = 2200;\n  let totalCost = 0;\n\n  for (let i = 0; i < nights; i++) {\n    const currentDate = new Date(startDate);\n    currentDate.setDate(currentDate.getDate() + i); // сдвиг даты заселения на i дней вперёд\n\n    const day = currentDate.getDay();\n    if (day === 0 || day === 6) { // 0 - воскресенье, 6 - суббота\n      totalCost += weekendRate;\n    } else {\n      totalCost += weekdayRate;\n    }\n  }\n\n  return totalCost;\n}\n// написать кастомный хук запроса данных с возможностью обрыва предыдущего запроса\nimport { useState, useEffect, useCallback } from 'react';\n\nconst useOperationQuery = (initialParams) => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback(async (controller) => {\n    setIsLoading(true);\n    setIsError(false);\n    setError(null);\n\n    try {\n      const response = await fetch('/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(initialParams),\n        signal: controller.signal,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      setData(result);\n    } catch (err) {\n      if (err.name === 'AbortError') {\n        console.log('Fetch aborted');\n      } else {\n        setIsError(true);\n        setError(err);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [initialParams]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    fetchData(controller);\n\n    return () => {\n      controller.abort();\n    };\n  }, [fetchData]);\n\n  return { data, isError, isLoading, error };\n};"
      },
      {
        "timestamp": "2024-01-16 14:56:53",
        "content": "2024-01-16 14:56:53\n Michael Yakovlev -> 2071074234:\nПобывал на треш-собеседовании в компанию EGAR TECHNOLOGY)\nПервым делом мне сообщили, что это первый этап собеседования. Чисто по JavaScript. Потом будет второе по React, TypeScript и DevOps, что для меня стало неожиданностью. Про этапы мне не сообщали.\n\n- Компания: EGAR TECHNOLOGY\n- Важность: тренировка\n⁃ Ссылка на вакансию: hr сама написала, на один из проектов Честный знак или Мосбиржа\nhttps://krasnoyarsk.hh.ru/vacancy/90732529?hhtmFrom=empl...",
        "full_content": "2024-01-16 14:56:53\n Michael Yakovlev -> 2071074234:\nПобывал на треш-собеседовании в компанию EGAR TECHNOLOGY)\nПервым делом мне сообщили, что это первый этап собеседования. Чисто по JavaScript. Потом будет второе по React, TypeScript и DevOps, что для меня стало неожиданностью. Про этапы мне не сообщали.\n\n- Компания: EGAR TECHNOLOGY\n- Важность: тренировка\n⁃ Ссылка на вакансию: hr сама написала, на один из проектов Честный знак или Мосбиржа\nhttps://krasnoyarsk.hh.ru/vacancy/90732529?hhtmFrom=employer_vacancies\n⁃ middle, от 200к\n\nВопросы:\n\n⁃ Что такое замыкание\n⁃ Какая функция не имеет замыкания\n⁃ Через какое скрытое свойство работает замыкание\n⁃ Что возвращает typeof Alert()\n⁃ Приведение типов в JavaScript\n⁃ Наследование в JavaScript\n⁃ proto и prototype\n⁃ У каких функций есть prototype\n⁃ Какие типы данных можно присвоить prototype\n⁃ Ограничения прототипного наследования в JavaScript\n⁃ Какие виды данных есть в JavaScript\n⁃ Что выведется:\nconsole.log(undefined > 0);\nconsole.log(undefined < 0);\nconsole.log(undefined == 0);\n\n\nРезультат: После того как я спросил, будут ли все вопросы такими душными, а потом попросил привести пример из бизнеса где может пригодиться typeof Alert(), собеседующая девушка отключила конференцию.\n\nСобеседование продлилось 8 минут)\n\n#EGAR #EGARTechnology"
      }
    ]
  },
  {
    "company": "Glowbyte",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-10-21 05:29:28",
        "content": "2024-10-21 05:29:28\n Сергей -> 2071074234:\n- GlowByte\n- Тех собес\nВакансия: https://hh.ru/vacancy/99620797?hhtmFrom=employer_vacancies\nВопросы: \n- расскажи про свой опыт\n- какая команда\n- Какая у вас была архитектура\n- Как апи с бэками обсуждали\n- приходит задача, что в ней описано?\n- как разделяли задачи, кто оценивал их?\n- RTK Query плюсы\n- Какие другие фреймворки изучал\n- Плюсы Yup?\n- MobX State Tree vs Redux Toolkit\n- Infer в TS\n- Какие есть способы изоляции стилей(Styled Component, CSS Modu...",
        "full_content": "2024-10-21 05:29:28\n Сергей -> 2071074234:\n- GlowByte\n- Тех собес\nВакансия: https://hh.ru/vacancy/99620797?hhtmFrom=employer_vacancies\nВопросы: \n- расскажи про свой опыт\n- какая команда\n- Какая у вас была архитектура\n- Как апи с бэками обсуждали\n- приходит задача, что в ней описано?\n- как разделяли задачи, кто оценивал их?\n- RTK Query плюсы\n- Какие другие фреймворки изучал\n- Плюсы Yup?\n- MobX State Tree vs Redux Toolkit\n- Infer в TS\n- Какие есть способы изоляции стилей(Styled Component, CSS Modules), В чем их преимущество\n- Vite vs Webpack. Какой опыт работы с webpack\n- для чего нужен UseState?\n- Когда перерендер происходит\n- Как оптимизировать перерендер\n- Useeffect vs useLayoutEffect?\n- Как авторизация происходит у вас?\n- Флаги в куках\n- Cors\n\nfunction main() {\n    for (let i = 0; i < 10; i++) {\n        setTimeout(() => {\n            console.log(i);\n        }, 0);\n    }\n}\n/// 0 - 9\n\nfunction main() {\n    for (var i = 0; i < 10; i++) {\n        setTimeout(() => {\n            console.log(i);\n        }, 0);\n    }\n}\n\n// 9(x10)\n\n\nconst refArray = [\n    {block_id: 12243, name: 'current'},\n    {block_id: 148434, name: 'old'},\n    {block_id: 18681, name: 'new'},\n    {block_id: 38311, name: 'backUp'},\n]\n\nconst dataArray = [\n    {conf_id: 4843, resName: 'r1', block_id: 122434},\n    {conf_id: 8768, resName: 'r2', block_id: 14834},\n    {conf_id: 45364, resName: 'r3', block_id: 18681},\n    {conf_id: 948, resName: 'r4', block_id: 38311},\n]\n\nconst resultArray = dataArray.map(dataItem => {\n    const block = refArray.find(refItem => refItem.block_id === dataItem.block_id);\n    return {...dataItem, blockName: block?.name}\n})\n\n////// еще решить сложность O(n)"
      },
      {
        "timestamp": "2024-07-10 19:28:34",
        "content": "2024-07-10 19:28:34\n Artur -> 2071074234:\nGlowByte, созвон с лидом\n\n— Вакансия: https://hh.ru/vacancy/99620797?query=glowbyte&hhtmFrom=vacancy_search_list\n— ЗП: сказал 150к+, комфорт 180к, готовы вроде обсуждать (вилка была до 150к на руки)\n\nВопросы:\n— расскажи про опыт\n— как разработка велась\n— как проверка размеров прикрепленных файлов была устроена\n— как проектировали апи\n— что ждешь от работы\n— как ты работал с авторизацией\n— работал ли с ролями\n— как бы отображал большое количество инфы\n— к...",
        "full_content": "2024-07-10 19:28:34\n Artur -> 2071074234:\nGlowByte, созвон с лидом\n\n— Вакансия: https://hh.ru/vacancy/99620797?query=glowbyte&hhtmFrom=vacancy_search_list\n— ЗП: сказал 150к+, комфорт 180к, готовы вроде обсуждать (вилка была до 150к на руки)\n\nВопросы:\n— расскажи про опыт\n— как разработка велась\n— как проверка размеров прикрепленных файлов была устроена\n— как проектировали апи\n— что ждешь от работы\n— как ты работал с авторизацией\n— работал ли с ролями\n— как бы отображал большое количество инфы\n— как передать параметры фильтрации на бэк\n— а если параметры динамичные, то как, как передать массивы\n— есть два берега, между ними мост, есть 4 человека, наша задача перенести этих людей на другой берег, но есть ограничение, на мосту не больше 2 людей, все это происходит ночью, есть фонарик, но он один, также у каждого человека свой темп ходьбы, один человек за 1 минуту может перейти мост, второй за 2, третий за 5 и последний за 10. нужно назвать последовательность, при которой мост будет пройден за наименьшее количество времени \n\nЗадача:\n\nнаписать метод, который проверит, является ли строка S корректной с точки зрения математической записи\n\nS = ())((())()([]]]{}(}...\n\n()[]        - true\n[(())]      - true\n)(          - false\n([)]        - false\n\nfunction isValid(S) {\n    if (S.length === 0) return true\n\n    let stack = []\n\n    let map = {\n        '(': ')',\n        '[': ']',\n        '{': '}',\n    }\n\n    for (let char of S) {\n        if (map[char]) {\n            stack.psuh(char)\n        } else {\n            if (stack.length === 0) return false\n            \n            let topElement = stack.pop()\n            \n            if (map[topElement] !== char) return false\n        }\n    }\n\n    return stack.length === 0\n\n}"
      },
      {
        "timestamp": "2024-07-03 10:19:12",
        "content": "2024-07-03 10:19:12\n Artur -> 2071074234:\nGlowByte\n\n— ЗП: у них вилка до 150к на руки, я сказал, что рассматриваю 150К+ и комфортно 180к, вроде были готовы обсудить\n— Ссылка на вакансию: https://hh.ru/vacancy/99620797?hhtmFrom=employer_vacancies\n\nВопросы:\n— какие сборщики знаешь, что они делают, зачем нужны\n— почему vite быстрее работает чем webpack\n— что такое rest\n— методы http\n— что такое cors, как настраивается, кто контролирует ограничений\n— методы написания стилей\n— модульные стили что это...",
        "full_content": "2024-07-03 10:19:12\n Artur -> 2071074234:\nGlowByte\n\n— ЗП: у них вилка до 150к на руки, я сказал, что рассматриваю 150К+ и комфортно 180к, вроде были готовы обсудить\n— Ссылка на вакансию: https://hh.ru/vacancy/99620797?hhtmFrom=employer_vacancies\n\nВопросы:\n— какие сборщики знаешь, что они делают, зачем нужны\n— почему vite быстрее работает чем webpack\n— что такое rest\n— методы http\n— что такое cors, как настраивается, кто контролирует ограничений\n— методы написания стилей\n— модульные стили что это\n— как браузер понимает scss/sass файлы, кто компилирует их\n— локализацию кабинета как настраивал\n— типы данных в js\n— как работает копирование по ссылке\n— == и === разница\n— области видимости переменных\n— замыкание\n— IIFE\n— стрелочная функция\n— наследование в js как реализовано\n— proto и prototype разница\n— как проверить есть ли свойство у объекта, игнорируя цепочку прототипов\n— this\n— какие циклы знаешь, for in и for of для чего\n— методы массивов\n— как работает map, reduce\n— event loop, что это, как работает\n— промисы, что это, как с ними работает, какие статические методы есть, all и allSettled разница\n— async await что это, как обработка ошибок происходит\n— spread и rest операторы, разница\n— Set и Map\n— Symbol для чего нужно\n— DOM \n— евенты и евентбаблинг что это, как предотвратить\n— интерфейсы и типы в тс, что это, разница\n— джейнерики\n— keyof и typeof\n— утилитарные типы, что делает каждый\n— Virtual DOM\n— useEffect и useLayoutEffect, разница\n— useEffect как работает, возвращение коллбека\n— причины перерендера компонента\n— context зачем\n— useRef что это, форвардреф зачем нужен\n— storybook зачем нужен\n— почему мы чаще используем стейтменеджеры, разница между контекстом\n— какие использовал, какие еще знаешь\n— clonedElement в react как работает\n— children это\n— какие ui киты использовал\n— mui и antd в чем разница"
      }
    ]
  },
  {
    "company": "ATI.su",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-02-17 13:53:25",
        "content": "2025-02-17 13:53:25\n Матвей Захаров -> 2071074234:\nКомпания: ATI.su\nВакансия: https://spb.hh.ru/vacancy/115783811\nЗапись: https://youtu.be/SbbGsCEAN3E\n\nТолько теория, без лайфкодинга\n\nВопросы:\n- Много про то, как был организован процесс работы, какие мероприятия проводились, кто ставил задачи для выполнения\n- var/let/const \n- что ещё хостится в js и почему (function declaration) \n- Прототипное наследование\n- Для чего нужны классы\n- Про асинронхронность, как работает RequestAnimationCallback, про...",
        "full_content": "2025-02-17 13:53:25\n Матвей Захаров -> 2071074234:\nКомпания: ATI.su\nВакансия: https://spb.hh.ru/vacancy/115783811\nЗапись: https://youtu.be/SbbGsCEAN3E\n\nТолько теория, без лайфкодинга\n\nВопросы:\n- Много про то, как был организован процесс работы, какие мероприятия проводились, кто ставил задачи для выполнения\n- var/let/const \n- что ещё хостится в js и почему (function declaration) \n- Прототипное наследование\n- Для чего нужны классы\n- Про асинронхронность, как работает RequestAnimationCallback, про промисы\n- как бразурер парсит страничку \n- что самое дешёвое для анимации (transform), как часто RequestAnimationCallback будет запускаться в браузере\n- Зачем нужен TS, React, в чём их преимущества \n- Контекст в реакте \n- Стоит ли выносить статический список за пределы компонента/ в отдельный компонент\n- как работает Redux tlk, в чём его отличие от других стейт-менеджеров\n- Микрофронты, как они работают \n- Вопросы про работе webpack\n- XSS, Cors, CSRF  - какие виды уязвимостей знаешь, как бы их исправлял\n- Как и какие тесты писал\n\nСофты:\n- Что для тебя редфлаг\n- Были ли кофликты на предыдущем месте работы\n- Расскажи про фейлы\n- Что ждёшь от новой компании"
      },
      {
        "timestamp": "2024-12-04 04:56:48",
        "content": "2024-12-04 04:56:48\n Ivan -> 2071074234:\nКомпания : ATI.SU\nЗП:220\nВопросы : такие же что были в этом посту https://t.me/c/2071074234/489/84173",
        "full_content": "2024-12-04 04:56:48\n Ivan -> 2071074234:\nКомпания : ATI.SU\nЗП:220\nВопросы : такие же что были в этом посту https://t.me/c/2071074234/489/84173"
      },
      {
        "timestamp": "2024-11-08 13:26:08",
        "content": "2024-11-08 13:26:08\n Katerina -> 2071074234:\nКомпания: ATI.SU гибрид спб\nЗП: 200k - 250k\nВакансия: https://spb.hh.ru/vacancy/109048150?from=employer&hhtmFrom=employer\n\nСобеседование больше разговорное из темы в тему переходящее, без конкретных вопросов 'а что это'.\n\nВопросы:\n- Про опыт в резюме и прошлись по нему\n- fsd -  в чем заключается, что куда положить\n\nПо софтам:\n- что может заставить сотрудника уволится одним днем\n- если будет идея по оптимизации процессов, что ты с ней сделаешь\n\nЗадачи:...",
        "full_content": "2024-11-08 13:26:08\n Katerina -> 2071074234:\nКомпания: ATI.SU гибрид спб\nЗП: 200k - 250k\nВакансия: https://spb.hh.ru/vacancy/109048150?from=employer&hhtmFrom=employer\n\nСобеседование больше разговорное из темы в тему переходящее, без конкретных вопросов 'а что это'.\n\nВопросы:\n- Про опыт в резюме и прошлись по нему\n- fsd -  в чем заключается, что куда положить\n\nПо софтам:\n- что может заставить сотрудника уволится одним днем\n- если будет идея по оптимизации процессов, что ты с ней сделаешь\n\nЗадачи:\nЯ забыла заскринить(\n\n1. Ревью реакт кода\nПростейшая реализация, вопросы про оптимизации написания кода:\nПочему эта запись const {2:errorFun} = useError;\nбудет лучше чем эта const [ , , errorFun] = useError;\nТут же вопросы про useMemo, в нем был статический список. Ок или не ок (выносим список за компонент)\nТакже функция, нужен ли ей useCallback\n\n2. Оптимизировать редьюс\nconst arr = [1,2,3].reduce((acc, x) =>{\n  return [...acc, {value: x, name: x}]\n}, [])\nЗдесь создается массив на каждой итерации, нужно оптимизировать\nПервый способ через push, второй через index достав его из reduce"
      }
    ]
  },
  {
    "company": "Diasoft",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-11-15 11:37:44",
        "content": "2024-11-15 11:37:44\n Гладких Александр -> 2071074234:\nКомпания Diasoft\nВакансия https://hh.ru/vacancy/107194276\nЗП: от 200\nВопросы\n1) Почему сменили профиль и пошли в разработку\n2) По резюме идем последнее место работы причина ухода\n3) С каким продуктом работали подробности\n4) Про основной функционал который вы делали\n4) Самая интересная и сложная задачка\n5) Про команду с кем работаете с кем строиться взаимодействие\n6) Готовы изучить Angular\n7) С какими графическими редакторами работал\n8) С нуля...",
        "full_content": "2024-11-15 11:37:44\n Гладких Александр -> 2071074234:\nКомпания Diasoft\nВакансия https://hh.ru/vacancy/107194276\nЗП: от 200\nВопросы\n1) Почему сменили профиль и пошли в разработку\n2) По резюме идем последнее место работы причина ухода\n3) С каким продуктом работали подробности\n4) Про основной функционал который вы делали\n4) Самая интересная и сложная задачка\n5) Про команду с кем работаете с кем строиться взаимодействие\n6) Готовы изучить Angular\n7) С какими графическими редакторами работал\n8) С нуля приходилось что либо верстать или по макетам что то делали\n9) Дизайн систему какую использовали\n10) По процессу разработки как шло взаимодействие с git git flow\n11) Принимал ли участие в выборе стека на проекте\n\nЗадачи \n\n1) Написать функцию которая принимает на вход строку и печатает в консоль\n  ее в перевернутом виде\n  fn(str) => 'Hello World'\nfunction reverseStr(str) {\n    return str\n        .split(' ')\n        .map((el) => el.split('').reverse().join(''))\n        .join(' ');\n}\n\n2)  Определить повторяющиеся символы в строке и вывести их в массиве\n \nconst str = 'hello world'\nfunction dubbleChar(string) {\n  const set = new Set()\n  const resultSet = new Set()\n  for(let i = 0; i < string.length; i++) {\n    if(set.has(string[i])) {\n      resultSet.add(string[i])\n    } else {\n      set.add(string[i])\n    }\n  }\n  console.log([...resultSet])\n}\ndubbleChar(str)\n\n\n3)   написать функцию для вычисления суммы многомерного массива с \n  любой вложенностью\n\nfunction sumArray(arr) {\n  return arr.flat(Infinity).reduce((acc, element) => acc += element, 0)\n}\n\n4) Задача на баланс скобок\n\nfunction isBalance(string) {\n  let stack = []\n  const brackets = {\n    \"}\": \"{\",\n    \")\": \"(\",\n    \"]\": \"[\",\n  }\n  for(let char of string) {\n    if([\"{\", \"[\", \"(\"].includes(char)) {\n      stack.push(char)\n    } else if([\"}\", \"]\", \")\"].includes(char)) {\n      if(stack.pop() !== brackets[char]) return false\n    }\n  }\n  return stack.length === 0;\n}"
      },
      {
        "timestamp": "2024-09-26 11:52:51",
        "content": "2024-09-26 11:52:51\n Михаил -> 2071074234:\n- Diasoft\n- 200к\n- вакансия: hh.ru/vacancy/104146623\n- смотреть с 8 минуты",
        "full_content": "2024-09-26 11:52:51\n Михаил -> 2071074234:\n- Diasoft\n- 200к\n- вакансия: hh.ru/vacancy/104146623\n- смотреть с 8 минуты"
      },
      {
        "timestamp": "2024-07-13 08:35:43",
        "content": "2024-07-13 08:35:43\n Руслан -> 2071074234:\nDiasoft\n— вакансия: https://hh.ru/vacancy/102766907?hhtmFrom=vacancy_duplicate\n— зп: 300к\n— Вопросы:\n1. Что такое реакт, почему его выбрал\n2. Методы жизненного цикла компонента\n3. Какие хуки в реакт есть\n4. useCallback useMemo отличия\n5. Что такое замыкания\n6. Event loop что такое\n7. Преимущества redux toolkit перед redux\n8. Саги или санки, что больше нравилось\n9. Оптимизации, делал ли, какие способы оптимизации знаешь",
        "full_content": "2024-07-13 08:35:43\n Руслан -> 2071074234:\nDiasoft\n— вакансия: https://hh.ru/vacancy/102766907?hhtmFrom=vacancy_duplicate\n— зп: 300к\n— Вопросы:\n1. Что такое реакт, почему его выбрал\n2. Методы жизненного цикла компонента\n3. Какие хуки в реакт есть\n4. useCallback useMemo отличия\n5. Что такое замыкания\n6. Event loop что такое\n7. Преимущества redux toolkit перед redux\n8. Саги или санки, что больше нравилось\n9. Оптимизации, делал ли, какие способы оптимизации знаешь"
      }
    ]
  },
  {
    "company": "Petshop",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-05-12 20:19:55",
        "content": "2025-05-12 20:19:55\n Захар -> 2071074234:\n06.05 Petshop.ru Тех собес\nЗП: Не обсуждалась\nВопросы (были теоретические вопросы на отдельном сайте, ниже приложу скрины)\n1) Вопросы про опыт\nДалее идут вопросы с сайта\n1) Дизайнеры предоставили макет...\nОтвет: теги <a>, <button> \n2) Как можно сверстать данный список?\nОтвет: Grid, Flex, Float\n3) Что произойдет при выполнении кода?\nОтвет: Внутри функции будет \"hello world\", снаружи \"hello undefined\"\n4) Что будет выведено на экране при выполнении кода?\nОт...",
        "full_content": "2025-05-12 20:19:55\n Захар -> 2071074234:\n06.05 Petshop.ru Тех собес\nЗП: Не обсуждалась\nВопросы (были теоретические вопросы на отдельном сайте, ниже приложу скрины)\n1) Вопросы про опыт\nДалее идут вопросы с сайта\n1) Дизайнеры предоставили макет...\nОтвет: теги <a>, <button> \n2) Как можно сверстать данный список?\nОтвет: Grid, Flex, Float\n3) Что произойдет при выполнении кода?\nОтвет: Внутри функции будет \"hello world\", снаружи \"hello undefined\"\n4) Что будет выведено на экране при выполнении кода?\nОтвет: выведет 5\n5) Event loop задача\nОтвет: Petshop Petproduct Kideria Ibody\n6) Что произойдет при выполнении кода?\nОтвет: в 1 console.log будет undefined, во втором John Doe\n7) Есть следующий JSX код\nОтвет: 2\n8) Компонент с состоянием\nОтвет: 2 и 4\n9) Какого цвета будет ссылка?\nОтвет: Зеленая \n10) Вычислить количество пикселей\nОтвет: 240 пикселей\n\nЗадача: Написать компонент \"Корзина\" на React\nimport { useEffect, useState } from 'react';\n\ntype Card = {\n  id: string;\n  title: string;\n  description: string;\n};\n\nexport function useGetCard() {\n  const [cards, setCards] = useState<Card[] | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        setIsLoading(true);\n        // 🔁 Здесь ты можешь заменить на fetch('/api/cards')\n        await new Promise(resolve => setTimeout(resolve, 1000)); // симуляция запроса\n\n        const data: Card[] = [\n          { id: '1', title: 'Card 1', description: 'First card' },\n          { id: '2', title: 'Card 2', description: 'Second card' },\n        ];\n\n        setCards(data);\n      } catch (err) {\n        setError(err as Error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCards();\n  }, []);\n\n  return { cards, isLoading, error };\n}"
      },
      {
        "timestamp": "2024-03-05 21:11:06",
        "content": "2024-03-05 21:11:06\n Daniil Max -> 2071074234:\n— Название компании: Petshop [знакомство с командой, последний этап)\n— Ссылка на вакансию: потеряна \n— ЗП: 180К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/_o352Y0fw2o\n— Успех собеса: ✅️\n— Фитбек о собесе от HR: оффер\n— Комментарий: на этот раз знакомство с командой. Знакомлюсь и задаю много вопросов\n\n#middle #petshop",
        "full_content": "2024-03-05 21:11:06\n Daniil Max -> 2071074234:\n— Название компании: Petshop [знакомство с командой, последний этап)\n— Ссылка на вакансию: потеряна \n— ЗП: 180К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/_o352Y0fw2o\n— Успех собеса: ✅️\n— Фитбек о собесе от HR: оффер\n— Комментарий: на этот раз знакомство с командой. Знакомлюсь и задаю много вопросов\n\n#middle #petshop"
      },
      {
        "timestamp": "2024-01-10 08:59:13",
        "content": "2024-01-10 08:59:13\n Daniil Max -> 2071074234:\n— Название компании: Petshop\n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/O11zPzIOTAc?si=AGcJuEZ2ZsRluhRr\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n\n#middle",
        "full_content": "2024-01-10 08:59:13\n Daniil Max -> 2071074234:\n— Название компании: Petshop\n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/O11zPzIOTAc?si=AGcJuEZ2ZsRluhRr\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n\n#middle"
      }
    ]
  },
  {
    "company": "Сигнал",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-03-18 06:21:48",
        "content": "2025-03-18 06:21:48\n Сергей -> 2071074234:\nКомпания: СИгнал(зп 300к+)\nрезультат: реджект\n\nЗадачи:\n1)\n\n//Написать функцию, которая запускает параллельно несколько промиосв, до указанного лимита\nexport function runWithLimit<RequestData, Response>({\n  callback,\n  data,\n  limit,\n}: Props<RequestData, Response>): Promise<Response[]> {\n  // Массив для хранения результатов выполнения callback\n  const result: Response[] = [];\n\n  // Очередь для хранения индексов выполняемых задач\n  const queue: Promise<v...",
        "full_content": "2025-03-18 06:21:48\n Сергей -> 2071074234:\nКомпания: СИгнал(зп 300к+)\nрезультат: реджект\n\nЗадачи:\n1)\n\n//Написать функцию, которая запускает параллельно несколько промиосв, до указанного лимита\nexport function runWithLimit<RequestData, Response>({\n  callback,\n  data,\n  limit,\n}: Props<RequestData, Response>): Promise<Response[]> {\n  // Массив для хранения результатов выполнения callback\n  const result: Response[] = [];\n\n  // Очередь для хранения индексов выполняемых задач\n  const queue: Promise<void>[] = [];\n\n  // Текущий индекс обрабатываемых данных\n  let currentIndex = 0;\n\n  // Функция для выполнения задач с учетом лимита\n  const worker = (): Promise<void> => {\n    // Если все задачи обработаны, завершаем выполнение\n    if (currentIndex >= data.length) {\n      return Promise.resolve();\n    }\n\n    // Берем индекс текущей задачи\n    const index = currentIndex;\n    currentIndex++;\n\n    // Выполняем callback и сохраняем результат\n    const task = callback(data[index])\n      .then((response) => {\n        result[index] = response; // Сохраняем результат на правильную позицию\n      })\n      .catch((error) => {\n        console.error(`Ошибка при выполнении запроса: ${error}`);\n      });\n\n    // Добавляем текущую задачу в очередь\n    const taskPromise = task.then(() => {\n      // После завершения задачи запускаем новую (рекурсивный вызов)\n      return worker();\n    });\n\n    queue.push(taskPromise);\n\n    return taskPromise;\n  };\n\n  // Запускаем выполнение первых `limit` задач\n  const initialWorkers = Array.from({ length: Math.min(limit, data.length) }, () =>\n    worker()\n  );\n\n  // Дожидаемся завершения всех задач и возвращаем результат\n  return Promise.all(initialWorkers).then(() => result);\n}\n\n\n2)\n\n//Написать рекурсивную функцию, которая обходит дерево и возвращает все ноды, где есть дочерние ноды\nexport function nodeCleaner(rootNode: NodeItem | null): NodeItem | null {\n  // Если корневой узел отсутствует, возвращаем null\n  if (!rootNode) return null;\n\n  // Фильтруем дочерние узлы, оставляя только те, которые должны остаться в дереве\n  rootNode.children = rootNode.children\n    .map(child => nodeCleaner(child)) // Рекурсивно очищаем каждый дочерний узел\n    .filter(child => child !== null); // Удаляем узлы, которые стали null\n\n  // Проверяем, должен ли сам узел остаться в дереве\n  if (!rootNode.alive && rootNode.children.length === 0) {\n    return null; // Если узел сам \"мертв\" и у него нет живых детей, он удаляется\n  }\n\n  return rootNode; // Возвращаем очищенное дерево\n}\n\nФидбек: очень душные и неприятные ребята, говорили , что деревья обходить это база и им нахуй не надо проверять знания тс и реатка и всего прочего, т к если ты умеешь решать задачи с деревьями, ты со всем разберешься)))🤡"
      },
      {
        "timestamp": "2025-03-15 17:47:26",
        "content": "2025-03-15 17:47:26\n Эмир -> 2071074234:\nКомпания Сигнал\nhttps://hh.ru/vacancy/117579944?hhtmFrom=main\nЗП: 250к\nВопросы:\nПочему ищешь работу\nКак вас учили в колледже 😂\nЗадачи:\nДля заданного набора двумерных точек вычислите площадь ограничивающего треугольника\ntype Points = Array<[number, number]>;\n\nconst getBoundingBoxArea = (points: Points): number => {\n    if (points.length === 0) return 0;\n\n    let minX = points[0][0];\n    let maxX = points[0][0];\n    let minY = points[0][1];\n    let maxY = p...",
        "full_content": "2025-03-15 17:47:26\n Эмир -> 2071074234:\nКомпания Сигнал\nhttps://hh.ru/vacancy/117579944?hhtmFrom=main\nЗП: 250к\nВопросы:\nПочему ищешь работу\nКак вас учили в колледже 😂\nЗадачи:\nДля заданного набора двумерных точек вычислите площадь ограничивающего треугольника\ntype Points = Array<[number, number]>;\n\nconst getBoundingBoxArea = (points: Points): number => {\n    if (points.length === 0) return 0;\n\n    let minX = points[0][0];\n    let maxX = points[0][0];\n    let minY = points[0][1];\n    let maxY = points[0][1];\n\n    for (const [x, y] of points) {\n        if (x < minX) minX = x;\n        if (x > maxX) maxX = x;\n        if (y < minY) minY = y;\n        if (y > maxY) maxY = y;\n    }\n\n    return (maxX - minX) * (maxY - minY);\n};\n\nconst points: Points = [\n    [1, 1],\n    [2, 3],\n    [5, 5]\n];\n\nconst points2: Points = [\n    [-18, -18],\n    [23, 13],\n    [22, 33],\n    [2, 3],\n    [30, 50]\n];\n\nconsole.log(getBoundingBoxArea(points)); // Должно вывести 16\nconsole.log(getBoundingBoxArea(points2)); // Должно вывести 3600\n\n2. Написать компонент который будет получать данные пользователя по {{userId}} и выводить основные данные \nДля запроса использовать fetchUser\n\nimport React, { useEffect, useState } from 'react';\n\n// Пример функции fetchUser, которая делает запрос к API\nconst fetchUser = async (userId) => {\n  const response = await fetch(`https://api.example.com/users/${userId}`);\n  if (!response.ok) {\n    throw new Error('Пользователь не найден');\n  }\n  return response.json();\n};\n\nconst UserProfile = ({ userId }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getUser = async () => {\n      try {\n        const userData = await fetchUser(userId);\n        setUser(userData);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getUser();\n  }, [userId]);\n\n  if (loading) {\n    return <div>Загрузка...</div>;\n  }\n\n  if (error) {\n    return <div>Ошибка: {error}</div>;\n  }\n\n  if (!user) {\n    return <div>Пользователь не найден</div>;\n  }\n\n  return (\n    <div>\n      <h1>Профиль пользователя</h1>\n      <p><strong>Имя:</strong> {user.name}</p>\n      <p><strong>Email:</strong> {user.email}</p>\n      <p><strong>Телефон:</strong> {user.phone}</p>\n      <p><strong>Адрес:</strong> {user.address.city}, {user.address.street}</p>\n    </div>\n  );\n};\n\nexport default UserProfile;"
      },
      {
        "timestamp": "2025-03-11 14:12:33",
        "content": "2025-03-11 14:12:33\n Эмир -> 2071074234:\nКомпания: Сигнал\nВакансия: https://hh.ru/vacancy/117579944?hhtmFrom=main\nЗп: 250к\nВопросы: \nпочему ищешь работу\nкак вас учили в колледже 😂\nзадачи:\n1. Для заданного набора двумерных точек вычислите площадь ограничивающего прямоугольника.\n2. Написать компонент который будет получать пользователя по {{userId}} и выводить основные данные\n   Для запроса использовать fetchUser",
        "full_content": "2025-03-11 14:12:33\n Эмир -> 2071074234:\nКомпания: Сигнал\nВакансия: https://hh.ru/vacancy/117579944?hhtmFrom=main\nЗп: 250к\nВопросы: \nпочему ищешь работу\nкак вас учили в колледже 😂\nзадачи:\n1. Для заданного набора двумерных точек вычислите площадь ограничивающего прямоугольника.\n2. Написать компонент который будет получать пользователя по {{userId}} и выводить основные данные\n   Для запроса использовать fetchUser"
      }
    ]
  },
  {
    "company": "LegalTech",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-06-27 19:39:08",
        "content": "2025-06-27 19:39:08\n No Name -> 2071074234:\nLegalTech\nЗП не обсуждали\nВакансия: https://hh.ru/vacancy/120924464\nВопросы: очень кратко по опыту\nЗадача 1\n \"aaabc\" -> \"a\" вернуть букву которая больше всего повторяется\nдоп условие:\n\"bac\" -> \"a\" нужно, чтобы выводилась буква, которая наиболее близка к началу алфавита\nдоп задача:\nоценить сложность алгоритма\nРешение после всех доп условий:\n function letterCounter (str) { // O(nLogn)\n  const hash = {}\n  let letter = ''\n  let maxNumber = 0\n  const keys =...",
        "full_content": "2025-06-27 19:39:08\n No Name -> 2071074234:\nLegalTech\nЗП не обсуждали\nВакансия: https://hh.ru/vacancy/120924464\nВопросы: очень кратко по опыту\nЗадача 1\n \"aaabc\" -> \"a\" вернуть букву которая больше всего повторяется\nдоп условие:\n\"bac\" -> \"a\" нужно, чтобы выводилась буква, которая наиболее близка к началу алфавита\nдоп задача:\nоценить сложность алгоритма\nРешение после всех доп условий:\n function letterCounter (str) { // O(nLogn)\n  const hash = {}\n  let letter = ''\n  let maxNumber = 0\n  const keys = Object.keys(hash).sort() // O(nLogn)\n  for (const el of str) { // O(n)\n    hash[el] ? hash[el] += 1 : hash[el] = 1\n    if (hash[el] === maxNumber) {\n      letter = keys[0]\n    }\n\n    if (hash[el] > maxNumber ) {\n      maxNumber = hash[el]\n      letter = el\n    }\n  }\n  return letter\n}\nЗадача 2\n // Нам нужно реализовать некий буфер, который будет хранить данные до отправки на сервер,\n// но также он должен ограничивать потребление памяти параметром max_size. У этого буфера должны быть следующие методы:\n// write - добавляет новый элемент в буфер. Если количество элементов в буфере больше чем max_size, то он должен переписать наиболее старый элемент\n// read - удаляет и возвращает наиболее старый элемент из буфера\n\nclass Buffer {\n  constructor (max_size) {\n    this.max_size = max_size\n    this.buffer = new Array(max_size)\n    this.oldest_el = 0\n  }\n\n  write (item) {\n    if (this.max_size === this.buffer.length) {\n      this.buffer[this.oldest_el] = item\n      if (this.oldest_el === this.buffer.length) {\n        this.oldest_el = 0\n        return\n      }\n      this.oldest_el = this.oldest_el + 1\n    } else {\n      this.buffer.push(item)\n    }\n  }\n\n  read () {\n    const item = this.buffer[this.oldest_el]\n    this.buffer.delete(item)\n    this.buffer = this.buffer.filter((el) => Boolean(el))\n    return item\n  }\n}\nP.s моя реализация буфера имеет небольшой баг + не оптимальна по сложности"
      },
      {
        "timestamp": "2025-06-12 14:12:55",
        "content": "2025-06-12 14:12:55\n Sodnom Tyksheev -> 2071074234:\nКомпания - LegalTech 2 этап\nВакансия - https://hh.ru/vacancy/120924464?hhtmFrom=negotiation_list\nВопросы: \n1.Вначале рассказать про свой опыт\n2.Скажи про свойство position\n3.Расказать про Promise.all\n4.Как работает EventLoop\n5.Что такое WebWorker\n6.Как бы ты оптимизировал приложение если у нас нет пагинации(Ответил юзал бы виртуализацию)\n7.Тебе нужно реализовать форму для логина, что бы ты использовал(Ответ:использовал бы готовые UI решения  + ...",
        "full_content": "2025-06-12 14:12:55\n Sodnom Tyksheev -> 2071074234:\nКомпания - LegalTech 2 этап\nВакансия - https://hh.ru/vacancy/120924464?hhtmFrom=negotiation_list\nВопросы: \n1.Вначале рассказать про свой опыт\n2.Скажи про свойство position\n3.Расказать про Promise.all\n4.Как работает EventLoop\n5.Что такое WebWorker\n6.Как бы ты оптимизировал приложение если у нас нет пагинации(Ответил юзал бы виртуализацию)\n7.Тебе нужно реализовать форму для логина, что бы ты использовал(Ответ:использовал бы готовые UI решения  + react-hook-form + zod для валидации)\n8.Расскажи про SOLID принципы\n9.Какая у вас была архитектура на проекте(ответил FSD) и тут как раз она спросила расскажи про плюсы и минусы FSD, почему она стала такой популярной\n10.Ну и в конце рефакторинг этого кода:\n\nfunction TodoApp({ initialTodos }) {\n\n\n    const [todos, setTodos] = useState(initialTodos);\n    let name = 'My Todo App'\n    function handleAddTodo() {\n        e.preventDefault();\n        const newTodo = e.target.todoInput.value\n        setTodos(todos.push(newTodo))\n        e.target.todoInput.value = \"\"\n    }\n\n \n    useEffect(() => {\n        console.log('Todos updated:', todos);\n    }, [todos, handleAddTodo]);\n\n    return (\n        <div>\n            <h1>{name}</h1>\n            <form onSubmit={(e) => handleAddTodo(e)}>\n                <input name=\"todoInput\" type=\"text\" />\n                <button type=\"submit\">Add Todo</button>\n            </form>\n            <ul>\n            \n                {todos.map((todo,idx) => (\n                    function handleDelete() {\n                        const updated = todos.filter((_,i) => i !== idx);\n                        setTodos(updated);\n                    \n                    <li>\n                        {todo}\n                        <button onClick={() => handleDelete()}>Delete</button>\n                    </li>\n                );\n        )}\n            </ul>\n        </div>\n    );\n}\n\nReactDOM.render(<TodoApp initialTodos={[\"firstTask\"]} />, document.getElementById('container'));\n\n\nПосле основных изменений попросила еще добавить типизацию. Как я сделал по итогу:\n\ninterface Todo {\n    id: number;\n    text: string;\n    completed: boolean\n}\n\n\ninterface TodosProps {\n    initialTodo: Todo[]\n}\n\n\n\nconst TodoApp: React.FC<TodoProps> = ({ initialTodos }) => {\n\n\n    const [todos, setTodos] = useState < Todo[] > (initialTodos);\n    const [value, setValue] = useState < string > ('');\n\n    function handleAddTodo(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        const newTodo = {\n            id: Date.now(),\n            text: value,\n            completed: false\n        }\n        setTodos([...todos, newTodo]);\n        setValue('')\n    }\n\n    function handleDelete(id: number) {\n        const updated = todos.filter((todo) => todo.id !== id);\n        setTodos(updated);\n    }\n\n    useEffect(() => {\n        console.log('Todos updated:', todos);\n    }, [todos, handleAddTodo]);\n\n    return (\n        <div>\n            <h1>{'My Todo App'}</h1>\n            <form onSubmit={(e) => handleAddTodo(e)}>\n                <input value={value} onChange={() => setValue(e.target.value)} name=\"todoInput\" type=\"text\" />\n                <button type=\"submit\">Add Todo</button>\n            </form>\n            <ul>\n                {todos?.map((todo) => (\n                    <li key={todo.id}>\n                        {todo.text}\n                        <button onClick={() => handleDelete(id)}>Delete</button>\n                    </li>\n                );\n        )}\n            </ul>\n        </div>\n    );\n}\n\nReactDOM.render(<TodoApp initialTodos={[{ id: 0, text: 'firstTodo', completed: false }] />, document.getElementById('container'));"
      },
      {
        "timestamp": "2025-06-05 13:15:33",
        "content": "2025-06-05 13:15:33\n Sodnom Tyksheev -> 2071074234:\nКомпания - LegalTech \nВакансия - https://hh.ru/vacancy/120924464?hhtmFrom=negotiation_list\nВопросы: только про опыт \n1 этап 2 алгоритмические задачи\n\n1 задача:\nНаписать функциюm, которая принимает строку и возвращает из нее наиболее повторяющийся символ\n \nМое решение:\n    const charCount = {}\n    let maxCount = 0;\n    let maxChar = '';\n\n    for (const char of str) {\n        charCount[char] = (charCount[char] || 0) + 1;\n\n        if (charCount[ch...",
        "full_content": "2025-06-05 13:15:33\n Sodnom Tyksheev -> 2071074234:\nКомпания - LegalTech \nВакансия - https://hh.ru/vacancy/120924464?hhtmFrom=negotiation_list\nВопросы: только про опыт \n1 этап 2 алгоритмические задачи\n\n1 задача:\nНаписать функциюm, которая принимает строку и возвращает из нее наиболее повторяющийся символ\n \nМое решение:\n    const charCount = {}\n    let maxCount = 0;\n    let maxChar = '';\n\n    for (const char of str) {\n        charCount[char] = (charCount[char] || 0) + 1;\n\n        if (charCount[char] > maxCount) {\n            maxCount = charCount[char]\n            maxChar = char;\n        }\n    }\n    return maxCount > 1 ? maxChar : \"\";\n}\n\n\n2 задача:\nМое решение:\nЗадача: реализовать циклический буфер фиксированного размера.\nУсловия:\nКласс Buffer принимает максимальный размер буфера.\nМетод write(item) добавляет элемент в буфер:\nЕсли буфер не полон, элемент просто добавляется.\nЕсли буфер полон, происходит перезапись самого старого элемента.\nМетод read() читает и удаляет старейший элемент.\nМетод getSize() возвращает текущее количество элементов в буфере.\n\n\nclass Buffer {\n  constructor(max_size) {\n    this.max_size = max_size;\n    this.buffer = new Array(max_size)\n    this.head = 0; \n    this.tail = 0; \n    this.size = 0; \n  }\n\n  write(item) {\n    if (this.size < this.max_size) {\n      this.size++;\n    } else {\n\n      this.head = (this.head + 1) % this.max_size;\n    }\n\n    this.buffer[this.tail] = item;\n    this.tail = (this.tail + 1) % this.max_size;\n  }\n\n  read() {\n    if (this.size === 0) return null; \n\n    const item = this.buffer[this.head];\n    this.head = (this.head + 1) % this.max_size;\n    this.size--;\n    return item;\n  }\n\n  getSize() {\n    return this.size;\n  }\n}"
      }
    ]
  },
  {
    "company": "Evapps",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-02-14 14:53:59",
        "content": "2025-02-14 14:53:59\n Александр Богданов -> 2071074234:\nКомпания EvApps,сам написал на почту компании, в раздел вакансии, задачи один в один как https://t.me/c/2071074234/489/99756 плюс что такое solid и как на погружение обработать обработчик клика, что такое клинап функция когда отрабатывает + что такое git stash",
        "full_content": "2025-02-14 14:53:59\n Александр Богданов -> 2071074234:\nКомпания EvApps,сам написал на почту компании, в раздел вакансии, задачи один в один как https://t.me/c/2071074234/489/99756 плюс что такое solid и как на погружение обработать обработчик клика, что такое клинап функция когда отрабатывает + что такое git stash"
      },
      {
        "timestamp": "2025-02-05 16:06:19",
        "content": "2025-02-05 16:06:19\n Александр Богданов -> 2071074234:\nкомпания EvApps(написал им на саит сам: https://evapps.ru/vacancy/front-end-react-razrabotcik )\nВопросы:\n- почему ушел спрошлого места\n- что ищешь на что внимание обращаешь\n- как ЗП повышали или не повышали\n- как развиваешься\n- что такое Set and Map\n- отличие useCallback vs useMemo\n- раскажи про useEffect()",
        "full_content": "2025-02-05 16:06:19\n Александр Богданов -> 2071074234:\nкомпания EvApps(написал им на саит сам: https://evapps.ru/vacancy/front-end-react-razrabotcik )\nВопросы:\n- почему ушел спрошлого места\n- что ищешь на что внимание обращаешь\n- как ЗП повышали или не повышали\n- как развиваешься\n- что такое Set and Map\n- отличие useCallback vs useMemo\n- раскажи про useEffect()"
      },
      {
        "timestamp": "2025-01-28 13:35:05",
        "content": "2025-01-28 13:35:05\n It L -> 2071074234:\nКомпания: Evapps\nВакансия: на hh нет вакансии, но у них на сайте висит https://evapps.ru/vacancy/front-end-react-razrabotcik\nЗП: 180-200\nЗадачи:\nЧто выведет в консоли:\nconst person = {\n    name: \"John\",\n    age: 30,\n    adress: {\n        street: \"123 Main St\",\n        city: \"Anytown\",\n        state: \"CA\"\n    }\n};\nconst newPerson = Object.assign({}, person);\nnewPerson.adress.city = \"Newtown\";\nconsole.log(person.adress.city);\nconst obj = { a: 1, b: 2 };\ncon...",
        "full_content": "2025-01-28 13:35:05\n It L -> 2071074234:\nКомпания: Evapps\nВакансия: на hh нет вакансии, но у них на сайте висит https://evapps.ru/vacancy/front-end-react-razrabotcik\nЗП: 180-200\nЗадачи:\nЧто выведет в консоли:\nconst person = {\n    name: \"John\",\n    age: 30,\n    adress: {\n        street: \"123 Main St\",\n        city: \"Anytown\",\n        state: \"CA\"\n    }\n};\nconst newPerson = Object.assign({}, person);\nnewPerson.adress.city = \"Newtown\";\nconsole.log(person.adress.city);\nconst obj = { a: 1, b: 2 };\nconst arr = [3, 4, 5];\nconst { a, b } = obj;\nconst [c, ...d] = arr;\nconsole.log(a, b, c, d);\nlet x = 1;\nfunction foo() {\n    console.log(x);\n    let x = 2;\n}\nfoo();\nfunction outer() {\n    let a = 1;\n    return function inner() {\n        a++;\n        console.log(a);\n    }\n}\nlet fun1 = outer();\nfun1();\nfun1();\nfun1();\nlet fun2 = outer();\nfun2();\nsetTimeout(() => console.log('STM 1'), 0\n);\nPromise.resolve().then(() => console.log('STM 2')\n)\nPromise.resolve().then(() => setTimeout(() => console.log('STM 3'),0));\nsetTimeout(() => console.log('STM 4'),0);\nconsole.log('STM 5');\nнаписать функцию:\n//С сервера пришел большой объект,\n// a = { x: 1, y: 'boo', p: 2,...}\n// Пришел второй объект\n// b = { x: true, y: false, p: true }\n// который объясняет какими свойствами из объекта a{...}\n// надо заполнить новый объект c{}\n// const c=createC(a,b)\n// Напишите функцию createC\n// Пример:\nconst a = { f: 1, k: 2, j: 5, o: 8, d: [3, 4, 5] }\nconst b = { f: true, k: false, j: true }\nconst c = createC(a, b) //c={f: 1, j: 5}\n//В объекте b нет \"лишних\" ключей (которые отсутствуют в a)\n\nfunction createC(a, b) {\n\n}\nвопросы что такое замыкание, eventloop\n//Есть базовый компонент, инициализируй в нем state-компонент с дефолтным значением\nconst App = () => {\n    return null;\n}"
      }
    ]
  },
  {
    "company": "Дом.Рф",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-07-17 16:18:14",
        "content": "2025-07-17 16:18:14\n Ivan -> 2071074234:\nКомпания: дом.рф\nЗП: 320\n\n1. Про опыт\n2. Про задачи\n3. Был ли опыт с микрофронтами\n4. Как микрофронты между собой общались (шина событий, контекст в хосте)\n5. Готов ли развиваться и исследовать?\n6. хойстинг var let const function declaration\n7. замыкания\n8. Set Map\n9. Жизненный цикл компонентов Реакт\n10. render Props\n11. оптимизация списков в Реакт. И в целом про оптимизации в Реакт.\nЗадача 1\n\nФункция принимает строку и возвращает длину наибольшей возможн...",
        "full_content": "2025-07-17 16:18:14\n Ivan -> 2071074234:\nКомпания: дом.рф\nЗП: 320\n\n1. Про опыт\n2. Про задачи\n3. Был ли опыт с микрофронтами\n4. Как микрофронты между собой общались (шина событий, контекст в хосте)\n5. Готов ли развиваться и исследовать?\n6. хойстинг var let const function declaration\n7. замыкания\n8. Set Map\n9. Жизненный цикл компонентов Реакт\n10. render Props\n11. оптимизация списков в Реакт. И в целом про оптимизации в Реакт.\nЗадача 1\n\nФункция принимает строку и возвращает длину наибольшей возможной подстроки с уникальными символами\n\n  \nfunction lengthOfLongestSubstring(s) {\n    let maxValue = 0;\n\n    for (let i = 0; i < s.length; i++) {\n        const set = new Set();\n\n        for (let j = i; j < s.length; j++) {\n            if (set.has(s[j])) {\n               break;\n             }\n\n            set.add(s[j]);\n            maxValue = Math.max(maxValue, j - i + 1);\n        }\n    }\n\n    return maxValue;\n}\n\n\n\nЗадача 2\n\n// Я постарался воспроизвести по памяти что именно было в задаче.\n\nconsole.log('1')\n\nsetTimeout(function timeout() {  \n console.log('2');  \n}, 10);\n\nsetTimeout(function timeout() {\n Promise.resolve(3).then(console.log)  \n console.log('4');  \n}, 0);\n\nsetTimeout(function timeout() {  \n console.log('5');  \n}, 0);\n\nconsole.log('6')\n\nlet p = new Promise(function(resolve, reject) {  \n console.log('7');  \n reject(8);\n console.log('9')\n}).then(() => console.log('10'))\n .catch(() => console.log('11'))\n .then(() => console.log('12'))\n .catch(() => console.log('13'))\n .then(() => console.log('14'))\n .catch(() => console.log('15'))\n .finally(() => console.log('16'))\n\nconsole.log('17')\n\nЗадача 3\n\nНе помню формулировку. Но нужно было написать хук useFetch который инкапсулирует в себе логику с отправкой запросов и хранит состояние.\nconst useFetch = (query) => {\n  const [data, setData] = useState([]);\n  const [isLoad, setIsLoad] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    let loading = true;\n\n    async function fetchData() {\n      try {\n        setData([]);\n        setIsLoad(true);\n        const response = await fetch(\n          \"https://jsonplaceholder.typicode.com/todos\"\n        );\n        if (!response.ok) throw new Error(\"Ошибка сети\");\n        const data_ = await response.json();\n        setData(data_);\n      } catch {\n        setError(\"Что-то пошло не так...\");\n      } finally {\n        setIsLoad(false);\n      }\n    }\n\n    fetchData();\n\n    return () => {\n      loading = true;\n    };\n  }, [query]);\n\n  return { data, isLoad, error };\n};\n\nexport default function App() {\n  const [query, setQuery] = useState(\"\");\n\n  const { data, isLoad, error } = useFetch(query);\n\n  return <div>Не помню что в разметке, но там ничего не нужно менять</div>;\n}\n\n\nЗадача 4\n\nНа CSS. Блок родитель и несколько вложенных. Нужно чтоб они растягивались на всю длину и сжимались до 100пх, если не входят то переносятся.\nconst style = {\n display: 'grid',\n gridTemplateColumns: 'repeat(auto-fill, minmax(100px, 1fr))',\n gap: 'grid',\n}"
      },
      {
        "timestamp": "2024-11-17 16:26:26",
        "content": "2024-11-17 16:26:26\n аыеъа -> 2071074234:\nДОМ.РФ техсобес\nЗП: 250к\nВаканасия: https://hh.ru/vacancy/108532548\nВопросы:\nПро этапы рендеринга браузера и в каких очередях исполняется requestAnimationFrame и requestIdleCallback\nРассказать про прототипы и как их получить\nЧто будет если вызвать метод которого не существует (ошибка is not a function)\nКаким способом на можно на обновление значения внутри объекта выводить его в консоль (геттеры и сеттеры, прокси)\nРассказать про промис\n\n\nЗадачки:\nНаписать...",
        "full_content": "2024-11-17 16:26:26\n аыеъа -> 2071074234:\nДОМ.РФ техсобес\nЗП: 250к\nВаканасия: https://hh.ru/vacancy/108532548\nВопросы:\nПро этапы рендеринга браузера и в каких очередях исполняется requestAnimationFrame и requestIdleCallback\nРассказать про прототипы и как их получить\nЧто будет если вызвать метод которого не существует (ошибка is not a function)\nКаким способом на можно на обновление значения внутри объекта выводить его в консоль (геттеры и сеттеры, прокси)\nРассказать про промис\n\n\nЗадачки:\nНаписать свой delay\n\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n// Пример использования:\nasync function example() {\n    console.log('Начало');\n    await delay(2000); // Приостановить выполнение на 2 секунды\n    console.log('Прошло 2 секунды');\n}\n\nfunction twoSum(nums, target) {\n    const numMap = new Map();\n\n    for (let i = 0; i < nums.length; i++) {\n        const complement = target - nums[i];\n\n        if (numMap.has(complement)) {\n            return [numMap.get(complement), i];\n        }\n        numMap.set(nums[i], i);\n    }\n    return null; // Если не найдено пары, возвращаем null\n}\n// Типизировать map\nconst map = <T, U>(arr: T[], cb: (value: T, index: number, array: T[]) => U): U[] => {}\nfunction promiseAll(promises) {\n    return new Promise((resolve, reject) => {\n        const results = [];\n        let completedCount = 0;\n\n        promises.forEach((promise, index) => {\n            Promise.resolve(promise)\n                .then(result => {\n                    results[index] = result;\n                    completedCount++;\n\n                    if (completedCount === promises.length) {\n                        resolve(results);\n                    }\n                })\n                .catch(error => {\n                    reject(error);\n                });\n        });\n\n        if (promises.length === 0) {\n            resolve(results);\n        }\n    });\n}\n\n// Пример использования:\nconst promise1 = Promise.resolve(1);\nconst promise2 = new Promise((resolve) => setTimeout(() => resolve(2), 1000\n// 1. Реализовать компоненет MainPage\n\n// 2. Добавить input со стейтом и вывести span значение\n\n// 3. Заиспользовать компонент UsersList\n\n// После решения этих 3х пунктов спросил какие я вижу проблемы в коде, я сказал что нужно декомпозировать и вынести локигу Input, он попросил реализовать useInput\n\nexport const useInput = (initialValue = '') => {\n    const [value, setValue] = useState(initialValue)\n    \n    const handleInput = (e) => {\n        setInputValue(e.target.value)\n    }\n    \n    return {\n        value,\n        onChange: handleInput\n    }\n}\n\nconst MainPage = () => {\n    const inputProps = useInput()\n    \n    return <div> \n        <input {...inputProps} type='text'/>\n        <span> {inputProps.value} </span>\n        <UsersList />\n    </div>\n}\n\nconst UsersList = memo (() => {\n  ...\n  return (\n    ....\n  )\n})"
      },
      {
        "timestamp": "2024-09-06 07:23:06",
        "content": "2024-09-06 07:23:06\n Данил Володин -> 2071074234:\nHR - банк ДОМ.РФ\n- Сколько с реактом работаете\n- Был ли опыт с ангуляром\n- Как себя оценишь по грейду\n- Почему решили смотреть новое место работы\n- Почему ушли с предпоследнего места раоты (5 месяцев там отработал)\n- Сколько денег хочешь\n- Где проживаете\n- На руках ли военник\n\nРассказала про следующие этапы:\nЛАйвкодинг + вопросы\nЗнакомство\n\nЕсть ли вопросы не спросили, в целом собес был очень сухой стандартный\n\nПопросил 370к с обратной связью не ...",
        "full_content": "2024-09-06 07:23:06\n Данил Володин -> 2071074234:\nHR - банк ДОМ.РФ\n- Сколько с реактом работаете\n- Был ли опыт с ангуляром\n- Как себя оценишь по грейду\n- Почему решили смотреть новое место работы\n- Почему ушли с предпоследнего места раоты (5 месяцев там отработал)\n- Сколько денег хочешь\n- Где проживаете\n- На руках ли военник\n\nРассказала про следующие этапы:\nЛАйвкодинг + вопросы\nЗнакомство\n\nЕсть ли вопросы не спросили, в целом собес был очень сухой стандартный\n\nПопросил 370к с обратной связью не вернулись)"
      }
    ]
  },
  {
    "company": "Сравни",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-07-16 13:17:39",
        "content": "2025-07-16 13:17:39\n Vitalii -> 2071074234:\nКлауд Ком\nЗП: 250к\n\nРасскажи про свой опыт и проекты\nКак работает EventLoop?\nЧто такое промис, для чего нужен, также расскажи про async/await?\nЧто такое контекст, когда он теряется?\nВ чем отличие function declaration от стрелочных функций?\nТайпскрипт, расскажи про ютилити тайпы какие знаешь?\nЧто нам дает Реакт?\nПочему Реакт это библиотека, а Ангуляр и Вью фреймворки?\nЧто такое Virtual DOM, для чего нужен?\nЧто такое хуки, какие у них правила есть?\nЧем u...",
        "full_content": "2025-07-16 13:17:39\n Vitalii -> 2071074234:\nКлауд Ком\nЗП: 250к\n\nРасскажи про свой опыт и проекты\nКак работает EventLoop?\nЧто такое промис, для чего нужен, также расскажи про async/await?\nЧто такое контекст, когда он теряется?\nВ чем отличие function declaration от стрелочных функций?\nТайпскрипт, расскажи про ютилити тайпы какие знаешь?\nЧто нам дает Реакт?\nПочему Реакт это библиотека, а Ангуляр и Вью фреймворки?\nЧто такое Virtual DOM, для чего нужен?\nЧто такое хуки, какие у них правила есть?\nЧем useEffect отличается от useLayoutEffect?\nКакими хуками пользовался?\nКакие кастомные хуки писал?\nКакими UI библиотеками пользовался?\nС какими стейт-менеджарми работал?\nЗнаком ли с Ангуляром?\nЧто такое RxJs и что он нам позволяет делать?\nСравни RxJs с промисами"
      },
      {
        "timestamp": "2024-07-16 16:35:48",
        "content": "2024-07-16 16:35:48\n Ramis Mubarakov -> 2071074234:\n— Компания: Сравни, HR-скрининг\n— Ссылка на вакансию: сами написали, https://hh.ru/vacancy/97044312\n— Озвученная мной ЗП: 250k\n— Вопросы:\n1) git pull vs git push\n2) git merge vs git rebase\n3) FSD\n4) Какие ограничения есть у get-запроса?\n5) Generic в Typescript\n6) Какие utility-types знаешь?\n7) Как проверить переменную на NaN?\n8) Как из строки \"1.1a\" достать число?\n9) Зачем нужен useEffect?",
        "full_content": "2024-07-16 16:35:48\n Ramis Mubarakov -> 2071074234:\n— Компания: Сравни, HR-скрининг\n— Ссылка на вакансию: сами написали, https://hh.ru/vacancy/97044312\n— Озвученная мной ЗП: 250k\n— Вопросы:\n1) git pull vs git push\n2) git merge vs git rebase\n3) FSD\n4) Какие ограничения есть у get-запроса?\n5) Generic в Typescript\n6) Какие utility-types знаешь?\n7) Как проверить переменную на NaN?\n8) Как из строки \"1.1a\" достать число?\n9) Зачем нужен useEffect?"
      },
      {
        "timestamp": "2024-05-27 07:15:24",
        "content": "2024-05-27 07:15:24\n Александр Птицын -> 2071074234:\n24.05 (пятница) тех. собес в #сравни\n- время: 16:00\n- вакансия: https://spb.hh.ru/vacancy/97981116?hhtmFrom=employer_vacancies\n- важность: важно\n- ЗП: сказал рассматриваю от 350к на руки\n- стек: React\n- успех собеса: ✅ пригласили на 2й этап\n\nссылка на задачи: https://trycode.pw/c/TXV15\n\nзапись созвона - https://youtu.be/BTUMYE9TJZE",
        "full_content": "2024-05-27 07:15:24\n Александр Птицын -> 2071074234:\n24.05 (пятница) тех. собес в #сравни\n- время: 16:00\n- вакансия: https://spb.hh.ru/vacancy/97981116?hhtmFrom=employer_vacancies\n- важность: важно\n- ЗП: сказал рассматриваю от 350к на руки\n- стек: React\n- успех собеса: ✅ пригласили на 2й этап\n\nссылка на задачи: https://trycode.pw/c/TXV15\n\nзапись созвона - https://youtu.be/BTUMYE9TJZE"
      }
    ]
  },
  {
    "company": "Radium Finance",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-12-17 16:38:15",
        "content": "2024-12-17 16:38:15\n Egor -> 2071074234:\nКомпания: Radium Finance\nСсылка на вакансию: https://hh.ru/vacancy/112467011?hhtmFrom=employer_vacancies\nЗп: от 330\nЗапись: https://youtu.be/Qo-xzuw6_7Y",
        "full_content": "2024-12-17 16:38:15\n Egor -> 2071074234:\nКомпания: Radium Finance\nСсылка на вакансию: https://hh.ru/vacancy/112467011?hhtmFrom=employer_vacancies\nЗп: от 330\nЗапись: https://youtu.be/Qo-xzuw6_7Y"
      },
      {
        "timestamp": "2024-09-06 11:45:21",
        "content": "2024-09-06 11:45:21\n Александр Птицын -> 2071074234:\nRadium Finance\n- вакансия: https://t.me/c/2071074234/616/60648\n- зп: не обсуждали\n- вопросы и задачи в видео",
        "full_content": "2024-09-06 11:45:21\n Александр Птицын -> 2071074234:\nRadium Finance\n- вакансия: https://t.me/c/2071074234/616/60648\n- зп: не обсуждали\n- вопросы и задачи в видео"
      },
      {
        "timestamp": "2024-08-11 17:23:38",
        "content": "2024-08-11 17:23:38\n Руслан -> 2071074234:\nRadium Finance\n— зп: от 250к\n— вакансия: https://hh.ru/vacancy/104770233\n— задачи:\n1\nfor (var i = []; i.length < 3; i.push(2)) {\n  setTimeout(() => {\n    console.log(i);\n  }, i.length * 1000);\n}\n// сделать так, чтобы выводилось [], [2], [2, 2]\n2. На реакт компонент, в котором задается обработчик события на ресайз окна. Там необходимо было написать отписку от события.\n3. на удаление dangerouslySetInnerHTML- xss атаки\n4. на удаление из функции строк кода,...",
        "full_content": "2024-08-11 17:23:38\n Руслан -> 2071074234:\nRadium Finance\n— зп: от 250к\n— вакансия: https://hh.ru/vacancy/104770233\n— задачи:\n1\nfor (var i = []; i.length < 3; i.push(2)) {\n  setTimeout(() => {\n    console.log(i);\n  }, i.length * 1000);\n}\n// сделать так, чтобы выводилось [], [2], [2, 2]\n2. На реакт компонент, в котором задается обработчик события на ресайз окна. Там необходимо было написать отписку от события.\n3. на удаление dangerouslySetInnerHTML- xss атаки\n4. на удаление из функции строк кода, которые делают ее не чистой\n5. На то, как будешь себя вести когда прийдет задача реализовать компонент со скриншота и на какой срок выполнения ее оценишь и почему. На нем список чатов как  в телеге.\nВопросы:\n1. про плюсы и минусы fsd"
      }
    ]
  },
  {
    "company": "Домклик",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-07-04 15:44:56",
        "content": "2025-07-04 15:44:56\n Антон -> 2071074234:\nДОМКЛИК\nЗП 250\n\nИдёт строго по резюме и спрашивает все вопросы по нему\n\n1) SSE vs websocket\n2) lazy, bundle analyzer, svg, woff2, оптимизация\n3) vite vs webpack. \n4) Работает ли vite в старых браузерах\n5) babel vs tsloader, зачем использовал ts-fork-checker\n6) eslint vs prettier\n7) Как проверяли pixel perfect\n8) Ощущение от tailwind\n9) С какими препроцессами работал?\n10) Расскажи про css modules, их особенности и в чём их преимущество\n11) Какие плюсы у t...",
        "full_content": "2025-07-04 15:44:56\n Антон -> 2071074234:\nДОМКЛИК\nЗП 250\n\nИдёт строго по резюме и спрашивает все вопросы по нему\n\n1) SSE vs websocket\n2) lazy, bundle analyzer, svg, woff2, оптимизация\n3) vite vs webpack. \n4) Работает ли vite в старых браузерах\n5) babel vs tsloader, зачем использовал ts-fork-checker\n6) eslint vs prettier\n7) Как проверяли pixel perfect\n8) Ощущение от tailwind\n9) С какими препроцессами работал?\n10) Расскажи про css modules, их особенности и в чём их преимущество\n11) Какие плюсы у tailwind\n12) Как выглядит tailwind после сборки, его оптимизации\n13) Какие тесты писал?\n14) Если нужно написать быстро большой тест за полчаса, как поступишь?\n15) E2E тесты\n16) Какую версию node.js использовали на проекте\n17) Отличие npm i от npm ci\n18) Как найти уязвимости в пакетах и устаревшие пакеты(npm audit, npm outdated)\n19) Для чего нужна дедупликация зависимостей\n20) Как сделать дедупликацию зависимостей\n21) Что такое nginx, как работает, какие есть настройки\n22) Можно ли делать вложенные if и по условиям отдавать статику в nginx\n23) Для чего нужен location в nginx\n24)  Для чего нужна мультистейдж сборка\n25) Как проверить размер образа сборки"
      },
      {
        "timestamp": "2024-07-27 18:30:05",
        "content": "2024-07-27 18:30:05\n Руслан -> 2071074234:\nДомклик\n— зп: 280к\n— вакансия: https://orenburg.hh.ru/vacancy/104071094\n— Вопросы: \n1. как работает метод map, мутирует ли исходный массив\n2. как работает метод filter, мутирует ли исходный массив\n3. Фазы события подробно про всплытие, погружение\n4. отличие currentTarget от target\n5. async await для чего, что возвращает async функция\n6.  что за флаги i, g в регулярках\n7. что такое /d в регулярках\n8. методы test, match отличия\n9. метод replace подробно\n1...",
        "full_content": "2024-07-27 18:30:05\n Руслан -> 2071074234:\nДомклик\n— зп: 280к\n— вакансия: https://orenburg.hh.ru/vacancy/104071094\n— Вопросы: \n1. как работает метод map, мутирует ли исходный массив\n2. как работает метод filter, мутирует ли исходный массив\n3. Фазы события подробно про всплытие, погружение\n4. отличие currentTarget от target\n5. async await для чего, что возвращает async функция\n6.  что за флаги i, g в регулярках\n7. что такое /d в регулярках\n8. методы test, match отличия\n9. метод replace подробно\n10. что такое блочная модель\n11. про особенности box-sizing^ border-box\n12. вес селекторов\n13. про свойство position и его значения\n14. про псевдоэлементы\n15. псевдоклассы поробно\n16. через какие свойства работаем с маркерами списков\n17. как поменять цвет маркера списка\n18. свойство transition и из чего состоит его значение\n19. как делать анимации через keyframes и как их применять их к элементам\n20. Чем плох transition: all\n21. свойство will-change подробно, что будет если добавить его для всех элементов\n22. grid-template-columns \n23. repeat в гридах\n24. как задать промежутки между колонками или строками\n25. grid-template-areas\n26. как отловить прогрузку html, отличие domcontentloaded от load\n27. как понять, что страница все еще грузится(document.readystate)\n28. localstorage vs cookie\n29. спросил про preload атрибуты\n30. про prefetch? preconnect\n31. дефолтные скрипты vs async vs defer vs module\n32. фрагменты в реакт, можно ли им проставить атрибут key\n33. что будет, если задать списку один и тот же key\n34. что такое useRef, useMemo, memo\n35. react lazy для чего\n36. что такое redux, single source of true в его контексте\nЗадачи:\n1. Функция на вход принимает число нужно из цифр этого числа создать новое число с максимально возможным значением\nfunction descendingOrder(n) {\n    return parseInt(String(n).split('').sort((a, b) => b - a).join(''), 10);\n}\n2. \n/*\nПреобразуйте массив таким образом, чтобы на выходе получилась строка с диапазоном чисел.\nДиапазон начинается с трех и более идущих подряд чисел, все остальные числа выводятся отдельно.\n*/\n \nfunction rangeExtraction(list) {\n  // твой код здесь\n}\n \nconst range = [-10, -9, -8, -7, -3, -2, -1, 0, 1, 3, 4, 5, 14, 15, 17, 18, 19, 20];\n \nconsole.info(rangeExtraction(range) === \"-10--7,-3-1,3-5,14,15,17-20\");\n\nмое решение\nfunction rangeExtraction(list) {\n  let start = list[0];\n  let end = start;\n  let result = [];\n  let itemsArr = [start];\n  for (let i = 1; i < list.length; i++) {\n    const currentNum = list[i];\n    if (Math.abs(Math.abs(end) - Math.abs(currentNum)) === 1) {\n      itemsArr.push(currentNum);\n      end = currentNum;\n    } else {\n      if (itemsArr.length >= 3) {\n        result.push(`${itemsArr[0]}-${itemsArr.at(-1)}`);\n      } else {\n        result.push(itemsArr);\n      }\n      start = currentNum;\n      end = start;\n      itemsArr = [currentNum];\n    }\n  }\n  if (itemsArr.length >= 3) {\n    result.push(`${itemsArr[0]}-${itemsArr.at(-1)}`);\n  } else {\n    result.push(itemsArr);\n  }\n  return result.flat().join();\n}"
      },
      {
        "timestamp": "2024-03-20 18:05:14",
        "content": "2024-03-20 18:05:14\n Данил -> 2071074234:\n- Название компании: ДомКлик\n- ссылка: hr сам написал\n- зп: просил 250-280\n- задачи: теория и задача\n- вакансия: https://hh.ru/vacancy/91538070\n\nвопросы и задача:\n1. Расскажи про map\n2. Расскажи про reduce\n3. В чем разница между == и ===\n4. В чем различие между let и const\n5. Если я объявлюсь массив через const смогу ли я что-то изменить в нем ? \n6. Рассказать про стрелочные функции\n7. Как можно имитировать поведение arguments в стрелочных фукнциях ?\n8. ...",
        "full_content": "2024-03-20 18:05:14\n Данил -> 2071074234:\n- Название компании: ДомКлик\n- ссылка: hr сам написал\n- зп: просил 250-280\n- задачи: теория и задача\n- вакансия: https://hh.ru/vacancy/91538070\n\nвопросы и задача:\n1. Расскажи про map\n2. Расскажи про reduce\n3. В чем разница между == и ===\n4. В чем различие между let и const\n5. Если я объявлюсь массив через const смогу ли я что-то изменить в нем ? \n6. Рассказать про стрелочные функции\n7. Как можно имитировать поведение arguments в стрелочных фукнциях ?\n8. Что будет, если попробовать использовать стрелочную функцию как конструктор ? \n9. Что такок куки и что с их помощью можно делать ? Приведи пример использования, если работал с ними. Какие есть опции в куках, кроме httpOnly\n10. Расскажи что знаешь про localStorage\n11. Расскажи как работает всплытие события в браузере\n12. Всегда ли при погружении срабатывают обработчики ? \n13. Устно решить задачку. Представь, что есть страница и она занимает 5 вьюпортов. В центре страницы есть нужный нам элемент. В какой-то момент нам нужно понять, что мы доскролили до этого элемента. Как это можно сделать ? \n14. Что такое intersection observer ?\n15. Расскажи что знаешь о сервис воркерах\n16. Расскажи как ты понимаешь что такое interface ? typescript\n17. Что будет, если объявить два интерфейса с одним и тем же именем ? \n18. Какие базовые типы в ts ты знаешь ? \n19. В чем разница между unknown и any ?\n20. Что такое тип never ?\n21. В чем разница между enum и const enum ?\n22. Что такое CEO ?\n23. Какие приемы по оптимизации CEO ты знаешь ? \n24. В чем разница между display: block, inline-block и inline ?\n25. Назови парочку семантичных строчных и блочных тэгов, кроме div и span\n26. В чем разница между position absolute и fixed ?\n27. Расскажи про position sticky \n28. Расскажи что знаешь про flexbox\n29. Что такое препроцессоры и для чего они нужны \n30. Расскажи что ты знаешь про анимации в css\n31. Расскажи про порядок загрузки и выполнения скриптов: как грузится просто script, как с атрибутом async и defer\n32. Есть несколько идущих подряд скриптов с атрибутом async. Порядок их загрузки и выполнения будет соблюден ? А с defer\n33. Что такое регулярные выражения ? Примеры использования ?\n34. Что такое kiss и dry ? \n35. С редаксом используются библиотеки для работы с сайд эффектами. Какую ответственность они на себя берут ? \n36. Расскажи про useState. В функцию меняющую состояние можно передать callback. Для чего это нужно ?\n37. Для чего нужен и как работает useEffect \n38. Расскажи про useMemo и useCallback\n39. Когда стоит использовать useCallback, а когда нет ? \n40. Зачем нужен ключ в реакте и как он должен формироваться ? \n41. Как можно минимизировать кол-во merge конфликтов ? git\n42. Расскажи про git хуки \n43. Расскажи что знаешь про методологии git flow и github flow\n44. Перечисли http коды и что они обозначают. Можно по группам\n45. В чем разница между http и https ?\n46. В чем отличия http 1.1 и 2 ?\n47. Что такое cors ? Приведи пример. Что можно запрещать с помощью cors ?\n48. Зачем нужно код-ревью и нужно ли оно вообще ?\n49. Что такое ci pipeline ?\n50. В чем разница между выполнением кода на сервере и на клиенте ? \n51. Как будет выглядеть проверка на window на клиенте ? \n52. Замечал ли ты как выглядит утечка памяти на графиках ?\n53. Расскажи про xss\n54. В чем разница между npm i и npm ci ?\n55. Зачем нужна команда npm i ?\n56. Зачем нужна команда npm ddp ?\n57. В чем разница между dependencies и dev dependencies ?\n58. Для чего нужно поле main в package.json ?\n59. Для чего нужно поле side effects в package.json ?\n60. Зачем нужно минифицировать статические файлы ?\n61. Что такое chunk ?\n62. Зачем разбивать на chunk'и ?\n63. Что такое terser ? webpack\n64. Что такое транспайлинг и для чего он нужен ? \n65. Базовые подходы по ускорению сборки"
      }
    ]
  },
  {
    "company": "Лемма",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-09-29 21:39:23",
        "content": "2024-09-29 21:39:23\n Бахтияр -> 2071074234:\nКомпания: Лемма  \nЗП: от 300К  \nВакансия: сам написал в ТГ https://t.me/c/2071074234/616/66962\nВопросы:\n1. Расскажи о себе и о своем опыте.\n2. Что такое npm? Какие аналоги знаешь?\n3. В чем отличие npm ci и npm i?\n4. Для чего нужен Webpack? Какие аналоги знаешь?\n5. Какая у вас архитектура общения с бэкендом на проекте?\n6. Как у вас на проекте была реализована авторизация?\n7. Что такое куки?\n8. Что такое JWT?\n9. Для чего нужен React?\n10. Что такое Virtua...",
        "full_content": "2024-09-29 21:39:23\n Бахтияр -> 2071074234:\nКомпания: Лемма  \nЗП: от 300К  \nВакансия: сам написал в ТГ https://t.me/c/2071074234/616/66962\nВопросы:\n1. Расскажи о себе и о своем опыте.\n2. Что такое npm? Какие аналоги знаешь?\n3. В чем отличие npm ci и npm i?\n4. Для чего нужен Webpack? Какие аналоги знаешь?\n5. Какая у вас архитектура общения с бэкендом на проекте?\n6. Как у вас на проекте была реализована авторизация?\n7. Что такое куки?\n8. Что такое JWT?\n9. Для чего нужен React?\n10. Что такое Virtual DOM?\n11. Зачем нужны state-менеджеры?\n12. Расскажи про Redux.\n13. Основные сущности Redux.\n14. В чем разница между классовыми и функциональными компонентами?\n15. Как работает useEffect?\n16. В чем плюсы иммутабельности Redux?\n17. Какой паттерн реализует Redux?\n18. Задача :\n\nconst data = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"]; \n\n// Идем с конца, чтобы удаление не нарушало индексы\nconst filteredData = data.filter((item, index) => index % 2 === 1);\n\nconsole.log(filteredData); // [\"B\", \"D\", \"F\", \"H\", \"J\"]"
      },
      {
        "timestamp": "2024-03-27 17:05:29",
        "content": "2024-03-27 17:05:29\n Vitalya Bedik -> 2071074234:\n— Название компании: Лемма\n— Ссылка на вакансию: https://t.me/fordev/46992\n— ЗП: попросил от 305к на руки\n— Задачи: Немного теории + про опыт + сам проект + задачи\n— Записи на ютуб: https://youtu.be/1JJHiovjYD0?si=05T0gZja9k8vA8-z\n— Успех собеса:  ❓Pending\n— Фидбек о собесе: до 3 апреля должен быть фидбек\n\n/**\n * 1. Дано положительное число millis, напишите асинхонную функцию, \n * которая засыпает на millis миллисекунд. Эта функция должна вернуть...",
        "full_content": "2024-03-27 17:05:29\n Vitalya Bedik -> 2071074234:\n— Название компании: Лемма\n— Ссылка на вакансию: https://t.me/fordev/46992\n— ЗП: попросил от 305к на руки\n— Задачи: Немного теории + про опыт + сам проект + задачи\n— Записи на ютуб: https://youtu.be/1JJHiovjYD0?si=05T0gZja9k8vA8-z\n— Успех собеса:  ❓Pending\n— Фидбек о собесе: до 3 апреля должен быть фидбек\n\n/**\n * 1. Дано положительное число millis, напишите асинхонную функцию, \n * которая засыпает на millis миллисекунд. Эта функция должна вернуть количество миллисекунд, на которое заснула\n */\n/**\n * @param {number} millis\n * @return {Promise}\n */\n async function sleep(millis) {\n \n }\n\n// 2. \nconst data = [\"A\", \"B\", \"C \", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"]; \n\n// //удалить из массива все чётные элементы по индексу (без создания нового) - мутируя существующий\n\n\nconsole.log(data)\n\n/**\n * 3. Дан массив целых чисел nums и целое число target, верните индексы этих двух чисел так, чтобы их сумма равнялась target.\nСчитаем, что в массиве только одна пара чисел, которые в сумме дают target\nВы можете возвращать ответы в любом порядке.\nconst nums = [0,1,2,5,3]; 4\n[1, 4] - индексы\n\nГраничные значения:\n2 <= nums.length <= 10^4\n-10^9 <= nums[i] <= 10^9\n-10^9 <= target <= 10^9\nТолько один правильный ответ существует.\n\n */\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\n\n\nconst nums = [0,1,8,5,3]; \nconst target = 4;\n\nvar twoSum = function(nums, target) {\n\n};\n\nconst res = twoSum(nums, target)\n\nconsole.log(res);"
      },
      {
        "timestamp": "2024-03-27 16:44:57",
        "content": "2024-03-27 16:44:57\n Kirill N -> 2071074234:\nДополнение с 11.03 - 27.03\nКомпания: Minevrasoft 11.03 \nhttps://youtu.be/c2TDgGjVxcQ \n \nКомпания: про Айти ресурс от 12.03 \nhttps://youtu.be/tBrVrALlflE \n \nКомпания: КиберЛаб 12.03 \nhttps://youtu.be/Ayov7AAZ9zA \nКомпания: 16.03 \nhttps://youtu.be/g8awopYcbh4   \n \nКомпания: IT ONE 18 03 \nhttps://youtu.be/opoqwpzVRVo \n \nКомпания: Эвотека 19 03 \nhttps://youtu.be/pq64Y2e0-CQ \n \nКомпания: BAUM от 20 03 \nhttps://youtu.be/YR2G2tRzgJo \n \nКомпания: Сбер Техноло...",
        "full_content": "2024-03-27 16:44:57\n Kirill N -> 2071074234:\nДополнение с 11.03 - 27.03\nКомпания: Minevrasoft 11.03 \nhttps://youtu.be/c2TDgGjVxcQ \n \nКомпания: про Айти ресурс от 12.03 \nhttps://youtu.be/tBrVrALlflE \n \nКомпания: КиберЛаб 12.03 \nhttps://youtu.be/Ayov7AAZ9zA \nКомпания: 16.03 \nhttps://youtu.be/g8awopYcbh4   \n \nКомпания: IT ONE 18 03 \nhttps://youtu.be/opoqwpzVRVo \n \nКомпания: Эвотека 19 03 \nhttps://youtu.be/pq64Y2e0-CQ \n \nКомпания: BAUM от 20 03 \nhttps://youtu.be/YR2G2tRzgJo \n \nКомпания: Сбер Технологии 22 03 \nhttps://youtu.be/dm34hydCIIA \n \nКомпания: KTS 22 03 \nhttps://youtu.be/Nt177GK9LAE \n \nКомпания: KTS 27 03 \nhttps://youtu.be/QDi0AkDwwgw \n \nКомпания: Лемма 27 03 \nhttps://youtu.be/grfpac_XgvA"
      }
    ]
  },
