  {
    "company": "Райффайзен",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-04-03 11:57:23",
        "content": "2025-04-03 11:57:23\n Максим Соломыкин -> 2071074234:\nКомпания - Райффайзен\nВакансия - https://career.raiffeisen.ru/vacancy/26628\nЗП - от 250\n\nВопросы:\n- семантика?\n- как браузер рисует страницу ?\n- архитектура?\n- reset vs normalize?\n- что такое реакт?\n- useEffect vs useLayoutEffect?\n- redux, концепции?\n- редьюсер?\n- экшн в редакс, асинх. экшны?\n- мидлвары?\n- useCallback и useMemo?\n- HOC memo\n- useRef\n\nЗадачи:\n1. Плюс добавить типизацию\nconsole.clear()\n\nclass PaginationHelper {\n  constructor(coll...",
        "full_content": "2025-04-03 11:57:23\n Максим Соломыкин -> 2071074234:\nКомпания - Райффайзен\nВакансия - https://career.raiffeisen.ru/vacancy/26628\nЗП - от 250\n\nВопросы:\n- семантика?\n- как браузер рисует страницу ?\n- архитектура?\n- reset vs normalize?\n- что такое реакт?\n- useEffect vs useLayoutEffect?\n- redux, концепции?\n- редьюсер?\n- экшн в редакс, асинх. экшны?\n- мидлвары?\n- useCallback и useMemo?\n- HOC memo\n- useRef\n\nЗадачи:\n1. Плюс добавить типизацию\nconsole.clear()\n\nclass PaginationHelper {\n  constructor(collection, itemsPerPage) {\n    // The constructor takes in an array of items and a integer indicating how many\n    // items fit within a single page\n  }\n\n  itemCount() {\n    // returns the number of items within the entire collection\n  }\n\n  pageCount() {\n    // returns the number of pages\n  }\n\n  pageItemCount(pageIndex) {\n    // returns the number of items on the current page. page_index is zero based.\n    // this method should return -1 for pageIndex values that are out of range\n  }\n\n  pageIndex(itemIndex) {\n    // determines what page an item is on. Zero based indexes\n    // this method should return -1 for itemIndex values that are out of range\n  }\n}\n\nconst collection = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\nconst helper = new PaginationHelper(collection, 10)\n\n// console.log(helper.itemCount() --- 24)\n// console.log(helper.pageCount() = 3)\n// console.log(helper.pageItemCount(1) --- 10)\n// console.log(helper.pageItemCount(2) === 4)\n// console.log(helper.pageItemCount(3) === -1)\n\n2.\ninterface User {\n}\n\ninterface Admin {\n}\n\nexport type Person\n\nexport const persons = [\n    {\n        name: 'Max Mustermann',\n        age: 25,\n        occupation: 'Chimney sweep'\n    },\n    {\n        name: 'Jane Doe',\n        age: 32,\n        role: 'Administrator'\n    },\n    {\n        name: 'Kate Müller',\n        age: 23,\n        occupation: 'Astronaut'\n    },\n    {\n        name: 'Bruce Willis',\n        age: 64,\n        role: 'World saver'\n    }\n];\n\nexport function logPerson(person) {\n    let additionalInformation;\n    if (person.role) {\n        additionalInformation = person.role;\n    } else {\n        additionalInformation = person.occupation;\n    }\n    console.log(` - ${person.name}, ${person.age}, ${additionalInformation}`);\nНужно типизировать \n}\n\n\n3. Переписать с классов на функциональные компоненты\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst list = [1, 2, 3, 4, 5]\n\nclass Clock extends React.Component {\n        this.state = {\n            date: new Date(),\n\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    tick() {\n            this.state.date = new Date()\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Hello, world!</h1>\n                <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n            </div>\n        );\n    }\n}\n\nclass ListRender extends React.Component {\n    render() {\n        return (\n            <ol>\n                {list.map(item => (<li>{item}</li>))}\n            </ol>\n        )\n    }\n}\n\nconst App = () => <Clock /><ListRender />;\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n\n4. Стилизовать\n/* - Выбрать id header */\n/* - Выбрать все p с классом first */\n/* - Выбрать элемент с текстом \"p2\" */\n/* - Выбрать последний h2 в блоке с классом main? */\n\n<div>\n    <h1 id=\"header\">CSS</h1>\n    <h2>Selectors</h2>\n    <p>Description</p>\n    <div class=\"main\">\n        <h2>h2_1</h2>\n        <p class=\"first\">p1</p>\n        <p class=\"first second\">p2</p>\n        <p class=\"first third\">p3</p>\n        <h2>h2_2</h2>\n        <p class=\"second fourth\">p4</p>\n    </div>\n</div>"
      },
      {
        "timestamp": "2024-10-10 14:54:17",
        "content": "2024-10-10 14:54:17\n Dispersioned -> 2071074234:\nКомпания: Райффайзен банк\nВакансия: по рефералке\nЗП: >320net\nУспех: позвали на финалку ✅\nВопросы: \nПо опыты работы по последнему место\nКак дедуплицировать повторяющиеся библиотеки в бандле в микрофронтах  \nРаботал ли с styled components\nПочему не стал бы тащить redux в проект? (видимо какая-то боль в компании, стек valtio, rxjs)\nEvent Loop, как взаимодействует с WebApi, как заблочить поток микро/макротасками\nCookies, как работают, как получить и у...",
        "full_content": "2024-10-10 14:54:17\n Dispersioned -> 2071074234:\nКомпания: Райффайзен банк\nВакансия: по рефералке\nЗП: >320net\nУспех: позвали на финалку ✅\nВопросы: \nПо опыты работы по последнему место\nКак дедуплицировать повторяющиеся библиотеки в бандле в микрофронтах  \nРаботал ли с styled components\nПочему не стал бы тащить redux в проект? (видимо какая-то боль в компании, стек valtio, rxjs)\nEvent Loop, как взаимодействует с WebApi, как заблочить поток микро/макротасками\nCookies, как работают, как получить и установить, httpOnly, secure\nСтруктура http, подробно про шифрование данных, get и post, как get кэшируется?\nКак клонировать объект, чем плох json.parse(json.stringify)\nuseMemo, useCallback, memo. Подробно про внутренности\nПолучение данных в реальном времени: websocket, SSE\ntypescript: когда стоит тащить в проект, расскажи всё что знаешь про generics, почему нельзя заменить дженерики юнионами, type vs interface"
      },
      {
        "timestamp": "2024-05-07 08:38:59",
        "content": "2024-05-07 08:38:59\n Aleksandr -> 2071074234:\nНазвание компании - Райффайзен Банк\nВакансия: https://hh.ru/vacancy/96446150?hhtmFrom=employer_vacancies\nЗП: от 300 net запросил\nЗадачи: Теория, лайвкодинг (в своем редакторе кода написать логику банкомата и сделать несложный интерфейс для взаимодействия на реакте)\n// RUB: [50, 100, 200, 500, 1000, 2000, 5000],\n// USD: [1, 2, 5, 10, 20, 50, 100],\n// EUR: [5, 10, 20, 50, 100, 200, 500]\n// 2000х1, 500x1\n// 14350\nexport type Currency = \"rub\" | \"usd\" | \"...",
        "full_content": "2024-05-07 08:38:59\n Aleksandr -> 2071074234:\nНазвание компании - Райффайзен Банк\nВакансия: https://hh.ru/vacancy/96446150?hhtmFrom=employer_vacancies\nЗП: от 300 net запросил\nЗадачи: Теория, лайвкодинг (в своем редакторе кода написать логику банкомата и сделать несложный интерфейс для взаимодействия на реакте)\n// RUB: [50, 100, 200, 500, 1000, 2000, 5000],\n// USD: [1, 2, 5, 10, 20, 50, 100],\n// EUR: [5, 10, 20, 50, 100, 200, 500]\n// 2000х1, 500x1\n// 14350\nexport type Currency = \"rub\" | \"usd\" | \"eur\";\nexport const objCurrency = {\n  rub: [50, 100, 200, 500, 1000, 2000, 5000],\n  usd: [1, 2, 5, 10, 20, 50, 100],\n  eur: [5, 10, 20, 50, 100, 200, 500],\n};\n\nconst terminal = (amount: number, currency: Currency): string[] => {\n  const res: string[] = [];\n  const selectedCurrency = objCurrency[currency];\n  selectedCurrency.sort((a, b) => b - a);\n  for (const sum of selectedCurrency) {\n    let count = 0;\n    while (amount - sum >= 0) {\n      count++;\n      amount -= sum;\n    }\n    if (count) {\n      res.push(`${sum}x${count}`);\n    }\n    count = 0;\n  }\n  console.log(res);\n  return res;\n};\n\nexport default terminal;\nЗапись: https://www.youtube.com/watch?v=wGiTk4flH-s&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B0%D0%BD%D0%B4%D1%80%D0%A0%D1%8F%D0%B1%D0%BE%D0%B2\nУспех: ❌\nФидбек: Саша, привет! \nЯ к тебе с фидбэком. Техническое интервью, в целом прошло неплохо. \nОднако, немного не хватило того объёма знаний наличие, которых предполагает данная вакансия. \nЗоны роста, которые му субъективно могли бы выделить: \nОсвежить знания о базовом JS (обработчики событий, контекст, всплытия-погружения, области видимости), почитать про разные стейт менеджеры, возможно попробовать что-то новое на пет проекте. Обязательно изучить разные подходы к архитектуре приложений (FSD, atomic design, nested components итд). Попрактиковать побольше ts, писать больше сложных типов. Порешать алгоритмы на leetcode. И собрать проект с нуля, настроить там сборку, окружение.\nСпасибо тебе огромное за уделенное время и давай оставаться на связи, на случай, если у нас будут более подходящие вакансии для тебя и ты будешь открыт к новым предложениям о работе вновь) Хорошо?\n\nКомментарий от себя: Проблема с записью, когда перешел в свой редактор, абсолютно не видно, что там происходит, плюс собес разделился на 2 части, но я решил вторую не выкладывать, так как ничего не видно. Не успел реализовать логику обработки ошибок, ну и чуть в теории с всплытием и погружением поплавал.\nА так по фидбеку у них не прям под меня подобран он будто бы, так как были моменты, которые мы даже не обсуждали, а они решили посоветовать освежить их )\nСуммарно собес около 2 часов"
      }
    ]
  },
  {
    "company": "Поле.рф",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-09-16 19:00:49",
        "content": "2024-09-16 19:00:49\n Бахтияр -> 2071074234:\nКомпания: ПОЛЕ.РФ\n- ЗП: от 300К\n- Вакансия: https://t.me/c/2071074234/616/62485\n- Вопросы:\nРасскажи о себе (опыт и что делал руками) \nNext и SSR что использовал что знаешь ?\nЧто происходит при нажатии кнопки enter в адресной строке ?\nВ каком порядке будут загружаться несколько файлов со стилями и почему?\nЧто блокирует скрипт ?\nAsync defer + для чего используются в работе ?\nПамять в браузере какая бывает, чем отличается, взаимодействие между вкладками ч...",
        "full_content": "2024-09-16 19:00:49\n Бахтияр -> 2071074234:\nКомпания: ПОЛЕ.РФ\n- ЗП: от 300К\n- Вакансия: https://t.me/c/2071074234/616/62485\n- Вопросы:\nРасскажи о себе (опыт и что делал руками) \nNext и SSR что использовал что знаешь ?\nЧто происходит при нажатии кнопки enter в адресной строке ?\nВ каком порядке будут загружаться несколько файлов со стилями и почему?\nЧто блокирует скрипт ?\nAsync defer + для чего используются в работе ?\nПамять в браузере какая бывает, чем отличается, взаимодействие между вкладками через память?\nJS однопоточный ?\nJS асинхронный ?\nКак достигается асихронность в JS?\nEvent loop?\nКакие ограничения  у web workera или на каких задачах нельзя использовать ?\nструктуры данных в js ?\nприходит больщой список данных грузит 10 сек, как оптимизировать  ?\nMap Set WeakMap WeakSet + для чего используют ?\nЕсли ограничение по размеру переменной в JS и сколько ?\nПереполнение стека была у тебя, с чем связана ?\nНа сколько глубоко он может провалится ?\nString является ли объектом ?\nчто под  капотом у async await?\nГенераторы ?\n\n- Задача на реакт TS (пустой проект):\n1. отобразить шахматную доску \n2. сверстать стили \n\n- Задача debounce:\n\nconst fetchUrl = (url) = {\nconsole. log('Fetching ${url}...')\nfunction debounce) {\n}\nconst fetching = debounce(fetchUrl, 300)\nfetching(1)\nfetching(2)\nfetching(3)\nfetching(4)\nfetching(5) // в итоге только 5"
      },
      {
        "timestamp": "2024-09-15 17:15:36",
        "content": "2024-09-15 17:15:36\n Руслан -> 2071074234:\nПОЛЕ.РФ\n— зп: 300к\n— вакансия: https://hh.ru/vacancy/106353373\n— вопросы: \n1. critical rendering path\n2. как выбираешь либы\n3. есть ли опыт разработки open source либ\n4. async defer\n5. где хранить jwt token лучше\n6. как с помощью localstorage общаться между вкладками\n7. луп\n8. web vs service workers\n9. если внутри промиса вызвать сначала реджект потом ресолв, что будет\n10. map vs object\n11. weak set and map\n12. tdz\n13. реконсиляция\n14. fiber для чего\n15...",
        "full_content": "2024-09-15 17:15:36\n Руслан -> 2071074234:\nПОЛЕ.РФ\n— зп: 300к\n— вакансия: https://hh.ru/vacancy/106353373\n— вопросы: \n1. critical rendering path\n2. как выбираешь либы\n3. есть ли опыт разработки open source либ\n4. async defer\n5. где хранить jwt token лучше\n6. как с помощью localstorage общаться между вкладками\n7. луп\n8. web vs service workers\n9. если внутри промиса вызвать сначала реджект потом ресолв, что будет\n10. map vs object\n11. weak set and map\n12. tdz\n13. реконсиляция\n14. fiber для чего\n15. атрибут key\n16. сохраняется ли состояние компонента при ремаунте\n17. 10й https://t.me/c/2071074234/489/58761\n18. 19й https://t.me/c/2071074234/489/58761\n19. 20й https://t.me/c/2071074234/489/58761\n— задачи:\nfunction parallel(funcArray, doneAll) {\n  // написать реализацию\n}\n\n// пример использования\n\n\nconst a = (done) => {\n  setTimeout(() => {\n    done(\"result a\");\n  }, 300);\n};\n\nconst b = (done) => {\n  setTimeout(() => {\n    done(\"result b\");\n  }, 200);\n};\n\nparallel([a, b], (results) => {\n  console.log(results); // ['result a', 'result b']\n});"
      },
      {
        "timestamp": "2024-09-02 15:26:29",
        "content": "2024-09-02 15:26:29\n Timofei Syromiatnikov -> 2071074234:\n— Название: Поле.рф\n— Вакансия: https://hh.ru/vacancy/106353373\n— ЗП: 300к\n— Вопросы:\n1) Как сделать адаптивную верстку без использования @media запросов в css и без использовани js? Например, адаптивный текст, в зависимости мобилка или декстоп это шрифт автоматом будет уменьшаться или увеличиваться\n2) В чем разница между reset и normalize css? С чем работал из этого\n3) У нас есть див с паддингом и бордером. Что войдет в размеры этого див...",
        "full_content": "2024-09-02 15:26:29\n Timofei Syromiatnikov -> 2071074234:\n— Название: Поле.рф\n— Вакансия: https://hh.ru/vacancy/106353373\n— ЗП: 300к\n— Вопросы:\n1) Как сделать адаптивную верстку без использования @media запросов в css и без использовани js? Например, адаптивный текст, в зависимости мобилка или декстоп это шрифт автоматом будет уменьшаться или увеличиваться\n2) В чем разница между reset и normalize css? С чем работал из этого\n3) У нас есть див с паддингом и бордером. Что войдет в размеры этого дива (ширину, высоту)?\n4) Расскажи про погружение/всплытие в DOM\n5) Расскажи про промисы, какие методы у него есть и обработчики событий.\n6) В чем разница между async/await и .then() у промиса?\n7) Различие между операторами \"??\" и \"| |\" (ИЛИ). Что выведет в коносль: \nnull ?? 1\nnull  ||  1\n\nfalse ?? 1\nfalse || 1\n8) React memo HOC, расскажи какие пропсы в себя принимает.\n9) Как работает механика мемоизации?\n10) Как мы можем предотврать ререндер компонента, который обернут в memo HOC, по конкретному пропсу. Т.е например у нас есть компонент Test, который обернут в memo. И в него передается 3 пропса а, б, с. Как нам сделать так чтобы при изменинии а, б компонент перерендеривался, а при измении пропса \"с\" — не делал этого.\n11) Различие между localStorage, sessionStorage, Cookie. Что такое httpOnly\n12) Зачем нужен React, чем он полезен.\n13) Что такое keyof в TS. \n14) Что такое дженерик в TS\n15) Какой утили тайп использовать чтобы сделать все ключи необязательными/обязательным.\n16) Какой утили тайп используется для исключения конкретного ключа из интерфейса. И наоборот какой достает только нужный ключ\n17) Что такое Record в ts\n18) Как можно оптимизировать вывод тысячи элементов на страницу. Работал ли с виртуализацией?\n19) Как работает и для чего используется useRef. Что в нем можно хранить. Будет ли он тригерить ререндер компонента. Будет ли он тригерить вызов useEffect'a если в зависимость передать ref.current\n20) Различие между useEffect и useLayoutEffect. Кто из них будет блокировать рендер а кто нет.\n21) Использовал ли библиотеки lodash и похожие, и для чего?\n22) Какие есть способы оптимизации React приложения?\n23) Какие знаешь псевдоклассы и псевдоэлементы?\n24) Как можно при анмаунте компонента отписаться от каких-то событий?"
      }
    ]
  },
  {
    "company": "Купибилет",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-04-24 16:10:30",
        "content": "2024-04-24 16:10:30\n Daniil Max -> 2071074234:\n— Название компании: Купибилет\n— Ссылка на вакансию: hr сама написал\n— ЗП: 240-270К. Макс. вилка 240К\n— Задачи: лайвкодинг + теория\n— Запись на ютуб: https://youtu.be/FJ4xT837nq0?si=A1D2vv95yo7dhOp-\n— Комментарий: получилось классное шоу, где я иногда угарал)\n– Успех собеса: ❌\n– Фитбек от HR:\nДаниил, привет! Как и обещал, возвращаюсь к тебе с обратной связью. Обсудили с тимлидом все, у тебя интересный опыт, отличные навыки и знания, кажется что на н...",
        "full_content": "2024-04-24 16:10:30\n Daniil Max -> 2071074234:\n— Название компании: Купибилет\n— Ссылка на вакансию: hr сама написал\n— ЗП: 240-270К. Макс. вилка 240К\n— Задачи: лайвкодинг + теория\n— Запись на ютуб: https://youtu.be/FJ4xT837nq0?si=A1D2vv95yo7dhOp-\n— Комментарий: получилось классное шоу, где я иногда угарал)\n– Успех собеса: ❌\n– Фитбек от HR:\nДаниил, привет! Как и обещал, возвращаюсь к тебе с обратной связью. Обсудили с тимлидом все, у тебя интересный опыт, отличные навыки и знания, кажется что на нашей открытой позиции у нас не найдется достаточно интересных задач для тебя, поэтому с нашей стороны решили отказать. Вне зависимости от решения, от ребят только положительная обратная связь, с тобой было очень приятно общаться! Со своей стороны желаю тебе найти классных коллег и интересную работу!😇"
      },
      {
        "timestamp": "2024-04-11 10:09:25",
        "content": "2024-04-11 10:09:25\n Artem -> 2071074234:\n- Название компании Купибилет\n- Ссылка на вакансию: hr писала в тг\n- ЗП: просил 200к (вилка 180 - 230)\n- Ссылка на собес: https://www.youtube.com/watch?v=dqIXkGff8Jk\n- Успех: Долго думали, но решили отказать, так как показалось, что не хватит моих навыков на этот проект.",
        "full_content": "2024-04-11 10:09:25\n Artem -> 2071074234:\n- Название компании Купибилет\n- Ссылка на вакансию: hr писала в тг\n- ЗП: просил 200к (вилка 180 - 230)\n- Ссылка на собес: https://www.youtube.com/watch?v=dqIXkGff8Jk\n- Успех: Долго думали, но решили отказать, так как показалось, что не хватит моих навыков на этот проект."
      },
      {
        "timestamp": "2024-03-27 10:45:41",
        "content": "2024-03-27 10:45:41\n 5429820319 -> 2071074234:\nНазвание компании: Купибилет\nСсылка на вакансию: hr сама написала\nЗП: 160К \nЗадачи: дали написать свой fetch с ограничение на количество вызовов (в чате такая уже встречалась), несколько задач на консоль логи (не успел сохранить), вопросы про куки, корс, csp, замыкание и контекст. Сказали если все ок будет еще один этап \nУспех собеса: ❌ (фидбэк не дали)\n\nСобес был 18 марта, ходил ради практики",
        "full_content": "2024-03-27 10:45:41\n 5429820319 -> 2071074234:\nНазвание компании: Купибилет\nСсылка на вакансию: hr сама написала\nЗП: 160К \nЗадачи: дали написать свой fetch с ограничение на количество вызовов (в чате такая уже встречалась), несколько задач на консоль логи (не успел сохранить), вопросы про куки, корс, csp, замыкание и контекст. Сказали если все ок будет еще один этап \nУспех собеса: ❌ (фидбэк не дали)\n\nСобес был 18 марта, ходил ради практики"
      }
    ]
  },
  {
    "company": "Технологии Доверия",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-06-07 15:19:19",
        "content": "2024-06-07 15:19:19\n stil -> 2071074234:\nНазвание компании: Технологии доверия\nСсылка на вакансию: https://spb.hh.ru/vacancy/95436192\nЗп: 250к\n\nВопросы:\n- авторизация, ее виды, jwt, доменная аутентификация \n- про вебсокеты, библиотека socket io\n- решение проблемы автокомплита с несколькими запросами на сервер \n- что использовать для типизации объекта, интерфейсы или типы\n- дженерики\n- можно ли типизировать объекты тайпом \n- может ли быть тип дженериком \n- порталы, всплытие в порталах\n- есть тайм...",
        "full_content": "2024-06-07 15:19:19\n stil -> 2071074234:\nНазвание компании: Технологии доверия\nСсылка на вакансию: https://spb.hh.ru/vacancy/95436192\nЗп: 250к\n\nВопросы:\n- авторизация, ее виды, jwt, доменная аутентификация \n- про вебсокеты, библиотека socket io\n- решение проблемы автокомплита с несколькими запросами на сервер \n- что использовать для типизации объекта, интерфейсы или типы\n- дженерики\n- можно ли типизировать объекты тайпом \n- может ли быть тип дженериком \n- порталы, всплытие в порталах\n- есть таймер в реакте, где хранить значения чтобы не было перерисовок\n\nЗадачи:\n Определить, есть ли ошибка\ntype A<T> = {...}\n\n///\ninterface A {\n    foo: string\n}\ninterface A {\n   bar: string\n}\n\n/// \ninterface A {\n   bar: string\n}\ninterface A {\n   bar: number\n}\n\n/// \ntype A = {\n   bar: string\n}\ntype B = A & {\n   bar: number\n}"
      },
      {
        "timestamp": "2024-05-14 12:36:47",
        "content": "2024-05-14 12:36:47\n Aleksandr -> 2071074234:\nНазвание компании - Технологии доверия\nВакансия: https://spb.hh.ru/vacancy/95436192\nЗП: от 300 net запросил\nЗадачи: Только лайвкодинг \nЗапись: https://www.youtube.com/watch?v=UizR8ERkMzQ&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B0%D0%BD%D0%B4%D1%80%D0%A0%D1%8F%D0%B1%D0%BE%D0%B2\n/*\n  Ваш продакт менеджер попросил вас написать приложение по поиску\n  испорченных релизов.\n  Релизы - это упорядоченная коллекция выпущенных релизов.\n  Если один из релиз...",
        "full_content": "2024-05-14 12:36:47\n Aleksandr -> 2071074234:\nНазвание компании - Технологии доверия\nВакансия: https://spb.hh.ru/vacancy/95436192\nЗП: от 300 net запросил\nЗадачи: Только лайвкодинг \nЗапись: https://www.youtube.com/watch?v=UizR8ERkMzQ&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B0%D0%BD%D0%B4%D1%80%D0%A0%D1%8F%D0%B1%D0%BE%D0%B2\n/*\n  Ваш продакт менеджер попросил вас написать приложение по поиску\n  испорченных релизов.\n  Релизы - это упорядоченная коллекция выпущенных релизов.\n  Если один из релизов испорчен, все последующие тоже испорчены.\n  Программа должна найти самый ранний испорченный релиз из коллекции.\n\n  На вход подается:\n  n - размер (длинна) коллекции с номерами релизов.\n  индексация начинается с 0;\n  функция isBadVersion :: k: Int => boolean\n  Функция проверяет, является ли версия под переданным положением k в коллекции сломанной.\n  Функция принимает индекс массива версий k и возвращает ответ, испорчена ли версия. Функцию реализовывать не надо.\n\n  На выход:\n  Функция должна вернуть индекс самой ранней испорченной версии из списка или -1 если испорченных нет.\n  Необходимо минимизировать количество вызовов функции isBadVersion - наихудшая вычислительная сложность O(n).\n*/\n\n\n\nfunction solution(n: number, isBadVersion: (idx: number) => boolean): number {\n    let pointer1 = 0\n    let pointer2 = n - 1\n    let averagePointer = -1\n        while (pointer1 <= pointer2) {\n        let middle = Number.floor((pointer2 + pointer1) / 2)\n        \n        if (isBadVersion(middle)) {\n            // в левой половине искать\n            pointer2 = middle\n            averagePointer = middle\n        } else {\n            pointer1 = middle\n        }    \n    }\n  return averagePointer\n}\n\n\n\nconst testArr = [true, true, true, false, false];\nconst expect = 3;\nconst ibv = createIsBadVersion(testArr);\n\n\nconst answer = solution(testArr.length, ibv);\nconsole.assert(answer === expect, Bad answer ${answer});\n\nconst testArr2 = new Array(9999999).fill(true);\ntestArr2.push(false)\nconst expect2 = 9999999;\nconst ibv2 = createIsBadVersion(testArr2);\n\n\nconst answer2 = solution(testArr2.length, ibv2);\nconsole.assert(answer2 === expect2, Bad answer ${answer2});\n\nfunction createIsBadVersion(arr: boolean[]) {\n  return function isBadVersion(idx: number) {\n    return !arr[idx];\n  }\n}\nУспех: ✅ (2 из 3 этапов)\nФидбек: Эйчар вернулась со звонком почти сразу же и сказала, что оценили меня на грейд старшего консультанта (сеньора), но это 250 net, а на менеджерский грейд (300 net) я не дотянул, а менеджерский грейд это тот кто можно сказать тим лид, в итоге я слился, решил дальше не идти на 3 этап с руководителем (там короткое интервью), ну и для себя вывод сделал, что денег у них немного \nКомментарий от себя: Был тот же интервьюер, на коннекте уже с ним были ) В целом достаточно простые задачи"
      },
      {
        "timestamp": "2024-05-14 12:30:54",
        "content": "2024-05-14 12:30:54\n Aleksandr -> 2071074234:\nНазвание компании - Технологии доверия\nВакансия: https://spb.hh.ru/vacancy/95436192\nЗП: от 300 net запросил\nЗадачи: Только теория \nЗапись: https://www.youtube.com/watch?v=TrXpi0U2Hq8&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B0%D0%BD%D0%B4%D1%80%D0%A0%D1%8F%D0%B1%D0%BE%D0%B2\nУспех: ✅ (1 из 3 этапов)\nКомментарий от себя: Интересный собес, про реакт чуть глубже поговорили, начало чуть скипнулось, но там ничего не было важного, представляли тупо комп...",
        "full_content": "2024-05-14 12:30:54\n Aleksandr -> 2071074234:\nНазвание компании - Технологии доверия\nВакансия: https://spb.hh.ru/vacancy/95436192\nЗП: от 300 net запросил\nЗадачи: Только теория \nЗапись: https://www.youtube.com/watch?v=TrXpi0U2Hq8&ab_channel=%D0%90%D0%BB%D0%B5%D0%BA%D1%81%D0%B0%D0%BD%D0%B4%D1%80%D0%A0%D1%8F%D0%B1%D0%BE%D0%B2\nУспех: ✅ (1 из 3 этапов)\nКомментарий от себя: Интересный собес, про реакт чуть глубже поговорили, начало чуть скипнулось, но там ничего не было важного, представляли тупо компанию"
      }
    ]
  },
  {
    "company": "Мегафон",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-02-25 15:15:52",
        "content": "2025-02-25 15:15:52\n Nodar -> 2071074234:\nКомпания: Мегафон(1 этап)\nЗп: от 250\nВакансия: написала hr\nВопросы от hr:\n1.На каких проектах работал\n2.Расскажи про стэк технологий, который использовал\n3.Был ли опыт наставничества(спрашивали, потому что позиция подразумевает техлидовские обязанности )\n4. Почему ушел с последнего места работы\n5. По каким критериям ищешь новую работу\n6. Как развиваешься в свободное время\n\nТех. Вопросы:\nФормат разговорный, не спрашивали про теорию.\n1.Что бы выбрал для но...",
        "full_content": "2025-02-25 15:15:52\n Nodar -> 2071074234:\nКомпания: Мегафон(1 этап)\nЗп: от 250\nВакансия: написала hr\nВопросы от hr:\n1.На каких проектах работал\n2.Расскажи про стэк технологий, который использовал\n3.Был ли опыт наставничества(спрашивали, потому что позиция подразумевает техлидовские обязанности )\n4. Почему ушел с последнего места работы\n5. По каким критериям ищешь новую работу\n6. Как развиваешься в свободное время\n\nТех. Вопросы:\nФормат разговорный, не спрашивали про теорию.\n1.Что бы выбрал для нового проекта: next или реакт и почему\n2. Как бы оптимизировал проект, какие средства в реакте есть для оптимизации\n3. По какой архитектуре бы начал делать проект(спрашивали про fsd)\n\n\n2 задачи:\n1. Дан массив объектов, вернуть новый массив с группировкой по категориям\nfunction groupByCategory(items) {\n    return items.reduce((acc, item) => {\n        // Если категория уже есть в аккумуляторе, добавляем элемент в массив\n        if (acc[item.category]) {\n            acc[item.category].push(item);\n        } else {\n            // Если категории нет, создаем новый массив с этим элементом\n            acc[item.category] = [item];\n        }\n        return acc;\n    }, {});\n}\n\n// Пример использования\nconst items = [\n    { id: 1, category: \"food\" },\n    { id: 2, category: \"drink\" },\n    { id: 3, category: \"food\" },\n];\n\nconsole.log(groupByCategory(items));\n2.Нужно написать функцию buildQueryString, которая принимает объект с параметрами и возвращает строку query - параметров в формате, подходящем для URL(например, ?key1 = value1 & key2=value2`). Пустые значения (`null, undefined, пустая строка) исключаются из результата.\nfunction buildQueryString(params) {\n  // Фильтруем пустые значения и кодируем ключи и значения\n  const queryParams = Object.entries(params)\n    .filter(([key, value]) => value != null && value !== \"\") // Исключаем пустые значения\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`) // Кодируем\n    .join(\"&\"); // Объединяем в строку\n\n  // Возвращаем строку с префиксом \"?\", если есть параметры\n  return queryParams ? `?${queryParams}` : \"\";"
      },
      {
        "timestamp": "2024-09-02 20:40:56",
        "content": "2024-09-02 20:40:56\n Евгений Лямин -> 2071074234:\n— Мегафон 2 этап TC\n— https://getmatch.ru/vacancies/20645-frontend-razrabotchik?s=my-applications-v\n— 250-280 просил\n— Вопросы:\n\n- Расскажи про опыт\n- Что такое TypeScript  и зачем он нужен.\n- Какие способы взаимодействия клиента и сервера ты знаешь\n- Работал ли с Websocket\n- С какими форматами передачи работал\n- Работал ли с Protobuf\n- Читал ли ты спецификацию JS\n- Js однопоточный или многопоточный\n- Как работают Web Worker\n- Event loop\n- Почему...",
        "full_content": "2024-09-02 20:40:56\n Евгений Лямин -> 2071074234:\n— Мегафон 2 этап TC\n— https://getmatch.ru/vacancies/20645-frontend-razrabotchik?s=my-applications-v\n— 250-280 просил\n— Вопросы:\n\n- Расскажи про опыт\n- Что такое TypeScript  и зачем он нужен.\n- Какие способы взаимодействия клиента и сервера ты знаешь\n- Работал ли с Websocket\n- С какими форматами передачи работал\n- Работал ли с Protobuf\n- Читал ли ты спецификацию JS\n- Js однопоточный или многопоточный\n- Как работают Web Worker\n- Event loop\n- Почему блокируется работа с интерфейсом если выgолняется какой-то цикл на 10 миллионов итераций\n- Каким способом можно исправить эту проблему, что бы не блокировался интерфейс у пользователя\n- Расскажи про requestAnimationFrame\n- Расскажи про сборщик мусора\n- Типы данных в JS\n- Почему null это объект\n- Какие есть способы создания переменных. Какие особенности\n- Опыт работ с библиотеками для работы с графиками\n- Получаешь огромный массив объектов, нужно его обработать и положить в другой массив. Какими методами способами мы можем это сделать не блокируя работу интерфейса\n- Как бы ты реализовал обработку событий, то есть поиск  места куда ты нажал, а у тебя еще не все объекты обработаны, не отрисовались. Какие данные ты бы искал, как отлавливал события?\n- Число с плавающей запятой, нужно округлить это число до 6 знака после запятой, средствами js"
      },
      {
        "timestamp": "2024-05-31 07:31:01",
        "content": "2024-05-31 07:31:01\n Artur -> 2071074234:\nКомпания: Мегафон\nСсылка на вакансию: отсутствует\nСсылка на собес: https://disk.yandex.ru/d/e9K7eYSIQs5NAw\nЗП: неизвестно\nУровень: Middle\nУспех собеса: ❌\n\nВопросы:\n— ООП, примеры, для чего нужен\n— SOLID, примеры, для чего нужен\n— TCP и UDP, разница\n— Что происходит после отправки запроса\n— Методы HTTP, разница между GET и POST, что безопаснее\n— CORS, что это, как работает\n— Чистая функция, примеры\n— Функция высшего порядка\n— Глубокое и поверхностное копи...",
        "full_content": "2024-05-31 07:31:01\n Artur -> 2071074234:\nКомпания: Мегафон\nСсылка на вакансию: отсутствует\nСсылка на собес: https://disk.yandex.ru/d/e9K7eYSIQs5NAw\nЗП: неизвестно\nУровень: Middle\nУспех собеса: ❌\n\nВопросы:\n— ООП, примеры, для чего нужен\n— SOLID, примеры, для чего нужен\n— TCP и UDP, разница\n— Что происходит после отправки запроса\n— Методы HTTP, разница между GET и POST, что безопаснее\n— CORS, что это, как работает\n— Чистая функция, примеры\n— Функция высшего порядка\n— Глубокое и поверхностное копирование, в чем разница\n\nЗадачи: \n1) что выведет, почему, как поправить\nconst person = {\n    name: 'Vasya',\n    age: 22,\n    hobby: { play: () => {} },\n};\n\nconst position = { title: 'Software Engineer' };\n\nperson.position = position;\nperson.position.salary = 120;\n\nconsole.log(person.position); // что выведется\nconsole.log(position);  // что выведется\n\n2) что выведет, как получить длину массива, как поправить\nconst doSomething = () => {\n    console.log('Привет');\n}\n\nconst someArray = [];\n\nsomeArray.doSomething(); // что выведется\n\n3) каррирование, реализовать функцию\nadd(5)(4)\n\n4) что выведет, почему, как поправить\nfunction Person(age) {\n    this.age = age;\n\n    setInterval(function() {\n        this.age++;\n    }, 1000);\n}\n\nconst vasya = new Person(13);\nsetTimeout(() => {\n    console.log(vasya.age); // что выведется\n}, 5000);\n\n5) что выведет, почему, как поправить\nconst button = document.getElementById('button');\n\nfor (var i = 0; i < 3; i++) {\n    button.addEventListener('click', function (e) {\n        console.log(i);\n    });\n}\n\nbutton.dispatchEvent(new Event(\"click\"));\n// что выведет, почему"
      }
    ]
  },
  {
    "company": "Честный Знак",
    "count": 3,
    "records": [
      {
        "timestamp": "2025-07-15 09:35:52",
        "content": "2025-07-15 09:35:52\n Ivan -> 2071074234:\nКомпания: Честный знак 1 этап\nЗП: 250-300+\n\n1. Рассказ про опыт\n\nСразу перешли к задаче. Пока решал задавал дополнительные вопросы.\n\n2. Про виртуализацию списков в реакт, как реализовать без библиотек. С фиксированной высотой элементов и с динамической.\n3. Что использовать в качестве ключа если нет id?\n4. Какие минусы использования Date.now в качестве ключа?\nconst a = new Date().getTime()\nconst b = new Date().getTime()\na===b// true\nconst a = new Promise((...",
        "full_content": "2025-07-15 09:35:52\n Ivan -> 2071074234:\nКомпания: Честный знак 1 этап\nЗП: 250-300+\n\n1. Рассказ про опыт\n\nСразу перешли к задаче. Пока решал задавал дополнительные вопросы.\n\n2. Про виртуализацию списков в реакт, как реализовать без библиотек. С фиксированной высотой элементов и с динамической.\n3. Что использовать в качестве ключа если нет id?\n4. Какие минусы использования Date.now в качестве ключа?\nconst a = new Date().getTime()\nconst b = new Date().getTime()\na===b// true\nconst a = new Promise((resolve) => resolve(new Date().getTime()));\nconst b = new Promise((resolve) => resolve(new Date().getTime()));\na===b// false\n5. Про клинап функции в эффектах.\n\nЗадача 1\nНебольшое приложение с редактирование .har структуры.\nДописать/поправить следующие части\n- addNewEntry// описать логику добавления entry\n- handleInputChange// описать логику редактирования entry\n-useEffect// лог при изменении\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./styles.css\";\n\nconst entry = {\n  request: { url: \"https://example.com\", method: \"GET\" },\n  response: { status: 200, statusText: \"OK\" },\n};\n\nconst harItem = {\n  log: {\n    version: \"1.2\",\n    creator: { name: \"React HAR Editor\", version: \"1.0\" },\n    entries: [\n      {\n        request: { url: \"https://example.com\", method: \"GET\" },\n        response: { status: 200, statusText: \"OK\" },\n      },\n    ],\n  },\n};\n\nexport default function App() {\n  const [harData, setHarData] = useState(harItem);\n\n  const [error, setError] = useState(null);\n  //const saveTimeout = useRef(null);\n\n  const addNewEntry = useCallback(() => {\n    setHarData((prev) => ({\n      ...prev,\n      log: { entries: [...prev.log.entries, entry] },\n    }));\n  }, []);\n\n  const handleInputChange = (index, field, value) => {\n    //harData.log.entries[index].request[field] = value;\n    setHarData((prev) => ({\n      ...prev,\n      log: {\n        entries: prev.log.entries.map((item, idx) => {\n          return idx === index\n            ? { ...item, request: { ...item.request, [field]: value } }\n            : item;\n        }),\n      },\n    }));\n  };\n\n  const downloadHarFile = () => {\n    const blob = new Blob([JSON.stringify(harData, null, 2)], {\n      type: \"application/json\",\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"edited.har\";\n    link.click();\n  };\n\n  useEffect(() => {\n    const timerID = setTimeout(() => {\n      console.log(\"Autosave triggered\");\n    }, 1000);\n\n    return () => {\n      clearTimeout(timerID);\n    };\n    /*if (saveTimeout.current) {\n      clearTimeout(saveTimeout.current);\n    }\n\n    saveTimeout.current = window.setTimeout(() => {\n      console.log(\"Autosave triggered\");\n    }, 1000);*/\n  }, [harData]);\n\n  return (\n    <div style={{ padding: \"20px\", maxWidth: \"800px\", margin: \"0 auto\" }}>\n      <h1>HAR File Editor</h1>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}"
      },
      {
        "timestamp": "2025-06-11 22:54:15",
        "content": "2025-06-11 22:54:15\n Артём -> 2071074234:\nЧестный знак 2-й этап\nЗп от 300\n\nнемного про опыт и сразу даёт задачу на рефакторинг\n\nОтрефакторить и исправить ошибки\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [harData, setHarData] = useState({\n    log: {\n      version: \"1.2\",\n      creator: { name: \"React HAR Editor\", version: \"1.0\" },\n      entries: [\n        {\n          request: { url: \"https://example.com\", meth...",
        "full_content": "2025-06-11 22:54:15\n Артём -> 2071074234:\nЧестный знак 2-й этап\nЗп от 300\n\nнемного про опыт и сразу даёт задачу на рефакторинг\n\nОтрефакторить и исправить ошибки\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [harData, setHarData] = useState({\n    log: {\n      version: \"1.2\",\n      creator: { name: \"React HAR Editor\", version: \"1.0\" },\n      entries: [\n        {\n          request: { url: \"https://example.com\", method: \"GET\" },\n          response: { status: 200, statusText: \"OK\" },\n        },\n      ],\n    },\n  });\n\n  const [error, setError] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const saveTimeout = useRef(null);\n\n  const addNewEntry = useCallback(() => {}, []);\n\n  const handleInputChange = (index, field, value) => {\n    harData.log.entries[index].request[field] = value;\n\n    setHarData(value);\n  };\n\n  const downloadHarFile = () => {\n    const blob = new Blob([JSON.stringify(harData, null, 2)], {\n      type: \"application/json\",\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"edited.har\";\n    link.click();\n  };\n\n  useEffect(() => {\n    if (saveTimeout.current) {\n      clearTimeout(saveTimeout.current);\n    }\n\n    saveTimeout.current = window.setTimeout(() => {\n      console.log(\"Autosave triggered\");\n    }, 1000);\n  }, []);\n\n  return (\n    <div style={{ padding: \"20px\", maxWidth: \"800px\", margin: \"0 auto\" }}>\n      <h1>HAR File Editor</h1>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      <h2>Entries</h2>\n      <ul style={{ maxHeight: \"300px\", overflowY: \"scroll\", padding: \"0\" }}>\n        {harData.log.entries.map((entry) => (\n          <li\n            style={{\n              marginBottom: \"15px\",\n              padding: \"10px\",\n              border: \"1px solid #ddd\",\n              borderRadius: \"5px\",\n              listStyle: \"none\",\n            }}\n          >\n            <label>\n              URL:\n              <input\n                type=\"text\"\n                value={entry.request.url || \"\"}\n                onChange={(e) =>\n                  handleInputChange(index, \"url\", e.target.value)\n                }\n                style={{\n                  width: \"100%\",\n                  padding: \"5px\",\n                  marginBottom: \"10px\",\n                  border: \"1px solid #ccc\",\n                }}\n              />\n            </label>\n            <label>\n              Method:\n              <select\n                value={entry.request.method || \"GET\"}\n                onChange={(e) =>\n                  handleInputChange(index, \"method\", e.target.value)\n                }\n                style={{\n                  width: \"100%\",\n                  padding: \"5px\",\n                  marginBottom: \"10px\",\n                  border: \"1px solid #ccc\",\n                }}\n              >\n                <option value=\"GET\">GET</option>\n                <option value=\"POST\">POST</option>\n                <option value=\"PUT\">PUT</option>\n                <option value=\"DELETE\">DELETE</option>\n              </select>\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button\n        onClick={addNewEntry}\n        style={{\n          marginTop: \"10px\",\n          padding: \"10px 15px\",\n          backgroundColor: \"green\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n        }}\n      >\n        Add New Entry\n      </button>\n      <button\n        onClick={downloadHarFile}\n        style={{\n          marginTop: \"10px\",\n          marginLeft: \"10px\",\n          padding: \"10px 15px\",\n          backgroundColor: \"blue\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n        }}\n      >\n        Download HAR\n      </button>\n    </div>\n  );\n}"
      },
      {
        "timestamp": "2025-06-01 22:48:47",
        "content": "2025-06-01 22:48:47\n Артём -> 2071074234:\nЧестный знак\nзп: 300\nРассказ про себя и далее сразу к задаче\nЕсть небольшое приложение, исправить ошибки + отрефакторить\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [harData, setHarData] = useState({\n    log: {\n      version: \"1.2\",\n      creator: { name: \"React HAR Editor\", version: \"1.0\" },\n      entries: [\n        {\n          request: { url: \"https://example.com\", me...",
        "full_content": "2025-06-01 22:48:47\n Артём -> 2071074234:\nЧестный знак\nзп: 300\nРассказ про себя и далее сразу к задаче\nЕсть небольшое приложение, исправить ошибки + отрефакторить\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [harData, setHarData] = useState({\n    log: {\n      version: \"1.2\",\n      creator: { name: \"React HAR Editor\", version: \"1.0\" },\n      entries: [\n        {\n          request: { url: \"https://example.com\", method: \"GET\" },\n          response: { status: 200, statusText: \"OK\" },\n        },\n      ],\n    },\n  });\n\n  const [error, setError] = useState(null);\n  const [value, setValue] = useState(\"\");\n  const saveTimeout = useRef(null);\n\n  const addNewEntry = useCallback(() => {}, []);\n\n  const handleInputChange = (index, field, value) => {\n    harData.log.entries[index].request[field] = value;\n\n    setHarData(value);\n  };\n\n  const downloadHarFile = () => {\n    const blob = new Blob([JSON.stringify(harData, null, 2)], {\n      type: \"application/json\",\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"edited.har\";\n    link.click();\n  };\n\n  useEffect(() => {\n    if (saveTimeout.current) {\n      clearTimeout(saveTimeout.current);\n    }\n\n    saveTimeout.current = window.setTimeout(() => {\n      console.log(\"Autosave triggered\");\n    }, 1000);\n  }, []);\n\n  return (\n    <div style={{ padding: \"20px\", maxWidth: \"800px\", margin: \"0 auto\" }}>\n      <h1>HAR File Editor</h1>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      <h2>Entries</h2>\n      <ul style={{ maxHeight: \"300px\", overflowY: \"scroll\", padding: \"0\" }}>\n        {harData.log.entries.map((entry) => (\n          <li\n            style={{\n              marginBottom: \"15px\",\n              padding: \"10px\",\n              border: \"1px solid #ddd\",\n              borderRadius: \"5px\",\n              listStyle: \"none\",\n            }}\n          >\n            <label>\n              URL:\n              <input\n                type=\"text\"\n                value={entry.request.url || \"\"}\n                onChange={(e) =>\n                  handleInputChange(index, \"url\", e.target.value)\n                }\n                style={{\n                  width: \"100%\",\n                  padding: \"5px\",\n                  marginBottom: \"10px\",\n                  border: \"1px solid #ccc\",\n                }}\n              />\n            </label>\n            <label>\n              Method:\n              <select\n                value={entry.request.method || \"GET\"}\n                onChange={(e) =>\n                  handleInputChange(index, \"method\", e.target.value)\n                }\n                style={{\n                  width: \"100%\",\n                  padding: \"5px\",\n                  marginBottom: \"10px\",\n                  border: \"1px solid #ccc\",\n                }}\n              >\n                <option value=\"GET\">GET</option>\n                <option value=\"POST\">POST</option>\n                <option value=\"PUT\">PUT</option>\n                <option value=\"DELETE\">DELETE</option>\n              </select>\n            </label>\n          </li>\n        ))}\n      </ul>\n      <button\n        onClick={addNewEntry}\n        style={{\n          marginTop: \"10px\",\n          padding: \"10px 15px\",\n          backgroundColor: \"green\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n        }}\n      >\n        Add New Entry\n      </button>\n      <button\n        onClick={downloadHarFile}\n        style={{\n          marginTop: \"10px\",\n          marginLeft: \"10px\",\n          padding: \"10px 15px\",\n          backgroundColor: \"blue\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n        }}\n      >\n        Download HAR\n      </button>\n    </div>\n  );\n}"
      }
    ]
  },
  {
    "company": "Cosysoft",
    "count": 3,
    "records": [
      {
        "timestamp": "2024-06-07 10:12:36",
        "content": "2024-06-07 10:12:36\n dm . -> 2071074234:\n- CosySoft\n- https://hh.ru/vacancy/94831324\n- Зп: от 200\n- Задачи:\n1) Написать type If\n2) Написать свой type MyReturnType\n3) Написать функцию каррирования sum(a)(b)\n4) Написать класс или конструктор калькулятор с методами sum, sub, result\n5) Сделать рефакторинг компоненты: учесть семантику и доп. ререндеры\n- Вопросы:\n1)  reconciliation\n2) хуки реакт\n3) паттерны из ООП\n4) weakmap, weakset\n5) что такое рекурсия\n6) shadow dom\n7) критический путь рендеринга\n8...",
        "full_content": "2024-06-07 10:12:36\n dm . -> 2071074234:\n- CosySoft\n- https://hh.ru/vacancy/94831324\n- Зп: от 200\n- Задачи:\n1) Написать type If\n2) Написать свой type MyReturnType\n3) Написать функцию каррирования sum(a)(b)\n4) Написать класс или конструктор калькулятор с методами sum, sub, result\n5) Сделать рефакторинг компоненты: учесть семантику и доп. ререндеры\n- Вопросы:\n1)  reconciliation\n2) хуки реакт\n3) паттерны из ООП\n4) weakmap, weakset\n5) что такое рекурсия\n6) shadow dom\n7) критический путь рендеринга\n8) event loop\n9) http, sse, websocket\n10) graphQL\n11) webpack, nginx, docker\n12) git rebase\n13) типы тестирования, инструменты\n- Успех собеса: ?"
      },
      {
        "timestamp": "2024-06-03 18:55:50",
        "content": "2024-06-03 18:55:50\n Andrei Chirkov -> 2071074234:\nCosySoft, Тех. собес\n- Вакансия: https://spb.hh.ru/vacancy/94831324\n- ЗП: 250+\n- Успех собеса: ?\nЗадачи отсюда:\nhttps://codesandbox.io/p/devbox/refactor-forked-vtq2d8?file=%2Fsrc%2FNumbers%2Findex.tsx%3A21%2C18&workspaceId=7937235b-aab2-4b34-9ce8-a75e52eb5e12\n\nhttps://codesandbox.io/p/sandbox/interview-forked-5mvjzn?file=%2Fsrc%2FMyPick.ts\n\n- Видео: https://www.youtube.com/watch?v=iM8V4oArgs8",
        "full_content": "2024-06-03 18:55:50\n Andrei Chirkov -> 2071074234:\nCosySoft, Тех. собес\n- Вакансия: https://spb.hh.ru/vacancy/94831324\n- ЗП: 250+\n- Успех собеса: ?\nЗадачи отсюда:\nhttps://codesandbox.io/p/devbox/refactor-forked-vtq2d8?file=%2Fsrc%2FNumbers%2Findex.tsx%3A21%2C18&workspaceId=7937235b-aab2-4b34-9ce8-a75e52eb5e12\n\nhttps://codesandbox.io/p/sandbox/interview-forked-5mvjzn?file=%2Fsrc%2FMyPick.ts\n\n- Видео: https://www.youtube.com/watch?v=iM8V4oArgs8"
      },
      {
        "timestamp": "2024-05-29 13:49:04",
        "content": "2024-05-29 13:49:04\n dm . -> 2071074234:\nНазвание компании: CosySoft, \"техскриннинговые вопросы\"\n- Вакансия https://hh.ru/vacancy/94831324\n- ЗП: от 200\nВопросы: \n1) useEffect, \n2) триггерится ли useEffect от изменения useRef\n3) type guard\n4) event loop\n5) css in js.\n- Успех: ✅, далее полноценный техсобес.",
        "full_content": "2024-05-29 13:49:04\n dm . -> 2071074234:\nНазвание компании: CosySoft, \"техскриннинговые вопросы\"\n- Вакансия https://hh.ru/vacancy/94831324\n- ЗП: от 200\nВопросы: \n1) useEffect, \n2) триггерится ли useEffect от изменения useRef\n3) type guard\n4) event loop\n5) css in js.\n- Успех: ✅, далее полноценный техсобес."
      }
    ]
  },
  {
    "company": "Цб Рф",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-04-10 16:22:05",
        "content": "2025-04-10 16:22:05\n Max -> 2071074234:\nИЦ Ай-Теко(на проект сбера)\nЗП от 170 т.р.\nВакансия  https://serpuhov.hh.ru/vacancy/117408550?hhtmFrom=vacancy_restore\nВопросы: \n- про опыт\n- как задача доходила до тебя\n- расскажи интересную задачу\nТеории не было\nЗадача 1:\nconsole.log(\"script start\");\n\nsetTimeout(() => {\n  console.log(\"setTimeout\");\n}, 0);\n\nPromise.resolve()\n  .then(() => {\n    console.log(1);\n  })\n  .then(() => {\n    console.log(2);\n  })\n  .then(() => {\n    console.log(3);\n  })\n\nconsole....",
        "full_content": "2025-04-10 16:22:05\n Max -> 2071074234:\nИЦ Ай-Теко(на проект сбера)\nЗП от 170 т.р.\nВакансия  https://serpuhov.hh.ru/vacancy/117408550?hhtmFrom=vacancy_restore\nВопросы: \n- про опыт\n- как задача доходила до тебя\n- расскажи интересную задачу\nТеории не было\nЗадача 1:\nconsole.log(\"script start\");\n\nsetTimeout(() => {\n  console.log(\"setTimeout\");\n}, 0);\n\nPromise.resolve()\n  .then(() => {\n    console.log(1);\n  })\n  .then(() => {\n    console.log(2);\n  })\n  .then(() => {\n    console.log(3);\n  })\n\nconsole.log(\"script end\");\nОтвет:\nscript start  \nscript end  \n1  \n2  \n3  \nsetTimeout \nЗадача 2:\nconsole.log(\"script start\");\n\nPromise.resolve()\n  .then(() => {\n    console.log(1);\n    throw new Error(\"err\");\n  })\n  .then(() => {\n    console.log(2); \n  })\n  .catch((err) => {\n    console.log(err); \n  })\n  .then(() => {\n    console.log(3); \n  });\n\nconsole.log(\"script end\");\nОтвет:\nscript start\nscript end\n1\nError: err\n3\n3 Задача:\nhttps://github.com/dgrishkin/exchange-rates/tree/master \nСкачать репозиторий, и в своей ide реализовать запрос и отображение данных в виде таблицы(просят расшарить весь экран)\nУспел сделать только запрос\nОтвет:\nimport React, { useState, useEffect, FC } from 'react';\nimport styles from './styles.module.css';\n\n// Определение типов для данных о валютах\ninterface Currency {\n  ID: string;\n  NumCode: string;\n  CharCode: string;\n  Nominal: number;\n  Name: string;\n  Value: number;\n  Previous: number;\n}\n\n// Тип для всего ответа от API\ninterface CurrencyResponse {\n  Date: string;\n  PreviousDate: string;\n  PreviousURL: string;\n  Timestamp: string;\n  Valute: {\n    [key: string]: Currency;\n  };\n}\n\nexport const RootPage: FC = () => {\n  // Состояния для хранения данных, индикации загрузки и ошибок\n  const [currencies, setCurrencies] = useState<Currency[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Загрузка данных при монтировании компонента\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      try {\n        const response = await fetch('https://www.cbr-xml-daily.ru/daily_json.js');\n        const data: CurrencyResponse = await response.json();\n        \n        // Преобразование объекта валют в массив\n        const currencyValues = Object.values(data.Valute);\n        setCurrencies(currencyValues);\n        setLoading(false);\n      } catch (err) {\n        setError('Ошибка при загрузке данных');\n        setLoading(false);\n        console.error('Ошибка при загрузке данных:', err);\n      }\n    };\n\n    fetchCurrencies();\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <h1>Разработать таблицу отображающую курсы валют</h1>\n      <p>Используя сервис ЦБ РФ <a href=\"https://www.cbr-xml-daily.ru/daily_json.js\" target=\"_blank\">https://www.cbr-xml-daily.ru/daily_json.js</a> вывести таблицу курсов валют:</p>\n      <ul>\n        <li>Цифровой код валюты <b>(NumCode)</b></li>\n        <li>Символьный код валюты <b>(CharCode)</b></li>\n        <li>Наименование валюты <b>(Name)</b></li>\n        <li>Курс <b>(Value)</b></li>\n      </ul>\n      \n      {loading ? (\n        <p>Загрузка данных...</p>\n      ) : error ? (\n        <p className={styles.error}>{error}</p>\n      ) : (\n        <table className={styles.currencyTable}>\n          <thead>\n            <tr>\n              <th>Цифровой код (NumCode)</th>\n              <th>Символьный код (CharCode)</th>\n              <th>Наименование валюты (Name)</th>\n              <th>Курс (Value)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {currencies.map((currency) => (\n              <tr key={currency.ID}>\n                <td>{currency.NumCode}</td>\n                <td>{currency.CharCode}</td>\n                <td>{currency.Name}</td>\n                <td>{currency.Value.toFixed(4)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default RootPage;"
      },
      {
        "timestamp": "2024-11-20 14:15:30",
        "content": "2024-11-20 14:15:30\n Егор -> 2071074234:\nКомпания: ЦБ РФ\nВакансия: https://hh.ru/vacancy/81901106\nЗП: от 200к\n\nВопросы:\n- Расскажи про опыт\n- Как происходила оценка задача\n- Процессы в команде\n- state\n- key\n- хуки и расскажи про них\n- как скопировать объект\n- псевдоклассы в css\n- redux flux\n- JWT\n- ssr рендеринг\n- map, filter, reduce, forEach\n- promise\n- cors, хедеры\n- xml, json\n\nfunction getInitials(fullName) {\n  const words = fullName.split(' ');\n  const initials = words.map(word => word.charA...",
        "full_content": "2024-11-20 14:15:30\n Егор -> 2071074234:\nКомпания: ЦБ РФ\nВакансия: https://hh.ru/vacancy/81901106\nЗП: от 200к\n\nВопросы:\n- Расскажи про опыт\n- Как происходила оценка задача\n- Процессы в команде\n- state\n- key\n- хуки и расскажи про них\n- как скопировать объект\n- псевдоклассы в css\n- redux flux\n- JWT\n- ssr рендеринг\n- map, filter, reduce, forEach\n- promise\n- cors, хедеры\n- xml, json\n\nfunction getInitials(fullName) {\n  const words = fullName.split(' ');\n  const initials = words.map(word => word.charAt(0).toUpperCase() + '.');\n  return initials.join('');\n}\nconsole.log(getInitials('Петров Игорь')); // П.И.\nconsole.log(getInitials('Иванов Иван Иванович')); // И.И.И.\n\nfunction toCamelCase(str) {\n  // Заменяем все подчеркивания на дефисы\n  str = str.replace(/_/g, '-');\n\n  // Разделяем строку на части по дефисам\n  const parts = str.split('-');\n\n  // Оставляем первую часть в исходном регистре\n  const firstPart = parts[0];\n\n  // Преобразуем каждую последующую часть, сделав первую букву заглавной и остальные строчными\n  const restParts = parts.slice(1).map(part => part.charAt(0).toUpperCase() + part.slice(1).toLowerCase());\n\n  // Объединяем все части в одну строку\n  return firstPart + restParts.join('');\n}\n\n// Примеры использования\nconsole.log(toCamelCase('Min-Size-Circle')); // MinSizeCircle\nconsole.log(toCamelCase('min_size-circle')); // minSizeCircle\nconsole.log(toCamelCase('Min-size-Circle')); // MinSizeCircle\n\njs\nconst getFirstName = (name: string): string => {\n  const firstName = name.trim();\n  console.log('getFirstName');\n  return firstName;\n};\n\nconsole.log(getFirstName(' Ivan')); // Выведет getFirstName, затем undefined\n\nЗадача на реакт. Там просто надо указать что неправильно: \n1. Нужно создать state для хранение.\n2. Использовать setState"
      }
    ]
  },
  {
    "company": "Петрович-Тех",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-04-03 14:24:51",
        "content": "2025-04-03 14:24:51\n Матвей Захаров -> 2071074234:\nКомпания: Петрович-тех\nВакансия: https://spb.hh.ru/vacancy/118876730?hhtmFrom=resume\n\nВопросы: \n- виды переменных в js\n- call, bind, apply\n- event loop\n- виды функций в js\n- как работать с асинхронным кодом (Promise)\n- Дженерики\n- local storage, session storage\n- оптимизация в react\n- контекст в react\n\nИ задача на отрисовку данных:\n\n`\n './App.css';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst API = 'https://json...",
        "full_content": "2025-04-03 14:24:51\n Матвей Захаров -> 2071074234:\nКомпания: Петрович-тех\nВакансия: https://spb.hh.ru/vacancy/118876730?hhtmFrom=resume\n\nВопросы: \n- виды переменных в js\n- call, bind, apply\n- event loop\n- виды функций в js\n- как работать с асинхронным кодом (Promise)\n- Дженерики\n- local storage, session storage\n- оптимизация в react\n- контекст в react\n\nИ задача на отрисовку данных:\n\n`\n './App.css';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nconst API = 'https://jsonplaceholder.typicode.com/users/1';\n\nconst UserProfile = () => {\n  const [user, setUsers] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios\n      .get(API)\n      .then((response) => {\n        setUsers(response.data);\n      })\n      .catch((err) => {\n        setError(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  if (isLoading) return <h1>Loading.....</h1>;\n  if (error) return <h1>{error}</h1>;\n\n  return (\n    <div>\n      <h1>Data</h1>\n      <p>User : {user?.name}</p>\n      <p>Email : {user?.email}</p>\n      <p>Adress: {user?.address}</p>\n    </div>\n  );\n};\n\nexport default UserProfile;"
      },
      {
        "timestamp": "2024-10-25 14:29:19",
        "content": "2024-10-25 14:29:19\n Artyom Sozykin -> 2071074234:\nКомпания: Петрович-тех\nЗП: 250к\nВакансия: hr сама написала\nЗадач не было\n\nВопросы:\n 1. Чем отличается 17 React от 18?\n 2. Как реализовать батчинг в 18 react\n 3. Как бы ты реализовал страницу с фильтрами, которую можно передать ссылкой другому человеку и у него будут сохранятся твои фильтры и при перезагрузки, также будут сохранятся?\n 4. Как была реализована авторизация на refresh и access token?\n 5. Как обновляется access token?\n 6. Что такое To...",
        "full_content": "2024-10-25 14:29:19\n Artyom Sozykin -> 2071074234:\nКомпания: Петрович-тех\nЗП: 250к\nВакансия: hr сама написала\nЗадач не было\n\nВопросы:\n 1. Чем отличается 17 React от 18?\n 2. Как реализовать батчинг в 18 react\n 3. Как бы ты реализовал страницу с фильтрами, которую можно передать ссылкой другому человеку и у него будут сохранятся твои фильтры и при перезагрузки, также будут сохранятся?\n 4. Как была реализована авторизация на refresh и access token?\n 5. Как обновляется access token?\n 6. Что такое Token revocation \n 7. Что будет если у тебя отправляются 6 запросов одновременно и например в 5 из них устаревает access token (Вопрос про interceptor) \n 8. Как обновить контент в соседней открытой вкладке, какими способами это можно сделать, например, есть корзина товаров и нужно чтобы в первой вкладке пополнить корзину, а во второй вкладке это изменение отобразилось? (postMessage)\n 9. Как осуществлять верстку pixel perfect\n 10. Чем отличаются flex от grid\n 11. Как во flex сделать, так чтобы блоки не съезжали на новую строку (nowrap)\n 12. Что делает reset в css?\n 13. Что делает normalize в css?\n 14. Что такое will-change?\n 15. Как сделать подключение к websocket по протоколу ws, без secure (с помощью new WebSocket)"
      }
    ]
  },
  {
    "company": "Kotelov",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-06-30 11:44:36",
        "content": "2024-06-30 11:44:36\n Alehandro¯\\_(ツ)_/¯ -> 2071074234:\n- KOTELOV\n- Вакансия: https://rostov.hh.ru/vacancy/100703339?from=share_android\n- 200-220к\n- Вопросов не было, была задача которая была ранее написать хук useQuery",
        "full_content": "2024-06-30 11:44:36\n Alehandro¯\\_(ツ)_/¯ -> 2071074234:\n- KOTELOV\n- Вакансия: https://rostov.hh.ru/vacancy/100703339?from=share_android\n- 200-220к\n- Вопросов не было, была задача которая была ранее написать хук useQuery"
      },
      {
        "timestamp": "2024-01-17 14:08:35",
        "content": "2024-01-17 14:08:35\n Mr 🐈 -> 2071074234:\nСобес в компанию Kotelov #kotelov на мидл+ 200к\nНорм компания, норм интервьюер, без душноты и токсичности\nУспех: ❌ (не смог написать хук)\n\nВопросы: Написать Кастомный-ХУК для получения данных и обработки их + затипизировать все Тайпскриптом\n\n\nРешение:\n\n/ / . . .\n\ninterface QueryResult<T> {\ndata: T | null; loading: boolean;\nerror: Error | null;\n}\n\nconst useQuery = <>(options: {url: string; method?: string 3): QueryResult<>\n=> {\nconst Idata, setDatal = useS...",
        "full_content": "2024-01-17 14:08:35\n Mr 🐈 -> 2071074234:\nСобес в компанию Kotelov #kotelov на мидл+ 200к\nНорм компания, норм интервьюер, без душноты и токсичности\nУспех: ❌ (не смог написать хук)\n\nВопросы: Написать Кастомный-ХУК для получения данных и обработки их + затипизировать все Тайпскриптом\n\n\nРешение:\n\n/ / . . .\n\ninterface QueryResult<T> {\ndata: T | null; loading: boolean;\nerror: Error | null;\n}\n\nconst useQuery = <>(options: {url: string; method?: string 3): QueryResult<>\n=> {\nconst Idata, setDatal = useState<T | null>(null);\n\nconst [loading, setLoading]\n= useState (true);\n\nconst lerror, setError] = useState<Error | null>(null);\n\nuseEffect (() => {\nconst fetchData = async () => {\ntry {\nconst response = await fetch(options.url, { method: options.method 3);\nconst result = await response.json();\nsetData (result);}\n\ncatch (error) {\nsetError(error);\n｝ finally {\nsetLoading (false);\n}\n\nfetchData();},  [options.url, options.method]);\nreturn { data, loading, error };\n\n/ / . . ."
      }
    ]
  },
  {
    "company": "Платформа",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-03-12 20:03:31",
        "content": "2025-03-12 20:03:31\n Лёша -> 2071074234:\nКомпания: Платформа\nВакансия: https://rostov.hh.ru/vacancy/115356070\nЗп: просил 330 net\nГибрид 1 раз в несколько недель\n\nВопросы:\nОчень много вопросов по опыту и резюме.\nКак были устроены процессы.\nБольше вопросов не было, сразу перешли к лайвкодингу.\n\nЛайвкодинг:\nНаписать свою форму регистрации с инпутами:\nинпут email\nинпут password\nинпут password again\n\nнаписать проверку на совподение проверок.\n\nРешение:\nimport React, { useState } from 'react';\n\nexport ...",
        "full_content": "2025-03-12 20:03:31\n Лёша -> 2071074234:\nКомпания: Платформа\nВакансия: https://rostov.hh.ru/vacancy/115356070\nЗп: просил 330 net\nГибрид 1 раз в несколько недель\n\nВопросы:\nОчень много вопросов по опыту и резюме.\nКак были устроены процессы.\nБольше вопросов не было, сразу перешли к лайвкодингу.\n\nЛайвкодинг:\nНаписать свою форму регистрации с инпутами:\nинпут email\nинпут password\nинпут password again\n\nнаписать проверку на совподение проверок.\n\nРешение:\nimport React, { useState } from 'react';\n\nexport function App() {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Пароли не совпадают');\n    } else {\n      // Отправка данных на сервер\n      console.log('Данные отправлены:', { username, email, password });\n      setError(null);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Регистрация</h2>\n      <label>\n        Имя пользователя:\n        <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\n      </label>\n      <br />\n      <label>\n        Email:\n        <input type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\n      </label>\n      <br />\n      <label>\n        Пароль:\n        <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\n      </label>\n      <br />\n      <label>\n        Подтверждение пароля:\n        <input type=\"password\" value={confirmPassword} onChange={(event) => setConfirmPassword(event.target.value)} />\n      </label>\n      <br />\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <button type=\"submit\">Зарегистрироваться</button>\n    </form>\n  );\n}"
      },
      {
        "timestamp": "2024-05-17 08:05:09",
        "content": "2024-05-17 08:05:09\n Roman -> 2071074234:\nНазвание компании: #Иннотех стрим платформа Baas\nвакансия: откликался на https://nn.hh.ru/vacancy/98236457, потом мне написал hr\nважность: хочется пройти собес, важно\nЗП: хочу от 300к на руки, не помню обсуждали с hr зп или нет\nУспеx: ?\n\n// console.clear(); \n \n// 1 ---------------------------------------------------- \n// let value = 8; \n \n// function showValue() { \n//   console.log(`showValue ${value}`); \n// } \n// function wrapper() { \n//   console.log(`...",
        "full_content": "2024-05-17 08:05:09\n Roman -> 2071074234:\nНазвание компании: #Иннотех стрим платформа Baas\nвакансия: откликался на https://nn.hh.ru/vacancy/98236457, потом мне написал hr\nважность: хочется пройти собес, важно\nЗП: хочу от 300к на руки, не помню обсуждали с hr зп или нет\nУспеx: ?\n\n// console.clear(); \n \n// 1 ---------------------------------------------------- \n// let value = 8; \n \n// function showValue() { \n//   console.log(`showValue ${value}`); \n// } \n// function wrapper() { \n//   console.log(`wrapper ${value}`); \n//   var value = 9; \n//   showValue(); \n// } \n \n// Что будет выведено в консоль и почему? \n// wrapper(); \n \n// 2 ----------------------------------------------------- \n// for (var i = 0; i < 3; i++) { \n//   setTimeout(() => console.log(i), 1); \n// } \n \n// for (let i = 0; i < 3; i++) { \n//   setTimeout(() => console.log(i), 1); \n// } \n \n// // Что будет выведено в консоль и почему? \n \n// 3 ----------------------------------------------------- \n// const result = [ \n//   [0, 1], \n//   [2, 3], \n// ].reduce( \n//   (acc, cur) => { \n//     return acc.concat(cur); \n//   }, \n//   [1, 2] \n// ); \n \n// Что будет выведено в консоль? \n// console.log(result); \n \n// 4 ------------------------------------------------------ \n// const firstPromise = new Promise((res, rej) => { \n//   setTimeout(res, 500, \"one\"); \n// }); \n \n// const secondPromise = new Promise((res, rej) => { \n//   setTimeout(res, 100, \"two\"); \n// }); \n \n// Что будет выведено в консоль? \n// Promise.race([firstPromise, secondPromise]).then((res) => console.log(res)); \n \n// 5 ------------------------------------------------------ \n// const set = new Set([1, 1, 2, 3, 3, 3, 4, 5]); \n \n// Что будет выведено в консоль? \n// console.log(set); \n \n// 6 ----------------------------------------------------- \n// async function getData() { \n//   return await Promise.resolve(\"Я сделал это!\"); \n// } \n \n// const data = getData(); \n// Что будет выведено в консоль? \n// console.log(data); \n \n// 7 ----------------------------------------------------- \n// const myPromise = () => Promise.resolve(\"I have resolved!\"); \n \n// function firstFunction() { \n//   myPromise().then((res) => console.log(\"first promise\", res)); \n//   console.log(\"first\"); \n// } \n \n// async function secondFunction() { \n//   console.log(\"second promise\", await myPromise()); \n//   console.log(\"second\"); \n// } \n \n// Что будет выведено в консоль? \n// firstFunction(); \n// secondFunction(); \n \n// 8 ----------------------------------------------------- \n// const value = { number: 10 }; \n// let count = 0; \n \n// const multiply = (x = { ...value }) => { \n//   count += 1; \n//   console.log(count, (x.number *= 2)); \n// }; \n \n// Какой будет результат после вызова функции? \n// multiply(); \n// multiply(); \n// multiply(value); \n// multiply(value); \n \n// 9 ----------------------------------------------------- \n// Напишите функцию, которая принимает строку и возвращает ее в обратном порядке \n \n// console.log(reverseString(\"hello\")); // 'olleh' \n// console.log(reverseString(\"world\")); // 'dlrow' \n \n// 10 ----------------------------------------------------- \n// Напиши функцию для определения количества вхождений каждого элемента в массив \n \n// console.log(getOccurCount([\"a\", \"b\", \"c\", \"b\", \"b\", \"a\"])); \n// { a: 2, b: 3, c: 1 } \n \n// 11 ----------------------------------------------------- \n// Переместить все 0 элементы в конец, сохраняя относительный порядок ненулевых элементов. \n// Нельзя копировать массив \n \n// console.log(moveZeroes([0, 1, 0, 3, 12])); //  [1,3,12,0,0]"
      }
    ]
  },
  {
    "company": "Аэроклуб",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-06-25 16:34:28",
        "content": "2025-06-25 16:34:28\n Роман -> 2071074234:\nКомпания: Аэроклуб \nВакансия: https://hh.ru/vacancy/121779849?hhtmFrom=employer_vacancies\nВопросы: \nОпыт:\n-Расскажи о своем опыте\n-Сколько человек было в команде\n-Как происходило взаимодействие с бэком\n-Проводили ли код-ревью и как оно было устроено\nWeb:\n-Что происходит в браузере, когда вводим адрес сайта?\n-Какой этап отрисовки тяжелее Reflow или Repaint?\n-Есть ли инструменты, которые позволяют избежать Reflow?(свойства transform, opacity, will-change)?...",
        "full_content": "2025-06-25 16:34:28\n Роман -> 2071074234:\nКомпания: Аэроклуб \nВакансия: https://hh.ru/vacancy/121779849?hhtmFrom=employer_vacancies\nВопросы: \nОпыт:\n-Расскажи о своем опыте\n-Сколько человек было в команде\n-Как происходило взаимодействие с бэком\n-Проводили ли код-ревью и как оно было устроено\nWeb:\n-Что происходит в браузере, когда вводим адрес сайта?\n-Какой этап отрисовки тяжелее Reflow или Repaint?\n-Есть ли инструменты, которые позволяют избежать Reflow?(свойства transform, opacity, will-change)?\n-Как управлять процессом загрузки скриптов(async, defer)?\n-Какие протоколы взаимодействия клиент-серверных знаешь?\n-Чем отличаются сокеты от HTTP/HTTPS ?\n-В чем отличие методов GET/POST, можем ли получить данные постом/передать body в get?\n-Какие браузерные хранилища знаешь и чем они отличаются?\nCSS: \n-Много ли задач было по верстке, много ли верстать приходилось?\n-Специфичность селекторов\nJS: \n-Что такое eventloop? Как работает? Для чего нужен?\n-Какие методы промисов ты знаешь? Назови их отличия\nReact: \n-Расскажи про принцип Reconcilation, что это такое. Когда вызывается render()(При изменении state, props ...)?\n-Как избежать лишних ререндеров при изменении пропсов?\n-Какие параметры принимает React.memo(). Рассказать про второй параметр.\n-Рассказать про батчинг.\n-Рассказать про оптимизацию приложения, какие реакт предоставляет инструменты для оптимизации.\n-Знаешь ли про ReactCompiler(В React 19 для автоматической мемоизации)\n-Инструменты для оптимизации сборки.\n\n\nЗадачи: \n//Напиши селектор, чтобы выбрать последний элемент, который будет внутри блока с классом menu и у него не будет атрибута [target=\"_blank\"]\n\n<div class=\"menu\">\n    <a href=\"home.html\">Home</a>\n    <a href=\"contact.html\">Contact</a>\n    <a href=\"profile.html\" target=\"_blank\">\n    Profile\n    </a>\n</div>;\n//Засчитал этот вариант: \n\n<style>\n    .menu > a:last-child:not[target= \"_blank\"] {...}\n</style>\n\n//Валидный вариант: \n\n<style>\n    .menu > a:not([target=\"_blank\"]):not(:has(~ a:not([target=\"_blank\"])))  {...}\n</style>\n//Порядок вывода в консоль\n\n\nconsole.log(1);\n\nsetTimeout(() => console.log(2));\n\nPromise.reject(3).catch(console.log);\n\nnew Promise(resolve => setTimeout(resolve)).then(() => console.log(4));\n\nPromise.resolve(5).then(console.log);\n\nconsole.log(6);\n\nsetTimeout(() => console.log(7),0);\n\n//1635247\n//Что выведет? Сопутствующий вопрос - Как остановить рекурсию? \nsetTimeout(() => console.log('setTimeout'), 0);\n\nfunction someFunc(number = 0) {\n    console.log(number);\n    return Promise.resolve(number + 1).then(someFunc);\n}\n\nsomeFunc();\n\n//Из-за бесконечной рекурсии промисов вывод 'setTimeout' не произойдет. Вывод: 0,1,2,3,4,5... Пока не закончится память\nfunction someFunc(number = 0) {\n    console.log(number);\n    if (number >= 5) return; // Остановка рекурсии\n    return Promise.resolve(number + 1).then(someFunc);\n}\n//Напиши функцию fetchAll, которая вернет массив ответов. Обрабатывать ошибки не нужно\n\nconst urls = [\n    'https://jsonplaceholder.typicode.com/posts/1',\n    'https://jsonplaceholder.typicode.com/posts/2',\n    'https://jsonplaceholder.typicode.com/posts/3'\n];\n\n//Валидный ответ:\nasync function fetchAll(urls) {\n    const response = await Promise.all(\n        urls.map(url => fetch(url).then(response => response.json())\n    );\n    return response;\n}\n\n//СОПУТСТВУЮЩИЙ ВОПРОС! В чем отличие предоставленного тобой ответа выше, от следующего: \nasync function fetchAll(urls) {\n    const results = []\n    urls.forEach(url => (\n        const result = await fetch(url);\n        results.push(result)\n    })\n    return results;\n}\n\n//Ответ: Отличие в оптимизации. Promise.all параллелит запросы, а здесь они будут выполняться поочередно.\n//Напиши тип IsArray, который будет проверять, является ли переданный тип массивом, и возвращает true или false.\ntype IsArray<T> = ...\ntype Test1 = IsArray<string>;      // false\ntype Test2 = IsArray<number[]>;    // true\n\n// Ответ: \ntype IsArray<T> = T extends Array<any> ? true : false;"
      },
      {
        "timestamp": "2024-11-02 05:20:49",
        "content": "2024-11-02 05:20:49\n Сергей -> 2071074234:\nАэроклуб\nЗП: 250к+\nВакансия: hr\nВопросы:\n- расскажи про себя, про твой опыт, стек, интересные задачи\n- эквивалент stopPropagination(pointer-events)\n- специфичность селекторов\n- Что появилось в ES6\n- Особенности стрелочных, let const var, промисов, области видимости, методы промисов\n- Батчинг\n- Virtual Dom, реконсилейшин, fiber\n- Расскажи про виртуализацию\n- Tree Shaking\n- Portal\n- Redux vs Context\n- Задачи \n\n// Реализовать fetchAll(urls). массив urls ст...",
        "full_content": "2024-11-02 05:20:49\n Сергей -> 2071074234:\nАэроклуб\nЗП: 250к+\nВакансия: hr\nВопросы:\n- расскажи про себя, про твой опыт, стек, интересные задачи\n- эквивалент stopPropagination(pointer-events)\n- специфичность селекторов\n- Что появилось в ES6\n- Особенности стрелочных, let const var, промисов, области видимости, методы промисов\n- Батчинг\n- Virtual Dom, реконсилейшин, fiber\n- Расскажи про виртуализацию\n- Tree Shaking\n- Portal\n- Redux vs Context\n- Задачи \n\n// Реализовать fetchAll(urls). массив urls строки, реализовать чтобы они в том же порядке вернули результат(можно через promise.all и циклом)\nconst requests = urls.map(url => fetch(url));\nconst responses = await Promise.all(requests);     \nconst data = await Promise.all(responses.map(response => response.json()));\nreturn data;\n\ndiv p span {color: red}\ndiv, p, span {color: red}\ndiv > p > span {color: red}\nв чем разница?\n\n\nimport React, { useState, useEffect } from 'react';\n\n// имитация запроса к серверу. просто получаем число асинхронно\n// Что можно улучшить/какой функционал добавить?(дебаунс)\n// нужно найти 5 ошибок\nconst fetchRandomNumber = () => Promise.resolve(Math.random());\n\nconst NumberAndScroll = () => {\n  const [number, setNumber] = useState();\n  const [scroll, setScroll] = useState();\n  \n  useEffect(async () => {\n     await setNumber(fetchRandomNumber)\n    \n    window.addEventListener('scroll', () => setScroll(window.scrollY));\n\n    return () => window.removeEventListener('scroll', () => setScroll(window.scrollY));\n  });\n  \n  return (\n    <div>\n      <div> Number: { number } </div>\n      <div> Scroll: { scroll } </div>\n    </div>  \n  )\n}"
      }
    ]
  },
  {
    "company": "EnjoyPro",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-05-22 14:15:17",
        "content": "2025-05-22 14:15:17\n Ivan Kulyaev -> 2071074234:\nenjoypro\nВакансия — https://hh.ru/vacancy/120643320?query=frontend+developer&hhtmFrom=vacancy_search_list\nЗП — 250 000 ₽\n\nВопросы\n\n- Много про опыт коммерческой разработки\n- Какие компоненты и фичи делал сам от и до\n- Как оптимизировать работу браузера (в т.ч. reflow/repaint)\n- Как работает Virtual DOM, reconciliation\n- Разница event.stopPropagation vs event.preventDefault\n- Что происходит при перерендере React-компонента\n- Как работает useMemo, u...",
        "full_content": "2025-05-22 14:15:17\n Ivan Kulyaev -> 2071074234:\nenjoypro\nВакансия — https://hh.ru/vacancy/120643320?query=frontend+developer&hhtmFrom=vacancy_search_list\nЗП — 250 000 ₽\n\nВопросы\n\n- Много про опыт коммерческой разработки\n- Какие компоненты и фичи делал сам от и до\n- Как оптимизировать работу браузера (в т.ч. reflow/repaint)\n- Как работает Virtual DOM, reconciliation\n- Разница event.stopPropagation vs event.preventDefault\n- Что происходит при перерендере React-компонента\n- Как работает useMemo, useCallback — примеры реальных кейсов\n- Когда useLayoutEffect опасен\n- Принципы SOLID, как соблюдаются в React (SRP, DIP, LSP)\n- Как устроен Event Loop, разница между micro/macro tasks\n- Как работают замыкания в JS, зачем нужны useRef и колбэки\n- Какие архитектурные подходы используешь (FSD, атомарный дизайн)\n- Как устроены формы и валидации (Formik, Zod, React Hook Form)\n- Как реализовать сохранение драфта формы с автосейвом\n- Как писал тесты на хуки и логику (Jest, RTL)\n- Проблемы с SSR и как дебажил\n- Что знаешь про Web Vitals, как следил за метриками\n- Чем отличаются == и === и почему это важно\n- Как работает this, где он теряется\n- Что делает Object.create(null)\n- Как бы сделал drag'n'drop без библиотек\n- Как рефакторишь легаси-компоненты\n- Как организовать фичи и слои в FSD-подходе\n- Как разбиваешь логику между slice и thunk\n- Что может пойти не так при deep clone объекта\n- Как бы реализовал очередь на отправку запросов\n\nЗадачи\n\n\n// ----- 1\n// console.log(0.1 + 0.2 === 0.3);\n\n// ----- 2\n// console.log(typeof NaN);\n\n// ----- 3\n// console.log([] + 1);\n// console.log([1] + 1);\n\n// ----- 4\n// for (var i = 0; i < 3; i++) {\n//   setTimeout(() => console.log(i), 0);\n// }\n\n// ----- 5\nfunction Person() {\n  this.age = 30;\n  return 42;\n}\n// const p = new Person();\n// console.log(typeof p);\n\n// ----- 6\nconst arr = [4, 5, 6];\narr[10] = 99;\n// console.log(arr.length);\n// console.log(arr);\n\n// ----- 7\nfunction foo() {\n  'use strict';\n  console.log(this);\n}\n// foo();\n\n// ----- 8\nconst obj = {\n  message: \"Hello\",\n  getMessage() {\n    return this.message;\n  },\n};\nconst get = obj.getMessage;\n// console.log(get());"
      },
      {
        "timestamp": "2024-06-28 14:43:30",
        "content": "2024-06-28 14:43:30\n 156271493 -> 2071074234:\n- Enjoypro \n- https://hh.ru/vacancy/100323713?hhtmFrom=employer_vacancies\n- зп: 180-250к\n\nЗадачи: \n\n1) \n\nfunction changeStuff(a, b) {\n a = a * 10\n b.item = 'changed'\n}\n\nlet num = 10\nlet obj1 = { item: 'unchanged' }\n\nchangeStuff(num, obj1)\n\nconsole.log(num)\nconsole.log(obj1.item)\n\n\n2)\n \nconst shape = {\n radius: 10,\n diameter() {\n  return this.radius * 2\n },\n perimeter: () => 2 * this.radius,\n}\n\nconsole.log(shape.diameter())\nconsole.log(shape.perimeter...",
        "full_content": "2024-06-28 14:43:30\n 156271493 -> 2071074234:\n- Enjoypro \n- https://hh.ru/vacancy/100323713?hhtmFrom=employer_vacancies\n- зп: 180-250к\n\nЗадачи: \n\n1) \n\nfunction changeStuff(a, b) {\n a = a * 10\n b.item = 'changed'\n}\n\nlet num = 10\nlet obj1 = { item: 'unchanged' }\n\nchangeStuff(num, obj1)\n\nconsole.log(num)\nconsole.log(obj1.item)\n\n\n2)\n \nconst shape = {\n radius: 10,\n diameter() {\n  return this.radius * 2\n },\n perimeter: () => 2 * this.radius,\n}\n\nconsole.log(shape.diameter())\nconsole.log(shape.perimeter())\n\n\n3) \n\nfunction* generator(i) {\n yield i\n yield i * 2\n}\n\nconst gen = generator(10)\nconsole.log(gen.next().value)\nconsole.log(gen.next().value)\n\n\nУспех собес:❌"
      }
    ]
  },
  {
    "company": "ITQ Group",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-11-15 18:20:58",
        "content": "2024-11-15 18:20:58\n Sergey F -> 2071074234:\nкомпания: ITQ Group\nвакансия: hr сама написала, проект МКБ\nзп: до 260к\n\n\nбольшую часть времени писали и параллельно были вопросы:\n- Что такое замыкания\n- Какие хуки знаешь в реакте\n- Как работает хук useEffect\n- Отличия от useLayoutEffect\n- Жизненный цикл\n\n// Написать хук useOperationQuery, соответствующий логики RTK Query (частично React Query).\n// Логика работы:\n// по умолчанию: {data: null,isLoading: false,isError: false,error: null}\n// во время за...",
        "full_content": "2024-11-15 18:20:58\n Sergey F -> 2071074234:\nкомпания: ITQ Group\nвакансия: hr сама написала, проект МКБ\nзп: до 260к\n\n\nбольшую часть времени писали и параллельно были вопросы:\n- Что такое замыкания\n- Какие хуки знаешь в реакте\n- Как работает хук useEffect\n- Отличия от useLayoutEffect\n- Жизненный цикл\n\n// Написать хук useOperationQuery, соответствующий логики RTK Query (частично React Query).\n// Логика работы:\n// по умолчанию: {data: null,isLoading: false,isError: false,error: null}\n// во время запроса {data: null,isLoading: true,isError: false,error: null}\n// Успешный запрос {data: {},isLoading: false,isError: false,error: null}\n// Ошибка запрос {data: null,isLoading: false,isError: true,error: {}}\n// POST /get body: params\n// отмена запроса\n// При изменении зависимости, делать перезапрос\n\nimport { useState, useEffect, useCallback } from 'react';\n\nfunction useOperationQuery(queryParams) {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback(async (params, abortSignal) => {\n    setIsError(false);\n    setError(null);\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('/get', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(params),\n        signal: abortSignal,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      setData(result);\n    } catch (e) {\n      if (e.name !== 'AbortError') { // Игнорируем ошибки отмены\n        setIsError(true);\n        setError(e);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    fetchData(queryParams, abortController.signal);\n\n    return () => {\n      abortController.abort();\n    };\n  }, [queryParams, fetchData]);\n\n  return { data, isLoading, isError, error };\n}\n\n// Использование\nconst { data, isLoading, isError, error } = useOperationQuery({ params: 1 });\n\n\nесли кратно 3 и 5, писать FizzBuzz, если 3 - писать Fizz, если 5, писать Buzz, иначе просто число.\n\nconst fizzBuzz = (number) => {\n  for (let i = 0; i <= number; i++) {\n    if (i % 3 === 0 && i % 5 === 0) {\n      console.log(\"FizzBuzz\");\n    } else if (i % 3 === 0) {\n      console.log(\"Fizz\");\n    } else if (i % 5 === 0) {\n      console.log(\"Buzz\");\n    } else {\n      console.log(i);\n    }\n  }\n};\n\nрассчитать сумму за количество проведенных ночей.\n\nfunction bookingCalculate(nights, firstNight = new Date()) {\n   let result = 0\n   const nightsCounter = new Date(firstNight)\n\n   for (let i = 0; i < nights; i++){\n      const day = nightsCounter.getDay()\n\n      if (!day || day === 6){\n         result += 2200\n      } else {\n         result += 1500\n      }\n\n      nightsCounter.setDate(nightsCounter.getDate() + 1)\n      console.log(nightsCounter);\n      \n   }\n\n   return result\n}\n\nconsole.log(bookingCalculate(7));\nconsole.log(bookingCalculate(3, new Date(\"2023-11-10\")));"
      },
      {
        "timestamp": "2024-05-21 03:50:43",
        "content": "2024-05-21 03:50:43\n Alibek Zhulmurzin -> 2071074234:\nНазвание компании: ITQ Group (проект МКБ)\nСсылка на вакансию: HR сама написала\nЗП: от 250к на руки\nУспех собеса: ✅\nФидбек: HR сказала что всё клёво, я попросил оформление по ИП, дали оффер на 1959р/час\nСсылка на запись: https://youtu.be/K7VW4YK8PUc\nЗадачи:\n// Оплата за проживание в отеле\n// Необходимо написать функцию расчёта стоимости проживания посетителя в отеле\n// Функция может принимать 2 аргумента\n// 1. Количество ночей проживания в оте...",
        "full_content": "2024-05-21 03:50:43\n Alibek Zhulmurzin -> 2071074234:\nНазвание компании: ITQ Group (проект МКБ)\nСсылка на вакансию: HR сама написала\nЗП: от 250к на руки\nУспех собеса: ✅\nФидбек: HR сказала что всё клёво, я попросил оформление по ИП, дали оффер на 1959р/час\nСсылка на запись: https://youtu.be/K7VW4YK8PUc\nЗадачи:\n// Оплата за проживание в отеле\n// Необходимо написать функцию расчёта стоимости проживания посетителя в отеле\n// Функция может принимать 2 аргумента\n// 1. Количество ночей проживания в отеле (обязательный параметр)\n// 2. Дата заселения (необязательный параметр). Если параметр не указан, то\n// отсчёт идёт от текущего дня\n// стоимость проижвания в будни (с понедельника по пятницу) - 1500 руб\n// стоимость проижвания в выходные - 2200 руб\n\nfunction bookingCalculate(nights, startDate = new Date()) {\n  let totalCost = 0;\n  let currentDate = new Date(startDate);\n\n  for (let i = 0; i < nights; i++) {\n    const dayOfWeek = currentDate.getDay();\n    if (!dayOfWeek || dayOfWeek === 6) {\n      totalCost += 2200;\n    } else {\n      totalCost += 1500;\n    }\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n\n  return totalCost;\n}\n\nconsole.log(bookingCalculate(7)); // 11900\nconsole.log(bookingCalculate(3, new Date('2023-11-10'))); //5900"
      }
    ]
  },
  {
    "company": "Купер",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-09-15 16:31:56",
        "content": "2024-09-15 16:31:56\n Руслан -> 2071074234:\nКупер\n— зп: до 270к\n— вакансия: https://hh.ru/vacancy/106590224\n— вопросы: \n1. critical rendering path\n2. cors\n— задачи:\nзадача на реакт копия этой https://t.me/c/2071074234/489/42521",
        "full_content": "2024-09-15 16:31:56\n Руслан -> 2071074234:\nКупер\n— зп: до 270к\n— вакансия: https://hh.ru/vacancy/106590224\n— вопросы: \n1. critical rendering path\n2. cors\n— задачи:\nзадача на реакт копия этой https://t.me/c/2071074234/489/42521"
      },
      {
        "timestamp": "2024-07-17 10:51:32",
        "content": "2024-07-17 10:51:32\n Alehandro¯\\_(ツ)_/¯ -> 2071074234:\nКомпания: СберМаркет(Купер)\n- зп: 200-220к\n- вакансия: hr написала сама\n- вопросы: по вопросам много вопросов по CSS, стилям, по анимациям и как лучше делать анимации.\n- фидбек: ❌ отказ, hr написала что ищут спеца более знающего в их стеке, зачем-то перкомендовали больше про JS узнать, серию книг \"Ты не знаешь JavaScript\" и про очередь макро, микро тасок, хотя вопросы были больше по CSS",
        "full_content": "2024-07-17 10:51:32\n Alehandro¯\\_(ツ)_/¯ -> 2071074234:\nКомпания: СберМаркет(Купер)\n- зп: 200-220к\n- вакансия: hr написала сама\n- вопросы: по вопросам много вопросов по CSS, стилям, по анимациям и как лучше делать анимации.\n- фидбек: ❌ отказ, hr написала что ищут спеца более знающего в их стеке, зачем-то перкомендовали больше про JS узнать, серию книг \"Ты не знаешь JavaScript\" и про очередь макро, микро тасок, хотя вопросы были больше по CSS"
      }
    ]
  },
  {
    "company": "Ростелеком Ит",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-18 14:03:28",
        "content": "2025-07-18 14:03:28\n Alexandro 4 -> 2071074234:\nРостелеком ИТ  \nВакансия: https://hh.ru/vacancy/122109330\nЗП 270к (можно просить больше)\n\nВопросы:\n1. Расскажи про свой опыт и какие крутые задачи реализовал? (Спрашивают по резюме)  \n2. Доводилось ли оптимизировать приложение и как оптимизировал?  \n3. Что можно посмотреть во вкладках Chrome Dev Tools и React Dev Tools? Нужно привести пример успешного использования для поиска проблем.  \n4. К тебе пришел менеджер и говорит: \"Страница на сайте лагает...",
        "full_content": "2025-07-18 14:03:28\n Alexandro 4 -> 2071074234:\nРостелеком ИТ  \nВакансия: https://hh.ru/vacancy/122109330\nЗП 270к (можно просить больше)\n\nВопросы:\n1. Расскажи про свой опыт и какие крутые задачи реализовал? (Спрашивают по резюме)  \n2. Доводилось ли оптимизировать приложение и как оптимизировал?  \n3. Что можно посмотреть во вкладках Chrome Dev Tools и React Dev Tools? Нужно привести пример успешного использования для поиска проблем.  \n4. К тебе пришел менеджер и говорит: \"Страница на сайте лагает!\". Что будешь делать?  \n5. Какие, кроме WebSocket’а, есть варианты взаимодействия с сервером? Расскажи подробно о каждом. Почему на проекте использовали именно WebSocket?  \n6. Когда надо использовать useMemo и useCallback?  \n7. Какие недостатки есть у React Context и может ли он полностью заменить Redux?  \n8. Что можешь сказать про аналоги Redux? В чем их проблемы?  \n9. Какая архитектура приложения использовалась у вас на проекте?  \n10. Какие минусы есть у FSD?  \n11. Какие паттерны проектирования знаешь? Назови виды.  \n12. Расскажи про SOLID и как он применяется в React.  \n13. Нужно реализовать undo/redo механизм — как будешь делать? (Использовать паттерн \"Команда\")  \n14. Какие есть паттерны, специфические для React?  \n15. Есть два компонента: аватарка пользователя и комментарий. Нужно разместить аватарку внутри комментария. Как это сделать без использования компонента-обертки? (Использовать паттерн \"slot\".)"
      },
      {
        "timestamp": "2025-06-13 07:54:40",
        "content": "2025-06-13 07:54:40\n Никита -> 2071074234:\nРостелеком ИТ\nЗП: от 250 говорил\nВакансия\n\nВ основном спрашивали про опыт и задавали вопросы по нему\n\nКакие есть способы взаимодействия с сервером помимо веб сокетов? Преимущества/недостатки? В каких ситуациях лучше всего применять каждый способ?\nЧто происходит при вводе адреса сайта и нажатия ентер?\nКак браузер понимает jsx и tsx?\nКак найти причины лагов страницы?(Perfomance, react profiler etc...)\nСпрашивал подробно как работает вкладка perfomance и p...",
        "full_content": "2025-06-13 07:54:40\n Никита -> 2071074234:\nРостелеком ИТ\nЗП: от 250 говорил\nВакансия\n\nВ основном спрашивали про опыт и задавали вопросы по нему\n\nКакие есть способы взаимодействия с сервером помимо веб сокетов? Преимущества/недостатки? В каких ситуациях лучше всего применять каждый способ?\nЧто происходит при вводе адреса сайта и нажатия ентер?\nКак браузер понимает jsx и tsx?\nКак найти причины лагов страницы?(Perfomance, react profiler etc...)\nСпрашивал подробно как работает вкладка perfomance и profiler\nЧто такое виртуализация?\nС какими проблемами столкнёшься при работе с Intersection Observer? (хотели услышать про размер элементов)"
      }
    ]
  },
  {
    "company": "Урбантех",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-07-23 12:50:30",
        "content": "2024-07-23 12:50:30\n Руслан -> 2071074234:\nУрбантех\n— зп: 260к\n— вакансия: https://hh.ru/vacancy/101876086\n— задачи:\nПроревьюить и внести правки \nimport React,{ useEffect, useState } from \"https://esm.sh/react\";\nimport ReactDOM from \"https://esm.sh/react-dom\";\n\n\ninterface Post {\n  id: number;\n  userId: number;\n  body: string;\n  title: string;\n}\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface Store {\n  posts: Post[];\n  users: User[];\n  count: numb...",
        "full_content": "2024-07-23 12:50:30\n Руслан -> 2071074234:\nУрбантех\n— зп: 260к\n— вакансия: https://hh.ru/vacancy/101876086\n— задачи:\nПроревьюить и внести правки \nimport React,{ useEffect, useState } from \"https://esm.sh/react\";\nimport ReactDOM from \"https://esm.sh/react-dom\";\n\n\ninterface Post {\n  id: number;\n  userId: number;\n  body: string;\n  title: string;\n}\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface Store {\n  posts: Post[];\n  users: User[];\n  count: number;\n}\n\nlet isStarted = false;\n\nfunction App() {\n  const [store, setStore] = useState<Store>({\n    posts: [],\n    count: 0,\n    users: []\n  });\n  const [time, setTime] = useState(0);\n\n  // Запрашиваем данные с сервера\n  useEffect(() => {\n    const fetchData = async () => {\n      const resPosts = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n      store.posts = await resPosts.json();\n\n      const resUsers = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      store.users = await resUsers.json();\n      setStore(store);\n    };\n    fetchData();\n  }, []);\n\n  // Инициализация счетчика времени\n  useEffect(() => {\n    if (!isStarted) {\n      isStarted = true;\n\n      setInterval(() => {\n        setTime((prev) => prev + 1);\n      }, 1000);\n    }\n  });\n\n  // Клик по кнопкам + и -\n  const clickAdd = (isPlus) => {\n    if (isPlus) {\n      store.count++;\n    } else {\n      store.count--;\n    }\n    if (store.count < 0) {\n      alert(\"Рейтинг не может быть ниже 0\");\n      return;\n    }\n\n    if (store.count > 5) {\n      alert(\"Рейтинг не может быть выше 5\");\n      return;\n    }\n    setStore(store);\n  };\n\n  const findUserById = (id) => {\n    return store.users.find((val) => val.id === id)?.name;\n  };\n\n  // Рендер списка\n  const renderItem = (item) => {\n    return (\n      <div class=\"post\">\n        <div class=\"title\">{item.title}</div>\n        <div class=\"user\">Автор: {findUserById(item.userId)}</div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"info\">Вы смотрите эту страницу: {time} секунд</div>\n      <div className=\"raiting\">\n        <button onClick={clickAdd.bind(this, false)}>-</button>\n        Оцените подборку постов (от 0 до 5): <b>{store.count}</b>\n        <button onClick={clickAdd}>+</button>\n      </div>\n      <h1>Посты</h1>\n      <ul>{store.posts.map((post) => renderItem(post))}</ul>\n    </div>\n  );\n}\n\nReactDOM.createRoot(document.getElementById(\"root\") as HTMLElement).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"
      },
      {
        "timestamp": "2024-07-13 08:33:46",
        "content": "2024-07-13 08:33:46\n Ярослав Мудрый -> 2071074234:\nУрбантех\n- вакансия: сами написали\n- зп: 250к+\n\nВопросы:\n- Расскажи про eventloop\n- Какие хуки в реакт использовал\n- Что может вызвать перерисовку узла виртуального dom\n\nЗадача: исправить код react компонента, не работает функция addClick (изначально мутировался объект в стейте, потом устанавливался в стейт, то есть ссылка на объект оставалась той же), исправленная функция:\n\nconst clickAdd = (isPlus) => {\n  let newCount = store.count;\n\n  if (isP...",
        "full_content": "2024-07-13 08:33:46\n Ярослав Мудрый -> 2071074234:\nУрбантех\n- вакансия: сами написали\n- зп: 250к+\n\nВопросы:\n- Расскажи про eventloop\n- Какие хуки в реакт использовал\n- Что может вызвать перерисовку узла виртуального dom\n\nЗадача: исправить код react компонента, не работает функция addClick (изначально мутировался объект в стейте, потом устанавливался в стейт, то есть ссылка на объект оставалась той же), исправленная функция:\n\nconst clickAdd = (isPlus) => {\n  let newCount = store.count;\n\n  if (isPlus) {\n    newCount++;\n  } else {\n    newCount--;\n  }\n\n  if (newCount < 0) {\n    alert(\"Рейтинг не может быть ниже 0\");\n    return;\n  }\n\n  if (newCount > 5) {\n    alert(\"Рейтинг не может быть выше 5\");\n    return;\n  }\n\n  setStore({ ...store, count: newCount });\n};"
      }
    ]
  },
  {
    "company": "Avito",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-11-01 17:26:23",
        "content": "2024-11-01 17:26:23\n RdK -> 2071074234:\n1) Avito 2 этап платформа\n2) Рефералка\n3) от 270\n/*\nМы хотим проверять режим логгера, чтобы не выводить лишние сообщения в консоль.\nМы ожидаем, что в каждой (отмеченной точке) будет 'This is Dev mode'.\nВсё ли работает верно?\n*/\nconst logger = {\n  mode: 'Dev',\n  check() {\n      console.log(`This is ${this.mode} mode`);\n  }\n};\n\nlogger.check(); // => ? (1) dev\n\nconst loggerCheck = logger.check;\nloggerCheck.call(logger); // => ? (2) undefined\n\nfunction execute...",
        "full_content": "2024-11-01 17:26:23\n RdK -> 2071074234:\n1) Avito 2 этап платформа\n2) Рефералка\n3) от 270\n/*\nМы хотим проверять режим логгера, чтобы не выводить лишние сообщения в консоль.\nМы ожидаем, что в каждой (отмеченной точке) будет 'This is Dev mode'.\nВсё ли работает верно?\n*/\nconst logger = {\n  mode: 'Dev',\n  check() {\n      console.log(`This is ${this.mode} mode`);\n  }\n};\n\nlogger.check(); // => ? (1) dev\n\nconst loggerCheck = logger.check;\nloggerCheck.call(logger); // => ? (2) undefined\n\nfunction execute(fn) {\n  return fn();\n}\nexecute(logger.check.bind(logger)); // => ? (3) undefined\n\n///\n\n/*\nВы расследуете работу функцию логирования. Определите какие значения будут у переменных count и value в момент логирования в консоль браузера, как показано ниже\n*/\nlet count = 0;\nlet value = { message: 'app initialized', isLogged: false };\n\nfunction makeScopedLogger(count, value) {\n\n    function logMessage() {\n        console.log(count, value); // (2) ?  1 { message: 'app initialized', isLogged: true  }\n    }\n\n    count += 1;\n    console.log(count, value); // (1) ? 1  { message: 'app initialized', isLogged: false }\n\n    value.isLogged = true;\n\n    return logMessage;\n}\n\nconst logMessage = makeScopedLogger(count, value);\n\nvalue = { message: 'app run' };\n\nlogMessage();\n\nconsole.log(count, value); // (3) ? 0 { message: 'app run' }\n\n///\n\n/**\n    Мы разрабатываем приложение через Console Driven Development.\n    К сожалению, у нас потерялась часть кода, но остался последний вывод.\n    Расставьте тексты для console.\n*/\nfunction checkOrder() {\n    console.log('1');\n\n    async function asyncFn() {\n        console.log('2');\n        await Promise.resolve(null);\n        console.log('4');34\n    }\n\n    asyncFn();\n\n    new Promise((resolve) => {\n        setTimeout(() => {\n             resolve();\n             console.log('5')\n        }, 0);\n    }).then(() => {\n        console.log('6');\n    });\n\n    console.log('3');43\n}\n\ncheckOrder();\n\n///\n\n/* Дана разметка\n<main>\n    <input type=\"text\" id=\"search-input\" placeholder=\"Поиск по объявлениям\" />\n    <div id=\"suggests-container\"></div>\n</main>\nПо мере ввода текста в поле нужно выполнять следующее:\n\n1. Запрашивать список саджестов по api-ручке /suggests. Ручка на вход принимает term. Например:\n { term: \"квартира\" }. Ответ приходит в таком виде: { suggests: [{ title: string }, ...] }.\n2. Под полем отображать список полученных саджестов.\n3. При повторном запросе старый список заменяется на новый.\n4. В случае ошибки запроса список саджестов не показывается.\n5. Если в поле ввода ничего не введено, список саджестов не показывается и не запрашивается.\n6. В случае отсутствия результатов по api-ручке в качестве саджеста отображается введенное значение.\n\n*/\n// <script>\n    const fetchSuggests = async term => {\n        const response = await fetch('/suggests', {\n            method: 'POST',\n            body: { term },\n        });\n\n        if (!response.ok) {\n            throw response;\n        } \n\n        return response.json();\n    }\n\n    const searchInput = document.getElementById('search-input');\n    const suggestsContainer=document.getElementById(\"suggests-container\")\n\n    searchInput.addEventListener('input', async event => {\n            const term =event.target.value.trim()  \n\n            if(term===''){\n                suggestsContainer.innerHTML=''\n                return\n            }\n            try{\n\n                const suggestList=await fetchSuggests(term)\n\n                 suggestsContainer.innerHTML= suggestList.length > 0 \n                            ? suggestList.map(s=>`<div class=\"suggests\">${s}</div>`.join(''))\n                            : `<div class=\"suggests\">${term}</div>`\n            }catch(e){\n                suggestsContainer.innerHTML=''\n                console.log(e)\n            }\n    });\n// </script>"
      },
      {
        "timestamp": "2024-05-13 11:37:06",
        "content": "2024-05-13 11:37:06\n Санжар -> 2071074234:\nНазвание компании: Авито [второй этап \"Программирование\"]\nВакансия: https://career.avito.com/vacancies/razrabotka/2731/\nЗП: запросил 330к-380к\nУспех: ✅\nФидбек: Должно было быть две задачи на написание кода, я успел решить только одну. Затем были вопросы на оценку сложности (Big O) написанного алгоритма и других различных операций типа чтения или записи в разные структуры данных (linked list, map, array). \n\nЗадача:\nРеализовать математическое суммирование...",
        "full_content": "2024-05-13 11:37:06\n Санжар -> 2071074234:\nНазвание компании: Авито [второй этап \"Программирование\"]\nВакансия: https://career.avito.com/vacancies/razrabotka/2731/\nЗП: запросил 330к-380к\nУспех: ✅\nФидбек: Должно было быть две задачи на написание кода, я успел решить только одну. Затем были вопросы на оценку сложности (Big O) написанного алгоритма и других различных операций типа чтения или записи в разные структуры данных (linked list, map, array). \n\nЗадача:\nРеализовать математическое суммирование двух чисел, где число - это массив элементов со значением от 1 до 9\n[1,2,3] + [2,2,3] = [3,4,6]  (123+223 = 346)\n[1,2,3] + [2,2,9] = [3,5,2] (123+229 = 352)\n[9,9,9] + [1] = [1,0,0,0] (999+1 = 1000)"
      }
    ]
  },
  {
    "company": "Росгосстрах",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-12-11 13:28:46",
        "content": "2024-12-11 13:28:46\n Mikhail Sorokin -> 2071074234:\nРосгосстрах\nВакансия — ссылки нет, HR написала в тг\nЗп — конкретную сумму на тот момент не обсуждали, я назвал сумму от 300 000 на руки",
        "full_content": "2024-12-11 13:28:46\n Mikhail Sorokin -> 2071074234:\nРосгосстрах\nВакансия — ссылки нет, HR написала в тг\nЗп — конкретную сумму на тот момент не обсуждали, я назвал сумму от 300 000 на руки"
      },
      {
        "timestamp": "2024-05-24 06:07:47",
        "content": "2024-05-24 06:07:47\n stil -> 2071074234:\nНазвание компании: росгосстрах\n- зп: 250к\n- вакансия: https://omsk.hh.ru/vacancy/98813167\n- успех собеса:  ❌ (выбрали другого кандидата)\n\nВопросы:\n- про опыт (в т.ч. с ui kit)\n- микрофронты, лерна\n- хойстинг и замыкания\n- про jsdoc \n- что такое дженерик в ts\n- варианты авторизации\n- специфичность селекторов css\n- обработка аналитики через redux (middleware)\n- отличия git pull от git fetch\n\nЗадачи:\n// определите значение this\nconst getSomethisng = () => {\n...",
        "full_content": "2024-05-24 06:07:47\n stil -> 2071074234:\nНазвание компании: росгосстрах\n- зп: 250к\n- вакансия: https://omsk.hh.ru/vacancy/98813167\n- успех собеса:  ❌ (выбрали другого кандидата)\n\nВопросы:\n- про опыт (в т.ч. с ui kit)\n- микрофронты, лерна\n- хойстинг и замыкания\n- про jsdoc \n- что такое дженерик в ts\n- варианты авторизации\n- специфичность селекторов css\n- обработка аналитики через redux (middleware)\n- отличия git pull от git fetch\n\nЗадачи:\n// определите значение this\nconst getSomethisng = () => {\n  console.log(this)\n}\n\nfunction getSomethisng2() {\n  console.log(this)\n} \n /// Определите средний вес всех лемонов (среднее арифметическое по ключу weight)\nconst array = [{\n 'fruit': 'lemon',\n  weight: 10\n},\n{\n 'fruit': 'apple',\n  weight: 10\n},\n{\n 'fruit': 'lemon',\n  weight: 10\n},\n{\n 'fruit': 'lemon',\n  weight: 40\n}]"
      }
    ]
  },
  {
    "company": "Копания: Sapiens Solutions",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-03-05 17:33:11",
        "content": "2025-03-05 17:33:11\n Матвей Захаров -> 2071074234:\nКопания: Sapiens Solutions, 3 этап, общение с Product Owner\nВакансия: https://hh.ru/vacancy/115506799?hhtmFrom=employer_vacancies \n\nВ начале длительный рассказ о проекте, после soft вопросы:\n\n- Что ждёшь от нового места работы\n- В каком направлении хочешь развиваться\n- Что точно не хотел бы видеть на новом проекте, в который иду, если сравнивать с текущим местом работы + наоборот, что точно бы хотел видеть\n- Как отношусь к work-life balance, соб...",
        "full_content": "2025-03-05 17:33:11\n Матвей Захаров -> 2071074234:\nКопания: Sapiens Solutions, 3 этап, общение с Product Owner\nВакансия: https://hh.ru/vacancy/115506799?hhtmFrom=employer_vacancies \n\nВ начале длительный рассказ о проекте, после soft вопросы:\n\n- Что ждёшь от нового места работы\n- В каком направлении хочешь развиваться\n- Что точно не хотел бы видеть на новом проекте, в который иду, если сравнивать с текущим местом работы + наоборот, что точно бы хотел видеть\n- Как отношусь к work-life balance, соблюдаю ли\n- Доступен ли в нерабочее время\n- Как отношусь к переработкам"
      },
      {
        "timestamp": "2025-02-28 10:59:34",
        "content": "2025-02-28 10:59:34\n Матвей Захаров -> 2071074234:\nКопания: Sapiens Solutions\nВакансия: https://hh.ru/vacancy/115506799?hhtmFrom=employer_vacancies \nЗапись прерывалась на середине, здесь первая часть и финал: https://youtu.be/gWY3ZSNEC4s \n\nВопросы сходятся с собесом в iFellow: https://t.me/c/2071074234/489/108386\n\n- каким css пользовались на работе (SCCS/LESS)\n- как вертикально отцентровать элемент\n- что такое контекст наложения\n- что такое z-index\n- способы копирования объекта + как при написан...",
        "full_content": "2025-02-28 10:59:34\n Матвей Захаров -> 2071074234:\nКопания: Sapiens Solutions\nВакансия: https://hh.ru/vacancy/115506799?hhtmFrom=employer_vacancies \nЗапись прерывалась на середине, здесь первая часть и финал: https://youtu.be/gWY3ZSNEC4s \n\nВопросы сходятся с собесом в iFellow: https://t.me/c/2071074234/489/108386\n\n- каким css пользовались на работе (SCCS/LESS)\n- как вертикально отцентровать элемент\n- что такое контекст наложения\n- что такое z-index\n- способы копирования объекта + как при написании рекурсивной функции скопировать функцию, являющуюся методом\n- как работает асихронность в js (хочет и про webworker, service worker услышать)\n- отличие any от unknown\n- отличие типов от интерфейсов \n- отличие merge от rebase + что лучше \n- мемоизация в react\n- зачем key в react\n\n-  показывает на экране картинку, как бы сверстал (есть в записи)\n\n(function() {\n    var a = b = 3;\n})();\n\nconsole.log(typeof a);\nconsole.log(typeof b);\n\n\nsetTimeout(() => console.log(\"timeout\"));\n\nPromise.resolve().then(() => console.log(\"promise\"));\n\nwindow.requestAnimationFrame(() => console.log(\"requestAnimationFrame\"));\n\nconsole.log(\"code\");\n\n\n'use strict';\nvar obj = {\n    i: 10,\n    b: () => console.log(this.i, this),\n    c: function() {\n        console.log(this.i, this);\n    }\n}\n\nobj.b();\nobj.c();\n\n\nvar test = (function() {\n    var value = 1;\n    function setValue(newValue) {\n        value = newValue;\n    }\n\n    return {\n        value: value,\n        setValue: setValue\n    };\n})();\n\ntest.setValue(2);\nconsole.log(test.value);\n\n\nНа лайвкодинг - описывает словами задачу на число фибоначчи\n\nfunction fibonacci(n) {\n    if (n <= 1) return n;\n    let a = 0, b = 1;\n    for (let i = 2; i <= n; i++) {\n        let temp = a + b;\n        a = b;\n        b = temp;\n    }\n    return b;\n}\n\nconsole.log(fibonacci(5));  // 5\nconsole.log(fibonacci(10)); // 55\nconsole.log(fibonacci(15)); // 610"
      }
    ]
  },
  {
    "company": "Маквес",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-06-26 16:00:43",
        "content": "2025-06-26 16:00:43\n Aintripin -> 2071074234:\nКомпания: Маквес (26.06.2025)\n\nВакансия: HTML-верстальщик (гибрид); https://mytishchi.hh.ru/vacancy/121396515?hhtmFrom=employer_vacancies\n\nЗП: 150,000, если я не нагаллюцинировал. Сейчас на сайте нет вилки.\n\nСпрашивали преимущественно по CSS и по опыту.\n\nВопросы по CSS:\n\n1. Виды позиционирования SCSS (static, relative, absolute, fixed, sticky)\n2. Какие есть единицы измерения, какие лучше использовать (px, em, rm, %, vw, vh)\n3. Различия между em и rem...",
        "full_content": "2025-06-26 16:00:43\n Aintripin -> 2071074234:\nКомпания: Маквес (26.06.2025)\n\nВакансия: HTML-верстальщик (гибрид); https://mytishchi.hh.ru/vacancy/121396515?hhtmFrom=employer_vacancies\n\nЗП: 150,000, если я не нагаллюцинировал. Сейчас на сайте нет вилки.\n\nСпрашивали преимущественно по CSS и по опыту.\n\nВопросы по CSS:\n\n1. Виды позиционирования SCSS (static, relative, absolute, fixed, sticky)\n2. Какие есть единицы измерения, какие лучше использовать (px, em, rm, %, vw, vh)\n3. Различия между em и rem (rem — \"r\" for \"root\", т.е. он привязан к корневому html font-size, а em идёт относительно родителя)\n4. псевдо-классы, какие есть и для чего (:hover, :active, :focus, :visited, :link, :disabled, :enabled)\n5. псевдо-элементы (::before, ::after)\n6. как работает Z-index и какие есть нюансы, если элементов с Z-index много на странице, если есть вложенные\n7. Такая ситуация: есть два <div>'а, они оба контейнеры. У div'а A Z-index равен 2, а у B равен 3. Внутри A есть C с Z-index 5, а внутри B есть D с Z-index равным 4. \nВопрос: какой из div'ов C или D будет \"выше\" и почему?\nОтвет: выше будет div D с z-index 4, потому что оба упираются в их родителей, а у родителя D (div'а B Z-index равен 3, что больше 2)\n8. media запросы, что это и зачем (адаптация на мобилки и планшеты, помимо десктопа; светлая/тёмная тема; prefers-reduced-motion (предпочтение пользователя без анимации))\n9. prefers-reduced-motion все анимации отключает или как?\nсам он ничего не делает, это просто media запрос, который мы сами пишем, внутри которого уже пишется логика. Т.е. мы сами говорим, реагировать надо на это или нет\n\nВопросы по опыту:\n1. чем занимался на последнем месте работы\n2. приходилось ли работать со styled components\n3. styled components vs SCSS modules, предпочтения\n4. про UI Kit на проекте рассказал\n5. React Grid Layout, рассказать что это и для чего\n6. Таблицы на чём писали? (самописные)"
      },
      {
        "timestamp": "2025-06-26 16:00:13",
        "content": "2025-06-26 16:00:13\n Aintripin -> 2071074234:\nКомпания: Маквес (26.06.2025)\n\nВакансия: HTML-верстальщик (гибрид); https://mytishchi.hh.ru/vacancy/121396515?hhtmFrom=employer_vacancies\n\nЗП: 150,000, если я не нагаллюцинировал. Сейчас на сайте нет вилки.\n\nСпрашивали преимущественно по CSS и по опыту.\n\nВопросы по CSS:\n\n1. Виды позиционирования SCSS (static, relative, absolute, fixed, sticky)\n2. Какие есть единицы измерения, какие лучше использовать (px, em, rm, %, vw, vh)\n3. Различия между em и rem...",
        "full_content": "2025-06-26 16:00:13\n Aintripin -> 2071074234:\nКомпания: Маквес (26.06.2025)\n\nВакансия: HTML-верстальщик (гибрид); https://mytishchi.hh.ru/vacancy/121396515?hhtmFrom=employer_vacancies\n\nЗП: 150,000, если я не нагаллюцинировал. Сейчас на сайте нет вилки.\n\nСпрашивали преимущественно по CSS и по опыту.\n\nВопросы по CSS:\n\n1. Виды позиционирования SCSS (static, relative, absolute, fixed, sticky)\n2. Какие есть единицы измерения, какие лучше использовать (px, em, rm, %, vw, vh)\n3. Различия между em и rem (rem — \"r\" for \"root\", т.е. он привязан к корневому html font-size, а em идёт относительно родителя)\n4. псевдо-классы, какие есть и для чего (:hover, :active, :focus, :visited, :link, :disabled, :enabled)\n5. псевдо-элементы (::before, ::after)\n6. как работает Z-index и какие есть нюансы, если элементов с Z-index много на странице, если есть вложенные\n7. Такая ситуация: есть два <div>'а, они оба контейнеры. У div'а A Z-index равен 2, а у B равен 3. Внутри A есть C с Z-index 5, а внутри B есть D с Z-index равным 4. \nВопрос: какой из div'ов C или D будет \"выше\" и почему?\nОтвет: выше будет div D с z-index 4, потому что оба упираются в их родителей, а у родителя D (div'а B Z-index равен 3, что больше 2)\n8. media запросы, что это и зачем (адаптация на мобилки и планшеты, помимо десктопа; светлая/тёмная тема; prefers-reduced-motion (предпочтение пользователя без анимации))\n9. prefers-reduced-motion все анимации отключает или как?\nсам он ничего не делает, это просто media запрос, который мы сами пишем, внутри которого уже пишется логика. Т.е. мы сами говорим, реагировать надо на это или нет\n\nВопросы по опыту:\n1. чем занимался на последнем месте работы\n2. приходилось ли работать со styled components\n3. styled components vs SCSS modules, предпочтения\n4. про UI Kit на проекте рассказал\n5. React Grid Layout, рассказать что это и для чего\n6. Таблицы на чём писали? (самописные)"
      }
    ]
  },
  {
    "company": "Right Line",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-07-01 18:02:02",
        "content": "2024-07-01 18:02:02\n Евгений Лямин -> 2071074234:\n- Right Line\n- Вакансия: hr написала\n- зп: до 250 вилка у них\nВопросы:\n- Как обрабатывается веб-страница браузером / Критический путь рендеринга CRP\n- Как работает Event Loop\n- Рассказать про редакс\n- Жизненый цикл useState\n- Какой жизненый цикл у редакса, когда мы потеряем из негно данные\n- Какие еще есть возможности относительно перманентного хранения на фронте, по мимо стора нашего стейт менеджера. Про localStorage SessionStorage Cookie \n- Воп...",
        "full_content": "2024-07-01 18:02:02\n Евгений Лямин -> 2071074234:\n- Right Line\n- Вакансия: hr написала\n- зп: до 250 вилка у них\nВопросы:\n- Как обрабатывается веб-страница браузером / Критический путь рендеринга CRP\n- Как работает Event Loop\n- Рассказать про редакс\n- Жизненый цикл useState\n- Какой жизненый цикл у редакса, когда мы потеряем из негно данные\n- Какие еще есть возможности относительно перманентного хранения на фронте, по мимо стора нашего стейт менеджера. Про localStorage SessionStorage Cookie \n- Вопрос по СSS, препроцессоры и различные подходы, Css in JS. C чем работал, плюсы минусы\nЗадачи: \n//  что выведет в консоль\n\nconst [name, setName] = useState('name')\n\nsetName('abc')\n\nconsole.log(name)\n\n\n// написать функцию которая принимает массив объектов со странами городами и населением этих городов и вернуть топ три города по населению каждой страны\n\nfunction getTopCitiesByPopulation(data) {\n    // Группировка городов по странам\n    const groupedByCountry = data.reduce((acc, item) => {\n        if (!acc[item.country]) {\n            acc[item.country] = [];\n        }\n        acc[item.country].push(item);\n        return acc;\n    }, {});\n\n    // Получение топ-3 городов по населению для каждой страны\n    const topCitiesByCountry = {};\n\n    for (const country in groupedByCountry) {\n        topCitiesByCountry[country] = groupedByCountry[country]\n            .sort((a, b) => b.population - a.population)\n            .slice(0, 3);\n    }\n\n    return topCitiesByCountry;\n}"
      },
      {
        "timestamp": "2024-06-28 16:37:01",
        "content": "2024-06-28 16:37:01\n Tonidevs -> 2071074234:\nRIGHT LINE\nпроект цифровой рубль\nЗП: до 250к\nкомментарии: работать в соло пилить SDK на vanila JS\n\nВОПРОСЫ\n- что такое css препроцессоры и зачем нужны, привести юзкейс с переменными\n- что такое селекторы, расскажи про специфичность\n- что такое селектор по атрибуту\n- назови псевдоклассы и псевдо-селекторы\n- что такое Z-INDEX и контекст наложения\n- расскажи как работает Event Loop, если в очередь макрозадач попадет тяжеловесная задача, что будет? Если б...",
        "full_content": "2024-06-28 16:37:01\n Tonidevs -> 2071074234:\nRIGHT LINE\nпроект цифровой рубль\nЗП: до 250к\nкомментарии: работать в соло пилить SDK на vanila JS\n\nВОПРОСЫ\n- что такое css препроцессоры и зачем нужны, привести юзкейс с переменными\n- что такое селекторы, расскажи про специфичность\n- что такое селектор по атрибуту\n- назови псевдоклассы и псевдо-селекторы\n- что такое Z-INDEX и контекст наложения\n- расскажи как работает Event Loop, если в очередь макрозадач попадет тяжеловесная задача, что будет? Если будет тяжелый расчет в макрозадаче, как не блокировать поток? (про вебворкеры)\n- как отправить задачу в очередь макрозадач? (про queMicrotask())\n- типы данных в JS в чем разница примитивов и объектов\n- как работает прототипное наследование (автобоксинг)\n- как работает сборка мусора в JS (Garbaje Collector)\n- что такое замыкание и как можно его использовать\n- пример как можно использовать прототипы в разработке\n- какие методы оптимизации знаешь (копает в опыт на знание применения практик оптимизации - типо а давай всё в useCallback завернем - круто будет?)\n- как отследить до билда оптимизацию удаления лишнего кода\n- для чего нужны стейт-менеджеры\n- расскажи про плюсы и минусы FSD\n- что такое prop KEY и для чего нужен (если сделать рандомный ключ что будет)\n- если на каждом ререндере создавать уникальный KEY - это хорошо?\n- жизненный цикл компонента в реакте\n- в чем разница между обновлением и размонтированием (какие особенности с точки зрения перформанса)\n- что такое Виртуал ДОМ и как он помогает нам\n- расскажи про Utility Types (какие знаешь что они делают)\n- расскажи про Дженерики (extends)\n- any и unknow отличия\nЗАДАЧИ\n- рефактор реакта\nimport React, { useState } from \"https://esm.sh/react@18\";\nimport ReactDOM from \"https://esm.sh/react-dom@18\";\n\nfunction App() {\n  const getEmployees = () => {\n    return Array.from({ length: 50 }, (element, index) => ({\n      id: index,\n      name: 'Employee ' + index,\n      salary: 1000 + (Math.random() * 50).toFixed(0),\n    }));\n  };\n\n  const [employees] = useState(getEmployees());\n\n  const handleRemove = (index) => {\n    employees.splice(index, 1);\n  };\n\n  const RemoveButton = (props) => {\n    let { onClick } = props;\n\n    return <div onClick={onClick}>Remove</div>;\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1> Current employees:</h1>\n\n      {employees.map((value, index) => (\n        <div className=\"card\" key={value.salary}>\n          <div>\n            <div>name: {value.name} </div>\n            <div>salary: {value.salary}</div>\n          </div>\n\n          <RemoveButton onClick={() => handleRemove(index)} />\n        </div>\n      ))}\n    </div>\n  );\n}\nReactDOM.render(<App />,\ndocument.getElementById(\"root\"))\n\n-  вот результат\nimport React, { useState } from \"https://esm.sh/react@18\";\nimport ReactDOM from \"https://esm.sh/react-dom@18\";\n\nfunction App() {\n  const getEmployees = () => {\n    return Array.from({ length: 50 }, (element, index) => ({\n      id: index,\n      name: 'Employee ' + index,\n      salary: 1000 + (Math.random() * 50).toFixed(0),\n    }));\n  };\n\n  const [employees, setEmployees] = useState(() => getEmployees());\n\n  const handleRemove = (index) => {\n    setEmployees(employees.filter(item => item.id !== index))\n  };\n\n  const RemoveButton = ({onClick}) => {\n    return <button onClick={onClick}>Remove</button>;\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <h1> Current employees:</h1>\n\n      {employees.map((value, index) => (\n        <div className=\"card\" key={value.id}>\n          <div>\n            <div>name: {value.name} </div>\n            <div>salary: {value.salary}</div>\n          </div>\n\n          <RemoveButton onClick={() => handleRemove(value.id)} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nReactDOM.render(<App />,\ndocument.getElementById(\"root\"))"
      }
    ]
  },
  {
    "company": "Softnetix",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-02-19 17:18:30",
        "content": "2024-02-19 17:18:30\n Vitalya Bedik -> 2071074234:\n— Название компании: Softnetix (Софтнетикс) [2ой-этап - тех собес с разрабом, тимлидом и CTO]\n— Что было: лайфкодинг + немного теории\n— Успех собеса: ❌ (очень душный собес и ребята, молятся на каррирование и частичное применение)\n— Фидбек: предложили закончить собес, т.к. если не гуру каррирования, дальше не имеет смысла идти\n\n— Что было на собесе:\n- Что такое bind и какая у него сигнатура? Хотели слышать именно кейсы с частичным его применением....",
        "full_content": "2024-02-19 17:18:30\n Vitalya Bedik -> 2071074234:\n— Название компании: Softnetix (Софтнетикс) [2ой-этап - тех собес с разрабом, тимлидом и CTO]\n— Что было: лайфкодинг + немного теории\n— Успех собеса: ❌ (очень душный собес и ребята, молятся на каррирование и частичное применение)\n— Фидбек: предложили закончить собес, т.к. если не гуру каррирования, дальше не имеет смысла идти\n\n— Что было на собесе:\n- Что такое bind и какая у него сигнатура? Хотели слышать именно кейсы с частичным его применением.\n- Маленькая задача на частичное применение функции через bind\n- Что такое каррирование и частичное применение?\n- Напиши базовый пример каррирования?\n- В чем практическая польза каррирования и чем это полезно в проекте (нужно было реальные кейсы назвать)\n\nДалее пошел лайфкодинг где скинули полотно кода и начали просить дописать функционал на расширение существующего кода по SOLID с помощью каррирования,\nПостепенно усложняя задачи.\nСамое забавное что если не решаешь эту задачу с каррированием, то не проходишь даже на джуна👹"
      },
      {
        "timestamp": "2024-02-19 17:11:04",
        "content": "2024-02-19 17:11:04\n Vitalya Bedik -> 2071074234:\n— Название компании: Softnetix (Софтнетикс) [1ый-этап - скрининг с разрабом]\n— Ссылка на вакансию: https://rabota.by/vacancy/93225645?from=employer&hhtmFrom=employer\n— ЗП: 1400$+\n— Что было: теория + задачи (представь то-то, что будет)\n— Успех собеса: ✅\n\n— Теория:\n\n JS\n- отличие метода массива forEach от map\n- что делает метод reduce, какая сигнатура и что должен вернуть. что будет если не задать начальное значение. Что будет если не указать акку...",
        "full_content": "2024-02-19 17:11:04\n Vitalya Bedik -> 2071074234:\n— Название компании: Softnetix (Софтнетикс) [1ый-этап - скрининг с разрабом]\n— Ссылка на вакансию: https://rabota.by/vacancy/93225645?from=employer&hhtmFrom=employer\n— ЗП: 1400$+\n— Что было: теория + задачи (представь то-то, что будет)\n— Успех собеса: ✅\n\n— Теория:\n\n JS\n- отличие метода массива forEach от map\n- что делает метод reduce, какая сигнатура и что должен вернуть. что будет если не задать начальное значение. Что будет если не указать аккумулятор?\n- назови мутирующие методы массива\n- назови статические методы промисов\n- что такое статический метод класса в JS\n- можем ли вызвать у интанса класса этот статический метод, от которого он был создан\n- какая сигнатура у конструктора класса промис\n- Если мы там напишем resolve и ничего не будем возвращать, сможем ли мы потом достать эти данные (то, что в resolve передали)\n- Какие методы есть у экземпляра класса промис\n- Если поместить в переменную несколько then.then.then, в последний then поместить число и потом взять typeof от этой переменной, то какой тип данных будет?\n- Назови 1 любой принцип SOLID и расскажи подробно в контексте JS/React\n- для чего нужен метод bind? Что принимает?\n- Можем ли мы частично забиндить аргумент. Есть функция из 3ех аргументов нужно забиндить на 2, которые мы сразу знаем, как это сделать?\n\n React\n- зачем нужны ключи\n- в каких случаях можно использовать индекс у элементов массива, а в каких нельзя\n- можем ли мы в компонент который рендерится вне списка пробросить какой-то ключ (в любой реакт компонент можем ли пробросить)\n- что будет с компонентом если мы поменяли ключ, при этом ключ это наш локальный стейт, который мы меняем (increase) при нажатии на кнопку, т.е. он меняется на каждое нажатие кнопки\n- какие у реакта есть инструменты из коробки для оптимизации?\n- расскажи про useMemo и useCallback?\n- Вызывается ли функция, если мы обернем в useCallback? а в useMemo?\n- Есть компонент, который принимает N-ое число пропсов, в этом компоненте объявлена функция, которая не зависит от скоупа пропсов и других переменных. Она просто выводит в консоль true. И эта функция как handler пробрасывается на 5  компонентов вглубь, все дерево ререндерится при ререндере родителя. Как решить проблему без прибегания к возможностям реакта\n- Как работает React.memo? Как он сравнивает эти пропсы? Можем ли мы написать свой алгоритм сравнения?\n- Для чего нужен React.lazy? Какая у него сигнатура?\n- Какую метрику (параметр) React.lazy улучшает?\n- Каким образом webpack понимает, что ему какую-то часть кода нужно вынести в отдельную чанку?\n\nRedux\n- Какая сигнатура у редьюсера и что он возвращает?\n- Как мы изменяем state внутри reducer?\n- Мы мутируем стейт или каждый раз возвращаем новую ссылку на стейт?\n- Делаем shallow copy или глубокую? Что будет если сделать глубокую копию и какие проблемы есть у такого подхода?\n- Как можно работать с мемоизацией селекторов? И как это работает? Что мемоизируется?"
      }
    ]
  },
  {
    "company": "Funbox",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-06-18 19:16:28",
        "content": "2024-06-18 19:16:28\n Tonidevs -> 2071074234:\nFunBox\n— вакансия: hr написала\n— ЗП: вилка не указана, по рез-ту буду просить 260+\n— важность: важно\n— успех: было душно, жду фидбек - скорее нет.\n\nВопросы: \n1. Как попал в разработку \n2. что такое BEM, как понял для себя опиши своими словами\n3. jwt авторизация\n4. как работает кеширование в Nextjs (4 метода)\n5. eventLoop что такое\n6. в какой момент выполнится код из коллбека если в сетТаймаут у нас 0\n7. есть SPA приложение на фронте по URL a.com она х...",
        "full_content": "2024-06-18 19:16:28\n Tonidevs -> 2071074234:\nFunBox\n— вакансия: hr написала\n— ЗП: вилка не указана, по рез-ту буду просить 260+\n— важность: важно\n— успех: было душно, жду фидбек - скорее нет.\n\nВопросы: \n1. Как попал в разработку \n2. что такое BEM, как понял для себя опиши своими словами\n3. jwt авторизация\n4. как работает кеширование в Nextjs (4 метода)\n5. eventLoop что такое\n6. в какой момент выполнится код из коллбека если в сетТаймаут у нас 0\n7. есть SPA приложение на фронте по URL a.com она ходит в бек на URL b.com какие тут есть сложности(углубляемся и представляем что доступа к CORS - нет нам надо слать запросы, тут идет в помощь прокси сервер)\n\nЗАДАЧИ\n- что будет в консоли\nconst car1 = {\n  brand: 'Toyota',\n  model: 'Land Cruiser Prado',\n  options: {\n    transmission: 'automatic',\n  },\n};\nconst car2 = { ...car1 };\ncar2.brand = 'Derways';\ncar2.model = 'Shuttle';\ncar2.options.transmission = 'manual';\n\nconsole.log(car1.brand, car1.model, car1.options.transmission);\n// Toyota Land Cruiser Prado automatic\n- напиши решение в одну строку чтобы избавиться от finally\nlet loading = true;\n\nfetchData()\n  .then(data => processData(data))\n  .catch(err => processError(err))\n  .finally(() => loading = false);\n- чему будет равно, как избавить от этого и почему так работает\n  console.log(0.1 + 0.2 === 0.3)\n- что будет в консоли, если это два разных блока\nconsole.log(a() || b());\n\n\nconst x = a();\nconst y = b();\nconsole.log(x || y);\n- что будет в консоли\nconst obj = {};\nconst a = { x: 1 };\nconst b = { y: 2 };\nobj[a] = 10;\nobj[b] = 20;\nconsole.log(obj[a]);\n- напиши каррирование\nfunction add(num) {\n  return (y) => {\n    if (y === undefined) {\n      return num;\n    }\n    return add(num + y);\n  }\n}\nconsole.log(add(1)(2)(3)()); // 6\nconsole.log(add(4)(0)(8)()); // 12\nconsole.log(add(-1)(0)(1)()); // 0\n- напиши реакт компонент \\\n/**\n * TODO\n * 1. Добавление любого количества инпутов по кнопке\n * 2. Во время ввода во всех инпутах проводить валидацию.\n * 3. Если input.value везде \"react\", то кнопка \"Сохранить\"\n *    должна стать disabled={false}\n */\nconst validate = (item: string) => item === \"react\";\nconst Form = () => {\n  return (\n    <form>\n      <input value=\"vue\" className=\"input\" />\n      <input value=\"angular\" className=\"input\" />\n      <div className=\"controls\">\n        <button className=\"button\" type=\"button\">\n          Добавить инпут\n        </button>\n        <button className=\"button\" type=\"button\" disabled={true}>\n          Сохранить\n        </button>\n      </div>\n    </form>\n  );\n};"
      },
      {
        "timestamp": "2024-06-14 08:07:05",
        "content": "2024-06-14 08:07:05\n Сергей -> 2071074234:\nFunBox\n- Вакансия https://zhukovsky.hh.ru/vacancy/97121069?hhtmFrom=employer_vacancy_responses\n- ЗП 250к+ назвал\n- Успех: ?\n\nЗадача была одна по сути\n1. Написать функцию, которая соберет города с одинаковыми буквами в один массив. Решение на скрине\n\nТакже была максимально простая задача на EventLoop, таких просытх я еще не видел\n\nВопросы:\n1. Как попал в разработку\n2. SOLID, расшифровка\n3. flex и grid их разницу, что и где использовал\n4. Специфичность се...",
        "full_content": "2024-06-14 08:07:05\n Сергей -> 2071074234:\nFunBox\n- Вакансия https://zhukovsky.hh.ru/vacancy/97121069?hhtmFrom=employer_vacancy_responses\n- ЗП 250к+ назвал\n- Успех: ?\n\nЗадача была одна по сути\n1. Написать функцию, которая соберет города с одинаковыми буквами в один массив. Решение на скрине\n\nТакже была максимально простая задача на EventLoop, таких просытх я еще не видел\n\nВопросы:\n1. Как попал в разработку\n2. SOLID, расшифровка\n3. flex и grid их разницу, что и где использовал\n4. Специфичность селекторов в CSS\n5. Тесты, какие писал, как к ним относишься (они пишут тесты)\n6. Отличия классовых компонентов от функциональных\n7. Что такое полиморфизм и инкапсуляция\n8. Что такое хук, какие знаешь, можно рассказать про правила хуков\n9. Что мы не можем написать на функциональных компонентах (Еррор баундари)\n10. Зачем нам нужны Стейтменеджеры, с какими знаком, когда бы не стал использовать стейтменеджер\n11. Какие преимущества и недостатки Redux знаешь\n12. Опционально спрашивали по резюме, как доставляли приложение до клиента и про CI/CD"
      }
    ]
  },
  {
    "company": "Вирту Системс",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-07-18 10:33:53",
        "content": "2024-07-18 10:33:53\n Alehandro¯\\_(ツ)_/¯ -> 2071074234:\n- компания: Вирту Системс\n- вакансия:  https://perm.hh.ru/vacancy/101425848\n- ЗП: не обсуждали\nВопросы: \n- где что и как работал, очень подробный спрос по работе, как взаимодействие с бэком проходило.\n- есть модалка, и нужно её через родителя закрывать, как этот процесс происходит, какие события под капотом, как в этом случае используется useEffect\n- есть компонент, со стейтом и приходит картинка с одним и тем же названием, как нам делать пе...",
        "full_content": "2024-07-18 10:33:53\n Alehandro¯\\_(ツ)_/¯ -> 2071074234:\n- компания: Вирту Системс\n- вакансия:  https://perm.hh.ru/vacancy/101425848\n- ЗП: не обсуждали\nВопросы: \n- где что и как работал, очень подробный спрос по работе, как взаимодействие с бэком проходило.\n- есть модалка, и нужно её через родителя закрывать, как этот процесс происходит, какие события под капотом, как в этом случае используется useEffect\n- есть компонент, со стейтом и приходит картинка с одним и тем же названием, как нам делать перерисовку (ререндера из стейта нет) \n\nКод такой же как и был на данном собесе: https://t.me/c/2071074234/489/42997\nТолько у меня ещё много вопросов по спреад операторам, когда их лучше использовать когда нет\nтакже если у нас есть \nconst a = [10, 3, 5, 5, 1];\nconst b = a.sort();\nперезапишется ли а и b, как написать так, чтобы не мутировалось"
      },
      {
        "timestamp": "2024-07-17 14:59:23",
        "content": "2024-07-17 14:59:23\n Илья -> 2071074234:\nВирту Системс\n- вакансия: https://perm.hh.ru/vacancy/101425848\n- зп 250k +\n\nВопросы: \n- Над какими проектами работал\n- Что использовали  для форм и что для валидации\n- Как в Zod валидироваить одно поле относительного другого (метод refine)\n- Все про useEffect со всеми тонкостями\n- Нужно было описать как бы я делал функционал модалки\n- Представь : у нас есть компонент со стейт и приходит картинка и как нам делать перерисовку,если у картинки одно и тоже наз...",
        "full_content": "2024-07-17 14:59:23\n Илья -> 2071074234:\nВирту Системс\n- вакансия: https://perm.hh.ru/vacancy/101425848\n- зп 250k +\n\nВопросы: \n- Над какими проектами работал\n- Что использовали  для форм и что для валидации\n- Как в Zod валидироваить одно поле относительного другого (метод refine)\n- Все про useEffect со всеми тонкостями\n- Нужно было описать как бы я делал функционал модалки\n- Представь : у нас есть компонент со стейт и приходит картинка и как нам делать перерисовку,если у картинки одно и тоже название(то есть ререндера из-за стейта не будет). Ответ: добавить query параметр в запрос либо написать кастомный forceUpdate\n- Представь: у нас два проекта банка и у них есть что-то общие( функционал и т.д),то чтобы ты делал. Ответ: вынес бы отдельно в npm пакет.\n- Был вопрос про npm link\n- Вопрос про паттерны : singleton и Наблюдатель \n\nЗадачи: \n1. Что будет в консоль логе\nimport styles from './header.module.css'\n\n<h1 className = {styles.h1}></h1>\n\nconsole.log(styles)\n2. Рассказать как бы делал методы в классе Store\n\nconst store = new Store()\n\nи  store должен иметь методы set,get,subscribe и unsubscribe \n\nclass Store {\n  constructor() {\n    this.state = {};\n    this.listeners = [];\n  }\n\n  set(newState) {\n    this.state = {...this.state, ...newState};\n    this.listeners.forEach(listener => listener());\n  }\n\n  get() {\n    return this.state;\n  }\n\n  subscribe(listener) {\n    this.listeners.push(listener);\n    return () => {\n      this.listeners = this.listeners.filter(l => l !== listener);\n    }\n  }\n\n  unsubscribe(unsubscribeFunction) {\n    unsubscribeFunction();\n  }\n}"
      }
    ]
  },
  {
    "company": "Ооо Ртк",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-02-14 07:56:44",
        "content": "2025-02-14 07:56:44\n Aintripin -> 2071074234:\nКомпания: ООО РТК. 2 этап (от 13.02.2025)\nВакансия: frontend-разработчик; https://hh.ru/vacancy/116445187\nЗП: 150,000 на позицию сеньёра, \"200,000 с учётом KPI\". Я просил 560, потом 251,500\n\n📹 Ссылка на запись: https://www.youtube.com/watch?v=Kmz8e7bF4O8&ab_channel=StevenWalker\n\nСразу скажу, что записалась только первая часть этого второго интервью, после чего мне, из-за проблем со стримом, пришлось перезайти. По этой причине второй части нет. Первая...",
        "full_content": "2025-02-14 07:56:44\n Aintripin -> 2071074234:\nКомпания: ООО РТК. 2 этап (от 13.02.2025)\nВакансия: frontend-разработчик; https://hh.ru/vacancy/116445187\nЗП: 150,000 на позицию сеньёра, \"200,000 с учётом KPI\". Я просил 560, потом 251,500\n\n📹 Ссылка на запись: https://www.youtube.com/watch?v=Kmz8e7bF4O8&ab_channel=StevenWalker\n\nСразу скажу, что записалась только первая часть этого второго интервью, после чего мне, из-за проблем со стримом, пришлось перезайти. По этой причине второй части нет. Первая записалась тоже не очень, но всё, что есть\n\nПервый этап: https://t.me/c/2071074234/489/103719\n\nВкратце: второй этап заключался в шеринге окна браузера, в котором в одной вкладке у меня был их сайт, а во второй в VS Code-онлайн сам код. Проходились по сайту, преимущественно по модалке, где обговаривали моменты\n\n❓ Какие вопросы можно спросить:\n\n0. По поводу сервака: почему не ВПС (ВПС — кусок сервера тебе, ВДС — машина полностью)\n1. На каком протоколе VPN (WireGuard, OpenVPN, VLESS, ...)\n2. Если будет показывать ту самую модалку, в качестве своего экспертного мнения можно выдать, что на версии ПК оно непрактично тем, что кнопка инпута растянута на весь экран, разные стили input'ов. Плюс, излишние скроллы: по горизонтали точно, по вертикали тоже можно сказать\n3. В продолжение по странице с модалкой: полнейшее отсутствие адпатива: во-первых, нужно перезагружать сайт, чтобы оно подтянулось, что странно для меня. Второе — сам UI был свёрстан на мефедроне.JS\n4. Далее по этому input'у: можно там прикреплять медиа (картинки). В связи с этим вопрос: какие форматы (PNG, JPEG, GIF, ...) пропускает? Что будет, если закинуть .txt или word'овский файл? \n5. Есть ли ограничения по весу тех картинок?\n6. Всё по этой же форме: когда submit'тим, там как запрос проходит? \n7. Он ответит, что по post, отсюда вопрос: как построено вокруг этой post-системы всё? (Кстати, вот API: http://213.139.211.185:5071/blog/post)\n8. Как выглядит post-запрос отправки? Что в него должно входить? Какие заголовки? Что в body пишется? Как подписаны изображения?\n9. Т.к. представленное на экране — вещь интересная, вопрос: \"за какой промежуток времени было свёрстано это чудо?\"\n10. Когда придумывали всё это, почему сразу не разобрались в адаптиве и как он будет реализован?\n11. На форме есть отдел, где можно при создании формы, навешивать (хэш?)тэги (типо, выбирать их, там dropdown-меню); отсюда вопрос: мб можно было бы добавить кнопку или ещё чё для сброса этих тегов\n\n💻 По коду (код будет в конце, но тут моменты тоже опишу): \n0. Чем-то можно пользоваться? Можно ли пользоваться нейронкой? Мне разрешил, спросил у него, какая любимая. Потом рассказал, что у DeepSeek получилось выпытать рецепт метамфетамина и C4. Пропустил возможность предложить заколлабиться и уйти во все тяжкие\n1. В коде UI-кит; почему не свой?\n2. Почему у их модалки всё лепится в одном .tsx, а не разбито по кускам? (было бы удобнее)\n3. под конец собеса сделал коммент // нужно переписать всё в самом верху\n4. Сделать вот так:\nconst handleSelectTheme = (event:\nChangeEvent<HTMLSelectElement>)\nТипо, так проще будет\n5. const modules вынести за react-компонент\n6. \nconst selectedThemelds = selectedThemes.split(,). map(Number) <=\nвот тут можно просто Number передать, плюс не типизировать Item, как String (ts подтянет автоматом)\n7.\nconst selectedThemesSet = new Set(selectedThemeslds)\nconst filteredThemes = data?.data.filter(theme =>\nselectedThemesSet.has(theme.id)\nТут includes требует n кол-ва итераций, а щас будет O(1) сложность при фильтрации"
      },
      {
        "timestamp": "2025-02-07 06:20:18",
        "content": "2025-02-07 06:20:18\n Aintripin -> 2071074234:\nКомпания: ООО РТК. 1 этап\nВакансия: frontend-разработчик; https://hh.ru/vacancy/116445187\nЗП: 150,000 на позицию сеньёра, \"200,000 с учётом KPI\"\n\nВкратце: финансирование околонулевое, в написании проекта принимали участие такие же ебланы, в плане компетентности, как и я, поэтому их всех уволили и остался один чел (лид) на команде, который, видимо, спит по часу в неделю. Это был первый этап, где показывали сам проект и его проблемы, хотели услышать с ...",
        "full_content": "2025-02-07 06:20:18\n Aintripin -> 2071074234:\nКомпания: ООО РТК. 1 этап\nВакансия: frontend-разработчик; https://hh.ru/vacancy/116445187\nЗП: 150,000 на позицию сеньёра, \"200,000 с учётом KPI\"\n\nВкратце: финансирование околонулевое, в написании проекта принимали участие такие же ебланы, в плане компетентности, как и я, поэтому их всех уволили и остался один чел (лид) на команде, который, видимо, спит по часу в неделю. Это был первый этап, где показывали сам проект и его проблемы, хотели услышать с моей стороны оценку и т.д. И больше вопросов задавал я\n\nТем не менее, также спрашивали про:\n\n0. По опыту, компаниям, технологиям, которые там использовались (как и чё делали)\n1. какие UI-киты использовал\n2. Работал с сокетами? Чё использовал для работы с ними?\n3. Оптимизация на проекте: как смотрели (тут, скорее, не про lazy loading, а про такие вещи, как Sentry, LightHouse, WebPageTest и прочее)\n4. Сборщики использовал/нет? Настраивал?\n5. Чё такое FSD?\n6. С докером работал?\n7. CodeSpaces (от GitHub) — слышал чё это? (короче, есть докер для разворачивания проектов локально, а на CS — та же самая идея, но для коллаборации над проектом в облаке, типо докер в облаке)\n8. SWR — знаешь чё это?\n9. По чему взаимодействовал с бэком (REST)\n10. Про TCP и WS вопрос был\n11. Как относишься к CSS Nesting\n\nЕсли пойдёте (не стоит), вопросы можно задать от себя следующие:\n\n1. Какие сейчас стоят задачи на проекте?\n2. Что используете для создания форм (чел жаловался на формы на сайте, но у них сложных нет)\n3. Попросить открыть package.json, попросить глянуть библиотеки\n4. Есть ли мониторинг нагрузки?\n5. Что планируете выбрать для мониторинга нагрузки?\n6. Когда релизы? Когда демо?\n7. Размер команды, которую планируется набрать? Из кого она состоит?\n8. У них используется NextJS, отсюда вопрос: \"насколько мощные сервера для SSR?\", \"кто эти сервера выбирал?\"\n9. Как проходит обсуждение API фронта и бэка\n10. Есть ли аналитика? (По типу, клики пользователя, сколько последний проводит на странице и какие страницы чаще посещает)\n11. Откуда приходят фичи? Кто их инициатор?\n\nБонусные вопросы в их сторону:\n\n1. Как стать таким же опытным спецом, как он?\n2. Собираетесь ли вы играть по пятницам в настолки?\n3.Есть ли девушки в офисе?\n4. Хочет ли он создать свой стартап?\n5. Планируется ли нанятие девушек в офис для снижения нагрузки?\n6. Хочет ли он заколлабиться на стартапе со мной и перестать работать на дядю\n7. Смотрел ли ты форсаж? Как к нему относишься?\n8. Можно ли будет жить у них в офисе? Есть ли там душ?"
      }
    ]
  },
  {
    "company": "Теле2",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-06-12 08:53:23",
        "content": "2024-06-12 08:53:23\n Tonidevs -> 2071074234:\nТЕЛЕ2\nЗП: 150-200 точно не помню\nвопросы\n- назови плюсы и минусы микрофронтендов \n- способы загрузки singletone отличие от lazy\n- плюсы и минусы FSD\n- как работает браузер (какой есть механизм до DNS когда мы вбиваем адрес, что первое у нас подключается до DNS) про host \n- механизм соединения клиент-сервер\n- TLS TCP - что из себя представляет\n- отличия HTTP от HTTPS\n- как TLS подключается когда ты используешь HTTPS\n- что такое DOM и как работает(как с...",
        "full_content": "2024-06-12 08:53:23\n Tonidevs -> 2071074234:\nТЕЛЕ2\nЗП: 150-200 точно не помню\nвопросы\n- назови плюсы и минусы микрофронтендов \n- способы загрузки singletone отличие от lazy\n- плюсы и минусы FSD\n- как работает браузер (какой есть механизм до DNS когда мы вбиваем адрес, что первое у нас подключается до DNS) про host \n- механизм соединения клиент-сервер\n- TLS TCP - что из себя представляет\n- отличия HTTP от HTTPS\n- как TLS подключается когда ты используешь HTTPS\n- что такое DOM и как работает(как строится)\n- механизм до рендера страницы - название и как работает(механизм оптимизации)\n- js - это компиляция или интерпретация, в чем разница\n- JIT компиляция Just In Time\n- как JS работает с точки зрения компиляции\n- с точки зрения загрузки скриптов (что блокирует загрузку а что нет)\n- async и defer - отличия \n- когда ты написал код на TypeScript что происходит дальше\n- что такое контекст\n- что такое прототип и прототипное наследование\n- как работает декремент и инкремент\n- отличия реакта от вью (спросит если есть вью в резюме) \n- с точки зрения жизненного цикла отличия реакта от вью\n- расскажи про жизненный цикл в реакте\n- что такое Элемент и что такое Компонент (рассказать про отличия)\n- что такое JSX\n- с точки зрения потока данных отличия реакта(однопоточный) от вью(двунаправленный)\n- что такое Reconcilacion в реакт\n- что такое чистая функция\n- что такое useEffect\n- какие хуки ещё знаешь и когда использовал\n- когда использовать useMemo и useCallback\n- \nзадачи\n[ВСЕ ВОПРОСЫ на JS](https://codesandbox.io/p/sandbox/js-exam-forked-xxd3fh?file=%2Fsrc%2Findex.mjs%3A158%2C1-169%2C33)\n- что выведет в консоль\n// let a = 2;\n// let b = \"2\";\n// let c = 50;\n// let x = null;\n// let y = undefined;\n// let z = 0;\n// console.log(a == b); true\n// console.log(a + b); \"22\"\n// console.log(x === y); false\n// console.log(x == y); true\n// console.log(x == z); false\n// console.log(x === z); false\n// console.log(a + +(+c)); 52\n// console.log(++a + +c++); 53\n// console.log(a + ++c); 53\n// console.log(++a + c + +a); 56\n// console.log(x > 0); false\n// console.log(x == 0); false\n// console.log(x >= 0); true\n- прокомментируй что тут происходит\nfunction fun(val) {\n  console.log(val);\n  if (val == \"0\") { // сравнение со строкой, т.к сработает приведение типов\n    console.log(\"done\");\n    return;\n  }\n  val = val--; // как работает префикс, оставить просто декремент\n  fun(val);\n}\nlet val = 10;\nfun(val);\n\n// что будет если выпусть в прод? - перепелнение стека\n// какая будет ошибка при переполнение стека? - в Хроме будет: **Uncaught RangeError: Maximum call stack size exceeded**\n\n- что будет в консоли и почему \nconst obj = {\n  valueOf() {\n    return 1;\n  },\n  toString() {\n    return \"100\";\n  },\n};\nconsole.log(obj + 1); 2\nconsole.log(`${obj}`); 100\nconsole.log(Number(obj)); 1\nconsole.log(String(obj)); 100\n\n- на реакт напиши счетчик\nexport default function App() {\n  const [count, setCount] = useState(0);\n  const handleDec = () => {\n    if (count === 0) return;\n    setCount((prev) => prev - 1);\n  };\n  const handleInc = () => {\n    if (count > 9) return;\n    setCount((prev) => prev + 1);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Hello from T2 Interview</h1>\n      {count}\n      <button onClick={handleInc}>+</button>\n      <button onClick={handleDec}>-</button>\n    </div>\n  );\n}\n\n- что будет в консоли\nimport { useEffect, useState } from \"react\";\nconst A = ({ children }) => {\n  console.log(\"A\");\n  const [state, useState] = useState(0);\n  useEffect(() => {\n    setState((state) => state + 1);\n  }, []);\n  return children;\n};\nconst B = () => {\n  console.log(\"B\");\n  return <C />;\n};\n\nconst C = () => {\n  console.log(\"C\");\n  return null;\n};\n\nconst D = () => {\n  console.log(\"D\");\n  return null;\n};\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hello from T2 Interview</h1>\n      <A>\n        <B />\n      </A>\n      <D />\n    </div>\n  );\n}"
      },
      {
        "timestamp": "2024-02-12 16:14:51",
        "content": "2024-02-12 16:14:51\n Александр Молодов -> 2071074234:\nКомпания: теле2\nСсылка на вакансию: hr сама написала.\nЗарплата: от 250\nРезультат: Собеседующий сказал подготовится к алго секции и через месяц прийти снова)\n\nВначале были вопросы про опыт, команду и процессы и сразу эта задача\n/\n * Дан двумерный массив (матрица), необходимо\n * повернуть матрицу\n * \n * Вход: \n  [1,   2,  3,  4,  5]           \n  [6,   7,  8,  9, 10]    \n  [11, 12, 13, 14, 15]\n  [16, 17, 18, 19, 20]\n  [21, 22, 23, 24, 25]  \n  \n ...",
        "full_content": "2024-02-12 16:14:51\n Александр Молодов -> 2071074234:\nКомпания: теле2\nСсылка на вакансию: hr сама написала.\nЗарплата: от 250\nРезультат: Собеседующий сказал подготовится к алго секции и через месяц прийти снова)\n\nВначале были вопросы про опыт, команду и процессы и сразу эта задача\n/\n * Дан двумерный массив (матрица), необходимо\n * повернуть матрицу\n * \n * Вход: \n  [1,   2,  3,  4,  5]           \n  [6,   7,  8,  9, 10]    \n  [11, 12, 13, 14, 15]\n  [16, 17, 18, 19, 20]\n  [21, 22, 23, 24, 25]  \n  \n  Выход:\n  [21, 16, 11,  6,  1]           \n  [22, 17, 12,  7,  2]    \n  [23, 18, 13,  8,  3]\n  [24, 19, 14,  9,  4]\n  [25, 20, 15, 10,  5]  \n */\n\nconst matrix = [\n  [1, 2, 3, 4, 5],\n  [6, 7, 8, 9, 10],\n  [11, 12, 13, 14, 15],\n  [16, 17, 18, 19, 20],\n  [21, 22, 23, 24, 25],\n];\n\nconst getTransposedMatrix = (matrix) => {\n  const result = [];\n  / писать ниже этой строки*/\n\n  return result;\n};\n\nmatrix.forEach(console.log);\nconsole.log(\"============================\");\ngetTransposedMatrix(matrix).forEach(console.log);"
      }
    ]
  },
  {
    "company": "ООО Студия",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-10-29 13:16:55",
        "content": "2024-10-29 13:16:55\n Сергей -> 2071074234:\n- Компания: Студия Т_Г\n- ЗП: сказал от 250к\n- Вакансия: https://nn.hh.ru/vacancy/108868097?hhtmFrom=employer_vacancies\n- Вопросы : \nВ целом собес на этот похож https://t.me/c/2071074234/489/60430\n\nЗадача от туда тоже была\n\n- про опыт(почему MobX-State-Tree, а не редакс)\n- специфичность селекторов\n- псевдоклассы/псевдоэлементы\nЗадачки\nconst convertObj = (masObj) => {\n  const res = {};\n  masObj.forEach(obj => {\n    for (let key in obj) {\n      if (!res[ke...",
        "full_content": "2024-10-29 13:16:55\n Сергей -> 2071074234:\n- Компания: Студия Т_Г\n- ЗП: сказал от 250к\n- Вакансия: https://nn.hh.ru/vacancy/108868097?hhtmFrom=employer_vacancies\n- Вопросы : \nВ целом собес на этот похож https://t.me/c/2071074234/489/60430\n\nЗадача от туда тоже была\n\n- про опыт(почему MobX-State-Tree, а не редакс)\n- специфичность селекторов\n- псевдоклассы/псевдоэлементы\nЗадачки\nconst convertObj = (masObj) => {\n  const res = {};\n  masObj.forEach(obj => {\n    for (let key in obj) {\n      if (!res[key]) {\n        res[key] = obj[key]\n      }\n    }\n  })\n  return res\n}\n\nconst objects = [\n  { foo: 5, bar: 6 },\n  { foo: 13, baz: -1 } // foo - повторяющийся ключ\n]\nconsole.log(convertObj(objects))\n\n// Пример работы\n// const objects = [\n//   { foo: 5, bar: 6 },\n//   { foo: 13, baz: -1 } // foo - повторяющийся ключ\n// ];\n\n// zip(objects); // { foo: 5, bar: 6, baz: -1 }w"
      },
      {
        "timestamp": "2024-09-05 13:06:29",
        "content": "2024-09-05 13:06:29\n Timofei Syromiatnikov -> 2071074234:\n— Название: ООО Студия Т_Г\n— Вакансия: https://nn.hh.ru/vacancy/105745106\n— ЗП: озвучил 280к\n— Вопросы:\n1) Про процессы работы в команде\n2) Расскажи специфичность селекторов CSS\n3) Отличие Object.hasOwnProperty от for of, for in\n4) В чем отличие примитивных типов данных от ссылочных?\n\n— Задачи:\n1) Напиши функцию invert, которая будет принимать объект и менять его ключи на значения, а значения на ключи, и в конце возвращать этот объект\n// ...",
        "full_content": "2024-09-05 13:06:29\n Timofei Syromiatnikov -> 2071074234:\n— Название: ООО Студия Т_Г\n— Вакансия: https://nn.hh.ru/vacancy/105745106\n— ЗП: озвучил 280к\n— Вопросы:\n1) Про процессы работы в команде\n2) Расскажи специфичность селекторов CSS\n3) Отличие Object.hasOwnProperty от for of, for in\n4) В чем отличие примитивных типов данных от ссылочных?\n\n— Задачи:\n1) Напиши функцию invert, которая будет принимать объект и менять его ключи на значения, а значения на ключи, и в конце возвращать этот объект\n// Входные данные { 1: 'a' }\n// Ожидаем результат { 'a': 1 }\n\nСобес длился 30 минут, у собеседующих еще до лайв кодинга ко мне абсолютно никаких вопросов не было, ни софтовых, ни технических. Их эйчар по 30 раз переспрашивала, есть ли ко мне вопросы, они говорили нет... Как будто их заставляют собесить. Минут 10 только рассказывал про себя + спрашивал их. По проекту ничего не рассказали, ни по команде, ни по чему. Собеседующая просто в моменте сказала \"всё я думаю на этом достаточно\" и убежала. Спросил у эйчар, которая тоже сидела на звонке, что за суета?) Она ответила, они собесят впервые на сеньора, обычно они только джунов собесили"
      }
    ]
  },
  {
    "company": "Clevertec",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-15 12:48:08",
        "content": "2025-07-15 12:48:08\n Daniil Daniil -> 2071074234:\nКомпания: Clevertec (Аутсорс)\n\nВначале рассказываешь о себе\nВопросы:\n1. Что драйвит и нравится?\n2. Самые сложные задачи?\n3. Что наоборот не нравится в работе?\n4. Расскажи про факапы \nЗадачи:\nчто будет в консоли\n\n///////////////////////////////\n\nlet phrase = \"Hello\";\n\nif (true) {\n  let user = \"John\";\n  \n \n}\n\n function sayHi() {\n    console.log(`${phrase}, ${user}`);\n  }\n\nsayHi();\n\n///////////////////////////////\n\nlet foo = {\n  baz: () => {\n    con...",
        "full_content": "2025-07-15 12:48:08\n Daniil Daniil -> 2071074234:\nКомпания: Clevertec (Аутсорс)\n\nВначале рассказываешь о себе\nВопросы:\n1. Что драйвит и нравится?\n2. Самые сложные задачи?\n3. Что наоборот не нравится в работе?\n4. Расскажи про факапы \nЗадачи:\nчто будет в консоли\n\n///////////////////////////////\n\nlet phrase = \"Hello\";\n\nif (true) {\n  let user = \"John\";\n  \n \n}\n\n function sayHi() {\n    console.log(`${phrase}, ${user}`);\n  }\n\nsayHi();\n\n///////////////////////////////\n\nlet foo = {\n  baz: () => {\n    console.log(this);\n  }\n};\n\nfoo.baz();\n \nlet bar = foo.baz;\n\nbar()\n\n//////////////////////////;;////////\n\nconst a = { name: 'first object' };\nconst b = { name: 'second object' };\n\nfunction showThis() {\n  console.log(this);\n}\n\nconst bindMe = showThis.bind(a).bind(b);\n\nbindMe();\n\n///////////////////////////////////\n\nclass Customer {\n  constructor(name) {\n    this.name = name;\n  }\n}\n\nCustomer.prototype.pay = function() {\n  console.log(`Чек от месье ${this.name}`);\n};\n\nconst Ivan = new Customer(\"Ivan\");\n  \nIvan.pay();\n\ndelete Customer.prototype.pay;\n\nIvan.pay();\n\n////////////////////////////////////\n\nconsole.log(1);\n\nsetTimeout(() => console.log(2));\n\nPromise.resolve()\n  .then(() => console.log(3))\n  .then(() => console.log(4));\n\nsetTimeout(() => {\n  console.log(5)\n  Promise.resolve(6).then((item) => setTimeout(() => console.log(item)));\n}, 0);\n\nPromise.resolve().then(() => console.log(7));\n\nsetTimeout(() => {\n  Promise.resolve().then(() => console.log(8));\n  console.log(9);\n});\n\nconsole.log(10);\n\n//1, 10, 3, 7, 4, 2, 5, 9, 8, 6\n\nЗадача на рефакторинг:\nнадо будет еще сказать, что можно написать debounce, обернуть в try/catch, сделать loading(у меня обошлось без напсиания, просто устно сказал)\nУже отрефакторен\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { fetchTasks } from './fetchTasks';\n\ntype ToDoListProps = {\n  items: Array<Record<string, string>>;\n};\n\nconst TODO_ITEMS = [\n  { id: '1', text: 'Полить цветы' },\n  { id: '2', text: 'Вынести мусор' },\n  { id: '3', text: 'Погулять с собакой' },\n]\n\nconst ToDoList = ({ items }: ToDoListProps) => {\n  return (\n      <ul>\n        {!!items.length &&\n          items.map(({id, text}) => <li key={id}>{text}</li>)}\n      </ul>\n  );\n};\n\nconst App = () => {\n  const [tasks, setTasks] = useState<ToDoListProps[]>([]);\n\n  const handleGetTasks = async (e: KeyboardEvent) => {\n    if (e.key === 'r') {\n      const tasks = await fetchTasks();\n      setTasks(tasks);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleGetTasks);\n\n    return () => document.removeEventListener('keydown', handleGetTasks)\n  },[]);\n\n  return (\n    <>\n      <h1>Ежедневный список дел:</h1>\n      <ToDoList\n        items={TODO_ITEMS}\n      />\n      <h2>Список дел на сегодня:</h2>\n      <ToDoList items={tasks} />\n    </>\n  );\n};\n\nexport default App;\n\nЗадача на JS:\n\n  Есть массив операций.\n  Необходимо операции отсортировать по дате и сгруппировать их по году, а в качестве \n  значений представить массивы c датами в формате MM-DD.\n  Пример результата:\n  result = {\n    \"2017\": [\n      \"07-31\",\n      \"08-22\"\n    ],\n    \"2018\": [\n      \"01-01\"\n      \"02-22\"\n    ]\n  }\n*/\n\nconst operations = [\n    { \"date\": \"2017-07-31\", \"amount\": \"5422\" },\n    { \"date\": \"2017-06-30\", \"amount\": \"5220\" },\n    { \"date\": \"2017-05-31\", \"amount\": \"5365\" },\n    { \"date\": \"2017-08-31\", \"amount\": \"5451\" },\n    { \"date\": \"2017-09-30\", \"amount\": \"5303\" },\n    { \"date\": \"2017-10-31\", \"amount\": \"5509\" },\n    { \"date\": \"2017-12-31\", \"amount\": \"5567\" },\n    { \"date\": \"2018-01-31\", \"amount\": \"5597\" },\n    { \"date\": \"2017-11-30\", \"amount\": \"5359\" },\n    { \"date\": \"2018-02-28\", \"amount\": \"5082\" },\n    { \"date\": \"2018-04-14\", \"amount\": \"2567\" }\n];\n\nfunction sortOperations(operations) {\n  const sortedItems =  operations.toSorted((a,b) => new Date(a.date) - new Date(b.date))\n\n  const result = {}\n  \n  for (const item of sortedItems) {\n    const [yr, mo, dy] = item.date.split('-')\n    \n    if(!result[yr]) {\n      result[yr] =[]\n    }\n    result[yr].push(`${mo}-${dy}`)\n  }\n  return result\n}\n\nsortOperations(operations)"
      },
      {
        "timestamp": "2025-06-16 12:02:16",
        "content": "2025-06-16 12:02:16\n Max -> 2071074234:\nClevertec\nhr написала\nЗп: от 200\nВопросы:\n\"Какие задачи тебе нравятся?\" \n\"Что для тебя в приоритете в команде?\"\n\"Какая интересная задача была?\"\n\"Расскажи про свой факап?\"\n\"какие редфлаги?\"\n\"какие хобби?\"\nfunction declaration  function expression стрелочные\nконтекст\nкак оптимизировать приложение ?\nкакими хуками пользуешься?\nEventloop\nTypeguard\ntype vs interface\nvirtual dom\nЗадачи:\n///////////////////////////////\n/ что выведет в консоль?\nlet phrase = \"Hello\"...",
        "full_content": "2025-06-16 12:02:16\n Max -> 2071074234:\nClevertec\nhr написала\nЗп: от 200\nВопросы:\n\"Какие задачи тебе нравятся?\" \n\"Что для тебя в приоритете в команде?\"\n\"Какая интересная задача была?\"\n\"Расскажи про свой факап?\"\n\"какие редфлаги?\"\n\"какие хобби?\"\nfunction declaration  function expression стрелочные\nконтекст\nкак оптимизировать приложение ?\nкакими хуками пользуешься?\nEventloop\nTypeguard\ntype vs interface\nvirtual dom\nЗадачи:\n///////////////////////////////\n/ что выведет в консоль?\nlet phrase = \"Hello\";\n\nif (false) {\n  var user = \"John\";\n}\n\n function sayHi() {\n    console.log(`${phrase}, ${user}`);\n  }\n  \nsayHi();\n// Hello, undefined\n\n///////////////////////////////\n\nlet foo = {\n  baz: function() {\n    console.log(this);\n  }\n};\n\nfoo.baz();\n \nlet bar = foo.baz;\n\nbar.bind(foo)();//undefined\n\n//////////////////////////////////\n\nconst a = { name: 'first object' };\nconst b = { name: 'second object' };\n\nfunction showThis() {\n  console.log(this);\n}\n\nconst bindMe = showThis.bind(a).bind(b);\n\nbindMe();// { name: 'first object' }\n\n///////////////////////////////////\n\nclass Customer {\n  constructor(name) {\n    this.name = name;\n  }\n}\n\nCustomer.prototype.pay = function() {\n  console.log(`Чек от месье ${this.name}`);\n};\n\nconst Ivan = new Customer(\"Ivan\");\n  \nIvan.pay();// Чек от месье Ivan\n\ndelete Customer.prototype.pay;\n\nIvan.pay(); // undefined\n\n////////////////////////////////////\n\nconsole.log(1);//\n\nsetTimeout(() => console.log(2));// ma1\n\nPromise.resolve()\n  .then(() => console.log(3))//mi 1\n  .then(() => console.log(4));//mi3\n\nsetTimeout(() => {\n  console.log(5)// ma2\n  Promise.resolve(6).then((item) => setTimeout(() => console.log(item)));\n}, 0);\n\nPromise.resolve().then(() => console.log(7));//mi2\n\nsetTimeout(() => {\n  Promise.resolve().then(() => console.log(8));\n  console.log(9);\n});\n\nconsole.log(10);\n// 1 10 3 7 4 2 5 9 8 6\n\n////////////////////////////////////\n/**\n  Есть массив операций.\n  Необходимо операции отсортировать по дате и сгруппировать их по году, а в качестве \n  значений представить массивы c датами в формате MM-DD.\n  Пример результата:\n  result = {\n    \"2017\": [\n      \"07-31\",\n      \"08-22\"\n    ],\n    \"2018\": [\n      \"01-01\"\n      \"02-22\"\n    ]\n  }\n*/\n// отрефакторить то, что написал \nconst operations = [\n    { \"date\": \"2017-07-31\", \"amount\": \"5422\" },\n    { \"date\": \"2017-06-30\", \"amount\": \"5220\" },\n    { \"date\": \"2017-05-31\", \"amount\": \"5365\" },\n    { \"date\": \"2017-08-31\", \"amount\": \"5451\" },\n    { \"date\": \"2017-09-30\", \"amount\": \"5303\" },\n    { \"date\": \"2018-03-31\", \"amount\": \"5654\" },\n    { \"date\": \"2017-10-31\", \"amount\": \"5509\" },\n    { \"date\": \"2017-12-31\", \"amount\": \"5567\" },\n    { \"date\": \"2018-01-31\", \"amount\": \"5597\" },\n    { \"date\": \"2017-11-30\", \"amount\": \"5359\" },\n    { \"date\": \"2018-02-28\", \"amount\": \"5082\" },\n    { \"date\": \"2018-04-14\", \"amount\": \"2567\" }\n];\n\nfunction sortOperations(operations) {\n  const sortedOper = operations.sort((a,b)=>{\n    return new Date(a.date) - new Date(b.date)\n  })\n  const result ={}\n  for(const operation of sortedOper ){\n    const dateP = operation.date.split('-')\n    const year = dateP[0]\n    const formDate = `${dateP[1]}-${dateP[2]}`\n    if(!result[year]){\n      result[year] = []\n    }\n    result[year].push(formDate)\n    \n  }\n  return result                       \n}\n\nsortOperations(operations)"
      }
    ]
  },
  {
    "company": "Киберлаб",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-08-16 11:21:53",
        "content": "2024-08-16 11:21:53\n twomadd -> 2071074234:\nКиберЛаб\n-вакансия: hr написала\n-зп 200к\nвопросы:\n1. Знаком ли с таким атрибутом contentEditable ? Для чего он нужен?\n2. Для чего нужны CSS переменные и приведи парочку примеров как использовать\n3. Чем отличается команда git merge от git rebase ?\n4. Какие доводилось писать тесты ? И какие библиотеки использовал\n5. В чем разница между null и undefiend ?\n6. Как можно проверить наличие свойства в объекте ?\n7. Что такое прототипы ?\n8. Какие знаешь самые ак...",
        "full_content": "2024-08-16 11:21:53\n twomadd -> 2071074234:\nКиберЛаб\n-вакансия: hr написала\n-зп 200к\nвопросы:\n1. Знаком ли с таким атрибутом contentEditable ? Для чего он нужен?\n2. Для чего нужны CSS переменные и приведи парочку примеров как использовать\n3. Чем отличается команда git merge от git rebase ?\n4. Какие доводилось писать тесты ? И какие библиотеки использовал\n5. В чем разница между null и undefiend ?\n6. Как можно проверить наличие свойства в объекте ?\n7. Что такое прототипы ?\n8. Какие знаешь самые актуальные методы массива ?\n9. Рассказать про reduce подробно\n10. Рассказать максимально подробно про useEffect\n\nЗадачи:\n\n// 1. Вернуть объект с ключами type из масива,\n// значение - массив элементов с таким type\n\n// 2. Вернуть объект с ключами type, а значение - объект\n// вида {count: количество, weight: суммарный вес}\n\n// eslint-disable-next-line no-unused-vars\nconst arr = [\n  { type: \"banana\", weight: 32 },\n  { type: \"apple\", weight: 24 },\n  { type: \"kiwi\", weight: 55 },\n  { type: \"banana\", weight: 44 },\n  { type: \"orange\", weight: 5 }\n];\n// {\n  const groupeBtType = (arr) =>{\n    return arr.reduce((acc,obj) =>{\n      const key = obj.type\n      return { ...acc, [key] : [...(acc[key] || []),obj]}\n      }\n     \n    },{})\n  }\n\n2.\n// Реализуйте функцию sum\n\nconst sum = () => {};\n\n// console.log(sum()); // Вернет 0\n// console.log(sum(1)()); // Вернет 1\n// console.log(sum(2)(3)()); // Вернет 5\n// console.log(sum(10)(7)(41)()); // Вернет 58\n\n3.\nsetTimeout(function timeout() {\n  console.log(\"Шаг 1\");\n}, 0);\n\nlet p = new Promise(function (resolve, reject) {\n  console.log(\"Шаг 2\");\n  resolve();\n});\n\np.then(function () {\n  console.log(\"Шаг 3\");\n});\n\nconsole.log(\"Шаг 4\");\n// 2 4 3 1\n\n4.\n\nimport { useEffect, useState, FC, PropsWithChildren } from \"react\";\n\n// Будет ли ререндериться компонент OtherFc?\nconst OtherFc = () => {\n  // console.log(\"render\");\n\n  return <div>2</div>;\n};\n\nconst MainFc: FC<PropsWithChildren> = ({ children }) => {\n  const [state, setState] = useState(0);\n  console.log(\"state\", state);\n\n  useEffect(() => {\n    setInterval(() => {\n      setState((prev) => prev + 1);\n    }, 1000);\n  }, []);\n\n  return <div>{children}</div>;\n};\n\nexport const App = () => (\n  <MainFc>\n    <OtherFc />\n  </MainFc>\n);\n\n5.\n\n// Что тут не так? Как оптимизировать этот код?\n\nimport { useEffect, useState, FC } from \"react\";\n\nconst data = {\n  name: \"54\",\n  age: 21,\n  info: 22\n};\n\nconst MainFc: FC<typeof data> = ({ name, ...rest }) => {\n  const [state, setState] = useState(0);\n\n  useEffect(() => {\n    setInterval(() => {\n      setState((prev) => prev + 1);\n    }, 1000);\n  }, []);\n\n  useEffect(() => {\n    // .... какие-то сложные вычисления\n  }, [rest]);\n\n  return <div>{state}</div>;\n};\n\nexport const App = () => <MainFc {...data} />;"
      },
