    ]
  },
  {
    "company": "Контур",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-04-04 13:03:08",
        "content": "2024-04-04 13:03:08\n Roman -> 2071074234:\n- Название компании: Контур\n- Ссылка на вакансию: HR сама написала (откликался на портале Контура)\n- ЗП: просил 250-300 тысяч на руки\n- Задачи: Про опыт + какие были задачи + процессы + достижения + дальше техническая часть\nПервая — чтение кода. Это блок про теоретические знания JS. Показывают код и спрашивают, что будет выведено в консольке. \nВторая — написание кода. Это задачка на алгоритмы на JS.\n- Успех собеса: ❌\nФидбэк о собесе: \nПривет! Пришла к те...",
        "full_content": "2024-04-04 13:03:08\n Roman -> 2071074234:\n- Название компании: Контур\n- Ссылка на вакансию: HR сама написала (откликался на портале Контура)\n- ЗП: просил 250-300 тысяч на руки\n- Задачи: Про опыт + какие были задачи + процессы + достижения + дальше техническая часть\nПервая — чтение кода. Это блок про теоретические знания JS. Показывают код и спрашивают, что будет выведено в консольке. \nВторая — написание кода. Это задачка на алгоритмы на JS.\n- Успех собеса: ❌\nФидбэк о собесе: \nПривет! Пришла к тебе с обратной связью после технического интервью.\nХочу сказать тебе спасибо, что уделил нам время.\n\nУ тебя неплохие навыки верстки: ты отличаешь див от спана и маргин от падинга, есть опыт адаптивной верстки на гридах, флексах и медиа запросах. Японский флаг получилось сверстать только флексами и падингами, других вариантов придумать не получилось.\n\nБлок на чтение кода шел долго и тяжело, были нюансы с var, function() {} и со склейкой. При этом, на вопросы по теории ты отвечал правильно.\n\nТы сразу понял, как решить задачу на написание кода. Но долго не получалось придумать, как решать через одномерный массив. Так как времени оставалось немного, ты предложил решить задачу через двумерный массив. С небольшими подсказками Данилы удалось придумать алгоритм. Через 30 минут после встречи было готовое решение. \n\nВ рамках Контура твои тех. скиллы укладываются в грейд Middle. К сожалению, мы не готовы пригласить тебя на следующий этап, так как сейчас команды находится в поиске кандидатов от грейда Middle+ и выше.\nСпасибо тебе еще раз за диалог, желаю удачи в поиске комфортного места работы!\n\n\nТехническая часть:\nВопросы по верстке:\n1. Отличие div и span\n2. Отличие margin и padding\n3. Существуют ли отрицательные паддинги?\n4. Работал ли с семантической версткой?\n5. Знаком ли с адаптивной версткой?\n6. Накидай вариантов, как можно сверстать японский флаг\n7. Накидать варианты создания круга, можно даже самые безумные\n\nЗадачи по чтению кода:\n\n1. \n// Что будет выведено в консоль\n\nvar values = [1, 2, 5, 10];\nvar result = 0;\n\nif (values.every(item => item > 0)) {\n    result += values.filter(item => item > 5).length\n}\n\nif (values.some(item => item > 5)) {\n    values.forEach((item, index) => {\n        if (index > 1 && index < 3){\n            result += item\n        }\n    })\n}\n\nconsole.log(result)\n\n\n2.\n// Что будет выведено в консоль\n\nvar currentCity = \"Екатеринбург\";\n\nfunction sayWelcome() {\n    console.log(\"Welcome to\" + currentCity);\n}\n\nsetTimeout(function(){\n    var currentCity = \"Москва\";\n    sayWelcome()\n}, 1000)\n\n\n3.\n// Что будет выведено в консоль\n\nlet clickCount = 0;\ndocument.addEventListener(\"click\", function() {\n    clickCount++;\n    console.log(\"clicked\", clickCount);\n});\n\nwhile (clickCount !== 5) {\n    console.log(\"wait\");\n}\n\nconsole.log(\"5 clicks!\")\n\n\n4.\n// Что будет выведено в консоль\n\nvar whatIsTruthy = [1, 'dfd', \"0\", {}, '', function() {}, NaN, true, false, 0, [], Infinity, null, undefined];\n\nconsole.log(whatIsTruthy.filter(item => item).length);\n\n\n5.\n// Что будет выведено в консоль\n\nlet a = 1;\na = 2;\nconsole.log(\"a\", a);\n\nconst b = 1;\nb = 2;\nconsole.log(\"b\", b);\n\n\n6.\n// Что будет выведено в консоль\n\nfunction doAsync(x) {\n    return new Promise((resolve, reject) => {\n        if (x) {\n            resolve(2);\n        } else {\n            reject(1)\n        }\n    });\n}\nlet a = 0\n\ndoAsync(false)\n    .then(x => a = x)\n    .then(e => a = e)\n\nconsole.log(a)\n\n\n7.\n// Что будет выведено в консоль\n\nfunction showFullName(firstName, lastName, ...rest) {\n    console.log(\n        `${firstName} ${lastName}${rest.length ? ` - ${rest}` : \"\"}`\n    );\n}\n\nshowFullName(\"Екатерина\", \"II\", \"императрица\", \"Всероссийская\");"
      }
    ]
  },
  {
    "company": "Matrix Systems",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-08-04 09:51:36",
        "content": "2024-08-04 09:51:36\n Максим -> 2071074234:\nMatrix Systems \nВакансия: https://hh.ru/vacancy/102492804?hhtmFrom=resume\nФидбек: настоящий момент не готов выйти с предложением о сотрудничестве,так как есть разные подходы в решении задачи.",
        "full_content": "2024-08-04 09:51:36\n Максим -> 2071074234:\nMatrix Systems \nВакансия: https://hh.ru/vacancy/102492804?hhtmFrom=resume\nФидбек: настоящий момент не готов выйти с предложением о сотрудничестве,так как есть разные подходы в решении задачи."
      }
    ]
  },
  {
    "company": "Facct",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-16 07:16:30",
        "content": "2025-03-16 07:16:30\n Кирилл -> 2071074234:\nКомпания: FACCT \nВакансия: hr написала\nЗП: 250+\n\n1. Виды хранилищ и их отличия (localStorage, sessionStorage, cookie, IndexedDB)\n2. Как удалить cookie? \n3. Как не блокировать рендер при тяжелых операциях? \n4. Виды веб-воркеров и их отличия, ограничения, недостатки\n5.  Почему у веб-воркеров нет доступа к DOM\n6. Как веб-воркеры общаются с приложением? Какие есть ограничения на передачу данных?\n7. Как общаться между 2 приложениями на одной странице без сет...",
        "full_content": "2025-03-16 07:16:30\n Кирилл -> 2071074234:\nКомпания: FACCT \nВакансия: hr написала\nЗП: 250+\n\n1. Виды хранилищ и их отличия (localStorage, sessionStorage, cookie, IndexedDB)\n2. Как удалить cookie? \n3. Как не блокировать рендер при тяжелых операциях? \n4. Виды веб-воркеров и их отличия, ограничения, недостатки\n5.  Почему у веб-воркеров нет доступа к DOM\n6. Как веб-воркеры общаются с приложением? Какие есть ограничения на передачу данных?\n7. Как общаться между 2 приложениями на одной странице без сети? \n8. Как отслеживать изменения в обновляющемся списке DOM? \n9. Расскажи как работает и что возвращают MutationObserver и setInterval\n10. Есть ли гарантия, что setInterval выполнится ровно через delay?\n11. Как часто выполняется requestAnimationFrame? requestAnimationFrame vs setInterval\n12. Расскажи про requestIdleCallback. Будет ли вызываться  requestIdleCallback, если браузер не будет простаивать?\n13. Статические поля класса и чем отличаются от обычных, привести примеры\n14. Как запретить изменения объекта в JS и TS\n15. Как работает Object.freeze под капотом? Как без использования Object.freeze можно запретить изменения объекта в JS?\n16. Какие бывают дескрипторы?\n17. Что такое Proxy?\n18. Как и кем выполняется JS в браузере? \n19. Сборщик мусора как работает\n20. У нас есть рекурсивная функция, будет ли она удалена сборщиком мусора, если внутри этой функции она вызывает саму себя? \n21. Какую проблему решают стейт менеджеры? Зачем нам стейт-менеджеры если мы можем использовать контекст в реакте?\n22. Для чего отделять логику от UI?\n23. Почему нам удобнее тестировать компонент, когда мы отделили логику от UI?\n24.  Как реализовано кеширование в RTK Query?\n25.  Как мы можем сами реализовать кеширование без использования RTK Query?\n26. Чем плох подход, когда мы храним результаты выполнения функции в кеше по ключам? Ситуация, ты выводишь на странице список элементов. Вдруг кто-то из команды разработчиков решил инвалидировать у себя на странице такой же запрос по твоему ключу и у тебя всё сломалось. Насколько было бы удобнее отследить связь, почему это произошло?\n\nЗадача как из поста https://t.me/c/2071074234/489/112616 , но еще попросили прикрутить типизацию\n\n\ntype EventType = \"event_one\" | \"event_two\";\ntype EventCallback = () => void;\ntype EventsMap = {\n  [key in EventType]: EventCallback[];\n};\n\n\nclass Dispatcher {\n    \n    constructor() {\n        this.event = {};\n    }\n  \n    on(event: EventType, callback: EventCallback): void {\n      if (!this.events[event]) {\n        this.events[event] = [];\n      }\n      this.events[event]!.push(callback);\n    }\n  \n    trigger(event: EventType): void {\n      this.events[event]?.forEach((cb) => cb());\n    }\n  \n    off(event: EventType, callback: EventCallback): void {\n      if (this.events[event]) {\n        this.events[event] = this.events[event]!.filter((cb) => cb !== callback);\n      }\n    }\n  }"
      }
    ]
  },
  {
    "company": "Fractall Design",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-06-26 11:38:36",
        "content": "2025-06-26 11:38:36\n Mark Nikonorov ⚛ -> 2071074234:\nКомпания Fractall Design\n1. Задача отрефакторить конфиг:\nimport { config } from './config';\nconst PORT = Number(process.env.PORT) || 3200;\n\nESBuild.context({\n  ...config\n}).then(ctx => {\n  ctx.serve({\n    servedir: config.outdir,\n    port: PORT\n  })\n  .then(({host, port}) => console.log(`Server started on http://localhost:` + port))\n  .catch(err => console.log(err))\n});\nРешение: \nimport { config } from './config';\nconst PORT = Number(process.e...",
        "full_content": "2025-06-26 11:38:36\n Mark Nikonorov ⚛ -> 2071074234:\nКомпания Fractall Design\n1. Задача отрефакторить конфиг:\nimport { config } from './config';\nconst PORT = Number(process.env.PORT) || 3200;\n\nESBuild.context({\n  ...config\n}).then(ctx => {\n  ctx.serve({\n    servedir: config.outdir,\n    port: PORT\n  })\n  .then(({host, port}) => console.log(`Server started on http://localhost:` + port))\n  .catch(err => console.log(err))\n});\nРешение: \nimport { config } from './config';\nconst PORT = Number(process.env.PORT) || 3200;\n\nESBuild.context({\n  ...config\n}).then(ctx => {\n  return ctx.serve({\n    servedir: config.outdir,\n    port: PORT\n  });\n })\n.then(({port}) => console.log(`Server started on http://localhost: ${port}`))\n.catch(console.log)\n2. Задача оптимизировать компонент:\nexport function InputSection() {\n  const [ text, setText ] = useState('');\n\n  const onClick = () => {\n    console.log('message', text);\n  }\n\n  // Обработчик onChange в TextField имеет сигнатуру (value: text) => void\n  return (\n    <>\n      <Header>Введите текст</Header>\n      <TextField value={text} onChange={setText} />\n      <SendButton onClick={onClick} />\n    </>\n  );\n}\nРешение: \nexport function InputSection() {\n  const [ text, setText ] = useState('');\n\n    const refText = useRef('')\n    refText.current = text\n  const onClick = useCallback(() => {\n    console.log('message', refText.current);\n  }, [])\n\n  // Обработчик onChange в TextField имеет сигнатуру `(value: text) => void`\n  return (\n    <>\n      <Header>Введите текст</Header>\n      <TextField value={text} onChange={setText} />\n      <SendButton onClick={onClick} />\n    </>\n  );\n}\n3. Задача отрефакторить компонент:\nexport function Component(props: { withCounter?: boolean }) {\n  function withCounter() {\n    const [ counter, setCounter ] = useState(0);\n    return (\n      <div onClick={() => setCounter(counter + 1)}>Count: {counter}</div>\n    );\n  }\n\n  const ref = useRef();\n  useEffect(() => {\n    ref.current.addEventListener('click', () => { alert('click'); });\n  }, []);\n\n  return (\n    <>\n      { props.withCounter && withCounter() }\n      <div ref={ref}>click me</div>\n    </>\n  );\n}\nРешение:\nfunction WithCounter() {\n    const [ counter, setCounter ] = useState(0);\n    return (\n      <div onClick={() => setCounter(counter + 1)}>Count: {counter}</div>\n    );\n}\n  \n  interface Component { withCounter?: boolean }\nexport function Component({withCounter}: Component) {\n  return (\n    <>\n      { withCounter && <WithCounter/> }\n      <div onClick={() => { alert('click'); }}>click me</div>\n    </>\n  );\n}\n\n4. Задача на типы\nСкрин условия выше\nРешение: \nfunction Factory<T extends (props: any) => void>(component: T, props: Parameters<T>[0]) {\n  component(props);\n}\n\nfunction ComponentA(props: { value: number }) {\n}\n\nfunction ComponentB(props: string) {\n}\n\nFactory(ComponentA, { value: 22 }); // OK\nFactory(ComponentB, '12'); // OK\nFactory(ComponentA, '22'); // В этой строке должна быть ошибка\nFactory(ComponentA, { value: 22, next: 12 }); // В этой строке должна быть ошибка\nFactory(ComponentB, 12); // В этой строке должна быть ошибка\nFactory(ComponentA, 12); // В этой строке должна быть ошибка"
      }
    ]
  },
  {
    "company": "Molecula",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-28 11:20:10",
        "content": "2024-07-28 11:20:10\n Vladislav -> 2071074234:\n- Molecula\n-ccылка: тг пост вакансии не сохранился\n- зп: 5000$\n- вопросы:\n1) Напиши кастомный hook useState \n\nconst useStateWithCallback = (initialState, callback) => {\n    const [state, setState] = useState(initialState);\n    useEffect(() => callback(state), [state, callback]);\n    return [state, setState];\n};\n\n2) Когда нужно использовать Map , а когда Object.  В чем из разница ?\n\n3) Что выведится в консоль ? \nconst a = {};\nconst b = { key: 'b' };\nc...",
        "full_content": "2024-07-28 11:20:10\n Vladislav -> 2071074234:\n- Molecula\n-ccылка: тг пост вакансии не сохранился\n- зп: 5000$\n- вопросы:\n1) Напиши кастомный hook useState \n\nconst useStateWithCallback = (initialState, callback) => {\n    const [state, setState] = useState(initialState);\n    useEffect(() => callback(state), [state, callback]);\n    return [state, setState];\n};\n\n2) Когда нужно использовать Map , а когда Object.  В чем из разница ?\n\n3) Что выведится в консоль ? \nconst a = {};\nconst b = { key: 'b' };\nconst c = { key: 'c' };\na[b] = 'apple';\na[c] = 'banana';\nconsole.log('Result:', a[b]);\n\n4) Что вернет эта странная функция ? У нее есть два бага, какие они ? (функция должна возвращать разделения между цифрами, на каждые 3)\n\nconst foo = (bar: string, sep: string) => {\n    let acc = '';\n    let i = bar.length - 1;\n    while (i >= 0) {\n        for (let j = 0; j < 3; j += 1) {\n            acc = bar[i - j] + acc;\n        }\n        i -= 3;\n        acc = sep + acc;\n    }\n    return acc;\n};\n\nfoo(\"123456789\", \"_\");\n\n5) В одной комнате три лампочки , в другой три включателя. Находясь в комнате с тремя выключателями можно перейти в комнату с лампочками только один раз. Как перейти в комнату с лампочками и узнать какой выключатель был к какой лампочке ?\n\n6) Если бы пришлось убить бабушку ты бы это сделал бензопилой или лопатой ?"
      }
    ]
  },
  {
    "company": "Unitarius",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-01-15 19:21:31",
        "content": "2025-01-15 19:21:31\n Сергей -> 2071074234:\n- Unitarius\n- Вакансия: https://ekaterinburg.hh.ru/vacancy/111857661\n- ЗП: с hr сказал от 250к\n- Вопросы:\n- Про опыт работы довольно подробно, с чем работал, какой стек, команда, работал ли с микрофронтами, как обучаюсь\n- Ссылочные типы данных, какие особенности\n- Object.freeze\n- Стрелочные функции, какие отличия от обычных\n- Про вебсокеты\n- Современные подходы к верстке\n- PostMessage\n- Жизненные циклы компонента\n- Какой из циклов нет в функциональном р...",
        "full_content": "2025-01-15 19:21:31\n Сергей -> 2071074234:\n- Unitarius\n- Вакансия: https://ekaterinburg.hh.ru/vacancy/111857661\n- ЗП: с hr сказал от 250к\n- Вопросы:\n- Про опыт работы довольно подробно, с чем работал, какой стек, команда, работал ли с микрофронтами, как обучаюсь\n- Ссылочные типы данных, какие особенности\n- Object.freeze\n- Стрелочные функции, какие отличия от обычных\n- Про вебсокеты\n- Современные подходы к верстке\n- PostMessage\n- Жизненные циклы компонента\n- Какой из циклов нет в функциональном реакте\n- Lazy\n- Способы оптимизации\n- Задачка на что выведется первым(Promise, setTimeout который в промисе)\n- Задача с объектом, нужно удалить все промежуточные объект с типом Group."
      }
    ]
  },
  {
    "company": "Action Tech",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-04-16 17:18:43",
        "content": "2025-04-16 17:18:43\n Ivan Kulyaev -> 2071074234:\nКомпания: Action tech\nВакансия: на Хабре написали 😑\nЗп: 250-280 на руки \n\nВопросы:\n\n1. Об опыте \n2. Virtual dom\n3. Проп key\n4. Мемоизация в react\n5. Event loop\n6. Что такое fsd, как внедряли его на проект\n7. Виды рендеринга \n8. Минусы / плюсы TS\n9. Generics \n10. Utility types, кастомные утилиты \n11. Как работает браузер \n12. http/https\n\nЗадач не было\n\nРезультат: остановили найм",
        "full_content": "2025-04-16 17:18:43\n Ivan Kulyaev -> 2071074234:\nКомпания: Action tech\nВакансия: на Хабре написали 😑\nЗп: 250-280 на руки \n\nВопросы:\n\n1. Об опыте \n2. Virtual dom\n3. Проп key\n4. Мемоизация в react\n5. Event loop\n6. Что такое fsd, как внедряли его на проект\n7. Виды рендеринга \n8. Минусы / плюсы TS\n9. Generics \n10. Utility types, кастомные утилиты \n11. Как работает браузер \n12. http/https\n\nЗадач не было\n\nРезультат: остановили найм"
      }
    ]
  },
  {
    "company": "Rusiem",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-01 08:01:10",
        "content": "2025-07-01 08:01:10\n Никита -> 2071074234:\nRuSIEM\nHr написала\nЗп от 200\n\nВопросы:\n\nСпрашивал пару вопросов про опыт, тестирование\n\nЗадачи:\n\nЗАДАЧА 1\n\nРеализовать функцию полиндром, он её усложнял 3 раза\n// madam | racecar\nfunction isPalindrome(word) {\n  return word == word.split('').reverse().join('');\n}\n// madam | RaceCar\n// beer\nfunction isPalindrom(word) {\n  let first = 0;\n  let last = word.length - 1;\n\n  while (first < last) {\n    if (word[first].tolowerCase() == word[last].tolowerCase()) {\n...",
        "full_content": "2025-07-01 08:01:10\n Никита -> 2071074234:\nRuSIEM\nHr написала\nЗп от 200\n\nВопросы:\n\nСпрашивал пару вопросов про опыт, тестирование\n\nЗадачи:\n\nЗАДАЧА 1\n\nРеализовать функцию полиндром, он её усложнял 3 раза\n// madam | racecar\nfunction isPalindrome(word) {\n  return word == word.split('').reverse().join('');\n}\n// madam | RaceCar\n// beer\nfunction isPalindrom(word) {\n  let first = 0;\n  let last = word.length - 1;\n\n  while (first < last) {\n    if (word[first].tolowerCase() == word[last].tolowerCase()) {\n      first += 1;\n      last -= 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n}\n// madam | ;;;;;;4Rac ecar4\n// beer\n\nfunction isPalindrom(word) {\n\n    let first = 0\n    let last = word.length - 1\n\n    while (first < last){\n        if (!isValid(word[first])){\n            first += 1\n            continue\n        }\n\n        if (!isValid(word[last])){\n            last -= 1\n            continue\n        }\n\n        if (word[first].toLowerCase() == word[last].toLowerCase()){\n            first += 1\n            last -= 1\n        } else {\n            return false\n        }\n    }\n\n    return true\n}\n\nfunction isValid(char){\n    if (/[a-zA-Z0-9]/.test(char)){\n        return true\n    }\n    return false;\n}"
      }
    ]
  },
  {
    "company": "Metatraning",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-09 19:34:47",
        "content": "2025-03-09 19:34:47\n Артем -> 2071074234:\nКомпания: metatraning\n\nВопросы:\nЗамыкание\nнапиши count++ \nрешение: \nfunction CountFunc() {\n    let count = 0;\n    return function() {\n        count++;\n        return count;\n    };\n}\n\nlet s = CountFunc();\nconsole.log(s()); // 1\nconsole.log(s()); // 2\nconsole.log(s()); // 3\n\nlet vs var vs const\nJS - это\neventLoop\nНАписать функция promiseAll\nрешение:\nconst promiseAll = (proms) => {\n  const result = [];\n  let count = 0;\n\n  return new Promise((resolve, reject...",
        "full_content": "2025-03-09 19:34:47\n Артем -> 2071074234:\nКомпания: metatraning\n\nВопросы:\nЗамыкание\nнапиши count++ \nрешение: \nfunction CountFunc() {\n    let count = 0;\n    return function() {\n        count++;\n        return count;\n    };\n}\n\nlet s = CountFunc();\nconsole.log(s()); // 1\nconsole.log(s()); // 2\nconsole.log(s()); // 3\n\nlet vs var vs const\nJS - это\neventLoop\nНАписать функция promiseAll\nрешение:\nconst promiseAll = (proms) => {\n  const result = [];\n  let count = 0;\n\n  return new Promise((resolve, reject) => {\n    proms.forEach((pr, idx) => {\n      pr.then((res) => {\n        result[idx] = res;\n        count += 1;\n        if (count === proms.length) resolve(result);\n      }).catch(reject);\n    });\n  });\n};"
      }
    ]
  },
  {
    "company": "Технократия",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-02-04 08:40:51",
        "content": "2025-02-04 08:40:51\n Petr Zabrodniy -> 2071074234:\nНазвание компании : Технократия \nСсылка на вакансию : HR сама написала \nЗП : вилка до 350, сказал от 300 \nВопросы : \nБаза по JS, html. CSS, также про особенности PWA, от воркеров до кэширования \nЗадачи :\n\n\n\n// 1 .  В первой задаче реализуется метод findUnique, который находит уникальные элементы массива.\n\nArray.prototype.findUnique = function () {\n  return this.filter((item, _, arr) => arr.filter(el => el === item).length === 1);\n};\n\nconsole.log...",
        "full_content": "2025-02-04 08:40:51\n Petr Zabrodniy -> 2071074234:\nНазвание компании : Технократия \nСсылка на вакансию : HR сама написала \nЗП : вилка до 350, сказал от 300 \nВопросы : \nБаза по JS, html. CSS, также про особенности PWA, от воркеров до кэширования \nЗадачи :\n\n\n\n// 1 .  В первой задаче реализуется метод findUnique, который находит уникальные элементы массива.\n\nArray.prototype.findUnique = function () {\n  return this.filter((item, _, arr) => arr.filter(el => el === item).length === 1);\n};\n\nconsole.log([true, 1, '2', {}, 2, {}, true, 1].findUnique()); // [\"2\", 2, {}, {}]\n\n// 2 . луп\n\n\nconst promise = new Promise((resolve, reject) => {\n  a += 3;\n  console.log(a); \n  resolve(a); \n}).catch(e => {\n  return a;\n});\n\nsetTimeout(() => {\n  console.log(++a);\n});\n\npromise.then(value => {\n  const result = value + 5; \n  console.log(result); \n  return result;\n});\n\nlet a = 1;\nconsole.log(a); \n\n// 1\n// 6\n// 2"
      }
    ]
  },
  {
    "company": "Спросиврача",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-12 09:53:52",
        "content": "2024-06-12 09:53:52\n Roman -> 2071074234:\nНазвание компании: СпросиВрача\nВакансия: hr сам написал, искали разработчика на веб (React, Next.js) и на мобилки (React Native)\nЗП: просил от 300к\nУспех: ❌\nФидбэк:\nПриветствую, Роман\nПолучил ответ от руководителя, на данный момент выбрали финального кандидата на эту должность ждём от него ответа. Спасибо за уделенное время, если ситуация изменится, то вернемся к вашей кандидатуре\n\nЧестно говоря ничего такого, выбрали кандидата из компании конкурента с а...",
        "full_content": "2024-06-12 09:53:52\n Roman -> 2071074234:\nНазвание компании: СпросиВрача\nВакансия: hr сам написал, искали разработчика на веб (React, Next.js) и на мобилки (React Native)\nЗП: просил от 300к\nУспех: ❌\nФидбэк:\nПриветствую, Роман\nПолучил ответ от руководителя, на данный момент выбрали финального кандидата на эту должность ждём от него ответа. Спасибо за уделенное время, если ситуация изменится, то вернемся к вашей кандидатуре\n\nЧестно говоря ничего такого, выбрали кандидата из компании конкурента с аналогичным стекам и задачами и знакомым с продуктом\n\nВопросы:\n1. Перезагрузка функций\n2. Статическая типизация\n3. Дженерики\n4. declare в typescript\n5. Если в useEffect не будет массива зависимостей?\n6. Проблема с контекстом для состояния?\n7. Ключи в реакте\n8. оптимизация в реакте (memo, useCallback, useMemo, виртуализация, lazyLoading и еще какие способы оптимизации)\n9. HOC (memo, forwardRef)\n10. кастомные хуки, писал и для чего?\n11. Next.js - что это и для чего нужен\n12. плюсы Next.js\n13. SSR\n14. как делается роутинг в Next.js?\n15. SSG\n16. Чем лучше и хуже SSR и SSG?\n17. ISR (гибридный подход, сочетающий плюсы SSR и SSG)\n18. Какие есть компоненты в React Native (View, Text, Image, ScrollView, TextInput)\n19. Недостатки React Native\n20. WebSocket\n21. Как обрабатывать ошибки WebSocket\n22. CORS\nЧастично записал, под конец: https://t.me/c/2071074234/485/19503"
      }
    ]
  },
  {
    "company": "Hyperus",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-12-13 07:00:18",
        "content": "2024-12-13 07:00:18\n Egor -> 2071074234:\nHyperus\nВакансия: https://hh.ru/vacancy/108354058?hhtmFrom=negotiation_list\nЗп: просил около 300к\nУспех: дали оффер 315к без учета налога\nЗапись: https://www.youtube.com/watch?v=dAcYYQBoCAs",
        "full_content": "2024-12-13 07:00:18\n Egor -> 2071074234:\nHyperus\nВакансия: https://hh.ru/vacancy/108354058?hhtmFrom=negotiation_list\nЗп: просил около 300к\nУспех: дали оффер 315к без учета налога\nЗапись: https://www.youtube.com/watch?v=dAcYYQBoCAs"
      }
    ]
  },
  {
    "company": "pro-test.Studio",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-29 08:15:56",
        "content": "2024-10-29 08:15:56\n Артем -> 2071074234:\nКомпания: pro-test.Studio\nЗП: 250\nВакансия: -\nВопросы:\nEventLoop\nКак заблокировать страницу\nТипы данных в js\nПодробнее про Symbol \nVar let const\nЧто будет ечли обьявим переменную без var let const\nThis\nРабота prototype\nЧто такое явное наследование\nКлассы\nФункцци для работы с классами\nЧто такое super\nReact смысл\nReact плюсы\nСостояния реакт\nХуки\nTs дженерики",
        "full_content": "2024-10-29 08:15:56\n Артем -> 2071074234:\nКомпания: pro-test.Studio\nЗП: 250\nВакансия: -\nВопросы:\nEventLoop\nКак заблокировать страницу\nТипы данных в js\nПодробнее про Symbol \nVar let const\nЧто будет ечли обьявим переменную без var let const\nThis\nРабота prototype\nЧто такое явное наследование\nКлассы\nФункцци для работы с классами\nЧто такое super\nReact смысл\nReact плюсы\nСостояния реакт\nХуки\nTs дженерики"
      }
    ]
  },
  {
    "company": "Iga Tech",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-01 12:31:03",
        "content": "2024-11-01 12:31:03\n memphis -> 2071074234:\nКомпания: Iga tech\nЗП: 230\nвакансия: https://vlasiha.hh.ru/vacancy/109236243?hhtmFrom=employer_vacancies\nвидео: https://youtu.be/8dk8nC82CSU\nстатус: оффер 🟢",
        "full_content": "2024-11-01 12:31:03\n memphis -> 2071074234:\nКомпания: Iga tech\nЗП: 230\nвакансия: https://vlasiha.hh.ru/vacancy/109236243?hhtmFrom=employer_vacancies\nвидео: https://youtu.be/8dk8nC82CSU\nстатус: оффер 🟢"
      }
    ]
  },
  {
    "company": "Angie",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-22 11:59:08",
        "content": "2024-11-22 11:59:08\n Timofei Syromiatnikov -> 2071074234:\n— Компания: Angie\n— Вакансия: написала hr\n— ЗП: 250-280к\n— Вопросы:\n1) Расскажи про свои сложные задачи\n2) Представь что возникла ошибка на странице в UI например, как бы ты решал эту проблему? Например ошибка в внешней библиотеке, как бы ты решал в этом случае проблему?\n3) Что такое JavaScript? \n4) JS интерпретируемый или компилируемый ЯП?\n5) В чем отличие интерпретируемого ЯП от компилируемого?\n6) Что из последнего читал из новостей ста...",
        "full_content": "2024-11-22 11:59:08\n Timofei Syromiatnikov -> 2071074234:\n— Компания: Angie\n— Вакансия: написала hr\n— ЗП: 250-280к\n— Вопросы:\n1) Расскажи про свои сложные задачи\n2) Представь что возникла ошибка на странице в UI например, как бы ты решал эту проблему? Например ошибка в внешней библиотеке, как бы ты решал в этом случае проблему?\n3) Что такое JavaScript? \n4) JS интерпретируемый или компилируемый ЯП?\n5) В чем отличие интерпретируемого ЯП от компилируемого?\n6) Что из последнего читал из новостей статей о технологиях, что возможно использовал в работе\n7) Что такое ECMAScript?\n8) Что такое CORS? Как настроить CORS?\n9) Как работает JS в браузере? С помощью чего он работает там?\n10) Как работает EventLoop?\n11) Что такое стек вызовов и как он работает?\n12) В чем отличие var, let, const?\n13) Что такое this и как работает?\n14) Какие хранилища данных ты знаешь в браузере и в чем их отличие? Назови различия между localStorage и cookies в сценариях использования.\n15) Из чего состоит HTTP запрос?\n15) Что такое заголовки в HTTP запросе, их правила, зачем они нужны, и почему мы не можем просто передавать заголовки в body например?\n16) Как сделать так чтобы при нажатии на ссылку у нас скачивался файл? А теперь как сделать так, чтобы при переходе по урлу у нас сразу скачивался файл?\n17) Что такое browser object model и что туда входит?\nЗадачи:\n1) \n// Что выведется в консоль, и как исправить чтобы выводился контекст \"inner obj\"\nfunction logContext() {\n  var hello, obj, fn;\n\n  hello= () => { console.log(this) }\n  obj = {\n    name: \"inner obj\",\n    hello: hello,\n  }\n  fn = obj.hello;\n\n  fn();\n}\n\nvar obj = {\n  name: 'outer obj',\n  hello: logContext,\n}\n\nobj.hello()\n2) \n// Отрефакторь код\n\nimport React from \"react\"\nfunction fetchUsers() {\nreturn fetch(`${process.env.BACKEND_GETWAY}/users`) .then(response => response.json());\n}\n\nfunction Users() {\nconst [userName, setUserName] = useState(\"\");\nconst [users, setUsers] = useState([]);\n\nuseEffect(function() {\n  fetchUsers().then(setUsers)\n}, [])\n\nfunction handleUserName (event) {\n  setUserName (event.target.value)\n};\n\nfunction handleSubmit (event) {\n  fetch(`${process.env.BACKEND_GETWAY}/users`, { method: \"PATCH\", body: userName })\n};\n\nreturn ( <div>\n<ul>\n{users.map(user => <li>{user.name}</li>)}\n</ul>\n<form onSumbit={handleSubmit}>\n<label>\nName <input type=\"text\" onChange={handleUserName}> </label>\n<button type=\"submit\">Save</button>\n</form>\n</div>\n);\n}\n3) \n// Что выйдет в консоли?\nsetTimeout(() => { console.log(1) }, 0)\n\nconst p = new Promise((res, rej) => {\n  console.log(2)\n  res()\n})\n\np.then(() => { console.log(3) })\n\nconsole.log(4)"
      }
    ]
  },
  {
    "company": "Центр Авиа",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-02-07 14:39:40",
        "content": "2025-02-07 14:39:40\n Артем -> 2071074234:\nКомпания: Центр Авиа\nВопросы \nКакие паттерны используешь\nкак бы создал систему уведомления(вот такой вопрос был без каких вводных)\nКак бы ты создал систему публикаций(Вот просто такой вопрос без вводных данных думаю имел ввиду про бэк потомучто все вопросы задавл по бэку)\nОпределить наступления события в node\nХолодный vs горячий кэш в node\nкак прогреть кэш\nдля чего нужна node\nwebworker\nwebSocket\nАвторизация vs Аунтификация\nкак сделать авторизацию для 1 у...",
        "full_content": "2025-02-07 14:39:40\n Артем -> 2071074234:\nКомпания: Центр Авиа\nВопросы \nКакие паттерны используешь\nкак бы создал систему уведомления(вот такой вопрос был без каких вводных)\nКак бы ты создал систему публикаций(Вот просто такой вопрос без вводных данных думаю имел ввиду про бэк потомучто все вопросы задавл по бэку)\nОпределить наступления события в node\nХолодный vs горячий кэш в node\nкак прогреть кэш\nдля чего нужна node\nwebworker\nwebSocket\nАвторизация vs Аунтификация\nкак сделать авторизацию для 1 устройства\nJWT"
      }
    ]
  },
  {
    "company": "Trendtech",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-10 15:00:57",
        "content": "2024-07-10 15:00:57\n Artur -> 2071074234:\nTrendTech, тех.собес\n\n— Вакансия: https://spb.hh.ru/vacancy/102454931?from=employer&hhtmFrom=employer\n— ЗП: сказал 150к+, комфортно 180к или 190к (требуется от 1 до 3 лет опыта и у них вроде вилка ограничена была)\n\nВопросы:\n— какая команда, процессы\n— как работал с чатами, какие проблемы были\n— что улучшил в команде\n— что привнес новое в проект\n— как тебе redux\n— какие еще стейтменджеры щупал\n— как ui кит разрабатывал\n— какая архитектура была\n— как с веб...",
        "full_content": "2024-07-10 15:00:57\n Artur -> 2071074234:\nTrendTech, тех.собес\n\n— Вакансия: https://spb.hh.ru/vacancy/102454931?from=employer&hhtmFrom=employer\n— ЗП: сказал 150к+, комфортно 180к или 190к (требуется от 1 до 3 лет опыта и у них вроде вилка ограничена была)\n\nВопросы:\n— какая команда, процессы\n— как работал с чатами, какие проблемы были\n— что улучшил в команде\n— что привнес новое в проект\n— как тебе redux\n— какие еще стейтменджеры щупал\n— как ui кит разрабатывал\n— какая архитектура была\n— как с вебпаком работал\n— есть ли опыт с module federation\n— какие тесты писал\n— какие способы копирования объекта знаешь\n— как фиксить перерендеры\n— разница void и never\n— utility types\n— как отследить клик по кнопке из одного модуля в другом через микрофронты\n— Event Bus это, как решать проблему с утечкой памяти\n— какие еще ui киты готовые знаешь\n— как оптимизировать сайт чтобы быстро грузил\n— были ли проблемы с памятью при использовании redux\n\nЗадача:\n\n// Написать функцию, которая принимает на вход массив элементов и возвращает кол-во уникальных элементов, протипизировать\n\nconst func = (arr: (string | number | object)[]): number => {\n  const uniq = new Set(arr);\n  return uniq.size;\n};\n\nconsole.log(func([\"a\", \"b\", 1, { c: 3 }, { c: 3 }, \"a\"]));"
      }
    ]
  },
  {
    "company": "Enot io",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-25 14:44:15",
        "content": "2024-10-25 14:44:15\n Sergey Chizhikov -> 2071074234:\n-Компания:  Enot io\n-зп: 200к\n-вакансия: нет\n\nВопросы:\n+Виды функций и их отличия\n+Ссылочные типы\n+Рекурсия\n+Асинхронность в js\n+Задача на асинхронность с console.log\n+Принципы ООП и SOLID\n+Сборщик мусора\n+расскажи про React\n+жизненный цикл компонента\n+Хуки React\n+useEffect и useLayoutEffect\n+проблема useLayoutEffect\n+useCallback useMemo\n+HOC\n+context\n+Чем лучше state мэнеджеры в сравнении с context\n+база по TypeScript\n+задачка на типизацию\n\nЗ...",
        "full_content": "2024-10-25 14:44:15\n Sergey Chizhikov -> 2071074234:\n-Компания:  Enot io\n-зп: 200к\n-вакансия: нет\n\nВопросы:\n+Виды функций и их отличия\n+Ссылочные типы\n+Рекурсия\n+Асинхронность в js\n+Задача на асинхронность с console.log\n+Принципы ООП и SOLID\n+Сборщик мусора\n+расскажи про React\n+жизненный цикл компонента\n+Хуки React\n+useEffect и useLayoutEffect\n+проблема useLayoutEffect\n+useCallback useMemo\n+HOC\n+context\n+Чем лучше state мэнеджеры в сравнении с context\n+база по TypeScript\n+задачка на типизацию\n\nЗадача:\nИзначально была строка, состоящая из одинаковых символов. Над ней производилось некоторое количество операций вставки символа. Очередной символ можно вставить только между любыми двумя одинаковыми символами.\n\nВам дана строка s, состоящая из латинских символов как нижнего, так и верхнего регистра. Определите, могла ли эта строка получиться после некоторого количества таких операций над ней."
      }
    ]
  },
  {
    "company": "Сибентек",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-09 19:14:58",
        "content": "2025-03-09 19:14:58\n Артем -> 2071074234:\nКомпания: Сибентек\nЗП: от 250 000K\n\nВопросы: \nДля чего нужен реакт\nчто такое кастомный хук \nкакие есть правила у хука\nКак работает рендер компонентов\nДали код надо его оптимизировать \nрешение:\n\n```\nimport { useState, useEffect, useMemo } from \"react\";\n\nconst ComplexComponent = ({ data }) => {\n    const [computedResult, setComputedResult] = useState([]);\n\n    useEffect(() => {\n        const worker = new Worker(new URL(\"./worker.js\", import.meta.url));\n   ...",
        "full_content": "2025-03-09 19:14:58\n Артем -> 2071074234:\nКомпания: Сибентек\nЗП: от 250 000K\n\nВопросы: \nДля чего нужен реакт\nчто такое кастомный хук \nкакие есть правила у хука\nКак работает рендер компонентов\nДали код надо его оптимизировать \nрешение:\n\n```\nimport { useState, useEffect, useMemo } from \"react\";\n\nconst ComplexComponent = ({ data }) => {\n    const [computedResult, setComputedResult] = useState([]);\n\n    useEffect(() => {\n        const worker = new Worker(new URL(\"./worker.js\", import.meta.url));\n        worker.postMessage(\"start\");\n        worker.onmessage = (e) => setComputedResult(e.data);\n        return () => worker.terminate();\n    }, [data]); // Пересчет при изменении data\n\n    return (\n        <div>\n            <h1>Результат сложных вычислений:</h1>\n            {computedResult.map((item, index) => (\n                <p key={index}>{item}</p>\n            ))}\n        </div>\n    );\n};\n\nКак отипизировать функцию чтоыб возвращался string\nрешение:\n\n// Вариант 1: Прямое указание типа при объявлении\nconst toUpperCase: (input: string) => string = (input) => {\n    return input.toUpperCase();\n};\n\n// Вариант 2: Использование псевдонима типа\ntype StringFunction = (str: string) => string;\n\nconst reverseString: StringFunction = (str) => {\n    return str.split('').reverse().join('');\n};"
      }
    ]
  },
  {
    "company": "Ренессанс Страхование",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-18 18:27:19",
        "content": "2024-10-18 18:27:19\n Mike -> 2071074234:\nКомпания: Ренессанс Страхование\nВакансия:https://hh.ru/vacancy/107180106\nЗП:250к\nВопросы:\n0.Много по работе(код ревью делал ли, как таски получал)\n1.кодить это инженерная или творческая работа\n2.принипы KISS, DRY, YAGNI\n3.SOLID расшифровать\n4.Хуки, которые чаще всего использовал и немного расскаажи про них\n5.как отловить ошибки\n6.отмена запроса при размонтировании\n7.юзал ли тесты и какие \n8.HOC\n9.Portal что такое и зачем\n10.JS однопоточный или многопоточн...",
        "full_content": "2024-10-18 18:27:19\n Mike -> 2071074234:\nКомпания: Ренессанс Страхование\nВакансия:https://hh.ru/vacancy/107180106\nЗП:250к\nВопросы:\n0.Много по работе(код ревью делал ли, как таски получал)\n1.кодить это инженерная или творческая работа\n2.принипы KISS, DRY, YAGNI\n3.SOLID расшифровать\n4.Хуки, которые чаще всего использовал и немного расскаажи про них\n5.как отловить ошибки\n6.отмена запроса при размонтировании\n7.юзал ли тесты и какие \n8.HOC\n9.Portal что такое и зачем\n10.JS однопоточный или многопоточный и как добиться многопоточности\n11.Eventloop / WebWorkers\n12.задача 1, сделать сортировку на кноке по возрастанию/убыванию массива имен\n13.задача2,  реализовать функцию debounced - платина"
      }
    ]
  },
  {
    "company": "Домклие",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-09-05 14:25:46",
        "content": "2024-09-05 14:25:46\n Александр Птицын -> 2071074234:\n- Домклие\n- Вакансия:   https://whispering-fuel-f46.notion.site/Frontend-6d3377e2b7164fb1963cbf4cd222b26a \n- ЗП - 320к на руки\n1.Как работает метод map, мутирует ли исходный массив\n 2. Как работает метод filter, мутирует ли исходный массив\n 3. Фазы события подробно про всплытие, погружение\n 4. Отличие currentTarget от target\n 5. async/await для чего, что возвращает async функция\n 6. Что за флаги i, g в регулярках\n 7. Что такое /d в регулярках\n...",
        "full_content": "2024-09-05 14:25:46\n Александр Птицын -> 2071074234:\n- Домклие\n- Вакансия:   https://whispering-fuel-f46.notion.site/Frontend-6d3377e2b7164fb1963cbf4cd222b26a \n- ЗП - 320к на руки\n1.Как работает метод map, мутирует ли исходный массив\n 2. Как работает метод filter, мутирует ли исходный массив\n 3. Фазы события подробно про всплытие, погружение\n 4. Отличие currentTarget от target\n 5. async/await для чего, что возвращает async функция\n 6. Что за флаги i, g в регулярках\n 7. Что такое /d в регулярках\n 8. Методы test, match отличия\n 9. Метод replace подробно\n 10. Что такое блочная модель\n 11. Про особенности box-sizing: border-box\n 12. Вес селекторов\n 13. Про свойство position и его значения\n 14. Про псевдоэлементы\n 15. Псевдоклассы подробно\n 16. Через какие свойства работаем с маркерами списков\n 17. Как поменять цвет маркера списка\n 18. Свойство transition и из чего состоит его значение\n 19. Как делать анимации через keyframes и как их применять их к элементам\n 20. Чем плох transition: all\n 21. Свойство will-change подробно, что будет если добавить его для всех элементов\n 22. grid-template-columns\n 23. repeat в гридах\n 24. Как задать промежутки между колонками или строками\n 25. grid-template-areas\n 26. Как отловить прогрузку HTML, отличие DOMContentLoaded от load\n 27. Как понять, что страница все еще грузится (document.readyState)\n 28. localStorage vs cookie\n 29. Спросил про preload атрибуты\n 30. Про prefetch? preconnect\n 31. Дефолтные скрипты vs async vs defer vs module\n 32. Фрагменты в React, можно ли им проставить атрибут key\n 33. Что будет, если задать списку один и тот же key\n 34. Что такое useRef, useMemo, memo\n 35. react.lazy для чего\n 36. Что такое Redux, single source of truth в его контексте\n\nЗадача 1 . Функция принимает на вход число, а возвращает отсортированные цифры по убыванию, что делает маесимальное число из входящего\nмое решение\n\nconst descendingOrder = (n) =>   Number(String(n).split('').sort((a, b) => b - a).join(''))\n\n\nЗадача 2. \n\n/*\nПреобразуйте массив таким образом, чтобы на выходе получилась строка с диапазоном чисел.\nДиапазон начинается с трех и более идущих подряд чисел, все остальные числа выводятся отдельно.\n*/\n \nfunction rangeExtraction(list) {\n  // твой код здесь\n}\n \nconst range = [-10, -9, -8, -7, -3, -2, -1, 0, 1, 3, 4, 5, 14, 15, 17, 18, 19, 20];\n \nconsole.info(rangeExtraction(range) === \"-10--7,-3-1,3-5,14,15,17-20\");\n\nя не решил"
      }
    ]
  },
  {
    "company": "Рокет-Тех",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-11 11:21:44",
        "content": "2024-06-11 11:21:44\n Александр Горохов -> 2071074234:\nНазвание компании: Рокет-тех\nЗП: 200\n\n     Что конкретно ты сделал на проекте?\nКак работал с тех-долгом?\nПо какой системе версий работал?\nДелал кастомные компоненты? Какие?\nКакие стейт менеджеры знаешь?\n Раскажи про FSD архи тектуру\nВопрос про подгружение/всплытие/таргет\nДинамическая/статическая типизация.\n Что такое VDOM?\nКакие хуки знаешь?\nЧто знаешь про классовые компоненты?\n Как оптимизировать приложения, как понять что ты оптимизировал, ...",
        "full_content": "2024-06-11 11:21:44\n Александр Горохов -> 2071074234:\nНазвание компании: Рокет-тех\nЗП: 200\n\n     Что конкретно ты сделал на проекте?\nКак работал с тех-долгом?\nПо какой системе версий работал?\nДелал кастомные компоненты? Какие?\nКакие стейт менеджеры знаешь?\n Раскажи про FSD архи тектуру\nВопрос про подгружение/всплытие/таргет\nДинамическая/статическая типизация.\n Что такое VDOM?\nКакие хуки знаешь?\nЧто знаешь про классовые компоненты?\n Как оптимизировать приложения, как понять что ты оптимизировал, какие метрики использовал?\nМето ды защиты от xss\nПлюсы SSR\nЧто такое CI/CD"
      }
    ]
  },
  {
    "company": "ITL.Team",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-10 13:43:54",
        "content": "2025-07-10 13:43:54\n .пуша L ✞ -> 2071074234:\nКомпания: ITL.Team (проект Лига Ставок)\nСначала спросили про опыт, чем занимался, немного уточняющих вопросов по реализации технологий\nРассказали о себе, о команде, про процессы\n\nТолько задача на рефакторинг:\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport './style.css';\n\ninterface Product {\n    description: string;\n    id: string;\n    info: string;\n    name: string;\n}\n\ntype Shop = {\n    coordinate: number[];\n    id: string;\n    ...",
        "full_content": "2025-07-10 13:43:54\n .пуша L ✞ -> 2071074234:\nКомпания: ITL.Team (проект Лига Ставок)\nСначала спросили про опыт, чем занимался, немного уточняющих вопросов по реализации технологий\nРассказали о себе, о команде, про процессы\n\nТолько задача на рефакторинг:\nimport { useEffect, useLayoutEffect, useState } from 'react';\nimport './style.css';\n\ninterface Product {\n    description: string;\n    id: string;\n    info: string;\n    name: string;\n}\n\ntype Shop = {\n    coordinate: number[];\n    id: string;\n    name: string;\n    priceList: Record<string, string>;\n};\n\n/*test*/\n\n\nexport const AppTimer = () => {\n    let currency = ' $';\n    const [timer, setTimer] = useState(10);\n\n    const onDecrease = () => {\n        if (counter > 0) {\n            counter--;\n            setTimer(counter);\n        }\n    };\n\n    useLayoutEffect(() => {\n        if (!started) {\n            setInterval(onDecrease, 1000);\n        }\n\n        started = true;\n    });\n\n    return (\n        <div>\n            <div className=\"Controls\">{timer}</div>\n            {/* @ts-ignore */}\n            <ProductList currency={currency} />\n        </div>\n    );\n};\n\nconst ProductList = ({ currency, error = false }: any) => {\n\n    /*let counter = 10;\n    var started = false;*/\n\n    const [products, setProducts] = useState<Product[]>([]);\n    const [shops, setShops] = useState<Array<Shop>>([]);\n\n    if (error) {\n        return;\n    }\n\n    // @ts-ignore\n    useEffect(async () => {\n        const productsResponse = await fetch(\n            'https://my-json-server.typicode.com/cyberwalrus/demo/products'\n        );\n        const productsJson = await productsResponse.json();\n\n        setProducts(productsJson);\n    }, [setProducts, setShops]);\n\n    const getShops = (id: string) => {\n        let array: any[] = [];\n\n        for (var i = 0; i < shops.length; i++) {\n            const shop = shops[i];\n\n            if (shop.priceList[id]) {\n                array = [...array, shop];\n            }\n        }\n\n        return array;\n    };\n\n    useLayoutEffect(() => {\n        fetch('https://my-json-server.typicode.com/cyberwalrus/demo/shops')\n            .then((res) => res.json())\n            .then((res) => setShops(res));\n    }, []);\n\n    return (\n        <div className=\"productsWrapper\">\n            {/* render products */}\n            {products.map(({ name, description, id }) => (\n                <main className=\"products\">\n                    <h1 className=\"products-Item_green\">{name}</h1>\n                    <h5>{description}</h5>\n                    <hr />\n                    {/* render shops list */}\n                    <ul className=\"postList\">\n                        {(getShops(id) as Shop[]).map(({ name, priceList }) => (\n                            <div className=\"post__header\">\n                                {name} -{' '}\n                                {\n                                    Object.entries(priceList).find(\n                                        ([key]) => id === key\n                                    )?.[1]\n                                }\n                                {currency}\n                            </div>\n                        ))}\n                    </ul>\n                </main>\n            ))}\n        </div>\n    );\n};"
      }
    ]
  },
  {
    "company": "Деливери",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-23 19:43:41",
        "content": "2024-07-23 19:43:41\n Ramis Mubarakov -> 2071074234:\n— Сравни, финал с деливери команды\n— Ссылка на вакансию: hr сам написал, https://hh.ru/vacancy/97044312\n— Озвученная мной ЗП: 250k+\n— Вопросы:\n\n1) Расскажи коротко про свой опыт без углубления в технические моменты.\n2) Почему решили пилить свой UI-Kit?\n3) Что тебе больше всего понравилось в рамках работы над проектами? Что тебя драйвит?\n4) Как подходил к решению конфликтов?\n5) Что делаешь помимо работы?\n6) С чем в процессе работы не хотел бы ст...",
        "full_content": "2024-07-23 19:43:41\n Ramis Mubarakov -> 2071074234:\n— Сравни, финал с деливери команды\n— Ссылка на вакансию: hr сам написал, https://hh.ru/vacancy/97044312\n— Озвученная мной ЗП: 250k+\n— Вопросы:\n\n1) Расскажи коротко про свой опыт без углубления в технические моменты.\n2) Почему решили пилить свой UI-Kit?\n3) Что тебе больше всего понравилось в рамках работы над проектами? Что тебя драйвит?\n4) Как подходил к решению конфликтов?\n5) Что делаешь помимо работы?\n6) С чем в процессе работы не хотел бы сталкиваться?"
      }
    ]
  },
  {
    "company": "ITLab",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-11 13:13:51",
        "content": "2025-07-11 13:13:51\n Sodnom Tyksheev -> 2071074234:\nКомпания: ITLab\nПроект: Букмекерка\n2 этап тех интервью\n\nВопросы:\n\n1.Какие хуки знаешь, с какими работал?Про каждый рассказать\n2.Расскажи про virtual DOM ? Какую он решает проблему?\n3.В чем разница между классовыми и функциональными компонентами?\n4.Как можно изменить значение из дочернего в родительском компоненте?\n5.Когда стоит юзать локальное состояние и когда глобальное?\n6.Расскажи какими стейт менеджерами работал? В чем их различия, плюсы и ...",
        "full_content": "2025-07-11 13:13:51\n Sodnom Tyksheev -> 2071074234:\nКомпания: ITLab\nПроект: Букмекерка\n2 этап тех интервью\n\nВопросы:\n\n1.Какие хуки знаешь, с какими работал?Про каждый рассказать\n2.Расскажи про virtual DOM ? Какую он решает проблему?\n3.В чем разница между классовыми и функциональными компонентами?\n4.Как можно изменить значение из дочернего в родительском компоненте?\n5.Когда стоит юзать локальное состояние и когда глобальное?\n6.Расскажи какими стейт менеджерами работал? В чем их различия, плюсы и минусу и какая архитектура у них(типо FLUX)\n7.Какие архитектурные решения есть в реакте?(FSD,Atomic,Module)\n\n// вывести данные о юзерах <https://jsonplaceholder.typicode.com/users> и \n// все это типизировать\n\nexport function App(props) {\n  const [users, setUsers] = useState<User[]>([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const res = await fetch('<https://jsonplaceholder.typicode.com/users>');\n        if (!res.ok) {\n          throw new Error('error');\n        }\n        const data = await res.json();\n        setUsers(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  if (isLoading) return <div>loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div className='App'>\n      <ul>\n        {users.map(el => (\n          <li key={el.id}>{el.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}"
      }
    ]
  },
  {
    "company": "Infowatch",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-02-10 14:18:12",
        "content": "2025-02-10 14:18:12\n Михаил Барыкин -> 2071074234:\nКомпания: InfoWatch \nСсылка на вакансию: Написал HR \nЗП: Просил от 250к \nВопросы: \n- прошлись по резюме, что использовал, какой стек\n- git merge vs git rebase \n- git pull для чего\n- git stash \n- unknown vs never vs void\n- Дженерики для чего \n- T extends number | string - для чего extends\n- Литеральные типы что это \n- Capitalize\n- про utility types typescript \nЗадачи: \n1)  \ntypescript \n//Нужно вернуть result из массива numbers + типизировать, \n//...",
        "full_content": "2025-02-10 14:18:12\n Михаил Барыкин -> 2071074234:\nКомпания: InfoWatch \nСсылка на вакансию: Написал HR \nЗП: Просил от 250к \nВопросы: \n- прошлись по резюме, что использовал, какой стек\n- git merge vs git rebase \n- git pull для чего\n- git stash \n- unknown vs never vs void\n- Дженерики для чего \n- T extends number | string - для чего extends\n- Литеральные типы что это \n- Capitalize\n- про utility types typescript \nЗадачи: \n1)  \ntypescript \n//Нужно вернуть result из массива numbers + типизировать, \n//чтобы каждое число было только цифрой, и чтобы длина \n//массива была равна 9: \n// numbers -> [1, 2, 3, 4, 5, 6, 7, 8, 9] \n// result -> \"(123) 456-789\" \n \ntype Union = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9; \ntype FixedArray9 = Union[] & {length: 9} \n \n// result -> \"(123) 456-789\" \nfunction createPhoneNumber(numbers: FixedArray9): string { \n return `(${numbers[0]}${numbers[1]}${numbers[2]}) ${numbers[3]}${numbers[4]}${numbers[5]}-${numbers[6]}${numbers[7]}${numbers[8]}` \n} \n \nconsole.log(createPhoneNumber([1, 2, 3, 4, 5, 6, 7, 8, 9]))  \n \n2)  \ntypescript \nconst StyledInput = styled(Input)<{ $color: string }>`color: ${(props) => props.$color}`; \n \nexport const Parent = () => { \nconst spanRef = useRef<HTMLSpanElement>(null) \n \nconst handleClick = () => { \n  if (spanRef.current) { \n    const inputElement = spanRef.current.querySelector(\"input\") as HTMLInputElement; \n \n  if (inputElement) { \n    alert(`Input value: $(inputElement.value)`) \n  } \n}  \n \nreturn ( \n  <div> \n    <StyledInput ref={spanRef} /> \n    <button onClick={handleClick)>Получить данные</button> \n  </div> \n  ) \n}"
      }
    ]
  },
  {
    "company": "Perfect Panel",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-12 14:27:56",
        "content": "2024-11-12 14:27:56\n Егор -> 2071074234:\nКомпания : Perfect Panel\nВакансия: https://hh.ru/vacancy/109570071\nЗП: 180к+\nВопросы:\n- расскажи про свое последнее место работы\n- какие тесты писали\n- что такое вебсокеты\n- cors\n- как получать инфу между вкладками (никак, политика безопасности)\n- local storage, session storage\n- семантическая верстка\n- forEach\n- promise\n- var let const \n- область видимости\n- опыт с react, как себя оцениваешь в react\n- зачем нужен typescript\n- generic",
        "full_content": "2024-11-12 14:27:56\n Егор -> 2071074234:\nКомпания : Perfect Panel\nВакансия: https://hh.ru/vacancy/109570071\nЗП: 180к+\nВопросы:\n- расскажи про свое последнее место работы\n- какие тесты писали\n- что такое вебсокеты\n- cors\n- как получать инфу между вкладками (никак, политика безопасности)\n- local storage, session storage\n- семантическая верстка\n- forEach\n- promise\n- var let const \n- область видимости\n- опыт с react, как себя оцениваешь в react\n- зачем нужен typescript\n- generic"
      }
    ]
  },
  {
    "company": "Актион",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-02-05 22:42:43",
        "content": "2025-02-05 22:42:43\n Артем -> 2071074234:\nКомпания: Актион \nиз чего состоит HTML\nasync defer в HTML\nСемантическая верстка\nz-index\nmedia запросы\nметоды массива\nPromise\neventLoop\nuseEffect\nЖизненный цикл компонента\nДекомпозируй блок с датой\n\nЗадача: \nОтрефактори код",
        "full_content": "2025-02-05 22:42:43\n Артем -> 2071074234:\nКомпания: Актион \nиз чего состоит HTML\nasync defer в HTML\nСемантическая верстка\nz-index\nmedia запросы\nметоды массива\nPromise\neventLoop\nuseEffect\nЖизненный цикл компонента\nДекомпозируй блок с датой\n\nЗадача: \nОтрефактори код"
      }
    ]
  },
  {
    "company": "Dodo Brands",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-14 06:24:18",
        "content": "2024-10-14 06:24:18\n Алмас -> 2071074234:\nКомпания: Dodo Brands\nВакансия: сама написала\nЗП: от 300\n\n-У нас есть таймауты, таймеры, интервалы и тд. Мы запустили таймаут, хотим какое то отложенное действие, но пользователь уходит со страницы, не дождался нашего таймоута и нам нужно таймаут как то отменить. Каким образом мы можем это сделать? \n-А еще какой нибудь способ знаешь? Как можно сделать это без метода?\n-Расскажи про контекст у стрелочной функции?\n-А как нибудь в контекст мы можем передать ...",
        "full_content": "2024-10-14 06:24:18\n Алмас -> 2071074234:\nКомпания: Dodo Brands\nВакансия: сама написала\nЗП: от 300\n\n-У нас есть таймауты, таймеры, интервалы и тд. Мы запустили таймаут, хотим какое то отложенное действие, но пользователь уходит со страницы, не дождался нашего таймоута и нам нужно таймаут как то отменить. Каким образом мы можем это сделать? \n-А еще какой нибудь способ знаешь? Как можно сделать это без метода?\n-Расскажи про контекст у стрелочной функции?\n-А как нибудь в контекст мы можем передать в стрелочную функцию?\n-Что нужно сделать, чтобы юзефект сработал один раз? \n-А что нам нужно сделать, чтобы юзефект сработал только на дидапдейт, без монтирования\n-Запросы get передаются query параметрами, а можем сделать тоже самое методом post?\n-Работал с ts? Типы из тайпскрипта у нас просачиваются в рантайм? \n-Может быть знаешь, что все таки из ts просачивается в build, в рантайм? что в итоговом бандле, что то из ts может быть. ( ответ: enums )\n-Что мы можем сделать, чтобы наши обработчики не пересоздавались лишний раз при рендере?\n-Типы данных в js?\n-Почему на реакте начал писать, а не на чем то другом? \n-С какими сборщиками работал? \n-Сi/cd?"
      }
    ]
  },
  {
    "company": "Fatzoom",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-10 15:56:26",
        "content": "2025-03-10 15:56:26\n Ильдус Гизетдинов -> 2071074234:\nКомпания: Fatzoom(Этап 1)\nВакансия: Hr сама написала\nЗп: не известно\n\nРаскажи про себя, про реакт, команду\nВопросы:\n1)Cors\n2)Почему что то браузер кэширует, а что то нет\n3)Стратегия кэширования, какие заголовки бывают\n4)Как диагностировать проблему с быстродействием\n5)Нужно делать запросы раз в 10 секунд, как это сделать, потом почему может приходить вместо ожидаемых 100 запросов получаем 700\n6)Когда нужно отписывать от событий\n7)Как сделать ...",
        "full_content": "2025-03-10 15:56:26\n Ильдус Гизетдинов -> 2071074234:\nКомпания: Fatzoom(Этап 1)\nВакансия: Hr сама написала\nЗп: не известно\n\nРаскажи про себя, про реакт, команду\nВопросы:\n1)Cors\n2)Почему что то браузер кэширует, а что то нет\n3)Стратегия кэширования, какие заголовки бывают\n4)Как диагностировать проблему с быстродействием\n5)Нужно делать запросы раз в 10 секунд, как это сделать, потом почему может приходить вместо ожидаемых 100 запросов получаем 700\n6)Когда нужно отписывать от событий\n7)Как сделать так что бы запрос был только с активной вкладки\n8)Как делать запросы не находясь во вкладке\n9)как увеличить скорость обработки гигантского массива\n10)Что такое flex-basis\n11)Context\n12)Критерии выбора какой либо либы"
      }
    ]
  },
  {
    "company": "Sok Studio",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-15 15:18:41",
        "content": "2024-11-15 15:18:41\n Артем -> 2071074234:\nКомпания: Sok Studio\nЗП: 250\nВопросы: \n{} === {}\n1 == '1'\nЛексическое окружения\nevent loop\nМетоды промиса\nuseEffect vs useLauotEffect\nwhile(true) что будет\nчто выведеться там промисы setTimeiot\nuseMemo useCallback\nкак useMemo превратить useCallback\nReact.memo\nreact.memo с кастомной функциией\nчто выведеться на скрине\nnext middlware\nпапки как страница \n[id] vs [...id]",
        "full_content": "2024-11-15 15:18:41\n Артем -> 2071074234:\nКомпания: Sok Studio\nЗП: 250\nВопросы: \n{} === {}\n1 == '1'\nЛексическое окружения\nevent loop\nМетоды промиса\nuseEffect vs useLauotEffect\nwhile(true) что будет\nчто выведеться там промисы setTimeiot\nuseMemo useCallback\nкак useMemo превратить useCallback\nReact.memo\nreact.memo с кастомной функциией\nчто выведеться на скрине\nnext middlware\nпапки как страница \n[id] vs [...id]"
      }
    ]
  },
  {
    "company": "Азот-Взрыв",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-13 12:29:56",
        "content": "2024-07-13 12:29:56\n Руслан -> 2071074234:\nАзот-взрыв\n—зп: сказал 260к, ответили, что 230 максимум\n— вакансия: https://hh.ru/vacancy/101949185\n— Вопросы:\n1. http и вебсокеты отличия\n2. Особенности https протокола по сравнению с http\n3. Про самоподписные и сертификаты и выданные удостоверяющим центром",
        "full_content": "2024-07-13 12:29:56\n Руслан -> 2071074234:\nАзот-взрыв\n—зп: сказал 260к, ответили, что 230 максимум\n— вакансия: https://hh.ru/vacancy/101949185\n— Вопросы:\n1. http и вебсокеты отличия\n2. Особенности https протокола по сравнению с http\n3. Про самоподписные и сертификаты и выданные удостоверяющим центром"
      }
    ]
  },
  {
    "company": "Квинсдевелопмент",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-05-30 06:54:24",
        "content": "2024-05-30 06:54:24\n Александр Птицын -> 2071074234:\nНазвание компании: #КвинсДевелопмент\n- Вакансия: https://hh.ru/vacancy/99580707\n- ЗП: вилка 3-5к$\n\nЭто стартап по крипте. Технических вопросов не было. Нужно было рассказать как много ты знаешь библиотек и как ты это все будешь использовать в их проекте. Проще посмотреть видео)",
        "full_content": "2024-05-30 06:54:24\n Александр Птицын -> 2071074234:\nНазвание компании: #КвинсДевелопмент\n- Вакансия: https://hh.ru/vacancy/99580707\n- ЗП: вилка 3-5к$\n\nЭто стартап по крипте. Технических вопросов не было. Нужно было рассказать как много ты знаешь библиотек и как ты это все будешь использовать в их проекте. Проще посмотреть видео)"
      }
    ]
  },
  {
    "company": "Holyweb",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-23 06:02:45",
        "content": "2025-03-23 06:02:45\n Кирилл -> 2071074234:\nКомпания: HolyWeb\nВакансия: https://spb.hh.ru/vacancy/117478356?hhtmFrom=employer_vacancies\n\nВопросы:\n1. Вопросы по опыту\n2. Расскажи как работает redux\n3. Когда websocket теряет соединение, то он сам его восстанавливает или нет\n4. Redux vs Redux Toolkit\n5. Как можно сохранить состояние в redux, чтобы при перезагрузке данные не терялись\n6. Этапы рендера страницы\n7. Расскажи что такое FSD и как организовывали на проекте\n8. Что такое поток документа и как...",
        "full_content": "2025-03-23 06:02:45\n Кирилл -> 2071074234:\nКомпания: HolyWeb\nВакансия: https://spb.hh.ru/vacancy/117478356?hhtmFrom=employer_vacancies\n\nВопросы:\n1. Вопросы по опыту\n2. Расскажи как работает redux\n3. Когда websocket теряет соединение, то он сам его восстанавливает или нет\n4. Redux vs Redux Toolkit\n5. Как можно сохранить состояние в redux, чтобы при перезагрузке данные не терялись\n6. Этапы рендера страницы\n7. Расскажи что такое FSD и как организовывали на проекте\n8. Что такое поток документа и как на него влияет position\n9. Что такое конструктор в классах\n10. Разница между статик и обычными методами \n11. Состояния промиса\n12. Статические методы промиса\n13. Сборщик мусора как работает\n14. Расскажи как работает eventloop\n15. Как отменить стандартное поведение формы, чтобы при отправки у нас не перезагружалась страница\n16. Как остановить всплытие события\n17. async vs defer\n18. unknown vs any\n19. Что такое дженерики \n20. Перегрузка функций что это и для чего\n21. Какие утилити тайпы знаешь\n22. Что такое VDOM\n23. Что такое React Fiber\n24. useRef vs useState\n25. Правила написала хуков\n26. Что такое lazy и suspanse \n27. Как перехватывать ошибки в react\n28. Что такое вебворкеры \n29. Как писали тесты на проекте, как мокали данные для тестов\n30. polling vs long polling"
      }
    ]
  },
  {
    "company": "Компания T2",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-29 06:24:58",
        "content": "2024-11-29 06:24:58\n Mikhail Sorokin -> 2071074234:\nКомпания T2\nИз-за технических проблем решили только одну задачу, еще будет один собес с одной задачей\nЗадача — транспонировать матрицу(использовать только один цикл, не мутировать исходную матрицу)\nРешение:\nconst matrix = [\n  [1, 2, 3, 4, 5],\n  [6, 7, 8, 9, 10],\n  [11, 12, 13, 14, 15],\n  [16, 17, 18, 19, 20],\n  [21, 22, 23, 24, 25],\n];\n\nconst getTransposedMatrix = (matrix) => {\n  const result = [];\n  const rowCount = matrix.length;\n  const colC...",
        "full_content": "2024-11-29 06:24:58\n Mikhail Sorokin -> 2071074234:\nКомпания T2\nИз-за технических проблем решили только одну задачу, еще будет один собес с одной задачей\nЗадача — транспонировать матрицу(использовать только один цикл, не мутировать исходную матрицу)\nРешение:\nconst matrix = [\n  [1, 2, 3, 4, 5],\n  [6, 7, 8, 9, 10],\n  [11, 12, 13, 14, 15],\n  [16, 17, 18, 19, 20],\n  [21, 22, 23, 24, 25],\n];\n\nconst getTransposedMatrix = (matrix) => {\n  const result = [];\n  const rowCount = matrix.length;\n  const colCount = matrix[0].length;\n  let newArr = [];\n  let currentCol = 0\n  let currentRow = rowCount - 1\n\n  /** писать ниже этой строки*/\n  for (let i = 0; i < (rowCount * colCount); i++) {\n    newArr.push(matrix[currentRow][currentCol]);\n    if (currentRow === 0) {\n      currentRow = rowCount;\n      currentCol ++\n      result.push(newArr);\n      newArr = [];\n    }\n    currentRow--\n  }\n  return result;\n};\n\n\nconsole.log(matrix);\nconsole.log(\"============================\");\nconsole.log(getTransposedMatrix(matrix))"
      }
    ]
  },
  {
    "company": "Crtex",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-02-08 16:17:08",
        "content": "2024-02-08 16:17:08\n Александр Молодов -> 2071074234:\nНазвание компании: CRTEX\nПервый этап - теория + задача\nЗарплата: от 250т.р.\nРезультат: скорее всего отрицательный (затупил с задачей, обработал не все варианты), завтра отпишу итоговый \nРЕД ФЛАГ: ПОЛИГРАФ от СБ в ОФИСЕ\n\nПо теории:\nОценил себя как мидл+ сразу попросили пояснить за грейд)\nКакую архитектуру используешь на проекте, какие знаешь?\nЧто такое функциональное программирование?\nВ какой парадигме пишут на JS?\nЧто такое браузер зачем он н...",
        "full_content": "2024-02-08 16:17:08\n Александр Молодов -> 2071074234:\nНазвание компании: CRTEX\nПервый этап - теория + задача\nЗарплата: от 250т.р.\nРезультат: скорее всего отрицательный (затупил с задачей, обработал не все варианты), завтра отпишу итоговый \nРЕД ФЛАГ: ПОЛИГРАФ от СБ в ОФИСЕ\n\nПо теории:\nОценил себя как мидл+ сразу попросили пояснить за грейд)\nКакую архитектуру используешь на проекте, какие знаешь?\nЧто такое функциональное программирование?\nВ какой парадигме пишут на JS?\nЧто такое браузер зачем он нужен?\nЧто такое EventLoop? \nКак работает async await ?\nСпособы оптимизации?\nЧто такое мемоизация и почему она не всегда нужна?\nВроде всё, если и были ещё какие-то вопросы, то максимально базовые\n\nЗадача\nconst data = [\n  \"index.ts\",\n  {\n    src: [\n      \"index.ts\",\n      {\n        ui: [\n          \"index.ts\",\n          {\n            cards: [\"cards.tsx\", \"index.ts\"],\n            wallets: [\"index.ts\", \"all-wallets.tsx\"],\n          },\n        ],\n      },\n    ],\n  },\n];\n\nfunction myFlat(arr){\n//реализация\n}\n\nmyFlat(data)\n\n// [\n//   \"index.ts\",\n//   \"src/index.ts\",\n//   \"src/ui/index.ts\",\n//   \"src/ui/cards/cards.tsx\",\n//   \"src/ui/cards/index.ts\",\n//   \"src/ui/wallets/index.ts\",\n//   \"src/ui/wallets/all-wallets.tsx\"\n// ]\n\n\n\nUPD: оценили мидл, готовы дать 200к\nUPD: сказали готовы поднимать зп так как понравился, но на созвон с командой не пойду"
      }
    ]
  },
  {
    "company": "Findsport",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-04 14:34:22",
        "content": "2024-10-04 14:34:22\n Максим -> 2071074234:\nFindSport\n- Вакансия: https://hh.ru/vacancy/106647901?hhtmFrom=chat\n- Зп: 120-140к\n\nВакансию кинули в архив, возможно чуть позже снова откроют. Ищут 2х человек. Лайвкодинга не было, вопросики так чисто за опыт и технологии. Проводят в два этапа. Второй этап разговор с лидом по вопросам как работают, как трудоустраивают и тд",
        "full_content": "2024-10-04 14:34:22\n Максим -> 2071074234:\nFindSport\n- Вакансия: https://hh.ru/vacancy/106647901?hhtmFrom=chat\n- Зп: 120-140к\n\nВакансию кинули в архив, возможно чуть позже снова откроют. Ищут 2х человек. Лайвкодинга не было, вопросики так чисто за опыт и технологии. Проводят в два этапа. Второй этап разговор с лидом по вопросам как работают, как трудоустраивают и тд"
      }
    ]
  },
  {
    "company": "Название Компании Appmaster",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-04-09 06:44:46",
        "content": "2024-04-09 06:44:46\n Санжар -> 2071074234:\n- Название компании AppMaster\n- Ссылка на вакансию: hr скинул текст в личку в телеге\n- ЗП: минимум 330к, комфорт 380к \n- Успех: ❌\n- Фидбек: был блиц опрос, на который отведено 20 минут, интервьюер сказал, что вопросы будут строго по их стеку, предупредил, что мало кто его проходит. Я протянул 10 мин. В какой-то момент, судя по реакции интервьювера на мои ответы, показалось, что цель собеседования - это самоутвердиться за счет отсутствия у кандидата глуб...",
        "full_content": "2024-04-09 06:44:46\n Санжар -> 2071074234:\n- Название компании AppMaster\n- Ссылка на вакансию: hr скинул текст в личку в телеге\n- ЗП: минимум 330к, комфорт 380к \n- Успех: ❌\n- Фидбек: был блиц опрос, на который отведено 20 минут, интервьюер сказал, что вопросы будут строго по их стеку, предупредил, что мало кто его проходит. Я протянул 10 мин. В какой-то момент, судя по реакции интервьювера на мои ответы, показалось, что цель собеседования - это самоутвердиться за счет отсутствия у кандидата глубоких знаний локальных тем.\n\nВопросы:\n- способы шифровки данных в js\n- отличия cjs от ejs\n- как происходит работа в webworkers\n- какие ограничения есть в webworkers\n- как общаться между iframe (без shared webworkers)\n- какие есть способы организации микросервисной архитектуры\n- для чего нужен rxjs во vue3\n- как определить утечку памяти в браузере\n- что лучше, один чанк или много чанков. Назови правило, определяющее самое оптимальное решение\n- как влияет http1 http2 http3 на загрузку чанков"
      }
    ]
  },
  {
    "company": "Irlix",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-03 13:43:32",
        "content": "2025-03-03 13:43:32\n Алексей ... -> 2071074234:\nКомпания: IRLIX\nВакансия: написала hr в тг\nЗП: от 180к (аутстаф)\n\nВопросы:\n1. На каких проектах работал?\n2. Стек технологий на проектах\n3. Состав команды\n4. Что такое замыкание?\n5. Что такое event loop?\n6. Какие существуют методы у промисов?\n7. Как работает всплытие и погружение?\n8. Отличие deffer/assync\n9. Что быстрее .find или .some?\n10. Зачем нужен React\n11. С какими хуками работал\n12. Отличие useEffect от useLayoutEffect\n13. Способы оптимизации...",
        "full_content": "2025-03-03 13:43:32\n Алексей ... -> 2071074234:\nКомпания: IRLIX\nВакансия: написала hr в тг\nЗП: от 180к (аутстаф)\n\nВопросы:\n1. На каких проектах работал?\n2. Стек технологий на проектах\n3. Состав команды\n4. Что такое замыкание?\n5. Что такое event loop?\n6. Какие существуют методы у промисов?\n7. Как работает всплытие и погружение?\n8. Отличие deffer/assync\n9. Что быстрее .find или .some?\n10. Зачем нужен React\n11. С какими хуками работал\n12. Отличие useEffect от useLayoutEffect\n13. Способы оптимизации реакт приложения\n14. Когда нужно оборачивать функцию в useCallback?\n15. Зачем нужны keys в реакте, почему нельзя использовать индексы?\n16. Что такое батчинг? \n17. Что такое дженерики?\n18. Что такое utility types, какие знаешь?\n19. Что такое type guard? \n20. Работал ли с jwt? \n \nБез лайвкодинга"
      }
    ]
  },
  {
    "company": "Катюшапринт",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-01-31 17:38:58",
        "content": "2025-01-31 17:38:58\n Владислав -> 2071074234:\nкомпания: КатюшаПринт\nвакансия: https://hh.ru/vacancy/115264604?from=share_ios\nзп: до 250 000\n\nВопросы: \n1. Что будет, когда вводим в браузере url и нажимаем Enter?\n2. Рассказать какие знаю Utility types\n\nЗадачи:\n1. Написать свой Readonly\nReadonly<Type>: делает все свойства типа Type доступными только для чтения.\n\nРешение: \ntype MyReadonly<T> = {\n    readonly [P in keyof T]: T[P];\n};\n\nЗадача 2\nУсловие: Есть enum Animals, в котором указаны животные. Н...",
        "full_content": "2025-01-31 17:38:58\n Владислав -> 2071074234:\nкомпания: КатюшаПринт\nвакансия: https://hh.ru/vacancy/115264604?from=share_ios\nзп: до 250 000\n\nВопросы: \n1. Что будет, когда вводим в браузере url и нажимаем Enter?\n2. Рассказать какие знаю Utility types\n\nЗадачи:\n1. Написать свой Readonly\nReadonly<Type>: делает все свойства типа Type доступными только для чтения.\n\nРешение: \ntype MyReadonly<T> = {\n    readonly [P in keyof T]: T[P];\n};\n\nЗадача 2\nУсловие: Есть enum Animals, в котором указаны животные. Нужно написать свой тип, который проходит по всем ключам enum и проверяет есть ли такой тип:\nenum Animals = {\n  DOG,\n  CAT,\n}\n\nРешение: \ntype MySupperType<T> = {\n  [K in keyof typeof Animals]: T;\n};\n\nЗадача 3\n Условие: Дана древовидная структура, нужно сделать вывод всех элементов вложенности. Также каждому уровню вложенности нужно добавить отступ больше чем у родительского.\nimport React, { useState } from 'react';\n\nconst App = () => {\n    const [treeData] = useState({\n        id: 1,\n        name: 'test',\n        children: [\n            {\n                id: 2,\n                name: 'test2',\n                children: [\n                    {\n                        id: 3,\n                        name: 'test3',\n                        children: [],\n                    },\n                ],\n            },\n            {\n                id: 4,\n                name: 'test4',\n                children: [],\n            },\n        ],\n    });\n\n    return (\n        <div>\n            <h1>Дерево</h1>\n        </div>\n    );\n};\n\nexport default App;\n\nРешение:\nimport React, { useState } from 'react';\n\nconst Block = (props) => {\n    const {id, name, children, margin} = props;\n    return (\n        <div style={{ marginLeft: `${margin}px` }}>\n            <div>{name}</div>\n            {children && children.length > 0 && (\n                <div>\n                    {children.map(child => (\n                        <Block key={child.id} {...child} magrin={margin + 1} />\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst App = () => {\n    const [treeData] = useState({\n        id: 1,\n        name: 'test',\n        children: [\n            {\n                id: 2,\n                name: 'test2',\n                children: [\n                    {\n                        id: 3,\n                        name: 'test3',\n                        children: [],\n                    },\n                ],\n            },\n            {\n                id: 4,\n                name: 'test4',\n                children: [],\n            },\n        ],\n    });\n\n    return (\n        <div>\n            <h1>Дерево</h1>\n            <Block {...treeData} margin={1} />\n        </div>\n    );\n};\n\nexport default App;\n\nЗадача 4\nУсловие: сделать такой результат\nconst obj = {\n    a: {\n        b: {\n            c: 1\n        },\n        d: {\n            e: 2\n        },\n        f: 3\n    },\n    g: 1\n} \n\n// { 'a.b.c': 1, 'a.d.e': 2. 'a.f': 3, g: 1 }\n\nРешение: \nfunction renderObj (obj, prefix = '') {\n    let result = {};\n    \n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            const newKey = prefix ? `${prefix}.${key}` : key;\n            \n            if (typeof obj[key] === 'object' && obj[key] !== null) {\n                Object.assign(result, renderObj(obj[key], newKey));\n            } else {\n                result[newKey] = obj[key];\n            }\n        }\n    }\n    \n    return result\n}\n\nconsole.log(renderObj(obj))"
      }
    ]
  },
  {
    "company": "65Apps",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-01-17 09:04:18",
        "content": "2025-01-17 09:04:18\n Артем -> 2071074234:\nКомпания 65Apps\nВопросы: \nclass vs id\nмодули в JS\nКакие бывают бандлеры\nКак оптимизировать бандл\nООП\nSolid\nJWT\nЧто храниться на бэки для авторизации\nЗадача\nfunction flat(arr) {\n    return arr.reduce((acc, val) => \n        Array.isArray(val) \n            ? [...acc, ...flat(val)]  // Если элемент - массив, рекурсивно обрабатываем его\n            : [...acc, val],          // Если элемент - не массив, добавляем как есть\n        []\n    );\n}\n\n// Тест\nconsole.l...",
        "full_content": "2025-01-17 09:04:18\n Артем -> 2071074234:\nКомпания 65Apps\nВопросы: \nclass vs id\nмодули в JS\nКакие бывают бандлеры\nКак оптимизировать бандл\nООП\nSolid\nJWT\nЧто храниться на бэки для авторизации\nЗадача\nfunction flat(arr) {\n    return arr.reduce((acc, val) => \n        Array.isArray(val) \n            ? [...acc, ...flat(val)]  // Если элемент - массив, рекурсивно обрабатываем его\n            : [...acc, val],          // Если элемент - не массив, добавляем как есть\n        []\n    );\n}\n\n// Тест\nconsole.log(flat([1, [2, [3, [4,5]]]])); // => [1, 2, 3, 4, 5]"
      }
    ]
  },
  {
    "company": "Ah Group",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-12-03 22:57:16",
        "content": "2024-12-03 22:57:16\n Артем -> 2071074234:\nAH Group тех собес\nВакансия hr написала\nзп 250 \nвопросы:\nвсе точно такаже\nhttps://t.me/c/2071074234/489/74336",
        "full_content": "2024-12-03 22:57:16\n Артем -> 2071074234:\nAH Group тех собес\nВакансия hr написала\nзп 250 \nвопросы:\nвсе точно такаже\nhttps://t.me/c/2071074234/489/74336"
      }
    ]
  },
  {
    "company": "Eq Lab",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-21 10:12:25",
        "content": "2025-03-21 10:12:25\n Timofei Syromiatnikov -> 2071074234:\nКомпания: EQ Lab\nЗП: 300-450к\nВопросов не было\n\nЗадачи:\n1) \n//Что выведет в консоль\ndocument.body.id = 1\nconsole.log(document.body.id === 1)\n2) \nconst instance = {id: \"1\"}\ninstance.id = 2\n\nconsole.log(typeof instance.id) // Как сделать так чтобы выводилось string. (Тема дескрипторов)\n3) \n// event loop\nconsole.log(\"1\")\nconst p1 = new Promise(resolve => {\nconsole.log(\"3\")\nsetTimeout(() => console.log(\"4\"))\nresolve()\n})\n\np1.then(() => {conso...",
        "full_content": "2025-03-21 10:12:25\n Timofei Syromiatnikov -> 2071074234:\nКомпания: EQ Lab\nЗП: 300-450к\nВопросов не было\n\nЗадачи:\n1) \n//Что выведет в консоль\ndocument.body.id = 1\nconsole.log(document.body.id === 1)\n2) \nconst instance = {id: \"1\"}\ninstance.id = 2\n\nconsole.log(typeof instance.id) // Как сделать так чтобы выводилось string. (Тема дескрипторов)\n3) \n// event loop\nconsole.log(\"1\")\nconst p1 = new Promise(resolve => {\nconsole.log(\"3\")\nsetTimeout(() => console.log(\"4\"))\nresolve()\n})\n\np1.then(() => {console.log(\"5\")})\n\nPromise.resolve().then(() => { console.log(\"6\") })\n\nconsole.log(\"2\")\n4) \n// Допиши нужный функционал для работы новостной ленты\nimport { useEffect, useRef, useState } from \"react\";\n\ninterface User {\n  id: number;\n  username: string;\n  avatar: string;\n}\n\ninterface PostResponse {\n  id: number;\n  userId: number;\n  content: string;\n  timestamp: Date;\n}\n\n// Имитация методов API\nasync function getPosts(): Promise<PostResponse[]> {}\nasync function getUser(id: number): Promise<User> {}\nasync function send(message: string): Promise<PostResponse> {}\n\n// Компонент Feed\nexport const Feed = () => {\n  return (\n    <div>\n      <h1>Feed</h1>\n      <div>\n        <textarea placeholder=\"What's happening?\" />\n        <button>Add post</button>\n      </div>\n      <div>\n        {posts.map((post) => (\n          <div>\n            <div>\n              <img src={post.user?.avatar} alt=\"Avatar\" />\n              <h3>{post.user?.username}</h3>\n            </div>\n            <p>{post.content}</p>\n            <small>{post.timestamp.toLocaleString()}</small>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};"
      }
    ]
  },
  {
    "company": "Эремейч Рус",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-06-17 14:25:45",
        "content": "2025-06-17 14:25:45\n Ильдус Гизетдинов -> 2071074234:\nЭремейч рус\nВакансия https://kazan.hh.ru/vacancy/120833470?hhtmFrom=chat\nВопросы:\nНемного о себе\nПочему ищешь работу\nДелаешь запрос на серв и получаешь ошибку, твои действия\nВ где брал задачи\nНа чем был бек\nЧто такое html\nСемантические теги\nДля чего doctype\nПриведи примеры блочных и строчных тегов и чем отличаются\nКак можно стилизовать элемент\nСпецифичность селекторов\nКакие position есть\nRelative и absolute\nОтносительно чего можно позициониро...",
        "full_content": "2025-06-17 14:25:45\n Ильдус Гизетдинов -> 2071074234:\nЭремейч рус\nВакансия https://kazan.hh.ru/vacancy/120833470?hhtmFrom=chat\nВопросы:\nНемного о себе\nПочему ищешь работу\nДелаешь запрос на серв и получаешь ошибку, твои действия\nВ где брал задачи\nНа чем был бек\nЧто такое html\nСемантические теги\nДля чего doctype\nПриведи примеры блочных и строчных тегов и чем отличаются\nКак можно стилизовать элемент\nСпецифичность селекторов\nКакие position есть\nRelative и absolute\nОтносительно чего можно позиционировать absolute\nПреимущества SCSS\nЧто такое миксины\nКакая типизация в js\nЧто такое js\nКакие типы данных бывают\nСравнение примитивов и ссылочных типов\nОтличие var let const\nВсплытие \n// Как сделать что бы a была доступна \nvar a = 10\nfunction(){\nconsole.log(a)\n}\nconsole.log('' || {}); // {} (пустой объект)\nconsole.log('0' && 2); // 2\nconsole.log('' ?? {}); // '' (пустая строка)\nКак изменить контекст\ncall apply bind\nВиды функций и их разница\nЧто такое this"
      }
    ]
  },
  {
    "company": "Aggregate Digital",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-07 10:52:15",
        "content": "2024-11-07 10:52:15\n Sergey F -> 2071074234:\nКомпания:  Aggregate Digital\nЗП: не обсуждали\nВакансия: https://tver.hh.ru/vacancy/109230359?hhtmFrom=vacancy_search_list\n\nВопросы:\nJS\n- Что такое чистая функция\n- Что такое замыкание (привести кейс замыкания)\n- Как выполняется отрисовка в браузере\n- Когда подключится js\n- Event Loop\n\nReact/redux/effector\n- Что такое VDOM\n- useState, колбек функция стейта\n- Отличия useEffect от useLayoutEffect\n- Что такое key, зачем нужен\n- Что нового в React 18\n- Rea...",
        "full_content": "2024-11-07 10:52:15\n Sergey F -> 2071074234:\nКомпания:  Aggregate Digital\nЗП: не обсуждали\nВакансия: https://tver.hh.ru/vacancy/109230359?hhtmFrom=vacancy_search_list\n\nВопросы:\nJS\n- Что такое чистая функция\n- Что такое замыкание (привести кейс замыкания)\n- Как выполняется отрисовка в браузере\n- Когда подключится js\n- Event Loop\n\nReact/redux/effector\n- Что такое VDOM\n- useState, колбек функция стейта\n- Отличия useEffect от useLayoutEffect\n- Что такое key, зачем нужен\n- Что нового в React 18\n- React.memo, что такое, как юзать, как аргументы\n- FLUX - че такое\n- Что не нравится в эффекторе, какие минусы видишь\n\nTS\n- Отличия типа от интерфейса\n- Есть ли перегрузка в тсе?\n- Что такое satisfies, отличия от as\n- Декораторы"
      }
    ]
  },
  {
    "company": "Тех Тпп Лаб",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-03 20:41:38",
        "content": "2024-07-03 20:41:38\n Tonidevs -> 2071074234:\nТЕХ ТПП ЛАБ\n— ссылка: сама написала\n— ЗП: до 200\n\nВОПРОСЫ\n- с какими хуками работаешь и расскажи про них (useRef, useLayoutEffect)\n- разница между строгим равенством и не строгим === и ==\n- что такое DOM и VDOM в чем разница\n- что такое Portal в реакте\n- какими HTTP методами пользовался и в чем у них разница\n- можем ли мы обновить объект с помощью метода GET\n- можем ли мы создать сущность с помощью метода GET\n- работал ли с авторизацией и на чем\n- что...",
        "full_content": "2024-07-03 20:41:38\n Tonidevs -> 2071074234:\nТЕХ ТПП ЛАБ\n— ссылка: сама написала\n— ЗП: до 200\n\nВОПРОСЫ\n- с какими хуками работаешь и расскажи про них (useRef, useLayoutEffect)\n- разница между строгим равенством и не строгим === и ==\n- что такое DOM и VDOM в чем разница\n- что такое Portal в реакте\n- какими HTTP методами пользовался и в чем у них разница\n- можем ли мы обновить объект с помощью метода GET\n- можем ли мы создать сущность с помощью метода GET\n- работал ли с авторизацией и на чем\n- что такое JWT токен и зачем нужен\n- какие параметры можно передать в полезной нагрузке помимо жизни токена JWT\n- сталкивался ли с ролевой моделью (администратор, клиент, менеджер)\n- последний блок JWT токена подпись(signature) - зачем нужна\n- если мы поменяем paylod в подписи (вместо роли менеджера запишем роль администратора) то будет ли такой токен работать\n- \nЗАДАЧИ\n- рефактор компонента\n// Задачи:\n// 1) При нажатии кнопки значение первого элемента массива на экране должно измениться на \"1\"\n// 2) Исправить ошибки в коде\n\nconst initList = () => {\n  return Array.from({ length: 10 }, (elem, index) => ({ value: Math.random(), label: `row ${index + 1}` }))\n}\n\nexport default function AppTest1() {\n  const [list] = useState(initList());\n\n  const handleUpdate = () => {\n    list[0].value = 1;\n  };\n\n  return (\n    <div>\n      <h1>List test</h1>\n      <Button onClick={handleUpdate}>Update 1 row</Button>\n      {\n        list.map(({ label, value }) => (<Row label={label} value={value} />))\n      }\n    </div>\n  )\n}\n\nfunction Button(props: any) {\n  const { children, onClick } = props;\n  return <button onClick={onClick}>{children}</button>\n}\n\nfunction Row(props: any) {\n  // console.log('Render')\n  const { label, value } = props;\n  return <div>{label}: {value}</div>\n}\n\n- отправка запроса\nimport React, { useEffect, useState } from \"react\";\n\n// Задачи:\n// 1) При каждом вводе нового значения в инпут необходимо запрашивать данные по API jsonplaceholder соответствующего комментария\n// 2) Что делать, если мы хотим на время загрузки отображать лоадер\n// 3) Есть ли проблемы при таком взаимодействии с бэкендом, пути решения\n\ninterface IComment {\n  \"name\": string,\n  \"body\": string\n}\n                                                            //MAX===500;\nconst URL = \"https://jsonplaceholder.typicode.com/comments/\" //+{id} \n\nexport default function AppTest2() {\n  const [value, setValue] = useState('');\n  const [comment, setComment] = useState<IComment>();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value)\n  };\n\n  return (\n    <div>\n      <h1>Input test</h1>\n      <input\n        value={value}\n        onChange={handleChange}\n        type='number'\n      />\n      <div>Текущее значение: {value}</div>\n       <Comment comment={comment} />\n    </div>\n  )\n}\n\ninterface CommentProps {\n  loading?: boolean;\n  comment?: IComment\n}\nfunction Comment({ comment, loading }: CommentProps) {\n  return (\n    <div\n      style={{ borderTop: '1px solid  gray', marginTop: '20px' }}\n    >\n      <h3>Комментарий</h3>\n      <p>Заголовок: {comment?.name}</p>\n      <p>Текст: {comment?.body}</p>\n    </ div>)\n}"
      }
