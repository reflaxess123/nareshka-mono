{
    "company": "Альфа-Банк",
    "count": 23,
    "records": [
      {
        "timestamp": "2025-07-16 14:55:27",
        "content": "2025-07-16 14:55:27\n Ivan -> 2071074234:\nКомпания: Альфа банк\nЗП: 250+\n\n1. Какими задачами гордишься?\n2. Что не нравится в работе?\n3. Примитивные и ссылочные типы данных.\n4. Сборщик мусора\n5. Мутирующие и не мутирующие методы массивов. Что лучше?\n6. this, стрелочные функции, классические функции.\n7. Промисы\n8. EventLoop\n9. WebWorker\n10. Виртуализация списков\n11. Про Реакт. Преимущества и недостатки. (недостатки он про spa и seo/fcp)\n12. jwt авторизация\n13. Про cors\n14. Про куки\n15. Про Redux. За...",
        "full_content": "2025-07-16 14:55:27\n Ivan -> 2071074234:\nКомпания: Альфа банк\nЗП: 250+\n\n1. Какими задачами гордишься?\n2. Что не нравится в работе?\n3. Примитивные и ссылочные типы данных.\n4. Сборщик мусора\n5. Мутирующие и не мутирующие методы массивов. Что лучше?\n6. this, стрелочные функции, классические функции.\n7. Промисы\n8. EventLoop\n9. WebWorker\n10. Виртуализация списков\n11. Про Реакт. Преимущества и недостатки. (недостатки он про spa и seo/fcp)\n12. jwt авторизация\n13. Про cors\n14. Про куки\n15. Про Redux. Зачем весь этот бойлерплейт экшены/редюсеры, почему бы не сделать как в mobx? Мутировать поля напрямую, написав для этого нужную логику.\n16. Как подходить к написанию uikit?\n\nЗадача 1\nconst numberSet = new Set<number>();\n\n// OK\nnumberSet.add(42);\n\n// Должна быть ошибка\nnumberSet.add(\"42\"); // Ошибка: Argument of type 'string' is not assignable to parameter of type 'number'.\nЗадача 2\nfunction toArray<T>(value: T): T[] {\n    return [value];\n}\nЗадача 3\ntype Item = {\n    id: string | number;\n    name: string;\n    date: string | Date;\n};\n\ntype Props = {\n    onClick: () => void;\n    data: Item[];\n};\n\nconst obj: Props = {\n    onClick: () => {\n        console.log(\"Button clicked!\");\n    },\n    data: [\n        {\n            id: 1,\n            name: \"John Doe\",\n            date: \"2023-10-05\",\n        },\n        {\n            id: 2,\n            name: \"Jane Smith\",\n            date: new Date(),\n        },\n    ],\n};\nЗадача 4\nconst useFirstRender = () => {\n  const isFirstRenderRef = useRef(true);\n\n  useEffect(() => {\n    isFirstRenderRef.current = false;\n  }, []);\n\n  return isFirstRenderRef.current;\n};\nЗадача 5\nДана таблица.\nНужно через псевдокод объяснить как можно реализовать фильтрацию. Фильтры 1) селект с выбором города 2) инпут с именем 3) range с зарплатой. И как пагинацию реализовать. В общем, все подставляется в query параметры и дергается ручка при изменении фильтров. Если меняются фильтры нужно сбрасывать к первой странице."
      },
      {
        "timestamp": "2025-07-16 10:26:26",
        "content": "2025-07-16 10:26:26\n Anastasia -> 2071074234:\nКомпания: Альфа-банк (знакомства с командой)\nЗП: от 200к\n\nПришла вся команда. Рассказали о себе и о проекте\nСпрашивали:\n1. Мой опыт и интересные таски?\n2. Процессы на текущем месте?\n3. CI/CD , был ли опыт, настраивала ли самостоятельно? если нет, то кто занимался?\n4. Как и кто заводил таски в JIRA?\n5. Взаимодействие с командой?\n6. Немножко задали вопросов по моему проекту на текущей работе?\n7. Были ли конфликты, как решала?\n8. Предлагала ли свои каки...",
        "full_content": "2025-07-16 10:26:26\n Anastasia -> 2071074234:\nКомпания: Альфа-банк (знакомства с командой)\nЗП: от 200к\n\nПришла вся команда. Рассказали о себе и о проекте\nСпрашивали:\n1. Мой опыт и интересные таски?\n2. Процессы на текущем месте?\n3. CI/CD , был ли опыт, настраивала ли самостоятельно? если нет, то кто занимался?\n4. Как и кто заводил таски в JIRA?\n5. Взаимодействие с командой?\n6. Немножко задали вопросов по моему проекту на текущей работе?\n7. Были ли конфликты, как решала?\n8. Предлагала ли свои какие-то решения? Допустим что-то внедрить на проект\n9. Был ли опыт с микрофронтами?\n10. Как вообще развиваюсь и развиваюсь ли? Что последнее я читала и изучала?\n11. Было ли такое, что были какие-то срочные таски, на которые надо переключиться было? \n12. Хобби и интересы?"
      },
      {
        "timestamp": "2025-07-14 17:03:07",
        "content": "2025-07-14 17:03:07\n Anastasia -> 2071074234:\nКомпания: Альфа-банк\nСсылка на вакансию: нет, HR писала сама\nЗП: я просила от 200к\n\n1. Сначала рассказали о себе и задали вопросы про мой опыт\n2. Дальше были задачки, которые сопровождались теор. вопросами. Сначала напишу все вопросы, потом скину задачки\n\nВопросы:\n1. Причины перерисовки в React\n2. Когда нужно менять стейт через предыдущее состояние (например: setState(prev => prev + 1)), а когда можно сделать просто setState(state + 1)? \n3. батчинг э...",
        "full_content": "2025-07-14 17:03:07\n Anastasia -> 2071074234:\nКомпания: Альфа-банк\nСсылка на вакансию: нет, HR писала сама\nЗП: я просила от 200к\n\n1. Сначала рассказали о себе и задали вопросы про мой опыт\n2. Дальше были задачки, которые сопровождались теор. вопросами. Сначала напишу все вопросы, потом скину задачки\n\nВопросы:\n1. Причины перерисовки в React\n2. Когда нужно менять стейт через предыдущее состояние (например: setState(prev => prev + 1)), а когда можно сделать просто setState(state + 1)? \n3. батчинг это? \n4. что будет, если мы напишем \nconst changeCount = () => {\nsetState(state + 1)\nsetState(state + 1)\nsetState(state + 1)\nsetState(state + 1)\n}\n// будет батчинг, но выполнится только последний setState\n5. Разница между контролируемыми и неконтролируемыми значениями у инпута\n6. События в JS: погружение, таргет фаза, всплытие\n7. e.preventDefault(), e.stopPropagation(), e.stopImmidiatePropagation() - рассказать о том для чего нужны\n8. Кастомные хуки. Чем отличаются от обычных функций и когда надо использовать их, а не обычные функции?\n9. Мемоизация, кеширование. Когда надо использовать, а когда не надо?\n10. Кейсы, когда нам нужно использовать useCallback?\n11. Когда нужно использовать <React.Fragment></React.Fragment>, а когда достаточно фрагмента в виде <></>?\n12. Зачем нам нужны ключи в реакте?\n13. Сколько аргументов в .map() и какие они?\n14. Мемоизация в 19 реакте? \n15. Мемоизация в классовых компонентах? (Pure Component)\n16. Можно ли назвать компонент в реакте с маленькой буквы? Что будет если так сделаем?\n17. Стандартное поведение формы при сабмите? Как отключить?\n\nЗадачки: \n1. Не работает счетчик. Объяснить почему. Исправить.\nКод:\nexport default function Counter() {\n    let count = 0;\n\n    const changeCount = () => {\n        count += 1;\n    };\n\n    return (\n        <div>\n            <div>Count = {count}</div>\n            <button onClick={changeCount}>Knoms</button>\n        </div>\n    );\n}\nРешение:  удаляем всё до return и добавляем это:\nconst [count, setCount] = useState(0);\n\n\nconst changeCount = () => {\n    setCount(prev => prev + 1);\n  };\n2.  \n/*\nВывести зачения полей в консоль, при клике на форму,\nучитывая, что первый input controlled, а второй uncontrolled\n*/\nexport default function () => {\n    const onClickForm = () => {\n        console.log(\"controlled:  \" );\n        console.log(\"uncontrolled:  \" );\n    };\n\n    return (\n        <form onClick={onClickForm}>\n            <input   placeholder=\"controlled\"  />\n            <input placeholder=\"uncontrolled\"  />\n\n            <button type=\"button\">Отправить заявку на кредит</button>\n        </form>\n    );\n}\nРешение: \nexport default function CreditForm() {\n    const [value1, setValue1] = useState(''); // для контролируемого инпута\n    const inputRef = useRef(null); // для неконтролируемого\n\n    const onClickForm = (e) => {\ne.preventDefault(); //чтобы отключить стандартное поведение формы\n\n        console.log(\"controlled: \" + value1);\n        console.log(\"uncontrolled: \" + inputRef.current.value);\n    };\n\n    return (\n        <form onSubmit={onClickForm}>\n            <input \n                placeholder=\"controlled\" \n                value={value1}\n                onChange={(e) => setValue1(e.target.value)}\n            />\n            <input \n                placeholder=\"uncontrolled\" \n                ref={inputRef}\n            />\n            <button type=\"submit\">Отправить заявку на кредит</button>\n        </form>\n    );\n}\n3. Реализовать хук useFirstRender (при клике на кнопку скитает какой по счету сейчас произошел ререндер страницы)\nconst userfirstRender = () => {}\n\nexport default function RenderAfterFirstRender(props) {\n    const isFirstRender = userFirstRender();\n\n    if (isFirstRender) return \"unvero\";\n\n    return props.children;\n}\nРешение:\nconst useFirstRender = () => {\n  const isFirstRenderRef = useRef(true);\n\n  useEffect(() => {\n    isFirstRenderRef.current = false;\n  }, []);\n\n  return isFirstRenderRef.current;\n};"
      },
      {
        "timestamp": "2025-07-07 02:45:57",
        "content": "2025-07-07 02:45:57\n Sodnom Tyksheev -> 2071074234:\nАльфа банк\nЗп:250 \n\nВопросы: \n 1.Чем отличается useDebounce от trottle \n 2.Чем отличается flex от grid\n 3.Если указали максимальный z-index, но он не отработал почему?(не указали postiton нужный )\n 4.Способы оптимизации в вебе\n 5.Как можно добиться того чтоб не ждать загрузки шрифта?(font-dispaly:swap)\n 6.Рассказать про critical render path\n 7.Где мы можем подключить скрипт\n 8.Как можно оптимизировать загрузку CSS \n 9.Если у нас есть скрипт кот...",
        "full_content": "2025-07-07 02:45:57\n Sodnom Tyksheev -> 2071074234:\nАльфа банк\nЗп:250 \n\nВопросы: \n 1.Чем отличается useDebounce от trottle \n 2.Чем отличается flex от grid\n 3.Если указали максимальный z-index, но он не отработал почему?(не указали postiton нужный )\n 4.Способы оптимизации в вебе\n 5.Как можно добиться того чтоб не ждать загрузки шрифта?(font-dispaly:swap)\n 6.Рассказать про critical render path\n 7.Где мы можем подключить скрипт\n 8.Как можно оптимизировать загрузку CSS \n 9.Если у нас есть скрипт который внутри себя еще подключает скрипты, куда и где его подключать\n 10.Специфичность селекторов\n 11.Какая специфичность у * ?\n 12.Разница между блочными и строчными элементами\n 13.Как сделать так чтоб элемент выводился слева или справа а остальные элементы обтекали его(про свойство float)\n 14.Разница между type interface \n 15.Что такое перегрузка функции\n 16.Utility types какие знаешь\n Задача 1:\n1. //типизировать объект S \n\nconst s:SType = { \nname1: { role: 'user' }, name2: { role: 'admin'}, name3:{ role:'operator' }, name4: { role: 'admin' }, name5: { role: 'user' } \n} \n\ntype UserRole = 'user'|'admin'|'operator' \n\ntype UserObject={role:UserRole} \n\ntype SType = Record<string,UserObject> \n\n// 2. и написать функцию, которая вернёт объект, где ключами будут роли, // а значениями - массив того, что было ключами // (динамически, могут добавляться или удаляться новые роли) // то есть, в данном случае такой ответ будет: // \n{ // \"user\": [\"name1\", \"name5\"], // \"admin\": [\"name2\", \"name4\"], // \"operator\": [\"name3\"] // } \n\n\nfunction getRoles(s:SType):Record<UserRole,string[]>{ const res:Record<string,string[]> = {} \n\nfor(const [name,data] of Object.entries(s)){ \n  const role = data.role \n  if(!res[role]){\n      res[role] = [] }          res[role].push(name) \n} \n   return res \n} \n\nconsole.log(getRoles(s))\n\nЗадача 2:\n/// Написать полифил reduce\nArray. prototype. reduce = function(callb,initialVal)i if(typeof initialVal === 'undefined' ){ initialVal = this[0] let result = initialVal for(let i = 0; i < this.length;i++){ const res = callb(this[i], result,i,this) result = res return result ｝ const arr = [1, 3, 2] • arr.reduce((cur, acc, i, arr) => { return cur + acc;"
      },
      {
        "timestamp": "2025-07-04 06:55:05",
        "content": "2025-07-04 06:55:05\n Ruslan -> 2071074234:\nАльфа-банк техсобес 03.07\nВопросы по резюме:\nКак оптимизировали таблицы?\nГде хранили данные?\nКак работали с SSE и Websocket?\nИх отличия?\nРерендеры в Реакт, как избегать?\nКак оптимизировать?\nКакие средства для оптимизации использовал, где смотрел метрики?\nВопрос про MobX почему он?\nКак  mobX  справлялся с большими данными на фронте? не лагал?\nПочему использовали Zustand?\nПлюсы минусы их, отличия от Redux?\nТеория:\nReact -> хуки в реакт? какие? что делают?...",
        "full_content": "2025-07-04 06:55:05\n Ruslan -> 2071074234:\nАльфа-банк техсобес 03.07\nВопросы по резюме:\nКак оптимизировали таблицы?\nГде хранили данные?\nКак работали с SSE и Websocket?\nИх отличия?\nРерендеры в Реакт, как избегать?\nКак оптимизировать?\nКакие средства для оптимизации использовал, где смотрел метрики?\nВопрос про MobX почему он?\nКак  mobX  справлялся с большими данными на фронте? не лагал?\nПочему использовали Zustand?\nПлюсы минусы их, отличия от Redux?\nТеория:\nReact -> хуки в реакт? какие? что делают?\nОчистка? как делать отписки от событий? (cleanup - return)\nuseCallback  что такое? \nЧто провоцирует ререндер? \nКак насильно совершить ререндер?\nЧто такое forceUpdate?\nЧто такое Разделение ответственности?\nКакие архитектурные подходы есть? smart/dumb  подход?\nОптимизация CRP? Как оптимизировать CSS?\nЧто делает contain?\nHTTP? HTTPS?\nКак бы ты оптимизировал загрузку деревьев?\nJSON Schema? required?\nЕсли используешь JSON.stringify какие могут быть проблемы?\nFlexbox  и Grid разница?\nКак отцентрировать там и там элементы?\nКак сделать адаптив без медиа запросов?\nКакие есть величины? Что такое px, pt, em, rem, vh, vw?\nСуществуют ли типы в TypeScript во время исполнения?\nЧто такое TypeGuerds?\nЯвное кастование плохо?\nРазница LocalStorage/SessionStorage?\nСинхронный асинхронный кто?\nЗадачи!\n// Задача: Добавить валидацию email (регулярное выражение)\n// и блокировку кнопки при ошибке.\nconst Form = () => {\n  const [email, setEmail] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    setEmail(val);\n\n    if (!emailRegex.test(val)) {\n      setError(\"Неверный формат email\");\n    } else {\n      setError(\"\");\n    }\n  };\n\n  return (//\n    <>\n      <input \ntype=\"email\" \nvalue={email} \nonChange={handleChange} />\n      <button \ndisabled={!!error}\n>Отправить</button>\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n    </>\n  );\n};\nЗадача на тротл\nfunciton heavyCalc(e)  {// long 100ms \n    \n}\n\nthrottle = (fn, delay) => {\n    let lastCall = 0\n    \n    return function (...args) {\n        const now = Date.now();\n        if (now - lastCall >= delay) {\n            lastCall = now;\n            fn.apply(this, args);\n        }\n    }\n}\n\nthrottledHeavyCalc = throttle(heavyCalc, 100)\ndroppable.on('dragover', throttledHeavyCalc) \n    \n};"
      },
      {
        "timestamp": "2025-06-23 17:25:10",
        "content": "2025-06-23 17:25:10\n Василий -> 2071074234:\nАльфа Банк - команду для меня ещё не выбрали - техничка\n\n1) Много вопросов по опыту (что делал, а как делал, какой стек, чего хочешь и прочее)\n2) \nvar a = {\n  firstName: 'Bill',\n  lastName: 'Ivanov',\n  sayName: function() {\n    console.log(this.firstName);\n  },\n  sayLastName: () => {\n    console.log(this.lastName);\n  }\n};\n\na.sayName();          // Bill\nvar b = a.sayName;\nb();                  // undefined (в строгом режиме — ошибка)\na.sayName.bind({ fi...",
        "full_content": "2025-06-23 17:25:10\n Василий -> 2071074234:\nАльфа Банк - команду для меня ещё не выбрали - техничка\n\n1) Много вопросов по опыту (что делал, а как делал, какой стек, чего хочешь и прочее)\n2) \nvar a = {\n  firstName: 'Bill',\n  lastName: 'Ivanov',\n  sayName: function() {\n    console.log(this.firstName);\n  },\n  sayLastName: () => {\n    console.log(this.lastName);\n  }\n};\n\na.sayName();          // Bill\nvar b = a.sayName;\nb();                  // undefined (в строгом режиме — ошибка)\na.sayName.bind({ firstName: 'Boris' })(); // Boris\na.sayName();          // Bill\na.sayLastName();      // undefined (стрелочная функция не имеет своего this)\na.sayName.bind({ firstName: 'Boris' }).bind({ firstName: 'Tom' })(); // Boris (bind нельзя перезаписать)\na.sayLastName.bind({ lastName: 'Petrov' })(); // undefined (стрелочная функция игнорирует bind)\n3) Простая задача на понимание eventloop(рассказать про него подробно, что к чему относится)\n4) 3 функции на рекурсивный вызов в синхронном порядке, через settimeout и promise, что будет с браузером?\n5)  \nconst atm = (nominals, amount, limits) => {\n  // 1) Собираем массив { nominal, limit } и сортируем по убыванию номинала\n  const cash = nominals\n    .map((nominal, i) => ({ nominal, limit: limits[i] || 0 }))\n    .sort((a, b) => b.nominal - a.nominal);\n\n  let remaining = amount;\n  const result = [];\n\n  // 2) Жадно берём по каждому номиналу, но не больше чем в limit\n  for (const { nominal, limit } of cash) {\n    if (remaining <= 0) break;\n\n    const need = Math.floor(remaining / nominal);\n    const take = Math.min(need, limit);\n\n    if (take > 0) {\n      result.push(`${nominal} x ${take}`);\n      remaining -= nominal * take;\n    }\n  }\n\n  // 3) Проверяем, удалось ли точно выдать сумму\n  if (remaining !== 0) {\n    throw new Error(\n      `Невозможно выдать сумму ${amount}. Остаток ${remaining} не охвачен имеющимися купюрами.`\n    );\n  }\n\n  return result;\n};"
      },
      {
        "timestamp": "2025-06-19 10:48:48",
        "content": "2025-06-19 10:48:48\n Максим Соломыкин -> 2071074234:\nКомпания - Альфа банк (команда)\nВакансия - hr написала\nЗП - 250к",
        "full_content": "2025-06-19 10:48:48\n Максим Соломыкин -> 2071074234:\nКомпания - Альфа банк (команда)\nВакансия - hr написала\nЗП - 250к"
      },
      {
        "timestamp": "2025-04-09 17:10:28",
        "content": "2025-04-09 17:10:28\n Максим Соломыкин -> 2071074234:\nКомпания - Альфа банк(знакомство)\nВакансия - https://hh.ru/vacancy/118439154?from=share_ios\nЗП - от 250 000 на руки\n\nВопросы\nПро себя\nПро опыт\nПочему использовали socket io\nГлавный факап на работе\nКакие были процессы в команде\nСамая интересная задача\nСостав команды \nПисал ли документацию",
        "full_content": "2025-04-09 17:10:28\n Максим Соломыкин -> 2071074234:\nКомпания - Альфа банк(знакомство)\nВакансия - https://hh.ru/vacancy/118439154?from=share_ios\nЗП - от 250 000 на руки\n\nВопросы\nПро себя\nПро опыт\nПочему использовали socket io\nГлавный факап на работе\nКакие были процессы в команде\nСамая интересная задача\nСостав команды \nПисал ли документацию"
      },
      {
        "timestamp": "2025-04-07 12:17:33",
        "content": "2025-04-07 12:17:33\n Максим Соломыкин -> 2071074234:\nКомпания - Альфа-банк\nЗП - от 250к\nВакансия - https://hh.ru/vacancy/118439154?from=share_ios\nЭтап - Знакомство\n\nВопросы \n1. Про себя\n2. Про команду\n3. Какой был флоу\n4. Как проводил код-ревью\n5. Почему переписывали на TS проект\n6. Какие есть уязвимости в браузере\n7. Разница между хэшированием и шифрованием",
        "full_content": "2025-04-07 12:17:33\n Максим Соломыкин -> 2071074234:\nКомпания - Альфа-банк\nЗП - от 250к\nВакансия - https://hh.ru/vacancy/118439154?from=share_ios\nЭтап - Знакомство\n\nВопросы \n1. Про себя\n2. Про команду\n3. Какой был флоу\n4. Как проводил код-ревью\n5. Почему переписывали на TS проект\n6. Какие есть уязвимости в браузере\n7. Разница между хэшированием и шифрованием"
      },
      {
        "timestamp": "2025-04-04 09:38:45",
        "content": "2025-04-04 09:38:45\n Матвей Захаров -> 2071074234:\nКомпания: Альфа банк (3 этап с командой)\nВакансия: https://hh.ru/vacancy/118439154?hhtmFrom=employer_vacancies\nЗапись: https://youtu.be/am_5-EB5AAU\n\nВопросы:\n- О себе, опыте, какую ценность приносил для пользователей\n- Вопросы по текущей команде\n- В каком виде приходила задача\n- Приносил ли что-то в бэклог\n- Что ищешь на новом месте, с чем хотел бы работать\n- Что для тебя некомфортные процессы в рамках работы",
        "full_content": "2025-04-04 09:38:45\n Матвей Захаров -> 2071074234:\nКомпания: Альфа банк (3 этап с командой)\nВакансия: https://hh.ru/vacancy/118439154?hhtmFrom=employer_vacancies\nЗапись: https://youtu.be/am_5-EB5AAU\n\nВопросы:\n- О себе, опыте, какую ценность приносил для пользователей\n- Вопросы по текущей команде\n- В каком виде приходила задача\n- Приносил ли что-то в бэклог\n- Что ищешь на новом месте, с чем хотел бы работать\n- Что для тебя некомфортные процессы в рамках работы"
      },
      {
        "timestamp": "2025-04-02 18:38:12",
        "content": "2025-04-02 18:38:12\n Максим Соломыкин -> 2071074234:\nКомпания - Альфа Банк\nВакансия - hr написала\nЗП - от 250к\n\nВопросы:\n- React что это?\n- virtual dom?\n- хуки, новые хуки\n- useEffect vs useLayoutEffect\n- controlled uncontrolled comp.\n- useRef\n- контекст в React?\n- с какими библ-ми работал?\nВо время задач:\n- виды экспорта?\n- useEffect, когда срабатывет?\n- разница стрелочные и обычные функции? \n- EventLoop\n- typescript что и зачем?\n- utility types?\n- omit vs exclude\n\nЗадачи все как тут:\nhttps://t...",
        "full_content": "2025-04-02 18:38:12\n Максим Соломыкин -> 2071074234:\nКомпания - Альфа Банк\nВакансия - hr написала\nЗП - от 250к\n\nВопросы:\n- React что это?\n- virtual dom?\n- хуки, новые хуки\n- useEffect vs useLayoutEffect\n- controlled uncontrolled comp.\n- useRef\n- контекст в React?\n- с какими библ-ми работал?\nВо время задач:\n- виды экспорта?\n- useEffect, когда срабатывет?\n- разница стрелочные и обычные функции? \n- EventLoop\n- typescript что и зачем?\n- utility types?\n- omit vs exclude\n\nЗадачи все как тут:\nhttps://t.me/c/2071074234/489/113977\n+ та что на фотке"
      },
      {
        "timestamp": "2025-04-01 12:08:21",
        "content": "2025-04-01 12:08:21\n Матвей Захаров -> 2071074234:\nКомпания: Альфа банк (с командой)\nВакансия: https://hh.ru/vacancy/118439154?hhtmFrom=employer_vacancies\n\nВопросы:\n- О себе\n- Опыт работы с системными или бизнес аналитиками, как взаимодействовал с ними\n- В каком виде приходили задачи\n- Занимался ли вопросами оптимизации кода/работа с безопасностью\n- Было ли взаимодействие с бизнесом, как строилось\n- Если видишь, что задачу от бизнеса можно сделать по-другому, как поступишь (и схожие вопросы, кас...",
        "full_content": "2025-04-01 12:08:21\n Матвей Захаров -> 2071074234:\nКомпания: Альфа банк (с командой)\nВакансия: https://hh.ru/vacancy/118439154?hhtmFrom=employer_vacancies\n\nВопросы:\n- О себе\n- Опыт работы с системными или бизнес аналитиками, как взаимодействовал с ними\n- В каком виде приходили задачи\n- Занимался ли вопросами оптимизации кода/работа с безопасностью\n- Было ли взаимодействие с бизнесом, как строилось\n- Если видишь, что задачу от бизнеса можно сделать по-другому, как поступишь (и схожие вопросы, касающиеся твоей активности в команде/с бизнесом)\n- Как бы объяснил сложный технический вопрос простым языком\n- Самая сложная задача, хобби, дальнейшее развитие"
      },
      {
        "timestamp": "2025-03-24 12:44:25",
        "content": "2025-03-24 12:44:25\n Матвей Захаров -> 2071074234:\nКомпания: Альфа банк\nВакансия: https://hh.ru/vacancy/118439154?hhtmFrom=employer_vacancies\n\nЗадачи со скринов + много сопутствующих вопросов по этой теории",
        "full_content": "2025-03-24 12:44:25\n Матвей Захаров -> 2071074234:\nКомпания: Альфа банк\nВакансия: https://hh.ru/vacancy/118439154?hhtmFrom=employer_vacancies\n\nЗадачи со скринов + много сопутствующих вопросов по этой теории"
      },
      {
        "timestamp": "2024-10-11 10:45:49",
        "content": "2024-10-11 10:45:49\n Михаил -> 2071074234:\nАльфа Банк\nвакансия hh.ru/vacancy/107792634\nзп 200к",
        "full_content": "2024-10-11 10:45:49\n Михаил -> 2071074234:\nАльфа Банк\nвакансия hh.ru/vacancy/107792634\nзп 200к"
      },
      {
        "timestamp": "2024-10-02 10:47:12",
        "content": "2024-10-02 10:47:12\n аыеъа -> 2071074234:\nАльфа-Банк Финалка\nЗп: 250к\nВакансия: https://digital.alfabank.ru/vacancies/frontend_developerreact_redux_105581\nВопросы:\nПочему уходишь и какие есть проблемы на текущем проекте\nСамая сложная задача\nЧто нравится во фронтенде\nЧто внедрил на продукт по собственной инициативе\nОткуда берешь информацию\nЧто для тебя крутая команда\nЕсли бы пришлось создавать новый проект с 0, какие технологии бы ты выбрал\nРаботал ли с сагами\nЧто будешь делать если понял что зад...",
        "full_content": "2024-10-02 10:47:12\n аыеъа -> 2071074234:\nАльфа-Банк Финалка\nЗп: 250к\nВакансия: https://digital.alfabank.ru/vacancies/frontend_developerreact_redux_105581\nВопросы:\nПочему уходишь и какие есть проблемы на текущем проекте\nСамая сложная задача\nЧто нравится во фронтенде\nЧто внедрил на продукт по собственной инициативе\nОткуда берешь информацию\nЧто для тебя крутая команда\nЕсли бы пришлось создавать новый проект с 0, какие технологии бы ты выбрал\nРаботал ли с сагами\nЧто будешь делать если понял что задача описана не правильно\nЧто будешь делать если упадёт прод\nЧто будешь делать если появилась срочная задача\nРассказать про хобби\nЕсли будет конфликт бека и фронта, но оба считают что они правы, что будешь делать?"
      },
      {
        "timestamp": "2024-10-02 07:35:52",
        "content": "2024-10-02 07:35:52\n Stepan Ch. -> 2071074234:\nАльфа-Банк\nЗп: 250к\nВопросы:\n\n1. Расскажи про опыт\n2. Redux\n3. Actions\n4. configureStore\n5. Conditional Types\n6. Virtual Dom\n7. Fiber\n8. Rest API\n9. Promise\n10. Call, apply, bind\n11. Garbage Collector\n12. Замыкание\n\nimport \"./styles.css\";\nimport React from \"react\";\n\ninterface DataItem {\n  id: number;\n  name: string;\n  category: string;\n}\n\ninterface Category {\n  id: number;\n  name: string;\n  localized_ru: string;\n  localized_en: string;\n}\n\nasync func...",
        "full_content": "2024-10-02 07:35:52\n Stepan Ch. -> 2071074234:\nАльфа-Банк\nЗп: 250к\nВопросы:\n\n1. Расскажи про опыт\n2. Redux\n3. Actions\n4. configureStore\n5. Conditional Types\n6. Virtual Dom\n7. Fiber\n8. Rest API\n9. Promise\n10. Call, apply, bind\n11. Garbage Collector\n12. Замыкание\n\nimport \"./styles.css\";\nimport React from \"react\";\n\ninterface DataItem {\n  id: number;\n  name: string;\n  category: string;\n}\n\ninterface Category {\n  id: number;\n  name: string;\n  localized_ru: string;\n  localized_en: string;\n}\n\nasync function getData(): Promise<DataItem[]> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve([\n        { id: 1, name: \"potato\", category: \"vegetable\" },\n        { id: 2, name: \"cucumber\", category: \"vegetable\" },\n        { id: 3, name: \"orange\", category: \"fruit\" },\n        { id: 4, name: \"pumpkin\", category: \"vegetable\" },\n        { id: 5, name: \"melon\", category: \"fruit\" },\n      ]);\n    }, 2000);\n  });\n}\n\nasync function getCategories(): Promise<Category[]> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve([\n        {\n          id: 1,\n          name: \"vegetable\",\n          localized_ru: \"Овощ\",\n          localized_en: \"Vegetable\",\n        },\n        { id: 2, name: \"fruit\", localized_ru: \"Фрукт\", localized_en: \"Fruit\" },\n      ]);\n    }, 2000);\n  });\n}\n\nexport default function App() {\n  const [items, setItems] = React.useState<DataItem[]>([]);\n  const [category, setCategory] = React.useState<Category[]>([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    Promise.all([getData(), getCategories()])\n      .then(([data, categories]) => {\n        setItems(data);\n        setCategory(categories);\n      })\n      .catch(console.error)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const getCategoryName = (categoryName: string) => {\n    const foundCategory = category.find(\n      (category) => category.name === categoryName\n    );\n    return foundCategory ? foundCategory.localized_ru : \"Неизвестно\";\n  };\n\n  if (isLoading) return <p>Loading...</p>;\n\n  return (\n    <div className=\"App\">\n      {items.map((item) => (\n        <React.Fragment key={item.id}>\n          <p>\n            {item.name} - {getCategoryName(item.category)}\n          </p>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}"
      },
      {
        "timestamp": "2024-09-30 10:59:34",
        "content": "2024-09-30 10:59:34\n аыеъа -> 2071074234:\nАльфа-Банк Финалка \nЗП: от 250к  \nВакансия: https://digital.alfabank.ru/vacancies/frontend_developerreact_redux_105581 \nВопросы: \nРасскажи про себя\nКакие конфликты были?\nКакие самые крупные факапы?\nЧто ищешь на новом месте?\nЕсли прилетели 2 срочные задачи с одинаковым приоритетом, но время есть только на одну, что будешь делать?\nЕсли в середине спринта понял что не успеваешь доделать задачу, то что сделаешь?\nТвои хобби?\nПочему Фронтенд?\nС какими стейт ме...",
        "full_content": "2024-09-30 10:59:34\n аыеъа -> 2071074234:\nАльфа-Банк Финалка \nЗП: от 250к  \nВакансия: https://digital.alfabank.ru/vacancies/frontend_developerreact_redux_105581 \nВопросы: \nРасскажи про себя\nКакие конфликты были?\nКакие самые крупные факапы?\nЧто ищешь на новом месте?\nЕсли прилетели 2 срочные задачи с одинаковым приоритетом, но время есть только на одну, что будешь делать?\nЕсли в середине спринта понял что не успеваешь доделать задачу, то что сделаешь?\nТвои хобби?\nПочему Фронтенд?\nС какими стейт менеджарами работал?\nFlow задачи на проекте\nFlow CI/CD на проекте\nПочему банковская сфера?\nКем ты видишь себя через 3 года (серьёзно?) \nЧто не нравится на предыдущем месте работы?\nПоследние 3 фильма и сериала которые смотрел(чел хотел услышать АНИМЕ) \nСмотрю ли АНИМЕ \nПереродиться в собаку или пчёлку? И почему? (в собаку)"
      },
      {
        "timestamp": "2024-09-30 07:34:43",
        "content": "2024-09-30 07:34:43\n аыеъа -> 2071074234:\nАльфа-Банк ТехСобес\nЗП: от 250к\nВакансия: https://digital.alfabank.ru/vacancies/frontend_developerreact_redux_105581\nУспех: ✅\nВидео:",
        "full_content": "2024-09-30 07:34:43\n аыеъа -> 2071074234:\nАльфа-Банк ТехСобес\nЗП: от 250к\nВакансия: https://digital.alfabank.ru/vacancies/frontend_developerreact_redux_105581\nУспех: ✅\nВидео:"
      },
      {
        "timestamp": "2024-09-24 16:20:10",
        "content": "2024-09-24 16:20:10\n аыеъа -> 2071074234:\nАльфа-Банк (Интервью с командой)\nЗП: не обсуждали\nВакансия: https://digital.alfabank.ru/vacancies/frontend_developerreact_redux_105581\nВопросы:\nЧасто задавали несколько вопросов вглубь на ответ\nРассказать про опыт (какие технологии использовал, какие проблемы встречал, где был ui kit)\nКакие были конфликты, как их решал (конфликты с беком, бизнесом, командой)\nКак выбирали технологии на проект (Как и кто выбирал, как происходило обсуждение, твоя роль в обс...",
        "full_content": "2024-09-24 16:20:10\n аыеъа -> 2071074234:\nАльфа-Банк (Интервью с командой)\nЗП: не обсуждали\nВакансия: https://digital.alfabank.ru/vacancies/frontend_developerreact_redux_105581\nВопросы:\nЧасто задавали несколько вопросов вглубь на ответ\nРассказать про опыт (какие технологии использовал, какие проблемы встречал, где был ui kit)\nКакие были конфликты, как их решал (конфликты с беком, бизнесом, командой)\nКак выбирали технологии на проект (Как и кто выбирал, как происходило обсуждение, твоя роль в обсуждении и что ты предлагал, какие были споры)\nТесты (Писал ли, в каких ситуациях)\nЧем не нравится текущий проект и почему ухожу \nЧто ищу на новом месте работы"
      },
      {
        "timestamp": "2024-08-17 17:38:04",
        "content": "2024-08-17 17:38:04\n Руслан -> 2071074234:\nselecty (альфа банк) 2й этап тех собес \n— зп: от 270к\n— вакансия: hr написала\n— задачи: \n/*\n  Что произойдет при клике по кнопке?\n*/\nexport default function Counter() {\n  let count = 0;\n\n  const changeCount = () => {\n    count += 1;\n  };\n\n  return (\n    <div>\n      <div>Count = {count}</div>\n\n      <button onClick={changeCount}>Кнопка</button>\n    </div>\n  );\n}\n\n/*\n Вывести значения полей в консоль, при клиике на форму, \n учитывая что первый input contr...",
        "full_content": "2024-08-17 17:38:04\n Руслан -> 2071074234:\nselecty (альфа банк) 2й этап тех собес \n— зп: от 270к\n— вакансия: hr написала\n— задачи: \n/*\n  Что произойдет при клике по кнопке?\n*/\nexport default function Counter() {\n  let count = 0;\n\n  const changeCount = () => {\n    count += 1;\n  };\n\n  return (\n    <div>\n      <div>Count = {count}</div>\n\n      <button onClick={changeCount}>Кнопка</button>\n    </div>\n  );\n}\n\n/*\n Вывести значения полей в консоль, при клиике на форму, \n учитывая что первый input controlled, а второй input uncontrolled.\n*/\nexport default () => {\n  const onClickForm = () => {\n    console.log(\"controlled: \" /* вставить value1 */);\n    console.log(\"uncontrolled: \" /* вставить value2 */);\n  };\n\n  return (\n    <form onClick={onClickForm}>\n      <input placeholder=\"controlled\" />\n      <input placeholder=\"uncontrolled\" />\n\n      <button>Отправить заявку на кредит</button>\n    </form>\n  );\n};\n\n/*\n  Реализовать хук useFirstRender\n*/\nconst useFirstRender = () => {};\n\nexport default function RenderAfterFirstRender(props) {\n  const isFirstRender = useFirstRender();\n\n  if (isFirstRender) return \"ничего\";\n\n  return props.children;\n}\n\nfunction print() {\n console.log(1);\n}\nasync function foo(){\n console.log(2);\n await print();\n console.log(3);\n}\nconsole.log(4);\nfoo();\nconsole.log(5);\n\nconsole.log('start'); // Выводит 'start' в консоль\n\nsetTimeout(() => console.log('timeout'), 0); // Ставится в очередь на выполнение через 0 миллисекунд\n\nnew Promise((resolve, reject) => {\n    console.log('promise constructor'); // Выводит 'promise constructor' в консоль\n    reject(); // Отклоняет промис, вызывая цепочку catch\n})\n.then(() => console.log('promise')) // Этот then не выполнится, т.к. промис отклонён\n.catch(() => console.log('promise1')) // Выводит 'promise1' в консоль, т.к. промис отклонён\n.catch(() => console.log('promise2')) // Эта цепочка catch выполнится и выведет 'promise2'\n.then(() => console.log('promise3')) // Выполнится после catch, выводя 'promise3'\n.then(() => console.log('promise4')); // Выполнится после предыдущего then, выводя 'promise4'\n\nconsole.log('final'); // Выводит 'final' в консоль\n\nvar a = {\n    firstName: 'Bill',\n    lastName: 'Ivanov',\n    sayName: function() {\n        console.log(this.firstName);\n    },\n    sayLastName: () => {\n        console.log(this.lastName);\n    }\n};\n\na.sayName(); // 'Bill'\n\nvar b = a.sayName;\n\nb(); // undefined\n\na.sayName.bind({ firstName: 'Boris' })(); // 'Boris'\n\na.sayName(); // 'Bill'\na.sayLastName(); // undefined\n\nimport React from \"react\";\nimport sendMetric from \"metrics\";\nimport sendData from \"data\";\nimport bigComputations from \"bigComputations\";\n\nconst pleaseReviewMe = (props) => {\n    const [data, setDate] = React.useState(bigComputations(props.argument));\n    const [items] = useState([{ id: 1 }, { id: 2 }, { id: 3 }]);\n\n    React.useEffect(() => {\n        document.addEventListener(\"click\", () => {\n            sendMetric(\"click\");\n        });\n    }, []);\n\n    const click = React.useCallback((id) => {\n        sendData(data, id);\n    }, [data]);\n\n    return (\n        <React.Fragment>\n            {items.map((item) => (\n                <div onClick={() => click(item.id)} key={item.id}>\n                    {item.id}\n                </div>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport pleaseReviewMe;"
      },
      {
        "timestamp": "2024-06-25 07:54:42",
        "content": "2024-06-25 07:54:42\n Александр Горохов -> 2071074234:\nНазвание компании: Альфа-банк\nЗП: 200\n\nПреимущества реакт\nДеклоративность\nКлассовые компоненты, отличия от функций\nuseRef\nkey когда мапим список\nЗадачи:",
        "full_content": "2024-06-25 07:54:42\n Александр Горохов -> 2071074234:\nНазвание компании: Альфа-банк\nЗП: 200\n\nПреимущества реакт\nДеклоративность\nКлассовые компоненты, отличия от функций\nuseRef\nkey когда мапим список\nЗадачи:"
      },
      {
        "timestamp": "2024-06-24 20:57:50",
        "content": "2024-06-24 20:57:50\n dm . -> 2071074234:\n- Альфа-банк, тех. скриннинг (бот в тг)\n- Ссылки нет, рекрутер написал.\n- ЗП: от 250 net \n- Задачи:\n1) Около 12 задачек на вывод в консоль, все простые на несколько строчек. \nПроверяют знание функций, областей видимости, контекст, евент луп и промисы.\nМожно успеть вручную напечатать в консоль и проверить.\n2) Около 4 задачек теоритических, тоже можно успеть загуглить.\n- Комментарий: на каждый вопрос ограничение в 60 сек, нужно выбирать из предложенных вари...",
        "full_content": "2024-06-24 20:57:50\n dm . -> 2071074234:\n- Альфа-банк, тех. скриннинг (бот в тг)\n- Ссылки нет, рекрутер написал.\n- ЗП: от 250 net \n- Задачи:\n1) Около 12 задачек на вывод в консоль, все простые на несколько строчек. \nПроверяют знание функций, областей видимости, контекст, евент луп и промисы.\nМожно успеть вручную напечатать в консоль и проверить.\n2) Около 4 задачек теоритических, тоже можно успеть загуглить.\n- Комментарий: на каждый вопрос ограничение в 60 сек, нужно выбирать из предложенных вариантов ответа. \nВсе вопросы довольно простые.\n- Фидбек: прошел."
      },
      {
        "timestamp": "2024-03-05 20:50:33",
        "content": "2024-03-05 20:50:33\n Daniil Max -> 2071074234:\n— Название компании: Альфа Банк [знакомство с командой, последний этап)\n— Ссылка на вакансию: потеряна \n— ЗП: 200К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/zwCR809ItEM\n— Успех собеса: ✅️\n— Фитбек о собесе от HR: точно не помню, что было дальше, но отказался в альфа идти. \n— Комментарий: на этот раз знакомство с командой. Знакомлюсь и задаю много вопросов\n\n#middle #альфа_банк",
        "full_content": "2024-03-05 20:50:33\n Daniil Max -> 2071074234:\n— Название компании: Альфа Банк [знакомство с командой, последний этап)\n— Ссылка на вакансию: потеряна \n— ЗП: 200К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/zwCR809ItEM\n— Успех собеса: ✅️\n— Фитбек о собесе от HR: точно не помню, что было дальше, но отказался в альфа идти. \n— Комментарий: на этот раз знакомство с командой. Знакомлюсь и задаю много вопросов\n\n#middle #альфа_банк"
      }
    ]
  },
  {
    "company": "Linked Helper",
    "count": 20,
    "records": [
      {
        "timestamp": "2025-05-09 06:53:18",
        "content": "2025-05-09 06:53:18\n Yuri Trondin -> 2071074234:\nКомпания: Linked Helper\nВакансия: HR написала\nЗП: называл от 350  (вилка вроде 3.5-5$)\nВопросы:\nКак ранее в чате https://t.me/c/2071074234/489/89751\nв разнобой и немного видоизмененные\nплюс эта задача \n/**\n* Написать функцию sostavChisla(massivChisel: number[], chislo: number),\n  которая бы находила все возможные комбинации чисел из massivChisel,\n  сумма которых равна chislo. При этом:\n  1) massivChisel содержит, только уникальные положительные чи...",
        "full_content": "2025-05-09 06:53:18\n Yuri Trondin -> 2071074234:\nКомпания: Linked Helper\nВакансия: HR написала\nЗП: называл от 350  (вилка вроде 3.5-5$)\nВопросы:\nКак ранее в чате https://t.me/c/2071074234/489/89751\nв разнобой и немного видоизмененные\nплюс эта задача \n/**\n* Написать функцию sostavChisla(massivChisel: number[], chislo: number),\n  которая бы находила все возможные комбинации чисел из massivChisel,\n  сумма которых равна chislo. При этом:\n  1) massivChisel содержит, только уникальные положительные числа (> 0)\n  2) в комбинации не должно быть повторений чисел\n  3) все комбинации должны быть уникальными\n  @param massivChisel: number[]\n  @param chislo: number\n  @return Array<Array<number>>\n*/\n//ответ\nfunction sostavChisla(massivChisel, chislo) {\n    const result = [];\n    function findCombinations(start, currentCombination, currentSum) {\n        if (currentSum === chislo) {\n            result.push([...currentCombination]);\n            return;\n        }\n        if (currentSum > chislo) {return}\n        for (let i = start; i < massivChisel.length; i++) {\n            currentCombination.push(massivChisel[i]);\n            findCombinations(i + 1, currentCombination, currentSum + massivChisel[i]);\n            currentCombination.pop();\n        }\n    }\n    findCombinations(0, [], 0);\n    return result;\n}\n\nи постгрес задача: https://datalemur.com/questions/sql-well-paid-employees\n\nНа все время собеса попросила пошарить экран целиком, проверила, что у меня ничего не запущено в трее и в браузере, заставила вырубить второй монитор. \n\nЗапись сделалась стремно, почему-то только белый экран со звуком только собеседующего."
      },
      {
        "timestamp": "2025-02-06 13:24:38",
        "content": "2025-02-06 13:24:38\n Марк -> 2071074234:\nНазвание: linked helper (первый этап)\nВакансия: https://hh.ru/vacancy/116265495?query=linked+helper&hhtmFrom=vacancy_search_list\nЗП: 3500$ - 5500$\nЗадачи:\n1. Что выведет в консоль?\nfunction updateProfile(person) {\n    person = {\n        name: 'Peter'\n    };\n}\n\nfunction process() {\n    let person = { name: 'Mike' };\n    updateProfile(person);\n    console.log(person);\n}\n\nprocess();\n2. Что выведет в консоль?\nfunction makeGroup() {\n    let people = [];\n\n    l...",
        "full_content": "2025-02-06 13:24:38\n Марк -> 2071074234:\nНазвание: linked helper (первый этап)\nВакансия: https://hh.ru/vacancy/116265495?query=linked+helper&hhtmFrom=vacancy_search_list\nЗП: 3500$ - 5500$\nЗадачи:\n1. Что выведет в консоль?\nfunction updateProfile(person) {\n    person = {\n        name: 'Peter'\n    };\n}\n\nfunction process() {\n    let person = { name: 'Mike' };\n    updateProfile(person);\n    console.log(person);\n}\n\nprocess();\n2. Что выведет в консоль?\nfunction makeGroup() {\n    let people = [];\n\n    let i = 0;\n    while (i < 100) {\n        let man = function () {\n            alert(i);\n        };\n        people.push(man);\n        i++;\n    }\n\n    return people;\n}\n\nlet group = makeGroup();\ngroup[0](); // Вызывает alert со значением переменной `i`\ngroup[5](); // Вызывает alert со значением переменной `i`\n3. Что выведет в консоль?\n(function question() {\n    const p = Promise.reject();\n\n    p\n        .then(() => console.log('5'))\n        .catch(() => console.log('6'))\n        .then(() => console.log('7'));\n\n    p\n        .catch(() => console.log('10'))\n        .then(() => console.log('11'))\n        .catch(() => console.log('12'));\n})();\n4. Что выведет в консоль?\nfunction Example() {\n    const [count, setCount] = React.useState(0);\n\n    React.useEffect(() => {\n        const id = setInterval(() => {\n            setCount(count + 1);\n        }, 1000);\n\n        return () => clearInterval(id);\n    }, []);\n\n    console.log(count);\n\n    return <h1>{count}</h1>;\n}\n5. Что выведет в консоль?\nfunction Example() {\n    const [flag, setFlag] = React.useState(false);\n\n    React.useEffect(() => {\n        setFlag(true);\n        console.log('effect run');\n\n        return () => console.log('effect clean up');\n    }, [flag]);\n\n    console.log('render');\n\n    return null;\n}\n6. Реши алгоритм который пройдет все тест кейсы(прошел):\n/**\n * Написать функцию sostavChisla(massivChisel: number[], chislo: number),\n * которая бы находила все возможные комбинации чисел из massivChisel,\n * сумма которых равна chislo. При этом:\n * 1) massivChisel содержит только уникальные положительные числа (> 0)\n * 2) в комбинации не должно быть повторений чисел\n * 3) все комбинации должны быть уникальными\n *\n * Для проверки работоспособности функции запустить runTests()\n *\n * @param massivChisel: number[]\n * @param chislo: number\n * @return Array<Array<number>>\n */\nfunction sostavChisla(massivChisel, chislo) {\n    const result = [];\n\n    massivChisel.sort((a, b) => a - b);\n\n    function findCombinations(currentCombination, remainingSum, startIndex) {\n        if (remainingSum === chislo) {\n            result.push([...currentCombination]);\n            return;\n        }\n\n        for (let i = startIndex; i < massivChisel.length; i++) {\n            const currentNumber = massivChisel[i];\n\n            if (currentNumber + remainingSum > chislo) continue;\n\n            currentCombination.push(currentNumber);\n            findCombinations(\n                currentCombination,\n                remainingSum + currentNumber,\n                i + 1\n            );\n            currentCombination.pop();\n        }\n    }\n\n    findCombinations([], 0, 0);\n\n    console.log(result);\n    return result;\n}"
      },
      {
        "timestamp": "2025-02-04 16:49:17",
        "content": "2025-02-04 16:49:17\n Лёша -> 2071074234:\nКомпания: linked helper (1 этап)\nзп: от 2000$ до 3500$ на руки\nСсылка на вакансию: HR сам написал\n\nЗапись: черный экран без звука собеседующего (спасибо obs) 🤷‍♂️🤷‍♂️🤷‍♂️\n\nНа всю часть задач и лайвкодинга нужно шарить экран.\nЗадачи: как в посте https://t.me/c/2071074234/489/89751 (мне их давали в разнобой).\nЛайвкодинг с ответом: \n/**\n* Написать функцию sostavChisla(massivChisel: number[], chislo: number),\n  которая бы находила все возможные комбинации чис...",
        "full_content": "2025-02-04 16:49:17\n Лёша -> 2071074234:\nКомпания: linked helper (1 этап)\nзп: от 2000$ до 3500$ на руки\nСсылка на вакансию: HR сам написал\n\nЗапись: черный экран без звука собеседующего (спасибо obs) 🤷‍♂️🤷‍♂️🤷‍♂️\n\nНа всю часть задач и лайвкодинга нужно шарить экран.\nЗадачи: как в посте https://t.me/c/2071074234/489/89751 (мне их давали в разнобой).\nЛайвкодинг с ответом: \n/**\n* Написать функцию sostavChisla(massivChisel: number[], chislo: number),\n  которая бы находила все возможные комбинации чисел из massivChisel,\n  сумма которых равна chislo. При этом:\n  1) massivChisel содержит, только уникальные положительные числа (> 0)\n  2) в комбинации не должно быть повторений чисел\n  3) все комбинации должны быть уникальными\n  @param massivChisel: number[]\n  @param chislo: number\n  @return Array<Array<number>>\n*/\n//ответ\nfunction sostavChisla(massivChisel, chislo) {\n    const result = [];\n    function findCombinations(start, currentCombination, currentSum) {\n        if (currentSum === chislo) {\n            result.push([...currentCombination]);\n            return;\n        }\n        if (currentSum > chislo) {return}\n        for (let i = start; i < massivChisel.length; i++) {\n            currentCombination.push(massivChisel[i]);\n            findCombinations(i + 1, currentCombination, currentSum + massivChisel[i]);\n            currentCombination.pop();\n        }\n    }\n    findCombinations(0, [], 0);\n    return result;\n}"
      },
      {
        "timestamp": "2024-12-03 12:03:14",
        "content": "2024-12-03 12:03:14\n Michael Iskovski -> 2071074234:\n— Название компании: Linked Helper\n— Вакансия: https://hh.ru/vacancy/112183741\n— Тип собеседования: Задачи на вывод консоли\n— Запись: Не сохранилась. Скрины задач в архиве\n— Успех собеса: ❌\n— Фитбек: Отсутствует. Предполагаю, что не пригласили на следующий этап в виду наличия ошибок и невнятной самопрезентации после технической части (Не смог переключится из режима компилятора в режим спикера)",
        "full_content": "2024-12-03 12:03:14\n Michael Iskovski -> 2071074234:\n— Название компании: Linked Helper\n— Вакансия: https://hh.ru/vacancy/112183741\n— Тип собеседования: Задачи на вывод консоли\n— Запись: Не сохранилась. Скрины задач в архиве\n— Успех собеса: ❌\n— Фитбек: Отсутствует. Предполагаю, что не пригласили на следующий этап в виду наличия ошибок и невнятной самопрезентации после технической части (Не смог переключится из режима компилятора в режим спикера)"
      },
      {
        "timestamp": "2024-11-26 12:04:06",
        "content": "2024-11-26 12:04:06\n Aleksandr -> 2071074234:\nLinked Helper\n1 этап\nВопросы по  легенде:\n- Расскажи про свой опыт\n- Какие сложные задачи решал\n- Какие были факапы\n- Чем гордишься по работе\nЗадачи: https://t.me/c/2071074234/489/80727\nВидео: https://www.youtube.com/watch?v=clUVFDa8p8A",
        "full_content": "2024-11-26 12:04:06\n Aleksandr -> 2071074234:\nLinked Helper\n1 этап\nВопросы по  легенде:\n- Расскажи про свой опыт\n- Какие сложные задачи решал\n- Какие были факапы\n- Чем гордишься по работе\nЗадачи: https://t.me/c/2071074234/489/80727\nВидео: https://www.youtube.com/watch?v=clUVFDa8p8A"
      },
      {
        "timestamp": "2024-11-26 10:04:58",
        "content": "2024-11-26 10:04:58\n Maksim -> 2071074234:\nКомпания: Linked Helper (3 этап)                                                                                                                                                                                              Задача: /**\n* LEVEL 1.\n  Есть склад спец. одежды разных размеров. \n  К нам приходит заказ на спец. одежду, в котором указывается для каждого рабочего его id: number, size: [s1: number] | [s1: number, s2: s1+1], \n  а также masterSize: '...",
        "full_content": "2024-11-26 10:04:58\n Maksim -> 2071074234:\nКомпания: Linked Helper (3 этап)                                                                                                                                                                                              Задача: /**\n* LEVEL 1.\n  Есть склад спец. одежды разных размеров. \n  К нам приходит заказ на спец. одежду, в котором указывается для каждого рабочего его id: number, size: [s1: number] | [s1: number, s2: s1+1], \n  а также masterSize: 's1' | 's2', если указано два возможных рамера.\n  То есть по каждому рабочему может быть указан либо один подходящий размер одежды, либо два, причем 2-ой размер только на 1 больше первого.\n  \n  Нужно написать функцию processOrder, которая бы на получила на вход:\n  1) массив доступных размеров спец. одежды\n  store: Array<{ size: number, quantity: number}>\n  2) Заказ на спец. одежду для сотрудников:\n  order: Array<{ id: number, size: [s1: number] } | { id: number, size: [s1: number, s2: s1+1], masterSize: 's1' | 's2'  }>\n  \n  На выходе функция должна выдать false, \n  если на складе недостаточно одежды на обеспечение всех сотрудников, \n  а если это возможно, то возвращала объект:\n  {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>,\n    mismatches: number\n  }\n  где \n  stats - упорядоченный массив по возрастанию size массив размеров выдаваемой одежды со склада,\n  assignment - массив распределения одежды по сотрудникам,\n  mismatches - по скольким элементам заказа была выдана одежда НЕ соответствующая masterSize. \n    \n  processOrder должна расчитывать такое возможное распределение одежды, чтобы mismatches был минимальным.\n    \n  Для проверки работоспособности функции запустить runTests()\n  \n  @param store: Array<{ size: number, quantity: number}>\n  @param order: Array<{ id: number, size: [s1: number] } | { id: number, size: [s1: number, s2: s1+1], masterSize: 's1' | 's2'  }>\n  @return false | {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>,\n    mismatches: number\n  }\n*/    function processOrder(store, order) {\n    // Создаем карту склада: size -> quantity\n    const stockMap = new Map();\n    for (const item of store) {\n        stockMap.set(item.size, item.quantity);\n    }\n\n    // Разделяем заказы на фиксированные (один размер) и гибкие (два размера)\n    const fixedOrders = [];\n    const flexibleOrders = [];\n    \n    for (const item of order) {\n        if (item.size.length === 1) {\n            fixedOrders.push(item);\n        } else if (item.size.length === 2 && \n                  (item.masterSize === 's1' || item.masterSize === 's2')) {\n            flexibleOrders.push(item);\n        } else {\n            return false; // Некорректный формат заказа\n        }\n    }\n\n    // Сначала обрабатываем фиксированные заказы\n    const assignment = [];\n    const allocatedSizes = new Map();\n    \n    // Функция для выделения размера\n    const allocateSize = (size) => {\n        if (stockMap.has(size) && stockMap.get(size) > 0) {\n            stockMap.set(size, stockMap.get(size) - 1);\n            allocatedSizes.set(size, (allocatedSizes.get(size) || 0) + 1);\n            return true;\n        }\n        return false;\n    };\n\n    // Обрабатываем фиксированные заказы\n    for (const order of fixedOrders) {\n        if (!allocateSize(order.size[0])) {\n            return false;\n        }\n        assignment.push({ id: order.id, size: order.size[0] });\n    }\n\n    // Проверяем возможность выполнения всех гибких заказов\n    const tempStockMap = new Map(stockMap);\n    for (const order of flexibleOrders) {\n        const [s1, s2] = order.size;\n        if (!((tempStockMap.get(s1) || 0) > 0 || (tempStockMap.get(s2) || 0) > 0)) {\n            return false;\n        }\n    }"
      },
      {
        "timestamp": "2024-11-25 14:13:04",
        "content": "2024-11-25 14:13:04\n George Nizamutdinow -> 2071074234:\nКомпания: Linked Helper\nВакансия: https://hh.ru/vacancy/109666237\nЗП: от 2000$ до 3500$ на руки\n\nВопросы (тех.часть):\n\n1) Задача\n\n\n/**\n* Написать функцию sostavChisla(massivChisel: number[], chislo: number),\n  которая бы находила все возможные комбинации чисел из massivChisel,\n  сумма которых равна chislo. При этом:\n  1) massivChisel содержит, только уникальные положительные числа (> 0)\n  2) в комбинации не должно быть повторений чисел\n  3)...",
        "full_content": "2024-11-25 14:13:04\n George Nizamutdinow -> 2071074234:\nКомпания: Linked Helper\nВакансия: https://hh.ru/vacancy/109666237\nЗП: от 2000$ до 3500$ на руки\n\nВопросы (тех.часть):\n\n1) Задача\n\n\n/**\n* Написать функцию sostavChisla(massivChisel: number[], chislo: number),\n  которая бы находила все возможные комбинации чисел из massivChisel,\n  сумма которых равна chislo. При этом:\n  1) massivChisel содержит, только уникальные положительные числа (> 0)\n  2) в комбинации не должно быть повторений чисел\n  3) все комбинации должны быть уникальными\n\n  Для проверки работоспособности функции запустить runTests()\n\n  @param massivChisel: number[]\n  @param chislo: number\n  @return Array<Array<number>>\n*/\nfunction sostavChisla(massivChisel, chislo) {\n  // код писать только внутри данной функции\n\n}\n\n// console.log(sostavChisla([8, 2, 3, 4, 6, 7, 1], 99));\n\nfunction compareNumericArrays(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  arr1 = [...arr1].sort();\n  arr2 = [...arr2].sort();\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction compareArraysOfNumericArrays(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let el1 of arr1) {\n    if (arr2.findIndex((el2) => compareNumericArrays(el1, el2)) < 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nrunTests();\n\nfunction runTests() {\n  const tests = [\n    {\n      chislo: 5,\n      massivChisel: [8, 2, 3, 4, 6, 7, 1],\n      result: [\n        [2, 3],\n        [4, 1],\n      ],\n    },\n    {\n      chislo: 99,\n      massivChisel: [8, 2, 3, 4, 6, 7, 1],\n      result: [],\n    },\n    {\n      chislo: 8,\n      massivChisel: [1, 2, 3, 4, 5, 6, 7, 8],\n      result: [[1, 3, 4], [1, 2, 5], [3, 5], [2, 6], [1, 7], [8]],\n    },\n    {\n      chislo: 8,\n      massivChisel: [7, 8, 3, 4, 5, 6, 1, 2],\n      result: [[1, 3, 4], [1, 2, 5], [3, 5], [2, 6], [1, 7], [8]],\n    },\n    {\n      chislo: 15,\n      massivChisel: [7, 8, 3, 4, 5, 6, 1, 2],\n      result: [\n        [1, 2, 3, 4, 5],\n        [2, 3, 4, 6],\n        [1, 3, 5, 6],\n        [4, 5, 6],\n        [1, 3, 4, 7],\n        [1, 2, 5, 7],\n        [3, 5, 7],\n        [2, 6, 7],\n        [1, 2, 4, 8],\n        [3, 4, 8],\n        [2, 5, 8],\n        [1, 6, 8],\n        [7, 8],\n      ],\n    },\n  ];\n\n  let errors = 0;\n  for (const test of tests) {\n    let result;\n    try {\n      result = sostavChisla(test.massivChisel, test.chislo);\n\n      if (!compareArraysOfNumericArrays(result, test.result)) {\n        errors++;\n        console.log(\"--------------------------------------------\");\n        console.log(\"failed for test\", test, \"Got result\", result);\n      }\n    } catch (e) {\n      errors++;\n      console.log(\"failed for\", test, \"exception\", e.message);\n    }\n  }\n\n  if (errors === 0) {\n    console.log(\"checkStringForBracects test successfuly completed\");\n  } else {\n    console.log(`checkStringForBracects test failed with ${errors} errors`);\n  }\n}"
      },
      {
        "timestamp": "2024-11-24 11:04:58",
        "content": "2024-11-24 11:04:58\n George Nizamutdinow -> 2071074234:\nКомпания: Linked Helper\nВакания: https://hh.ru/vacancy/109666237\nЗП: от 2 000 до 3 500 $ на руки\n\nВопросы(hr-скрининг): \n1) Рассказать про опыт, что заинтересовало в вакансии\n2) Задачи из скринов",
        "full_content": "2024-11-24 11:04:58\n George Nizamutdinow -> 2071074234:\nКомпания: Linked Helper\nВакания: https://hh.ru/vacancy/109666237\nЗП: от 2 000 до 3 500 $ на руки\n\nВопросы(hr-скрининг): \n1) Рассказать про опыт, что заинтересовало в вакансии\n2) Задачи из скринов"
      },
      {
        "timestamp": "2024-11-19 13:52:41",
        "content": "2024-11-19 13:52:41\n Aleksandr -> 2071074234:\nLinked Helper\n2 этап\nПопросила расшарить экран\nи спалила то что открыт meet.jit и происходит трансляция (пологаю что зоом это как то отображает),\nпопросила закрыть.\nЗадача:\n/**\n* LEVEL 0.\n  Есть склад спец. одежды разных размеров.\n  store: Array<{ size: number, quantity: number}>\n  \n  К нам приходит заказ на спец. одежду\n  order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>, \n  в котором указывается для каждого рабочего его id:...",
        "full_content": "2024-11-19 13:52:41\n Aleksandr -> 2071074234:\nLinked Helper\n2 этап\nПопросила расшарить экран\nи спалила то что открыт meet.jit и происходит трансляция (пологаю что зоом это как то отображает),\nпопросила закрыть.\nЗадача:\n/**\n* LEVEL 0.\n  Есть склад спец. одежды разных размеров.\n  store: Array<{ size: number, quantity: number}>\n  \n  К нам приходит заказ на спец. одежду\n  order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>, \n  в котором указывается для каждого рабочего его id: number и size: [s1: number] | [s1: number, s2: s1+1]. \n    \n  То есть по каждому рабочему может быть указан \n  либо один подходящий размер одежды, либо два, причем 2-ой размер только на 1 больше первого.\n  \n  Нужно написать функцию processOrder, которая бы на получила на вход:\n  1) массив доступных размеров спец. одежды\n  store: Array<{ size: number, quantity: number}>\n  2) Заказ на спец. одежду для сотрудников:\n  order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>\n  \n  На выходе функция должна выдать false, \n  если на складе недостаточно одежды на обеспечение всех сотрудников, \n  а если это возможно, то возвращала объект:\n  {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>\n  }\n  где stats - упорядоченный массив по возрастанию size массив \n              размеров size и количества quantity выдаваемой одежды со склада;\n  assignment - массив распределения одежды по сотрудникам,\n              где id - идентификатор рабочего из order, size - выданный ему размер\n    \n  Для проверки работоспособности функции запустить runTests()\n  \n  @param store: Array<{ size: number, quantity: number}>\n  @param order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>\n  @return false | {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>\n  }\n*/\nfunction processOrder(store, order) {\n  // код писать только внутри данной функции\n  \n}\n\nfunction compareNumericArrays(arr1, arr2) {\n  if(arr1.length !== arr2.length) {\n    return null;\n  }\n  \n  arr1 = [...arr1].sort();\n  arr2 = [...arr2].sort();\n  \n  for(let i=0; i<arr1.length; i++) {\n    if(arr1[i] !== arr2[i]) {\n      return null;\n    }\n  }\n  \n  return true;\n}\n\nfunction compareArraysOfNumericArrays(arr1, arr2) {\n  if(arr1.length !== arr2.length) {\n    return false;\n  }\n  \n  for(let el1 of arr1) {\n    if(arr2.findIndex(el2 => compareNumericArrays(el1, el2)) < 0) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nrunTests();"
      },
      {
        "timestamp": "2024-11-16 16:26:51",
        "content": "2024-11-16 16:26:51\n Стас Тихомиров -> 2071074234:\nLinked Helper (1 этап)\nЗП: 200к\nВакансия: https://rostov.hh.ru/vacancy/109666237?query=linked+helper&hhtmFrom=vacancy_search_list\nВопросы: 1 в 1 как здесь: https://t.me/c/2071074234/489/83120",
        "full_content": "2024-11-16 16:26:51\n Стас Тихомиров -> 2071074234:\nLinked Helper (1 этап)\nЗП: 200к\nВакансия: https://rostov.hh.ru/vacancy/109666237?query=linked+helper&hhtmFrom=vacancy_search_list\nВопросы: 1 в 1 как здесь: https://t.me/c/2071074234/489/83120"
      },
      {
        "timestamp": "2024-11-14 10:47:15",
        "content": "2024-11-14 10:47:15\n twomadd -> 2071074234:\nLinked Helper 3 собес 2 задача\nЗП: 200к\nВакансия: hr сама написала\nЗадача:\n/**\n* LEVEL 1.\n  Есть склад спец. одежды разных размеров. \n  К нам приходит заказ на спец. одежду, в котором указывается для каждого рабочего его id: number, size: [s1: number] | [s1: number, s2: s1+1], \n  а также masterSize: 's1' | 's2', если указано два возможных рамера.\n  То есть по каждому рабочему может быть указан либо один подходящий размер одежды, либо два, причем 2-ой р...",
        "full_content": "2024-11-14 10:47:15\n twomadd -> 2071074234:\nLinked Helper 3 собес 2 задача\nЗП: 200к\nВакансия: hr сама написала\nЗадача:\n/**\n* LEVEL 1.\n  Есть склад спец. одежды разных размеров. \n  К нам приходит заказ на спец. одежду, в котором указывается для каждого рабочего его id: number, size: [s1: number] | [s1: number, s2: s1+1], \n  а также masterSize: 's1' | 's2', если указано два возможных рамера.\n  То есть по каждому рабочему может быть указан либо один подходящий размер одежды, либо два, причем 2-ой размер только на 1 больше первого.\n  \n  Нужно написать функцию processOrder, которая бы на получила на вход:\n  1) массив доступных размеров спец. одежды\n  store: Array<{ size: number, quantity: number}>\n  2) Заказ на спец. одежду для сотрудников:\n  order: Array<{ id: number, size: [s1: number] } | { id: number, size: [s1: number, s2: s1+1], masterSize: 's1' | 's2'  }>\n  \n  На выходе функция должна выдать false, \n  если на складе недостаточно одежды на обеспечение всех сотрудников, \n  а если это возможно, то возвращала объект:\n  {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>,\n    mismatches: number\n  }\n  где \n  stats - упорядоченный массив по возрастанию size массив размеров выдаваемой одежды со склада,\n  assignment - массив распределения одежды по сотрудникам,\n  mismatches - по скольким элементам заказа была выдана одежда НЕ соответствующая masterSize. \n    \n  processOrder должна расчитывать такое возможное распределение одежды, чтобы mismatches был минимальным.\n    \n  Для проверки работоспособности функции запустить runTests()\n  \n  @param store: Array<{ size: number, quantity: number}>\n  @param order: Array<{ id: number, size: [s1: number] } | { id: number, size: [s1: number, s2: s1+1], masterSize: 's1' | 's2'  }>\n  @return false | {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>,\n    mismatches: number\n  }\n*/\nfunction processOrder(store, order) {\n    //Тут писать код\n}\nfunction compareNumericArrays(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  arr1 = [...arr1].sort();\n  arr2 = [...arr2].sort();\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction compareArraysOfNumericArrays(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let el1 of arr1) {\n    if (arr2.findIndex((el2) => compareNumericArrays(el1, el2)) < 0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nrunTests();"
      },
      {
        "timestamp": "2024-11-13 13:42:28",
        "content": "2024-11-13 13:42:28\n Maksim -> 2071074234:\nLinked Helper (1 этап)                                                                                                                                                                                                                       Зп: Не обсуждали (2000 - 3500$ написано в вакансии )                                                                                                                                                          Вакансия: http...",
        "full_content": "2024-11-13 13:42:28\n Maksim -> 2071074234:\nLinked Helper (1 этап)                                                                                                                                                                                                                       Зп: Не обсуждали (2000 - 3500$ написано в вакансии )                                                                                                                                                          Вакансия: https://rostov.hh.ru/vacancy/109666237?query=linked+helper&hhtmFrom=vacancy_search_list                                                                                                                                                                                                            Вопросы 1 в 1 как здесь : https://t.me/c/2071074234/489/85574"
      },
      {
        "timestamp": "2024-11-11 13:34:32",
        "content": "2024-11-11 13:34:32\n twomadd -> 2071074234:\n-Название: Linked Helper(2 этап - решение задачи)\n-Вакансия: hr сама написала\n-ЗП: 200к\n-Сразу к задаче. Надо решить чтобы прошли все тесты , а именно функцию function processOrder(store, order)\nВот условие: \n```\n/**\n* LEVEL 0.\n  Есть склад спец. одежды разных размеров.\n  store: Array<{ size: number, quantity: number}>\n  \n  К нам приходит заказ на спец. одежду\n  order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>, \n  в котором ук...",
        "full_content": "2024-11-11 13:34:32\n twomadd -> 2071074234:\n-Название: Linked Helper(2 этап - решение задачи)\n-Вакансия: hr сама написала\n-ЗП: 200к\n-Сразу к задаче. Надо решить чтобы прошли все тесты , а именно функцию function processOrder(store, order)\nВот условие: \n```\n/**\n* LEVEL 0.\n  Есть склад спец. одежды разных размеров.\n  store: Array<{ size: number, quantity: number}>\n  \n  К нам приходит заказ на спец. одежду\n  order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>, \n  в котором указывается для каждого рабочего его id: number и size: [s1: number] | [s1: number, s2: s1+1]. \n    \n  То есть по каждому рабочему может быть указан \n  либо один подходящий размер одежды, либо два, причем 2-ой размер только на 1 больше первого.\n  \n  Нужно написать функцию processOrder, которая бы на получила на вход:\n  1) массив доступных размеров спец. одежды\n  store: Array<{ size: number, quantity: number}>\n  2) Заказ на спец. одежду для сотрудников:\n  order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>\n  \n  На выходе функция должна выдать false, \n  если на складе недостаточно одежды на обеспечение всех сотрудников, \n  а если это возможно, то возвращала объект:\n  {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>\n  }\n  где stats - упорядоченный массив по возрастанию size массив \n              размеров size и количества quantity выдаваемой одежды со склада;\n  assignment - массив распределения одежды по сотрудникам,\n              где id - идентификатор рабочего из order, size - выданный ему размер\n    \n  Для проверки работоспособности функции запустить runTests()\n  \n  @param store: Array<{ size: number, quantity: number}>\n  @param order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>\n  @return false | {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>\n  }\n*/\nfunction processOrder(store, order) {\n  // код писать только внутри данной функции\n\n \n}\n\nfunction compareNumericArrays(arr1, arr2) {\n  if(arr1.length !== arr2.length) {\n    return false;\n  }\n  \n  arr1 = [...arr1].sort();\n  arr2 = [...arr2].sort();\n  \n  for(let i=0; i<arr1.length; i++) {\n    if(arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nfunction compareArraysOfNumericArrays(arr1, arr2) {\n  if(arr1.length !== arr2.length) {\n    return false;\n  }\n  \n  for(let el1 of arr1) {\n    if(arr2.findIndex(el2 => compareNumericArrays(el1, el2)) < 0) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nrunTests();"
      },
      {
        "timestamp": "2024-11-06 15:10:16",
        "content": "2024-11-06 15:10:16\n Mike -> 2071074234:\nКомпания: Linked Helper\nЗП: 250к\nвопросы выше есть, все по аналогии",
        "full_content": "2024-11-06 15:10:16\n Mike -> 2071074234:\nКомпания: Linked Helper\nЗП: 250к\nвопросы выше есть, все по аналогии"
      },
      {
        "timestamp": "2024-11-06 14:42:32",
        "content": "2024-11-06 14:42:32\n Гасим Мурасов -> 2071074234:\nкомпания: linked helper\nзп: 250 000\nвакансия: https://hh.ru/vacancy/109666237?hhtmFrom=vacancy_search_list\nвопросы есть выше\n\nвидео https://youtu.be/02fT0KAKxOU",
        "full_content": "2024-11-06 14:42:32\n Гасим Мурасов -> 2071074234:\nкомпания: linked helper\nзп: 250 000\nвакансия: https://hh.ru/vacancy/109666237?hhtmFrom=vacancy_search_list\nвопросы есть выше\n\nвидео https://youtu.be/02fT0KAKxOU"
      },
      {
        "timestamp": "2024-10-31 13:48:25",
        "content": "2024-10-31 13:48:25\n twomadd -> 2071074234:\nLinked Helper 1-ый этап\nВакансия: hr написала\nЗП: 200к\nВопросы: только про опыт  (интересные задачи и достижения) \nПочему ушел с последнего места работы.\nЗадачи:\nЧто будет выведено в консоль ?\n\nfunction Example() {\n  const [flag, setFlag] = React.useState(false);\n\n  React.useEffect(() => {\n    setFlag(true);\n    console.log('effect run');\n    return () => console.log('effect clean up');\n  }, [flag]);\n\n  console.log('render');\n  return null; // Компонен...",
        "full_content": "2024-10-31 13:48:25\n twomadd -> 2071074234:\nLinked Helper 1-ый этап\nВакансия: hr написала\nЗП: 200к\nВопросы: только про опыт  (интересные задачи и достижения) \nПочему ушел с последнего места работы.\nЗадачи:\nЧто будет выведено в консоль ?\n\nfunction Example() {\n  const [flag, setFlag] = React.useState(false);\n\n  React.useEffect(() => {\n    setFlag(true);\n    console.log('effect run');\n    return () => console.log('effect clean up');\n  }, [flag]);\n\n  console.log('render');\n  return null; // Компонент ничего не рендерит\n}"
      },
      {
        "timestamp": "2024-09-11 10:22:35",
        "content": "2024-09-11 10:22:35\n Бахтияр -> 2071074234:\nLinked helper\n- зп: не обсуждали\n- вакансия: написала сама\n- вопросы:",
        "full_content": "2024-09-11 10:22:35\n Бахтияр -> 2071074234:\nLinked helper\n- зп: не обсуждали\n- вакансия: написала сама\n- вопросы:"
      },
      {
        "timestamp": "2024-09-04 16:58:47",
        "content": "2024-09-04 16:58:47\n Timofei Syromiatnikov -> 2071074234:\n— Название: Linked Helper (2 этап - решение одной задачки)\n— Вакансия: https://hh.ru/vacancy/102127027\n— ЗП: 4к$\n— Вопросов не было, перешли сразу к задаче. Нужно решить, и чтобы решение прошло все тесты:\n/**\n* LEVEL 0.\n  Есть склад спец. одежды разных размеров.\n  store: Array<{ size: number, quantity: number}>\n  \n  К нам приходит заказ на спец. одежду\n  order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>, \n  в кото...",
        "full_content": "2024-09-04 16:58:47\n Timofei Syromiatnikov -> 2071074234:\n— Название: Linked Helper (2 этап - решение одной задачки)\n— Вакансия: https://hh.ru/vacancy/102127027\n— ЗП: 4к$\n— Вопросов не было, перешли сразу к задаче. Нужно решить, и чтобы решение прошло все тесты:\n/**\n* LEVEL 0.\n  Есть склад спец. одежды разных размеров.\n  store: Array<{ size: number, quantity: number}>\n  \n  К нам приходит заказ на спец. одежду\n  order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>, \n  в котором указывается для каждого рабочего его id: number и size: [s1: number] | [s1: number, s2: s1+1]. \n    \n  То есть по каждому рабочему может быть указан \n  либо один подходящий размер одежды, либо два, причем 2-ой размер только на 1 больше первого.\n  \n  Нужно написать функцию processOrder, которая бы на получила на вход:\n  1) массив доступных размеров спец. одежды\n  store: Array<{ size: number, quantity: number}>\n  2) Заказ на спец. одежду для сотрудников:\n  order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>\n  \n  На выходе функция должна выдать false, \n  если на складе недостаточно одежды на обеспечение всех сотрудников, \n  а если это возможно, то возвращала объект:\n  {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>\n  }\n  где stats - упорядоченный массив по возрастанию size массив \n              размеров size и количества quantity выдаваемой одежды со склада;\n  assignment - массив распределения одежды по сотрудникам,\n              где id - идентификатор рабочего из order, size - выданный ему размер\n    \n  Для проверки работоспособности функции запустить runTests()\n  \n  @param store: Array<{ size: number, quantity: number}>\n  @param order: Array<{ id: number, size: [s1: number] | [s1: number, s2: s1+1]  }>\n  @return false | {\n    stats: Array<{size: number, quantity: number}>,\n    assignment:  Array<{id: number, size: number}>\n  }\n*/\nfunction processOrder(store, order) {\n  // код писать только внутри данной функции\n\n \n}\n\nfunction compareNumericArrays(arr1, arr2) {\n  if(arr1.length !== arr2.length) {\n    return false;\n  }\n  \n  arr1 = [...arr1].sort();\n  arr2 = [...arr2].sort();\n  \n  for(let i=0; i<arr1.length; i++) {\n    if(arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nfunction compareArraysOfNumericArrays(arr1, arr2) {\n  if(arr1.length !== arr2.length) {\n    return false;\n  }\n  \n  for(let el1 of arr1) {\n    if(arr2.findIndex(el2 => compareNumericArrays(el1, el2)) < 0) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nrunTests();"
      },
      {
        "timestamp": "2024-08-30 11:47:20",
        "content": "2024-08-30 11:47:20\n Timofei Syromiatnikov -> 2071074234:\n— Название: Linked Helper (1 этап скрининг + задачки)\n— Вакансия: https://hh.ru/vacancy/102127027\n— Вопросы: после скрининга перешли к задачам\n— Задачи: нужно устно сказать ответ",
        "full_content": "2024-08-30 11:47:20\n Timofei Syromiatnikov -> 2071074234:\n— Название: Linked Helper (1 этап скрининг + задачки)\n— Вакансия: https://hh.ru/vacancy/102127027\n— Вопросы: после скрининга перешли к задачам\n— Задачи: нужно устно сказать ответ"
      },
      {
        "timestamp": "2024-08-13 20:09:00",
        "content": "2024-08-13 20:09:00\n Руслан -> 2071074234:\nLinked Helper\n— зп: от 4000$ гросс\n— вакансия: https://hh.ru/vacancy/102127449\n— вопросы:\n— задачи:",
        "full_content": "2024-08-13 20:09:00\n Руслан -> 2071074234:\nLinked Helper\n— зп: от 4000$ гросс\n— вакансия: https://hh.ru/vacancy/102127449\n— вопросы:\n— задачи:"
      }
    ]
  },
  {
    "company": "Северсталь",
    "count": 17,
    "records": [
      {
        "timestamp": "2025-06-11 08:07:26",
        "content": "2025-06-11 08:07:26\n Alexander -> 2071074234:\nСеверсталь второй этап (созвон с лидом)\nВакансия - написала HR\nЗП - 250-300к\nСозвон с лидом, рассказал про себя, про проекты и компанию в целом, как устроены дейлики и викли. Я рассказал ему про свой опыт. Спрашивал почему ухожу с текущего места работы, через сколько смогу выйти, если дадут оффер. Куда хочу развиваться, делаю ли пет проекты, что изучаю новое и как развиваюсь, спрашивал про книги, про увлечения вне работы.Работал ли с graphql? Ожидани...",
        "full_content": "2025-06-11 08:07:26\n Alexander -> 2071074234:\nСеверсталь второй этап (созвон с лидом)\nВакансия - написала HR\nЗП - 250-300к\nСозвон с лидом, рассказал про себя, про проекты и компанию в целом, как устроены дейлики и викли. Я рассказал ему про свой опыт. Спрашивал почему ухожу с текущего места работы, через сколько смогу выйти, если дадут оффер. Куда хочу развиваться, делаю ли пет проекты, что изучаю новое и как развиваюсь, спрашивал про книги, про увлечения вне работы.Работал ли с graphql? Ожидания по зарплате, как будешь выбирать место работы, если на руках несколько офферов, в каком городе живешь(чтобы знать к какому офису прикреплять при трудоустройстве)"
      },
      {
        "timestamp": "2024-11-20 07:04:13",
        "content": "2024-11-20 07:04:13\n Стас Тихомиров -> 2071074234:\nКомпания: Северсталь\nВакансия: написала hr, позиция мидл\nЗП: 200к\n\nВопросы:\n- Что такое type guards\n\nПотом пошли задачи, было много задач, прям гоняли что будет тут, а что если так, можно посмотреть в начало с тестами, только не было вариантов ответов, надо было самому говорить что будет https://t.me/c/2071074234/489/33289\n\n- Написать type guard, \nрешенная задача\ntype User = { name: string; permissions: string[]; }  \ntype Admin = { name: string;...",
        "full_content": "2024-11-20 07:04:13\n Стас Тихомиров -> 2071074234:\nКомпания: Северсталь\nВакансия: написала hr, позиция мидл\nЗП: 200к\n\nВопросы:\n- Что такое type guards\n\nПотом пошли задачи, было много задач, прям гоняли что будет тут, а что если так, можно посмотреть в начало с тестами, только не было вариантов ответов, надо было самому говорить что будет https://t.me/c/2071074234/489/33289\n\n- Написать type guard, \nрешенная задача\ntype User = { name: string; permissions: string[]; }  \ntype Admin = { name: string; }  \ntype Person = User | Admin;  \n\nconst isUser = (person: Person): person is User => {  \n    return (person as User).permissions !== undefined;  \n};  \n\nconst hasPermission = (namePermission: string, person: Person) => {  \n    return isUser(person) && person.permissions.includes(namePermission);  \n};  \n\n// Примеры использования  \nconst user: User = { name: 'John', permissions: ['read', 'write'] };  \nconst admin: Admin = { name: 'Jane' };  \n\nconsole.log(hasPermission('write', user)); // true  \nconsole.log(hasPermission('write', admin)); // false\n\n- протипизировать функцию чтобы не ругался на callFn({ name: 'Gleb', fn: () => {} }). \nРешенная задача\nfunction callFn<T extends { name: string; fn: () => void; [key: string]: any }>(obj: T) {  \n    obj.fn();  \n}  \n\n// Примеры вызовов  \ncallFn({ name: 'John', fn: () => {}, age: 16 }); // valid  \ncallFn({ name: 'Oleg', fn: () => {}, owner: 'Irina' }); // valid  \ncallFn({ name: 'Gleb', fn: () => {} }); // valid\n- еще одна задача, дернуть апишки и отфильтровать\nрешенная задача\n/** Задача\n - Получить список предметов из сервера getServerItemsApi();\n - Получить список предметов из стима getSteamItemsApi();\n - Отфильтровать список предметов стима оставив предметы, которых нет на сервере\n */\n\nconst mockServerItems = [\"Aquamarine Revenge (Minimal Wear)\", \"Case Hardened (Field-Tested)\", \"Jet Set (Well-Worn)\", \"AUG | Daedalus (Field-Tested)\"];\nconst mockSteamItems = [\"Aquamarine Revenge (Minimal Wear)\", \"Case Hardened (Field-Tested)\", \"Jet Set (Well-Worn)\", \"AUG | Daedalus (Field-Tested)\", \"R8 Revolver | Crazy 8 (Factory New)\"];\n\nfunction saveItemToServerApi(value) {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(value), 1000)\n  })\n}\n\nfunction getServerItemsApi() {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(mockServerItems), 1000)\n  })\n}\n\nfunction getSteamItemsApi() {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(mockSteamItems), 1000)\n  })\n}\n\nasync function parsingNewItems() {\n  try {\n    // Получить список предметов из сервера\n    const serverItems = await getServerItemsApi();\n    console.log('Server Items:', serverItems);\n\n    // Получить список предметов из стима\n    const steamItems = await getSteamItemsApi();\n    console.log('Steam Items:', steamItems);\n\n    // Отфильтровать список предметов из стима, оставив предметы, которых нет на сервере\n    const newItems = steamItems.filter(item => !serverItems.includes(item));\n    console.log('New Items:', newItems);\n\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}"
      },
      {
        "timestamp": "2024-11-15 12:04:43",
        "content": "2024-11-15 12:04:43\n Артем -> 2071074234:\nКомпания: Северсталь\nВакансия: https://hh.ru/vacancy/109199890 \nЗП: 220\nВопросы: \nВсплытия события\ncapture: true\ncss изменили но не изменился цвет почему\ngit bisect\nerrorBoundary\nв 1 виджете ошибка как ее предотвратить\nесть код там ошибка как исправишь\n400 500 код\nЗадача: решить чтобы все работало исправно\n// Есть реализация компонента, от которого требуется 2 вещи:\n// 1) выводить текущее значение вертикального скролла окна (window.scrollY)\n// 2) после м...",
        "full_content": "2024-11-15 12:04:43\n Артем -> 2071074234:\nКомпания: Северсталь\nВакансия: https://hh.ru/vacancy/109199890 \nЗП: 220\nВопросы: \nВсплытия события\ncapture: true\ncss изменили но не изменился цвет почему\ngit bisect\nerrorBoundary\nв 1 виджете ошибка как ее предотвратить\nесть код там ошибка как исправишь\n400 500 код\nЗадача: решить чтобы все работало исправно\n// Есть реализация компонента, от которого требуется 2 вещи:\n// 1) выводить текущее значение вертикального скролла окна (window.scrollY)\n// 2) после монтирования асинхронно получить число и вывести его\n// Нужно найти, объяснить и исправить как можно больше проблем в реализации\n\nimport { useState, useEffect } from 'react';\n\n// имитация запроса к серверу. просто получаем число асинхронно\nconst fetchRandomNumber = () => Promise.resolve(Math.random());\n\nconst NumberAndScroll = () => {\n  const [number, setNumber] = useState(0);\n  const [scroll, setScroll] = useState(window.scrollY);\n  \n  useEffect( () => {\n  \n    const fetchNumber = async () => {\n        const randomNumber = await fetchRandomNumber()\n        setNumber(randomNumber)\n    }\n    \n  fetchNumber()\n  },[]);\n  \n  \n    useEffect( () => {\n    \n    const handleScroll = () => setScroll(window.scrollY)\n    \n    window.addEventListener('scroll', handleScroll);\n\n    return () => window.removeEventListener('scroll', handleScroll);\n  },[]);\n  \n  return (\n    <div>\n      <div> Number: { number } </div>\n      <div> Scroll: { scroll } </div>\n    </div>  \n  )\n}"
      },
      {
        "timestamp": "2024-11-05 15:21:28",
        "content": "2024-11-05 15:21:28\n аыеъа -> 2071074234:\nСеверсталь \nТехсобес\nУспех: Оффер ✅ \nЗП: 250к\nВакансия: https://rostov.hh.ru/vacancy/102031303\nВопросы: \nСпросил как я знаю TS по 10-и бальной шкале, сказал что на 8, не знаю только как использовать инфер и собеседующий скипнул весь блок с TS \nМутирующие и не мутирующие методы массива\nconst mockServerImages = [\n        { id: 1, url: 'http://images.com/frog.jpg' },\n        { id: 2, url: 'http://images.com/cat.jpg' },\n        { id: 3, url: 'http://images.c...",
        "full_content": "2024-11-05 15:21:28\n аыеъа -> 2071074234:\nСеверсталь \nТехсобес\nУспех: Оффер ✅ \nЗП: 250к\nВакансия: https://rostov.hh.ru/vacancy/102031303\nВопросы: \nСпросил как я знаю TS по 10-и бальной шкале, сказал что на 8, не знаю только как использовать инфер и собеседующий скипнул весь блок с TS \nМутирующие и не мутирующие методы массива\nconst mockServerImages = [\n        { id: 1, url: 'http://images.com/frog.jpg' },\n        { id: 2, url: 'http://images.com/cat.jpg' },\n        { id: 3, url: 'http://images.com/dog.jpg' },\n        { id: 4, url: 'http://images.com/fish.jpg' },\n        { id: 5, url: 'http://images.com/human.jpg' },\n    ];\n\nconst mockClientImages = [\n        'http://images.com/frog.jpg',\n        'http://images.com/cat.jpg',\n        'http://images.com/dog.jpg',\n        'http://images.com/fish.jpg',\n        'http://images.com/human.jpg',\n        'http://images.com/alien.jpg',\n        'http://images.com/robot.jpg',\n    ];\n\nfunction saveItemToServerApi(url) {\n   return new Promise(resolve => {\n      setTimeout(() => resolve(value), 1000)\n   })\n}\n\nfunction getServerItemsApi() {\n   return new Promise(resolve => {\n      setTimeout(() => resolve(mockServerImages), 1000)\n   })\n}\n\nfunction getClientItemsApi() {\n   return new Promise(resolve => {\n      setTimeout(() => resolve(mockClientImages), 1000)\n   })\n}\n\n/ Задача\n - Получить список предметов из сервера getServerItemsApi();\n - Получить список предметов у клиента getClientItemsApi();\n - Отфильтровать список предметов клиента оставив предметы, \n которых нет на сервере\n - Добавить новые предметы на сервер saveItemToServerApi(url); \n \n  Дополнительно\n Одновременно можно добавлять не более 2 предметов\n */\n\nconst parsingNewItems = async () => {\n    const serverItems = await getServerItemsApi()\n    const clientItems = await getClientItemsApi()\n\n    \n    const serverItemsSet = new Set()\n    for (let item of serverItems) {\n        serverItemsSet.add(item.url)\n    }\n    \n    const resultItems = []\n    \n    for (let item of clientItems) {\n        if (!serverItemsSet.has(item)) {\n            resultItems.push(item)\n        }\n    }\n    \n    console.log(resultItems)\n    \n    for (let i = 0; i < resultItems.length; i += 2) {\n        const neededItems = resultItems.slice(i, i + 2)\n        await Promise.all(saveItemToServerApi(neededItems))\n    }\n}\n\nparsingNewItems()"
      },
      {
        "timestamp": "2024-11-05 15:14:06",
        "content": "2024-11-05 15:14:06\n аыеъа -> 2071074234:\nСеверсталь\nЛайтовый Финал\nУспех: Оффер✅\nЗП: 250к\nВакансия: https://rostov.hh.ru/vacancy/102031303\nВидео:",
        "full_content": "2024-11-05 15:14:06\n аыеъа -> 2071074234:\nСеверсталь\nЛайтовый Финал\nУспех: Оффер✅\nЗП: 250к\nВакансия: https://rostov.hh.ru/vacancy/102031303\nВидео:"
      },
      {
        "timestamp": "2024-10-20 17:01:45",
        "content": "2024-10-20 17:01:45\n Ada500 -> 2071074234:\n- Северсталь\n- Тех интервью\n- ЗП: 250 тыс\n- Вакансия: https://hh.ru/vacancy/107283521?hhtmFrom=employer_vacancies\nВопросы: Расскажи про опыт,\nПисала ли свои компоненты или используете готовые библиотеки\nРасскажи про WebSockets\nОсобенность websockets\nАналоги WebSockets\nЧто такое побитовые операторы.\nЧто такое утечка данных\nКакие бом надо очищать(scroll, resize, websockets, setTimeout, seinterval)\nПисала ли кастомные хуки\nКак проверяется что соединение не...",
        "full_content": "2024-10-20 17:01:45\n Ada500 -> 2071074234:\n- Северсталь\n- Тех интервью\n- ЗП: 250 тыс\n- Вакансия: https://hh.ru/vacancy/107283521?hhtmFrom=employer_vacancies\nВопросы: Расскажи про опыт,\nПисала ли свои компоненты или используете готовые библиотеки\nРасскажи про WebSockets\nОсобенность websockets\nАналоги WebSockets\nЧто такое побитовые операторы.\nЧто такое утечка данных\nКакие бом надо очищать(scroll, resize, websockets, setTimeout, seinterval)\nПисала ли кастомные хуки\nКак проверяется что соединение не прервано в websockets(ping pong, heatbeat)\nРаботала ли с gitlub\nОтрефакторить код(ссылка не сохранилась)"
      },
      {
        "timestamp": "2024-10-07 04:24:34",
        "content": "2024-10-07 04:24:34\n Stepan Ch. -> 2071074234:\nСеверсталь \n- Вакансия: https://t.me/c/2071074234/616/69890\n- Зп: 250к\n- Вопросы: \nВсе из платины ничего нового\n1. \nfunction delay(s = 2) {\n  const pause = s * 1000;\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log(`Пауза была ${s} секунд`);\n      resolve();\n    }, pause);\n  });\n}\n\n2. \nPromise.reject(\"a\")\n  .catch((p) => p + \"b\") // Перехватывает \"a\", возвращает \"ab\"\n  .catch((p) => p + \"c\") // Не вызывается\n  .then((p) => ...",
        "full_content": "2024-10-07 04:24:34\n Stepan Ch. -> 2071074234:\nСеверсталь \n- Вакансия: https://t.me/c/2071074234/616/69890\n- Зп: 250к\n- Вопросы: \nВсе из платины ничего нового\n1. \nfunction delay(s = 2) {\n  const pause = s * 1000;\n  return new Promise(resolve => {\n    setTimeout(() => {\n      console.log(`Пауза была ${s} секунд`);\n      resolve();\n    }, pause);\n  });\n}\n\n2. \nPromise.reject(\"a\")\n  .catch((p) => p + \"b\") // Перехватывает \"a\", возвращает \"ab\"\n  .catch((p) => p + \"c\") // Не вызывается\n  .then((p) => p + \"d\")  // Получает \"ab\", возвращает \"abd\"\n  .then((p) => console.log(p)); // Логирует \"abd\"\n3. \nconst categorizedProducts = products.reduce((acc, product) => {\n  const { category, name } = product;\n  if (!acc[category]) {\n    acc[category] = [];\n  }\n  acc[category].push(name);\n  return acc;\n}, {});\n4. \ntype TypeCond<T, U> = T extends never ? {a: U} : {b: U};\n5. \ntype Foo = {\n    name: 'foo';\n    id: number;\n}\n\ntype Bar = {\n    name: 'bar';\n    id: number;\n}\n\ntype All = Foo | Bar;\n\ntype ExtractTypeByName<T, G> = T extends {name: G} ? T : never;\n\ntype ExtractedType = ExtractTypeByName<All, 'foo'>; // Результирующий тип - Foo\n6. \nconst PrivateRoute = ({ isAuthenticated }) => {\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\n};\n7. \nconst PrivateRoute = ({ element, ...rest }) => {\n  const { isAuth } = useContext(AuthContext);\n  return isAuth ? element : <Navigate to=\"/login\" />;\n};"
      },
      {
        "timestamp": "2024-09-24 16:44:11",
        "content": "2024-09-24 16:44:11\n Александр -> 2071074234:\nКомпания: Северсталь - 3 этап \nВакансия: HR сама написала \nЗП: 250к\nВопросы:\n- Расскажи про самые сложные задачи\n- Расскажи чем нравится заниматься, а чем нет\n- Расскажи про свой опыт \n- Расскажи как обучаешься, где берешь инфу\n- Расскажи про свои команды\n\nОбщение было очень лайтовым, классно пообщались, не было ощущения что на собесе, как будто с другом созвонился",
        "full_content": "2024-09-24 16:44:11\n Александр -> 2071074234:\nКомпания: Северсталь - 3 этап \nВакансия: HR сама написала \nЗП: 250к\nВопросы:\n- Расскажи про самые сложные задачи\n- Расскажи чем нравится заниматься, а чем нет\n- Расскажи про свой опыт \n- Расскажи как обучаешься, где берешь инфу\n- Расскажи про свои команды\n\nОбщение было очень лайтовым, классно пообщались, не было ощущения что на собесе, как будто с другом созвонился"
      },
      {
        "timestamp": "2024-09-24 16:08:08",
        "content": "2024-09-24 16:08:08\n Александр -> 2071074234:\nКомпания: Северсталь\nЗП: 250к\nВакансия: HR сама написала на почту \nВопросы: не было \nЗадачи: была очень большая тудушка с кучей различного болерплейта и надо было отрефакторить, ничего не записал и стрим не вел потому что сразу попросили показать экран полностью",
        "full_content": "2024-09-24 16:08:08\n Александр -> 2071074234:\nКомпания: Северсталь\nЗП: 250к\nВакансия: HR сама написала на почту \nВопросы: не было \nЗадачи: была очень большая тудушка с кучей различного болерплейта и надо было отрефакторить, ничего не записал и стрим не вел потому что сразу попросили показать экран полностью"
      },
      {
        "timestamp": "2024-09-23 18:08:59",
        "content": "2024-09-23 18:08:59\n Александр -> 2071074234:\n- Компания: Северсталь \n- Зп: 250\n- Вакансия: https://spb.hh.ru/vacancy/104130786\n- вопросы: не все помню, в основном были про eventloop, промисы, так же много спрашивали про реакт хуки\n- задача: https://codesandbox.io/p/sandbox/react-contextapi-task-fix-after-inteview-forked-73drny?file=%2Fsrc%2Fcomponents%2Ftodo-list%2Ftodo-list.jsx%3A31%2C5",
        "full_content": "2024-09-23 18:08:59\n Александр -> 2071074234:\n- Компания: Северсталь \n- Зп: 250\n- Вакансия: https://spb.hh.ru/vacancy/104130786\n- вопросы: не все помню, в основном были про eventloop, промисы, так же много спрашивали про реакт хуки\n- задача: https://codesandbox.io/p/sandbox/react-contextapi-task-fix-after-inteview-forked-73drny?file=%2Fsrc%2Fcomponents%2Ftodo-list%2Ftodo-list.jsx%3A31%2C5"
      },
      {
        "timestamp": "2024-07-24 08:35:39",
        "content": "2024-07-24 08:35:39\n AM -> 2071074234:\n— Северсталь \n— hr сама написала\n— ЗП: 250к.\n— Уже проходил собес в другую команду (потом оказалось что команду набрали и мне предложили другой проект, но нужно пройти собес заново) из за этого по теории не гоняли, сразу задачи\n— Задачи:\n\nasync function parsingNewItems() {\n  try {\n    // Получить список предметов из сервера\n    const serverItems = await getServerItemsApi();\n\n    // Получить список предметов из стима\n    const steamItems = await getSteamItem...",
        "full_content": "2024-07-24 08:35:39\n AM -> 2071074234:\n— Северсталь \n— hr сама написала\n— ЗП: 250к.\n— Уже проходил собес в другую команду (потом оказалось что команду набрали и мне предложили другой проект, но нужно пройти собес заново) из за этого по теории не гоняли, сразу задачи\n— Задачи:\n\nasync function parsingNewItems() {\n  try {\n    // Получить список предметов из сервера\n    const serverItems = await getServerItemsApi();\n\n    // Получить список предметов из стима\n    const steamItems = await getSteamItemsApi();\n\n    // Преобразовать массив serverItems в объект для более быстрого поиска\n    const serverItemsObj = serverItems.reduce((acc, item) => {\n      acc[item] = true;\n      return acc;\n    }, {});\n\n\n    // Отфильтровать список предметов из стима, оставив предметы, которых нет на сервере\n    const newItems = steamItems.filter(item => !serverItemsObj[item]);\n\n    // Добавлять новые предметы на сервер, одновременно не более двух предметов\n    for (let i = 0; i < newItems.length; i += 2) {\n      const itemsToSave = newItems.slice(i, i + 2);\n      await Promise.all(itemsToSave.map(item => saveItemToServerApi(item)));\n    }\n\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\nconst mockServerItems = [\"Aquamarine Revenge (Minimal Wear)\", \"Case Hardened (Field-Tested)\", \"Jet Set (Well-Worn)\", \"AUG | Daedalus (Field-Tested)\"];\nconst mockSteamItems = [\"Aquamarine Revenge (Minimal Wear)\", \"Case Hardened (Field-Tested)\", \"Jet Set (Well-Worn)\", \"AUG | Daedalus (Field-Tested)\", \"R8 Revolver | Crazy 8 (Factory New)\"];\n\nfunction saveItemToServerApi(value) {\n   return new Promise(resolve => {\n      setTimeout(() => resolve(value), 1000)\n   })\n}\n\nfunction getServerItemsApi() {\n   return new Promise(resolve => {\n      setTimeout(() => resolve(mockServerItems), 1000)\n   })\n}\n\nfunction getSteamItemsApi() {\n   return new Promise(resolve => {\n      setTimeout(() => resolve(mockSteamItems), 1000)\n   })\n}\n\n/** Задача\n - Получить список предметов из сервера getServerItemsApi();\n - Получить список предметов из стима getSteamItemsApi();\n - Отфильтровать список предметов стима оставив предметы, которых нет на сервере\n - Добавить новые предметы на сервер saveItemToServerApi (Одновременно можно добавлять не более 2 предметов*);\n * Дополнительно\n\n */\n \n async function parsingNewItems() {\n    try {\n        const serverItems = await getServerItemsApi();\n        const steamItems = await getSteamItemsApi();\n        \n        \n        const newServerItemsObj = serverItems.reduce((acc, item) => {\n            acc[item] = true;\n            \n            return acc;\n        }, {});\n        \n        \n        const newItems = steamItems.filter((item) => {\n            return !newServerItemsObj[item];\n        })\n        \n        \n        for(let i = 0; i < newItems.length; i += 2) {\n            const items = newItems.slice(i, i + 2);\n            \n            await Promise.all(items.map(item => saveItemToServerApi(item)));\n        }\n        \n    } catch(error) {\n        console.error(error);\n    }\n}\n\ntype Mapping<T> = {\n  [K in keyof T]?: (value: T[K]) => string;\n};"
      },
      {
        "timestamp": "2024-07-15 00:52:02",
        "content": "2024-07-15 00:52:02\n AM -> 2071074234:\n— Северсталь\n— Ссылка: https://ekaterinburg.hh.ru/vacancy/102210908?hhtmFrom=employer_vacancies\n— ЗП: сказал от 200, дали 250\n— Результат: ✅ успех\n\n— Вопросы:\n1) Расскажи про себя, свой опыт, почему увольняешься?\n2) Расскажи про мемоизацию, её минусы?\n3) Условия ререндера компонента?\n4) Алгоритм сравнения DOM, какая сложность?\n5) Что ты выберешь из 3 вариантов: деньги, интересные задачи, отличный коллектив? (можно выбрать 2 варианта)\n6) В каком направлении ...",
        "full_content": "2024-07-15 00:52:02\n AM -> 2071074234:\n— Северсталь\n— Ссылка: https://ekaterinburg.hh.ru/vacancy/102210908?hhtmFrom=employer_vacancies\n— ЗП: сказал от 200, дали 250\n— Результат: ✅ успех\n\n— Вопросы:\n1) Расскажи про себя, свой опыт, почему увольняешься?\n2) Расскажи про мемоизацию, её минусы?\n3) Условия ререндера компонента?\n4) Алгоритм сравнения DOM, какая сложность?\n5) Что ты выберешь из 3 вариантов: деньги, интересные задачи, отличный коллектив? (можно выбрать 2 варианта)\n6) В каком направлении дальше хочешь развиваться? \n7) Откуда берешь новые знания, что последнее интересное читал?\n8) Расскажи про жизненный цикл событий? \n9) На какой фазе отрабатывает handle? \n10) Есть ли способ чтобы событие отрабатывала на погружение?\n11) Как откатить merge request в публичной ветке?\n12) git revert и git reset их отличие? \n13) Работал ли с CI/CD? \n14) Использовали ли вы ErrorBoundary? Представь, что нужно написать свой ErrorBoundary, какие механизмы ты бы использовал? \n15) Можно ли на основе прототипного наследования реализовать множественное наследование? \n16) Как в Event Loop решаются макро- и микро- процессы, очередность макро- и микро- задач?\n17) Как подвесить событийный цикл? \n\n— Задачи: \nЗадача 1 - получить таблицу по ролям + totalWeight\nconst goods = [ \n  {id: 'ab', name: 'Имя-01', type: 'сталь', weight: 1 }, \n  {id: 'bc',name: 'Имя-02', type: 'чугун', weight: 2 }, \n  {id: 'cd',name: 'Имя-03', type: 'cтaль', weight: 3 }, \n  {id: 'de',name: 'Имя-04', type: 'чугун', weight: 4 }, \n  {id: 'ef',name: 'Имя-05', type: 'чугун', weight: 5 }, \n  {id: 'fg',name: 'Имя-03', type: 'cтaль', weight: '4'}, \n];\n\n// Задача: получить таблицу по ролям + totalWeight:\n// {\n//    'сталь': {ids: ['ab', 'cd', 'fg'], totalWeight: 8},\n//    'чугун': {ids: ['bc', 'de', 'ef'], totalWeight: 11},\n// }\n\n// решение\nconst result = goods.reduce((acc, item) => {\n  // Преобразуем weight в число\n  const weight = +item.weight;\n\n  if (!acc[item.type]) {\n    acc[item.type] = { ids: [], totalWeight: 0 };\n  }\n\n  acc[item.type].ids.push(item.id);\n  acc[item.type].totalWeight += weight;\n\n  return acc;\n}, {});\n\n\nЗадача 2 - рефакторинг кода \nimport React, { useState, useEffect } from \"react\";\n\n// имитация запроса к серверу, просто получим число асинхронно\nconst fetchRandomNumber = () => \n  Math.random() < 0.5\n    ? Promise.resolve(Math.random())\n    : Promise.reject(new Error('Ошибка запроса.'));\n\n\nconst App = () => {\n  const [number, setNumber] = useState();\n  const [scroll, setScroll] = useState();\n\n  useEffect(async () => {\n      setNumber(await fetchRandomNumber());\n      \n      window.addEventListener(\"scroll\", () => setScroll(window.scrollY));\n  \n      return () => window.removeEventListener(\"scroll\", \n        () => setScroll(window.scrollY)\n      );\n  });\n  \n  return (\n    <div>\n        <div>Number: {number}</div> // добавить проверку на number\n        <div>Scroll: {scroll}</div>\n    </div>\n  )\n}\n\nДополнение к 2 задаче - написать useThrottle\nimport { useState, useEffect, useRef } from 'react';\n\nfunction useThrottle(value, limit) {\n  const [throttledValue, setThrottledValue] = useState(value);\n  const lastRan = useRef(Date.now());\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      if (Date.now() - lastRan.current >= limit) {\n        setThrottledValue(value);\n        lastRan.current = Date.now();\n      }\n    }, limit - (Date.now() - lastRan.current));\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, limit]);\n\n  return throttledValue;\n}\n\nexport default useThrottle;"
      },
      {
        "timestamp": "2024-06-28 13:48:47",
        "content": "2024-06-28 13:48:47\n Vildan Khabibov -> 2071074234:\n- Северсталь\n- https://ufa.hh.ru/vacancy/102674624\n- ЗП: от 250к\n- Задачи: Было так же онлайн тестирование, не все рассуждения и ответы в записи видео верны.",
        "full_content": "2024-06-28 13:48:47\n Vildan Khabibov -> 2071074234:\n- Северсталь\n- https://ufa.hh.ru/vacancy/102674624\n- ЗП: от 250к\n- Задачи: Было так же онлайн тестирование, не все рассуждения и ответы в записи видео верны."
      },
      {
        "timestamp": "2024-06-28 13:46:45",
        "content": "2024-06-28 13:46:45\n Vildan Khabibov -> 2071074234:\n- Северсталь\n- https://ufa.hh.ru/vacancy/102674624\n- ЗП: от 250к\n- Задачи: Было так же онлайн тестирование, не все рассуждения и ответы в записи видео верны.\n\n/** Задача\n - Получить список предметов из сервера getServerItemsApi();\n - Получить список предметов из стима getSteamItemsApi();\n - Отфильтровать список предметов стима оставив предметы, которых нет на сервере\n - Добавить новые предметы на сервер saveItemToServerApi (Одновременно можно д...",
        "full_content": "2024-06-28 13:46:45\n Vildan Khabibov -> 2071074234:\n- Северсталь\n- https://ufa.hh.ru/vacancy/102674624\n- ЗП: от 250к\n- Задачи: Было так же онлайн тестирование, не все рассуждения и ответы в записи видео верны.\n\n/** Задача\n - Получить список предметов из сервера getServerItemsApi();\n - Получить список предметов из стима getSteamItemsApi();\n - Отфильтровать список предметов стима оставив предметы, которых нет на сервере\n - Добавить новые предметы на сервер saveItemToServerApi (Одновременно можно добавлять не более 2 предметов*);\n * Дополнительно\n\n */\n\nconst mockServerItems = [\"Aquamarine Revenge (Minimal Wear)\", \"Case Hardened (Field-Tested)\", \"Jet Set (Well-Worn)\", \"AUG | Daedalus (Field-Tested)\"];\nconst mockSteamItems = [\"Aquamarine Revenge (Minimal Wear)\", \"Case Hardened (Field-Tested)\", \"Jet Set (Well-Worn)\", \"AUG | Daedalus (Field-Tested)\", \"R8 Revolver | Crazy 8 (Factory New)\"];\n\nfunction saveItemToServerApi(value) {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(value), 1000)\n  })\n}\n\nfunction getServerItemsApi() {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(mockServerItems), 1000)\n  })\n}\n\nfunction getSteamItemsApi() {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(mockSteamItems), 1000)\n  })\n}\n\nasync function parsingNewItems() {\n  try {\n    // Получить список предметов из сервера\n    const serverItems = await getServerItemsApi();\n    console.log('Server Items:', serverItems);\n\n    // Получить список предметов из стима\n    const steamItems = await getSteamItemsApi();\n    console.log('Steam Items:', steamItems);\n\n    // Отфильтровать список предметов из стима, оставив предметы, которых нет на сервере\n    const newItems = steamItems.filter(item => !serverItems.includes(item));\n    console.log('New Items:', newItems);\n\n    // Добавлять новые предметы на сервер, одновременно не более двух предметов\n    for (let i = 0; i < newItems.length; i += 2) {\n      const itemsToSave = newItems.slice(i, i + 2);\n      console.log('Saving Items:', itemsToSave);\n      await Promise.all(itemsToSave.map(item => saveItemToServerApi(item)));\n      console.log('Saved Items:', itemsToSave);\n    }\n\n  } catch (error) {\n    console.error('Error:', error);\n  }\n}\n\n// типизировать функцию getDetails\n\nconst mappingValues = {\n   name: (value: string) => Name: ${value},\n}\n\ntype User = {\n   name: string;\n   age: number;\n}\n\nconst user: User = {\n  name: 'Oleg',\n  age: 22,\n}\n\nfunction getDetails(obj, mapping) {\n   const result: Array<{ key: string; value: unknown }> = []\n   for (const key in obj) {\n      const value = obj[key]\n      const fn = mapping[key]\n      result.push({ key, value: fn ? fn(value) : value })\n   }\n   return result\n}\n\nconst details = getDetails(user, mappingValues)\n\n//решение\ntype Mapping<T> = {\n  [K in keyof T]?: (value: T[K]) => unknown;\n};\n\nfunction getDetails<T extends object>(obj: T, mapping: Mapping<T>)"
      },
      {
        "timestamp": "2024-05-31 10:59:59",
        "content": "2024-05-31 10:59:59\n Daniil Max -> 2071074234:\n— Название компании: Северсталь\n— Ссылка на вакансию: ссылки нет, на hh спамил отклики \n— ЗП: 250К. Но позиция была senior разраба, поэтому зп можно выше просить \n— Задачи: теория + практика \n\nВидео на ютуб: https://youtu.be/cf4HaOdt9SU?si=YCPdpLFzB_7uR0lW\n\n— Успех собеса: ❌\n— Фитбек о собесе от HR: \nАнна, если можно направь ему лично от меня фидбек, что не взяли потому, что проекты большие, сложные. Много бизнес-логики. Много взаимодействия с други...",
        "full_content": "2024-05-31 10:59:59\n Daniil Max -> 2071074234:\n— Название компании: Северсталь\n— Ссылка на вакансию: ссылки нет, на hh спамил отклики \n— ЗП: 250К. Но позиция была senior разраба, поэтому зп можно выше просить \n— Задачи: теория + практика \n\nВидео на ютуб: https://youtu.be/cf4HaOdt9SU?si=YCPdpLFzB_7uR0lW\n\n— Успех собеса: ❌\n— Фитбек о собесе от HR: \nАнна, если можно направь ему лично от меня фидбек, что не взяли потому, что проекты большие, сложные. Много бизнес-логики. Много взаимодействия с другими программистами и со смежниками. Дедлайны жесткие. Т.е. у нас в моменте мало времени на эксперименты в духе потянет/нет. На отсутствие вышки можно закрыть глаза, на большой опыт в годах тоже, реальный опыт нужен. Его pet-проектами не заменишь. Можно попробовать несколько месяцев поработать в ya, vk, mail и т.п. - это не так долго, зато опыт будет реальный!\n\n— Комментарий:🥇ШОУ-ВКАТУН Александр Волков! 😎"
      },
      {
        "timestamp": "2024-05-30 17:18:29",
        "content": "2024-05-30 17:18:29\n stil -> 2071074234:\nНазвание компании: Северсталь\nЗп: 270к\nЗадача:\nimport { useState, useEffect } from \"react\"\nimport _ from \"lodash\"\n\n// 1. Получить и вывести первые 10 постов, адрес:\n// https://dummyjson.com/posts?limit=${limit}&skip=${skip}\n// 2. Реализовать постраничный просмотр постов с помощью кнопок Prev / Next\n// 3. Вывести теги загруженных постов, одинаковые теги не должны повторяться\n// 4. При клике на тег реализовать фильтрацию загруженных постов по тегу\n// 5. Реа...",
        "full_content": "2024-05-30 17:18:29\n stil -> 2071074234:\nНазвание компании: Северсталь\nЗп: 270к\nЗадача:\nimport { useState, useEffect } from \"react\"\nimport _ from \"lodash\"\n\n// 1. Получить и вывести первые 10 постов, адрес:\n// https://dummyjson.com/posts?limit=${limit}&skip=${skip}\n// 2. Реализовать постраничный просмотр постов с помощью кнопок Prev / Next\n// 3. Вывести теги загруженных постов, одинаковые теги не должны повторяться\n// 4. При клике на тег реализовать фильтрацию загруженных постов по тегу\n// 5. Реализовать механизм поиска постов по введенному тексту, адресЖ\n// https://dummyjson.com/posts/search?q=${q}\n\nconst POST_LIMIT = 10\n\nconst fetchPosts = () => {}\n\n// const fetchPostsWithSearch = () => {}\n\nexport default function App() {\n  const [posts, setPosts] = useState<Post[]>([])\n\n  const tags = []\n\n  // Предыдущая / следующая страница\n  const handleNextClick = () => {}\n  const handlePrevClick = () => {}\n\n  // Тег\n  const handleTagClick = () => {}\n\n  // Поиск\n  // const handleSearchChange = () => {}\n\n  useEffect(() => {})\n\n  return (\n    <div className=\"App\">\n      <h1>Posts</h1>\n      {/** Постраничный просмотр */}\n      <div style={{ display: \"flex\", gap: 16 }}>\n        <button type=\"button\">Prev</button>\n        <button type=\"button\">Next</button>\n        <input />\n      </div>\n      {/** Теги */}\n      <div\n        style={{\n          marginBlock: 16,\n          paddingBlock: 16,\n          display: \"flex\",\n          gap: 16,\n          flexWrap: \"wrap\",\n          borderTop: \"1px solid black\",\n          borderBottom: \"1px solid black\",\n        }}\n      >\n        <button type=\"button\">reset</button>\n        {tags.map((tag) => (\n          <button type=\"button\" key={tag}>\n            {tag}\n          </button>\n        ))}\n      </div>\n      {/** Посты */}\n      <div>\n        {posts.map((post) => (\n          <PostCard {...post} key={post.id} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nconst PostCard = (props: Post) => {\n  const { tags, title, body } = props\n\n  return (\n    <div>\n      <h3>{title}</h3>\n      <p>{body}</p>\n      <p style={{ display: \"flex\", gap: 16 }}>\n        {tags.map((tag) => (\n          <small key={tag} style={{ border: \"1px solid\", padding: 5 }}>\n            {tag}\n          </small>\n        ))}\n      </p>\n    </div>\n  )\n}\n\ntype PostContainer = {\n  total: number\n  skip: number\n  limit: number\n  posts: Post[]\n}\n\ntype Post = {\n  id: number\n  title: string\n  body: string\n  userId: number\n  tags: string[]\n}"
      },
      {
        "timestamp": "2024-05-13 20:34:44",
        "content": "2024-05-13 20:34:44\n Aleksandr -> 2071074234:\nНазвание компании - Северсталь\nВакансия: https://hh.ru/vacancy/98263726?hhtmFromLabel=suitable_employer_vacancies&hhtmFrom=vacancy\nЗП: от 300 net запросил\nЗадачи: Немного теории, лайвкодинг \nЗапись: https://youtu.be/kypCKo833aU\nУспех: ✅ (принял оффер, на 320 net и премии 25% от годового)\nКомментарий от себя: Собес должен был идти полтора часа, а в итоге за 45-50 минут закончили (но им выделили в этот раз всего 60 минут), сперва поговорили про мой опы...",
        "full_content": "2024-05-13 20:34:44\n Aleksandr -> 2071074234:\nНазвание компании - Северсталь\nВакансия: https://hh.ru/vacancy/98263726?hhtmFromLabel=suitable_employer_vacancies&hhtmFrom=vacancy\nЗП: от 300 net запросил\nЗадачи: Немного теории, лайвкодинг \nЗапись: https://youtu.be/kypCKo833aU\nУспех: ✅ (принял оффер, на 320 net и премии 25% от годового)\nКомментарий от себя: Собес должен был идти полтора часа, а в итоге за 45-50 минут закончили (но им выделили в этот раз всего 60 минут), сперва поговорили про мой опыт, на записи поздно начал записывать, там я даже чуток потерялся, так как они тупо шли по резюме и у меня был пункт со 2 места работы, за который я вообще пояснить не мог, но отмазка, мол давно было - сработала ))\nА так тупо по резюме идут после твоего короткого рассказа и спрашивают по конкретным пунктам\n\nИ на собесе меня неслышно (("
      }
    ]
  },
  {
    "company": "IT-One",
    "count": 16,
    "records": [
      {
        "timestamp": "2025-06-27 05:33:02",
        "content": "2025-06-27 05:33:02\n Евгений -> 2071074234:\nКомпания IT ONE \nНа проект СБЕРа \nзп от 230\n\nпочти 2 часа лайвокодинга и между задачами спрашивал теорию\nВопросы:\n1. какая алгоритмическая сложность у первой задачи\n2. Какие есть функции\n3. Чем отличается var, let, const\n4. Temporal Dead Zone\n5. Области видимости\n6. Замыкание\n7. Какие способы хранения информации\n8. Eventloop\n9. requestIdleCallback\n10. Статические методы промисов\n11. Назвать Utility types\n12. unknown\n13. useState подробнее рассказать\n14...",
        "full_content": "2025-06-27 05:33:02\n Евгений -> 2071074234:\nКомпания IT ONE \nНа проект СБЕРа \nзп от 230\n\nпочти 2 часа лайвокодинга и между задачами спрашивал теорию\nВопросы:\n1. какая алгоритмическая сложность у первой задачи\n2. Какие есть функции\n3. Чем отличается var, let, const\n4. Temporal Dead Zone\n5. Области видимости\n6. Замыкание\n7. Какие способы хранения информации\n8. Eventloop\n9. requestIdleCallback\n10. Статические методы промисов\n11. Назвать Utility types\n12. unknown\n13. useState подробнее рассказать\n14. В чем разница между рендерингом и отрисовкой\n15. Отличие useEffect от useLayaotEffect\n16. lazy initialization\n17. функция очистки\n18. useRef\nЗадача 1:\nArray.prototype.findUnique = function () {\n    const mapa = new Map();\n    \n    this.forEach((el) => {\n        if (mapa.has(el)) {\n            mapa.set(el, mapa.get(el) + 1);\n        } else {\n            mapa.set(el, 1);\n        }\n    });\n    \n    const result = [];\n    mapa.forEach((count, key) => {\n        if (count === 1) result.push(key);\n    });\n    \n    return result;\n};\n\nconsole.log([10, 5, 10, 0, 6, 6, 7, 2, 9].findUnique()); // [5, 0, 7, 2]\nЗадача 2: написать функцию замыкания\nfunction func1() {\n    let a = 0;\n    return function() {\n        count++;\n        return count;\n    }\n}\n\nconst couter = func1();\nЗадача 3: сказать для чего это \n1. ?.\n2. ...\n3. ??\n4. &&=\n5. structuredClone(bar)\n6. someArray.at(0)\nЗадача 4: по мимо что выведет еще объяснить почему\nlet obj = { a: 1 };\nlet array = [obj];\nobj = { ...obj, b: 5 };\n\nconsole.log(obj); // { a: 1, b: 5 }\nconsole.log(array); // [{ a: 1 }]\nЗадача 5: евентлуп\nsetTimeout(() => {\n    console.log(\"timeOut\");\n}, 0);\n\nconsole.log(1);\n\nnew Promise(resolve => {\n    console.log(\"Promise\");\n    setTimeout(() => {\n        console.log(\"777\");\n        resolve();\n    }, 0);\n}).then(() => {\n    console.log(\"then1\");\n}).then(() => {\n    console.log(\"then2\");\n});\n\nconsole.log(4);\n\nsetTimeout(() => {\n    console.log(\"timeOut2\");\n}, 0);\n\n// 1 Promise 4 timeOut 777 then1 then2 timeOut2\nЗадача 6: что тут происходит и что будет в Result\ntype ExampleType = {\n    Field1: string;\n    Field2: string;\n    Field3: number;\n    Field4: boolean;\n};\n\ntype T1<S, T> = { [K in keyof S]: S[K] extends T ? K : never }[keyof S];\n\ntype Result = T1<ExampleType, string>;\nЗадача 7: типизировать\n \nconst X = { a: 1, b: 2, c: 3, d: 4 };\n\nfunction getProperty<T extends object, K extends keyof T>(obj: T, key: K): T[K] {\n    return obj[key];\n}\n\ngetProperty(X, 'a');\ngetProperty(X, '_m'); // Error: Type '\"_m\"' is not assignable to type '\"a\" | \"b\" | \"c\" | \"d\"'\nЗадача 8: подсветить ref \n// Почему хук usePrevious всегда возвращает предыдущее значение value, хотя внутри хука useEffect отрабатывает на каждое изменение value?\n\nimport React, { useState, useRef, useEffect } from \"react\";\n\nfunction usePrevious(value) {\n    const ref = useRef(value);\n\n    useEffect(() => {\n        ref.current = value;\n    }, [value]);\n\n    return ref.current;\n}\n\nconst Previous = () => {\n    const [count, setCount] = useState(0);\n    const previousCount = usePrevious(count);\n\n    return (\n        <>\n            <p>Current: {count}</p>\n            <p>Previous: {previousCount}</p>\n            <button onClick={() => setCount(prevCount => prevCount + 5)}>Random</button>\n        </>\n    );\n};\n\nexport default Previous;\nЗадача 9: выведет 2 1 3, объяснить почему \nimport React, { useState, useLayoutEffect, useEffect } from \"react\";\n\nconst Effects = () => {\n    const [count, setCount] = useState(0);\n\n    useLayoutEffect(() => console.log(\"each render 1\"));\n\n    console.log(\"each render 2\");\n\n    useEffect(() => console.log(\"each render 3\"));\n\n    return (\n        <>\n            <button onClick={() => setCount((prevProps) => ++prevProps)}>\n                Increment\n            </button>\n        </>\n    );\n};\n\nexport default Effects;\nЗадача 10:  lazy initialization"
      },
      {
        "timestamp": "2025-02-03 13:00:22",
        "content": "2025-02-03 13:00:22\n Сергей -> 2071074234:\nКомпания: IT-ONE\nВакансия: HR сама написала\nВопросы: \n- Расскажи про свой опыт кратко\n- Задачи очень похожи с https://t.me/c/2071074234/489/97674\n- Какие структуры данных знаешь\n- Задачи:\n\n// 1\nconst users = [\n  { id: 1, age: 20, isAdmin: false, name: 'Иван', city: 'Moscow', registred: false },\n  { id: 2, age: 30, isAdmin: false, name: 'Дима', city: 'Omsk', registred: false },\n  { id: 3, age: 20, isAdmin: true, name: 'Леха', city: 'Moscow', registred: t...",
        "full_content": "2025-02-03 13:00:22\n Сергей -> 2071074234:\nКомпания: IT-ONE\nВакансия: HR сама написала\nВопросы: \n- Расскажи про свой опыт кратко\n- Задачи очень похожи с https://t.me/c/2071074234/489/97674\n- Какие структуры данных знаешь\n- Задачи:\n\n// 1\nconst users = [\n  { id: 1, age: 20, isAdmin: false, name: 'Иван', city: 'Moscow', registred: false },\n  { id: 2, age: 30, isAdmin: false, name: 'Дима', city: 'Omsk', registred: false },\n  { id: 3, age: 20, isAdmin: true, name: 'Леха', city: 'Moscow', registred: true },\n  { id: 4, age: 20, isAdmin: false, name: 'Леха', city: 'Omsk', registred: false },\n  { id: 5, age: 30, isAdmin: false, name: 'Иван', city: 'Moscow', registred: true },\n  { id: 6, age: 30, isAdmin: false, name: 'Леха', city: 'Moscow', registred: true },\n  { id: 7, age: 20, isAdmin: true, name: 'Иван', city: 'Omsk', registred: true },\n]\n\n// Необоходимо преобразовать исходный массив в структуру,\n// где данные пользователя будут сгруппированы по одному из полей объекта user(кроме поля id)\n// Внутри сформированной группы должен лежить объект(или Map),\n// ключи в котором должно быть поле 'id'\n// а значения, объект из исходного массива с соответствующим полем \"id\"(не включая само поле id)\n// Один из варинатов результата (для поля age)\n\nconst result = {\n  20: {\n    1: { age: 20, isAdmin: false, name: 'Иван', city: 'Moscow', registred: false },\n    3: { age: 20, isAdmin: true, name: 'Леха', city: 'Moscow', registred: true },\n    4: { age: 20, isAdmin: false, name: 'Леха', city: 'Omsk', registred: false },\n    7: { age: 20, isAdmin: true, name: 'Иван', city: 'Omsk', registred: true },\n  },\n  30: {\n    2: { age: 30, isAdmin: false, name: 'Дима', city: 'Omsk', registred: false },\n    5: { age: 30, isAdmin: false, name: 'Иван', city: 'Moscow', registred: true },\n  },\n}\n\n// 2\n// Что выведется в консоли?\nfoo()\nfoo1()\n\nfunction foo() {\n  console.log('foo')\n}\n\nconst foo1 = function () {\n  console.log('foo1')\n}\n\n// 3\n// Что выведется в консоли?\nfunction makeCounter() {\n  let c = 1\n  return function () {\n    return c++\n  }\n}\n\nconst counter = makeCounter()\nconst counter2 = makeCounter()\n\nconsole.log(counter)\nconsole.log(counter2)\n\nconsole.log(counter)\nconsole.log(counter2)\n\n// 4\n// Что выведется в консоли?\nfoo()\n\nfunction foo() {\n  console.log(this)\n}\n\n// 5\n// Что выведется в консоли?\nconst a = {\n  name: 'Name',\n  log() {\n    const a = this\n    const inner = function () {\n      console.log(a.name)\n    }\n    inner()\n  },\n}\n\na.log()\n\n// 6\n// Что выведется в консоли?\nconst obj1 = {\n  name: 1,\n  foo: function () {\n    return this.name\n  },\n}\n\nconst obj2 = {\n  name: 2,\n  bar: obj1.foo,\n}\n\nconsole.log(obj2.bar())\n\n// 7\n// Что выведется в консоли?\nlet obj = { a: 1 }\nlet array = [obj]\nobj = { ...obj, b: 5 }\nconsole.log(obj)\nconsole.log(array)\n\n// 8\n// Что выведется в консоли?\nimport { useEffect, useLayoutEffect, useState } from 'react'\n\nconst Effects = () => {\n  const [count, setCount] = useState(0)\n\n  useLayoutEffect(() => console.log('each render 1'), [])\n  console.log('each render 2')\n  useEffect(() => console.log('each render 3'), [])\n\n  return (\n    <>\n      <button onClick={() => setCount((prevProps) => ++prevProps)}>Increment</button>\n    </>\n  )\n}\n\n// 9\n// Зарефакторить компонент\nimport React from 'react'\n\nconst SomeElement = ({ hasData }) => {\n  if (hasData) {\n    return (\n      <div>\n        <DataElement />\n        <SomeImportantElement />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {hasData && <DataElement />}\n      <SomeImportantElement />\n    </div>\n  )\n}\n\n// 10\n// Что будет отображено в блоке с \"Значание: \", если быстро передвинуть ползунок в конечное положение?\n// Доп вопрос: А если потом быстро вернуть его обратно?\n\nimport React, { useState } from 'react'\n\nfunction InputComponent() {\n  const [value, setValue] = useState('1')\n  const onChnage = (event) => {\n    setValue(event.target.value)\n    setTimeout(() => {\n      setValue(value)\n    }, 2000)\n  }\n\n  return (\n    <>\n      <input min=\"1\" max=\"4\" step=\"1\" value={value} type=\"range\" onChange={onChnage} />\n      <br />\n      Значение: {value}\n    </>\n  )\n}"
      },
      {
        "timestamp": "2025-01-30 07:07:25",
        "content": "2025-01-30 07:07:25\n Сергей -> 2071074234:\nКомпания: IT-ONE\nВакансия: hr писала\nВопросы: \n- Задачи очень похожи с  https://t.me/c/2071074234/489/97674\n- Какие структуры данных знаешь\n- Задачи:\n//Имеется исходный массив из объектов пользователей\nconst users = [\n    { id: 1, age: 20, isAdmin: false, name: \"Иван\", city: \"Moscow\", registred: false },\n    { id: 2, age: 30, isAdmin: false, name: \"Дима\", city: \"Omsk\", registred: false },\n    { id: 3, age: 20, isAdmin: true, name: \"Леха\", city: \"Moscow\"...",
        "full_content": "2025-01-30 07:07:25\n Сергей -> 2071074234:\nКомпания: IT-ONE\nВакансия: hr писала\nВопросы: \n- Задачи очень похожи с  https://t.me/c/2071074234/489/97674\n- Какие структуры данных знаешь\n- Задачи:\n//Имеется исходный массив из объектов пользователей\nconst users = [\n    { id: 1, age: 20, isAdmin: false, name: \"Иван\", city: \"Moscow\", registred: false },\n    { id: 2, age: 30, isAdmin: false, name: \"Дима\", city: \"Omsk\", registred: false },\n    { id: 3, age: 20, isAdmin: true, name: \"Леха\", city: \"Moscow\", registred: true },\n    { id: 4, age: 20, isAdmin: false, name: \"Леха\", city: \"Omsk\", registred: false },\n    { id: 5, age: 30, isAdmin: false, name: \"Иван\", city: \"Moscow\", registred: true },\n    { id: 6, age: 30, isAdmin: false, name: \"Леха\", city: \"Moscow\", registred: true },\n    { id: 7, age: 20, isAdmin: true, name: \"Дима\", city: \"Omsk\", registred: true },\n];\n// Необходимо перобразовать исходный массив в структуру,\n// где данные пользователя будут сгруппированы по одному из полей объекта user (кроме поля id)\n// Внутри софрмированной группы должен лежать объект (или Map),\n// ключами в котором должно быть поле \"id\"\n// а значением, объект из исходного массива с соответствующим полем \"id\" (не включая само поле id)\n// Один из вариантов результата (для поля age)\nconst result = {\n    20: {\n        1: { age: 20, isAdmin: false, name: \"Иван\", city: \"Moscow\", registred: false },\n        3: { age: 20, isAdmin: true, name: \"Леха\", city: \"Moscow\", registred: true },\n        4: { age: 20, isAdmin: false, name: \"Леха\", city: \"Omsk\", registred: false },\n        7: { age: 20, isAdmin: true, name: \"Дима\", city: \"Omsk\", registred: true }\n    },\n    30: {\n        2: { age: 30, isAdmin: false, name: \"Дима\", city: \"Omsk\", registred: false },\n        5: { age: 30, isAdmin: false, name: \"Иван\", city: \"Moscow\", registred: true }\n    }\n}\n\n\nfoo();\nfoo1();\n\nfunction foo() {\n    console.log(\"foo\");\n}\n\nconst foo1 = function () {\n    console.log(\"foo1\");\n};\n\n\n\nfunction makeCounter() {\n    let c = 1;\n    return function () {\n        return c++;\n    }\n}\n\nconst counter = makeCounter();\nconst counter2 = makeCounter();\n\nconsole.log(counter());\nconsole.log(counter2());\n\nconsole.log(counter());\nconsole.log(counter2());\n\n\nfoo();\n\nfunction foo() {\n    console.log(this);\n}\n\n\nconst a = {\n    name: \"Name\",\n    log() {\n        const a = this\n        const inner = function () {\n            console.log(a.name);\n        };\n\n        inner();\n    },\n};\n\na.log();\n\n\nconst obj1 = {\n    name: 1,\n    foo: function () {\n        return this.name;\n    },\n};\n\nconst obj2 = {\n    name: 2,\n    bar: obj1.foo,\n};\n\nconsole.log(obj2.bar());\n\n\nlet obj = { a: 1 };\nlet array = [obj];\nobj = { ...obj, b: 5 };\nconsole.log(obj);\nconsole.log(array);\n\n\n\nimport { useEffect, useLayoutEffect, useState } from \"react\";\n\nconst Effects = () => {\n    const [count, setCount] = useState(0);\n\n    useLayoutEffect(() => console.log(\"each render 1\"), []);\n\n    console.log(\"each render 2\");\n\n    useEffect(() => console.log(\"each render 3\"), []);\n\n    return (\n        <>\n            <button onClick={() => setCount((prevProps) => ++prevProps)}>\n                Increment\n            </button>\n        </>\n    );\n};\n\nexport default Effects;"
      },
      {
        "timestamp": "2024-10-07 14:18:15",
        "content": "2024-10-07 14:18:15\n Михаил -> 2071074234:\nIT ONE\nвакансия - HR сама написала\nзп 200к",
        "full_content": "2024-10-07 14:18:15\n Михаил -> 2071074234:\nIT ONE\nвакансия - HR сама написала\nзп 200к"
      },
      {
        "timestamp": "2024-08-29 09:24:21",
        "content": "2024-08-29 09:24:21\n Руслан -> 2071074234:\nit one команда газпромбанка\n— зп: от 270к\n— вакансия: https://www.it-one.ru/vacancies/846ffa42488552e9b4d52dcd9dfd0ea2/\n— задачи:\nНа то, что выведется в консоли, как поведет себя код. + задачка на рендер дерева в таблице",
        "full_content": "2024-08-29 09:24:21\n Руслан -> 2071074234:\nit one команда газпромбанка\n— зп: от 270к\n— вакансия: https://www.it-one.ru/vacancies/846ffa42488552e9b4d52dcd9dfd0ea2/\n— задачи:\nНа то, что выведется в консоли, как поведет себя код. + задачка на рендер дерева в таблице"
      },
      {
        "timestamp": "2024-08-25 17:52:12",
        "content": "2024-08-25 17:52:12\n Руслан -> 2071074234:\nIt one собес в команду\n—  вакансия: https://www.it-one.ru/vacancies/759d0d4ccd651559a6f2decbfd6c5f60/\n— зп: от 270к\n— Задачи:\n1. Написать кастомный flat метод и протипизировать\n— Вопросы:\n1. про опыт и интересные задачи\n2. map, foreach, reduce - для чего\n3. Nan\n4. Про промисы\n5. эвент луп",
        "full_content": "2024-08-25 17:52:12\n Руслан -> 2071074234:\nIt one собес в команду\n—  вакансия: https://www.it-one.ru/vacancies/759d0d4ccd651559a6f2decbfd6c5f60/\n— зп: от 270к\n— Задачи:\n1. Написать кастомный flat метод и протипизировать\n— Вопросы:\n1. про опыт и интересные задачи\n2. map, foreach, reduce - для чего\n3. Nan\n4. Про промисы\n5. эвент луп"
      },
      {
        "timestamp": "2024-08-17 18:12:57",
        "content": "2024-08-17 18:12:57\n Руслан -> 2071074234:\nit one 2й этап тех собес \n— зп: от 270к\n— вакансия: https://www.it-one.ru/vacancies/7b335475edf612a10306cd80ca5bcd7c/\n— задачи:\nfunction x() {}\nconsole.log(typeof x); // ?\nconsole.log(x instanceof Object); // ?\n\nvar str1 = String(123);\nvar str2 = new String(123);\n\nconsole.log(typeof str1 === typeof str2); // ?\nconsole.log(str1 === str2); // ?\nconsole.log(str1 === String(123)); // ?\nconsole.log(str2 === new String(123)); // ?\nconsole.log(str1 === 123); /...",
        "full_content": "2024-08-17 18:12:57\n Руслан -> 2071074234:\nit one 2й этап тех собес \n— зп: от 270к\n— вакансия: https://www.it-one.ru/vacancies/7b335475edf612a10306cd80ca5bcd7c/\n— задачи:\nfunction x() {}\nconsole.log(typeof x); // ?\nconsole.log(x instanceof Object); // ?\n\nvar str1 = String(123);\nvar str2 = new String(123);\n\nconsole.log(typeof str1 === typeof str2); // ?\nconsole.log(str1 === str2); // ?\nconsole.log(str1 === String(123)); // ?\nconsole.log(str2 === new String(123)); // ?\nconsole.log(str1 === 123); // ?\nconsole.log(str1 === \"123\"); // ?\n\nconsole.log(str1 == str2); // ?\nconsole.log(str1 == 123); // ?\nconsole.log(str1 == \"123\"); // ?\n\nvar y = [];\nconsole.log(typeof y); // ?\n\nvar str3 = \"123\";\nstr3[0] = \"2\";\nconsole.log(str3); // ?\n\n\nvar a = 1 + 2 + 3 + \"\";\nvar b = \"\" + 1 + 2 + 3;\n\nconsole.log(a); // ?\nconsole.log(b); // ?\n\nvar c = \"123x\";\nconsole.log(Number(c)); // ?\nconsole.log(parseInt(c, 10)); // ?\nconsole.log(+c); // ?\nconsole.log(typeof +c); // ?\n\nconsole.log(Boolean(String(false))); // ?\n\nvar d = [];\nconsole.log(d ? 1 : 2); // ?\n\n\nvar i = 1;\nvar b = {};\n\n(function() {\n    i++;\n    b.j = 1;\n})();\n\nconsole.log(i, b); // ?\n\n(function(i, b) {\n    i++;\n    b.k = 1;\n})(i, b);\n\nconsole.log(i, b); // ?\n\nvar p = x =>\n    new Promise(resolve =>\n        setTimeout(() => resolve(x), 1000)\n    );\n\nPromise.resolve(1)\n    .then(x =>\n        p(x)\n    )\n    .then(v => console.log(v));\n\nPromise.resolve(2)\n    .then(x => {\n        p(x)\n    })\n    .then(v => console.log(v));\n\nconsole.log(3);\n\n// что за что отвечает\ntype Func<T, K extends keyof T> = (a: T, b: K) => T[K];\n\ntype T1 = ReturnType<any>;\ntype T2 = Parameters<any>;\ntype T3 = Omit<any, any>;\ntype T4 = Pick<any, any>;\ntype T5 = Partial<any>;\ntype T6 = Required<any>;\n\n// рефакторинг\n\nfunction Main() {\n  const [counter, setCounter] = useState(0);\n\n  const onClick = useCallback(() => {\n    setCounter(counter + 1);\n  }, [setCounter]);\n\n  return (\n    <div>\n      <button onClick={onClick}>{counter}</button>\n    </div>\n  );\n}\n\n\n\nfunction findPairWithSum(target, arr) {\n    let mapArr = new Map();\n    for (let i = 0; i < arr.length; i++) {\n        let num = arr[i];\n        let complited = target - num;\n        if (mapArr.has(complited)) {\n            return [mapArr.get(complited), i]; // Возвращаем индексы\n        }\n        mapArr.set(num, i);\n    }\n    return null; // Если пара не найдена\n}\n\n// Пример использования:\nconst arr = [1, 2, 3, 4, 5];\nconst target = 6;\nconsole.log(findPairWithSum(target, arr)); // Вывод: [1, 3] (индексы чисел 2 и 4)"
      },
      {
        "timestamp": "2024-08-17 17:49:24",
        "content": "2024-08-17 17:49:24\n Руслан -> 2071074234:\nit one 2й этап сбер проект\n— зп: от 270к\n— вакансия: https://www.it-one.ru/vacancies/fc5e2a23182adfedf09a030c0ca1eced/\n— вопросы: \n1. Как выбирал бы что добавить в проект zustand или redux\n2. атрибут key\n3. type vs interface\n4. как был построен процесс разработки компонентов в ui kit\n5. когда твое решение не принимали либо предлагали другое - как разруливали\n6. про процессы в предудущем месте",
        "full_content": "2024-08-17 17:49:24\n Руслан -> 2071074234:\nit one 2й этап сбер проект\n— зп: от 270к\n— вакансия: https://www.it-one.ru/vacancies/fc5e2a23182adfedf09a030c0ca1eced/\n— вопросы: \n1. Как выбирал бы что добавить в проект zustand или redux\n2. атрибут key\n3. type vs interface\n4. как был построен процесс разработки компонентов в ui kit\n5. когда твое решение не принимали либо предлагали другое - как разруливали\n6. про процессы в предудущем месте"
      },
      {
        "timestamp": "2024-07-25 13:49:08",
        "content": "2024-07-25 13:49:08\n Artem D -> 2071074234:\nIT One, тех собес\nзп: ушёл от ответа\nвакансия: сами написали\n\nлайвкодинг:\n1.\n// написать функцию, либо последовательность операций, которая вернет результат следующих условий\n// результат есть строка из сконкатенированных value элементов коллекции, расположенных в обратном порядке символов,\n// результат собирается только из не содержащих записей и конкатенируется в порядке возрастания order\n// результат не содержит одинаковых символов\n\nconst input = [\n...",
        "full_content": "2024-07-25 13:49:08\n Artem D -> 2071074234:\nIT One, тех собес\nзп: ушёл от ответа\nвакансия: сами написали\n\nлайвкодинг:\n1.\n// написать функцию, либо последовательность операций, которая вернет результат следующих условий\n// результат есть строка из сконкатенированных value элементов коллекции, расположенных в обратном порядке символов,\n// результат собирается только из не содержащих записей и конкатенируется в порядке возрастания order\n// результат не содержит одинаковых символов\n\nconst input = [\n  { value: 'abcd', order: 4, expired: false },\n  { value: 'qwex', order: 2, expired: true },\n  { value: 'lyxz', order: 1, expired: false },\n  { value: 'abx2', order: 3, expired: false },\n];\n\nconst Func = function (input) {\n  res = input.sort((item, prev) => item.order - prev.order).reduce((res, item) => {\n    if (item.expired)\n      return res;\n    return res + item.value.split(\"\").reverse().join(\"\");\n  }, \"\")\n  \n  const unique = new Set(res);\n  return Array.from(unique).join('');\n}\n\n\n2.\nsetTimeout(()=>{\n    console.log(\"timeOut\");\n}, 0);\n\nconsole.log(1);\n\nnew Promise(resolve=>{\n    console.log(\"Promise\");\n    setTimeout(()=>{\n        console.log(\"777\");\n        resolve();\n    },0);\n}).then(()=>{\n    console.log(\"then1\");\n}).then(()=>{\n    console.log(\"then2\");\n})\n\nconsole.log(4);\n\nsetTimeout(()=>{\n    console.log(\"timeOut2\");\n}, 0);\n\n// 1\n// Promise\n// 4\n// timeOut\n// 777\n// then1\n// then2\n// timeOut2\n\n\nдальше у меня chatGPT отказывается конвертировать скрин в текст\n\n- Успех: жду\n- Комментарий: Первый собес через сообщество, увы, помогатор подключился только через 40 минут после начала собеса, потому я вообще забыл, что кто-то помогать может и отвечал полностью сам\n\nзапись собеса: https://drive.google.com/file/d/14jfI9SEqjAohy1VmRJTnjNi2auVw9ZzH/view?usp=sharing"
      },
      {
        "timestamp": "2024-07-15 21:19:31",
        "content": "2024-07-15 21:19:31\n Ramis Mubarakov -> 2071074234:\n— IT_ONE, финальный собес на проект Газпромбанка: ГПБ_РКДК (ККП)\n— Ссылка на вакансию: hr написал и скинул ссылку https://www.it-one.ru/vacancies/3c849a30f3e123980434ae4cdffa8426/\n— Озвученная мной ЗП: 250k+\n— Вопросы:\n\n1) Рассказ про опыт в прошлой компании.\n2) «Количество входов в систему возросло». А кто вам выдавал эту информацию?\n3) На фронте замеряли метрики?\n4) Писали ли тесты на проекте? Какие виды тестов писали?\n5) Где хранили бизнес-л...",
        "full_content": "2024-07-15 21:19:31\n Ramis Mubarakov -> 2071074234:\n— IT_ONE, финальный собес на проект Газпромбанка: ГПБ_РКДК (ККП)\n— Ссылка на вакансию: hr написал и скинул ссылку https://www.it-one.ru/vacancies/3c849a30f3e123980434ae4cdffa8426/\n— Озвученная мной ЗП: 250k+\n— Вопросы:\n\n1) Рассказ про опыт в прошлой компании.\n2) «Количество входов в систему возросло». А кто вам выдавал эту информацию?\n3) На фронте замеряли метрики?\n4) Писали ли тесты на проекте? Какие виды тестов писали?\n5) Где хранили бизнес-логику: в сторах или в компонентах?\n6) В useSelector была какая-то логика? Юзали reselect?\n7) Зачем приняли решение писать ui-kit? Чем не устроил Material UI, Ant Design?\n8) Закончили ли вы проекты, о которых рассказал? На каком этапе сейчас они?\n9) Как из одной ветки в другую пару комитов перекинуть?\n10) Чем отличается pooling от long pooling?\n11) Какие знаешь хуки для оптимизации?\n12) Зачем нужен useCallback?\n13) Что происходит в функции конструкторе?\n14) Ты говорил про конструктор класса, а что будет если тело конструктора пустое?\n\n— Задачи:\n1) Исправить ошибки в компоненте:\nconst data = [\n    {\n        key: 0,\n        name: \"Контрагент А\",\n        summ: 123456789\n    },\n    {\n        key: 1,\n        name: \"Контрагент Б\",\n        summ: 987654321\n    },\n    {\n        key: 3,\n        name: \"Контрагент В\",\n        summ: 123456789\n    }\n];\n\nconst api = () => new Promise(resolve => setTimeout(() => resolve(data), 1000));\n\n/////\n\nconst List = () => {\n    const [data, setData] = useState(null);\n\n    useEffect(async () => {\n        const response = await api();\n        setData(response);\n    })\n\n    return (\n        <h1>Список контрагентов</h1>\n        <ul>\n            {data.map((item) => (<li>{item.name}: {item.summ}</li>))}\n        </ul>\n    )\n}\n2) \n// что выведется в консоль?\n\nfunction Pet(name) {\n    this._name = name;\n    this.getName = () => this._name;\n}\n\nconst cat = new Pet('Tom');\nconsole.log(cat.getName()) // Tom\n\nconst { getName } = cat;\nconsole.log(getName()) // Tom\n3) \n// написать класс Singleton, который при вызове возвращает ссылку на один и тот же объект\n\n// const a = new Singleton();\n// const b = new Singleton();\n// a === b ---> true\n4) \n// Реализовать кастомный хук useThrottle(value, delay) ---> throttledValue\n— Успех собеса: ❌"
      },
      {
        "timestamp": "2024-05-22 07:57:00",
        "content": "2024-05-22 07:57:00\n Руслан -> 2071074234:\n— Название компании: It one(первичный собес)\n— Вакансия: написал на почту с их сайта\n— Успех: ✅\n— Задачи(по именам скринов):\n1. Нужно делать через Map, т.к. может быть группировка по registered, тогда в качестве ключей будет  булеан тип.\n2-6: что будет в консоли и почему\n7: что будет лежать в results на 13 строке и почему.\n9: поправить чтобы работало\n10: ответ на 9\n12. протипизировать\n13: сделать OptionalRecord type, чтобы можно было опционально добавля...",
        "full_content": "2024-05-22 07:57:00\n Руслан -> 2071074234:\n— Название компании: It one(первичный собес)\n— Вакансия: написал на почту с их сайта\n— Успех: ✅\n— Задачи(по именам скринов):\n1. Нужно делать через Map, т.к. может быть группировка по registered, тогда в качестве ключей будет  булеан тип.\n2-6: что будет в консоли и почему\n7: что будет лежать в results на 13 строке и почему.\n9: поправить чтобы работало\n10: ответ на 9\n12. протипизировать\n13: сделать OptionalRecord type, чтобы можно было опционально добавлять поля в объект\n14: найти ошибку\n15: оптимизировать ререндер, сделать так, чтобы SubElement ререндерился, когда в него прокидывается четный count\n16: объяснить механизм работы хука"
      },
      {
        "timestamp": "2024-03-27 16:44:57",
        "content": "2024-03-27 16:44:57\n Kirill N -> 2071074234:\nДополнение с 11.03 - 27.03\nКомпания: Minevrasoft 11.03 \nhttps://youtu.be/c2TDgGjVxcQ \n \nКомпания: про Айти ресурс от 12.03 \nhttps://youtu.be/tBrVrALlflE \n \nКомпания: КиберЛаб 12.03 \nhttps://youtu.be/Ayov7AAZ9zA \nКомпания: 16.03 \nhttps://youtu.be/g8awopYcbh4   \n \nКомпания: IT ONE 18 03 \nhttps://youtu.be/opoqwpzVRVo \n \nКомпания: Эвотека 19 03 \nhttps://youtu.be/pq64Y2e0-CQ \n \nКомпания: BAUM от 20 03 \nhttps://youtu.be/YR2G2tRzgJo \n \nКомпания: Сбер Техноло...",
        "full_content": "2024-03-27 16:44:57\n Kirill N -> 2071074234:\nДополнение с 11.03 - 27.03\nКомпания: Minevrasoft 11.03 \nhttps://youtu.be/c2TDgGjVxcQ \n \nКомпания: про Айти ресурс от 12.03 \nhttps://youtu.be/tBrVrALlflE \n \nКомпания: КиберЛаб 12.03 \nhttps://youtu.be/Ayov7AAZ9zA \nКомпания: 16.03 \nhttps://youtu.be/g8awopYcbh4   \n \nКомпания: IT ONE 18 03 \nhttps://youtu.be/opoqwpzVRVo \n \nКомпания: Эвотека 19 03 \nhttps://youtu.be/pq64Y2e0-CQ \n \nКомпания: BAUM от 20 03 \nhttps://youtu.be/YR2G2tRzgJo \n \nКомпания: Сбер Технологии 22 03 \nhttps://youtu.be/dm34hydCIIA \n \nКомпания: KTS 22 03 \nhttps://youtu.be/Nt177GK9LAE \n \nКомпания: KTS 27 03 \nhttps://youtu.be/QDi0AkDwwgw \n \nКомпания: Лемма 27 03 \nhttps://youtu.be/grfpac_XgvA"
      },
      {
        "timestamp": "2024-03-22 11:51:38",
        "content": "2024-03-22 11:51:38\n SQwerty -> 2071074234:\n#первый_собес\n\n- Название компании: IT-One\n- Ссылка на вакансию: hr сама написала\n- ЗП: Просил от 200k\n- Задачи: теория + лайвкодинг\n- Запись техсобеса: https://youtu.be/opoqwpzVRVo\n- Успех собеса: ❌  (Не удивительно)",
        "full_content": "2024-03-22 11:51:38\n SQwerty -> 2071074234:\n#первый_собес\n\n- Название компании: IT-One\n- Ссылка на вакансию: hr сама написала\n- ЗП: Просил от 200k\n- Задачи: теория + лайвкодинг\n- Запись техсобеса: https://youtu.be/opoqwpzVRVo\n- Успех собеса: ❌  (Не удивительно)"
      },
      {
        "timestamp": "2024-03-09 13:32:31",
        "content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nh...",
        "full_content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nhttps://youtu.be/X4T0G_n1jqo \n \nКомпания ВТБ 06.03  \nhttps://youtu.be/3wfKfjohkw0 \n \nКомпания: Сбер технологии 07.03 \nhttps://youtu.be/gt2RcGbzloQ \n \nКомпания: Иннотех 07.03 \nhttps://youtu.be/soujRRxtnC8 \nКомпания: IT ONE 07.03 \nhttps://youtu.be/RaZ-iZOJgDM"
      },
      {
        "timestamp": "2024-03-07 18:44:00",
        "content": "2024-03-07 18:44:00\n Евгений Чип -> 2071074234:\nНазвание компании: IT One -> ГПБ\nвакансия: рефералка\nзп:300-350\nзадачи: теория + лайфкод\nЗапись: https://youtu.be/RaZ-iZOJgDM?si=TznvzXGPHQnwlAtL\n\nуспех собеса: ?\nфидбек: ?",
        "full_content": "2024-03-07 18:44:00\n Евгений Чип -> 2071074234:\nНазвание компании: IT One -> ГПБ\nвакансия: рефералка\nзп:300-350\nзадачи: теория + лайфкод\nЗапись: https://youtu.be/RaZ-iZOJgDM?si=TznvzXGPHQnwlAtL\n\nуспех собеса: ?\nфидбек: ?"
      },
      {
        "timestamp": "2024-01-22 12:05:02",
        "content": "2024-01-22 12:05:02\n Aleksei -> 2071074234:\n-Название компании: It-one\n-Ссылка на вакансию: hr сама написала\n-Зп:  от 340 \n-Задачи\n1)\nconst input = [\n  {\n    name: \"Кроссовки Nike Air Jordan 1\",\n    paid: false,\n    cost: 70,\n    date: \"2023-06-24T17:25:00.000Z\",\n  },\n  {\n    name: \"Кроссовки Nike Air Force 1\",\n    paid: true,\n    cost: 79,\n    date: \"2023-06-21T11:22:00.000Z\",\n  },\n  {\n    name: \"Кроссовки Nike JORDAN\",\n    paid: false,\n    cost: 86,\n    date: \"2023-06-21T22:15:00.000Z\",\n  },\n ...",
        "full_content": "2024-01-22 12:05:02\n Aleksei -> 2071074234:\n-Название компании: It-one\n-Ссылка на вакансию: hr сама написала\n-Зп:  от 340 \n-Задачи\n1)\nconst input = [\n  {\n    name: \"Кроссовки Nike Air Jordan 1\",\n    paid: false,\n    cost: 70,\n    date: \"2023-06-24T17:25:00.000Z\",\n  },\n  {\n    name: \"Кроссовки Nike Air Force 1\",\n    paid: true,\n    cost: 79,\n    date: \"2023-06-21T11:22:00.000Z\",\n  },\n  {\n    name: \"Кроссовки Nike JORDAN\",\n    paid: false,\n    cost: 86,\n    date: \"2023-06-21T22:15:00.000Z\",\n  },\n  {\n    name: \"Кроссовки Nike Dunk\",\n    paid: true,\n    cost: 68,\n    date: \"2023-06-24T14:54:00.000Z\",\n  },\n  {\n    name: \"Кеды PUMA RBD Game\",\n    paid: true,\n    cost: 71,\n    date: \"2023-06-24T16:35:00.000Z\",\n  },\n  {\n    name: \"Кеды adidas Sportswear GRAND COURT BASE\",\n    paid: true,\n    cost: 90,\n    date: \"2023-06-21T11:27:00.000Z\",\n  },\n  {\n    name: \"Слипоны Columbia\",\n    paid: true,\n    cost: 36,\n    date: \"2023-06-23T00:22:00.000Z\",\n  },\n];\n\n// в нашем распоряжении имеются данные выше\n// мы работаем над экраном истории покупок пользователя\n\n// написать функцию, которая подготовит данные для вывода историю покупок в виде списка:\n// с группировкой по дате\n// с отображением только оплаченных/неоплаченных позиций\n// и отображением итоговой суммы потраченных денег\n2)\nsetTimeout(()=>{\n    console.log(\"timeOut\");\n}, 0)\n \nconsole.log(1);\n \nnew Promise(resolve=>{\n    console.log(\"Promise\");\n    setTimeout(()=>{\n        console.log(\"777\");\n        resolve()\n    },0)\n}).then(()=>{\n    console.log(\"then1\");\n}).then(()=>{\n    console.log(\"then2\");\n})\n \nconsole.log(4);\n \nsetTimeout(()=>{\n    console.log(\"timeOut2\");\n},0)\n\n1\nPromise\n4\ntimeOut\n777\nthen1\nthen2\ntimeOut2\n3)\nзадача на дженерики (есть только решение)\nfunction getProp<T extends object, K extends keyof T>(o: T, p: K): p is K {\n    return p in o;\n}\n\nconst x = {a: 1, b: 2, c: 3};\nconst x100 = {x: 1};\n\nconsole.log(getProp(x, 'a'));     // true\nconsole.log(getProp(x, 'o'));     // false\n\n4) рассказать какие ошибки в коде и оптимизировать\nfunction Clicker() {\n  const [clicks, setClicks] = useState(0);\n \n  const onClick = () => {\n    setTimeout(() => {\n      setClicks(prevClick => prevClick + 1);\n    }, 2000);\n  };\n \n  return (\n    <>\n      {clicks}\n      <button onClick={onClick}>\n         Increment\n      </button>\n    </>\n  );\n}\n5) аналогично с 4 задачей\nconst heavyFunc = (count)=>{\n    \n};\nconst LazyInit = (props)=>{\n    const [count, setCount] = useState(heavyFunc(props.count));\n    return (\n        <> \n            {count}\n            <button onClick={()=>setCount((prevProps)=>++prevProps)}>\n              Increment\n            </button>\n        </>\n    )\n}\n6) задача на консоль логи\nconst Effects = ()=>{\n  const [count, setCount] = useState(0);\n  useLayoutEffect(()=> console.log(\"each render 1\"));\n  console.log(\"each render 2\");\n  useEffect(()=> console.log(\"each render 3\"));\n  return (\n      <>\n          <button onClick={()=>setCount((prevProps)=>++prevProps)}>\n            Increment\n          </button>\n      </>\n  )\n}\n7) написать код так чтоб SubComponent рендерился лишь при четных числах (через мемо)\nconst ParentElement = ()=>{\n  const [count, setCount] = useState(0)\n  const increment = () => setCount((prevProps) => ++prevProps);\n  return(\n    <>\n      Parent: {count}  <br/>\n      <SubElement clicker={increment} count={count}/>\n  </>)\n}\n \nconst SubElement = ({clicker, count})=>{\n  return (\n    <>\n      Sub: {count} <br/>\n      <button onClick={clicker}>Increment</button>\n    </>)\n}\nБыло много вопросов на теорию и кругозор про Тс, особенно утилити типы и Map охотно спрашивал, про промисы были вопросы. порой нестандартные вопросы но интервьювер подводил в нужное русло если начинал копать не туда.\n-Успех собеса - ?\n-Фитбек о собесе: ?"
      }
    ]
  }
