{
    "company": "Сбер",
    "count": 117,
    "records": [
      {
        "timestamp": "2025-07-18 15:03:59",
        "content": "2025-07-18 15:03:59\n Игорь -> 2071074234:\niFellow в СБЕР\nВакансия: сама написала\nЗП: 280\n\n1) Расскажи про себя + парочка вопросов по резюме\n1.1) Вижу в резюме что писал свой UI kit самописный или на чем то? Ant или MUI использовал?\n1.2) Вижу опыт с Effector, Redux и пр что можешь сказать по ним?\n1.3) Что используешь для кэширования? (useQuery, RTK Query)\n1.4) Вижу опыт с CSS-in-Js что скажешь? Как еще стили писал?\n2) Какие значения знаешь у display? \n3) rem vs em\n4) Как центрировать элемент по в...",
        "full_content": "2025-07-18 15:03:59\n Игорь -> 2071074234:\niFellow в СБЕР\nВакансия: сама написала\nЗП: 280\n\n1) Расскажи про себя + парочка вопросов по резюме\n1.1) Вижу в резюме что писал свой UI kit самописный или на чем то? Ant или MUI использовал?\n1.2) Вижу опыт с Effector, Redux и пр что можешь сказать по ним?\n1.3) Что используешь для кэширования? (useQuery, RTK Query)\n1.4) Вижу опыт с CSS-in-Js что скажешь? Как еще стили писал?\n2) Какие значения знаешь у display? \n3) rem vs em\n4) Как центрировать элемент по вертикали?\n5) Какие способы организации асинхронности знаешь в JS?\n6) Отличие type и interface\n7) Отличие enum и const enum + кейсы использования\n8) Что такое React? Плюсы?\n9) Способы оптимизации? (глубоко не копал)\n10) Для чего нужны ключи?\n11) merge или rebase юзаете?\n\nЗадача 1\n(function() {\n    var a = b = 3;\n})();\nconsole.log(typeof a);\nconsole.log(typeof b);\nЗадача 2 \n'use strict'\n\nconst obj = {\n  i: 10\n  b: () => {\n    console.log(this.i, this)\n  }\n  c: function() {\n    console.log(this.i, this)\n  }\n}\n\nobj.b (undefined, {})\nobj.c (10, obj)\nЗадача 3\nfunction fibonacci(n) {\n  // Обрабатываем базовые случаи:\n  // f(1) = 0, f(2) = 1\n  if (n <= 1) return 0;\n  if (n === 2) return 1;\n  // prev — предыдущее число (f(1))\n  // curr — текущее число (f(2))\n  let prev = 0;\n  let curr = 1;\n  // Начинаем с f(3) и идём до f(n)\n  for (let i = 3; i <= n; i++) {\n    // Вычисляем следующее число Фибоначчи\n    let next = prev + curr;\n\n    // Сдвигаем значения вперёд:\n    // текущее становится предыдущим, а новое — текущим\n    prev = curr;\n    curr = next;\n  }\n  // После завершения цикла curr содержит f(n)\n  return curr;\n}\n\nconsole.log(fibonacci(5)); // 3"
      },
      {
        "timestamp": "2025-07-16 16:47:40",
        "content": "2025-07-16 16:47:40\n Роман -> 2071074234:\nКомпания: Bell integrator(Сбер)\nВопросы:\n-Рассказать о проекте \n-Какой был состав команды\n-Как проводили код-ревью\n-На какой грейд себя оцениваешь\n-Почему увольняешься\n-Методы копирования объектов\nЗадачки:\nЧто выведет в консоль:\nconst a = { prop1: { prop2: \"test2\" } };\nconst b = { ...a };\na.prop1.prop2 = \"test3\";\nconsole.log(b.prop1.prop2); // Выведет: \"test3\"\nlet firstObj = { name: 'Hello' };\n\nlet secondObj = firstObj;\n\nfirstObj = { name: 'Bye' };\n\ncons...",
        "full_content": "2025-07-16 16:47:40\n Роман -> 2071074234:\nКомпания: Bell integrator(Сбер)\nВопросы:\n-Рассказать о проекте \n-Какой был состав команды\n-Как проводили код-ревью\n-На какой грейд себя оцениваешь\n-Почему увольняешься\n-Методы копирования объектов\nЗадачки:\nЧто выведет в консоль:\nconst a = { prop1: { prop2: \"test2\" } };\nconst b = { ...a };\na.prop1.prop2 = \"test3\";\nconsole.log(b.prop1.prop2); // Выведет: \"test3\"\nlet firstObj = { name: 'Hello' };\n\nlet secondObj = firstObj;\n\nfirstObj = { name: 'Bye' };\n\nconsole.log(secondObj.name); // Выведет: 'Hello'\nsetTimeout(() => console.log(1), 0);\n\nnew Promise((resolve) => {\n    console.log(2);\n    resolve(3);\n})\n    .then((res) => console.log(res)) \n    .then((res) => {\n        setTimeout(() => {\n            console.log(res); \n        }, 0);\n    })\n    .then(() => {\n        throw new Error(\"error\"); // \n        console.log(5); \n    })\n    .catch(() => console.log(6)) \n    .then(() => console.log(7)) \n    .finally(() => console.log(8)); \n\nconsole.log(9);\n\n//2 9 3 6 7 8 1 undefined\nНаписать тип someName и написать наиболее оптимальную проверку\ntype ID = string;\n\ninterface Picture {\n    size: number;\n    name: string;\n}\n\ninterface Props {\n    pictures: Record<ID, Picture>;\n    id: string;\n}\n\nconst someName:... = ({ pictures, id }) => Object.entries(pictures)\n        .find(picture => picture[0] === id) !== undefined;\n    \n    return <>{/* ... */}</>;\n};\n\n// const hasPicture: boolean = pictures.hasOwnProperty(id) (Попросил правильно обозвать переменную)\nНаписать функцию reverseString, без использования arr.reverse\nfunction reverseString(str) {\n  let reversed = '';\n  for (let i = str.length - 1; i >= 0; i--) {\n    reversed += str[i];\n  }\n  return reversed;\n}\nНу и дописать реверс для предложения\nfunction reverseWords(sentence) {\n    return sentence.split(' ').map(word => reverseString(word)).join(' ');\n}"
      },
      {
        "timestamp": "2025-07-16 10:13:19",
        "content": "2025-07-16 10:13:19\n Евгений -> 2071074234:\nКомпания iFellow\nПроект: Сбер финансы\nЗП: 230\n\nТимлид не пришел , в итоге был один разраб который не знает на какой именно проект, спросил про опыт\nВопросы: \n1.Есть боль на проекте, 20 тыс объктов приходят их нельзя разбить на части они взаимосвязаны, загрузка долгая, что с этим делать ? \n2. С чем бы хотел поработать\n3. Есть ли офферы\n4. На что ориентируешься при выборе оффера? \nДальше просто общались на разные темы",
        "full_content": "2025-07-16 10:13:19\n Евгений -> 2071074234:\nКомпания iFellow\nПроект: Сбер финансы\nЗП: 230\n\nТимлид не пришел , в итоге был один разраб который не знает на какой именно проект, спросил про опыт\nВопросы: \n1.Есть боль на проекте, 20 тыс объктов приходят их нельзя разбить на части они взаимосвязаны, загрузка долгая, что с этим делать ? \n2. С чем бы хотел поработать\n3. Есть ли офферы\n4. На что ориентируешься при выборе оффера? \nДальше просто общались на разные темы"
      },
      {
        "timestamp": "2025-07-14 06:39:43",
        "content": "2025-07-14 06:39:43\n Kirichelli -> 2071074234:\nКомпания: Сбер\nПроект: Пульс\nРассказать немного про опыт вопросы:\n﻿﻿﻿1. Вводим url что происходит\n﻿﻿﻿2. Если сайт где то на территории другой страны и помешате ли нам открыть страницу(сказал что мы можем использовать днс дружеских стран для того чтобы зайти на сайт)\n﻿﻿﻿3. Рассказать про работу CORS\n﻿﻿﻿4. Нравится ли заниматься версткой?\n﻿﻿﻿5. Flex vs grid когда что использовать\n﻿﻿﻿6. Как сделать разную тему у сайта? Через чистый css\n﻿﻿﻿﻿7. Что наход...",
        "full_content": "2025-07-14 06:39:43\n Kirichelli -> 2071074234:\nКомпания: Сбер\nПроект: Пульс\nРассказать немного про опыт вопросы:\n﻿﻿﻿1. Вводим url что происходит\n﻿﻿﻿2. Если сайт где то на территории другой страны и помешате ли нам открыть страницу(сказал что мы можем использовать днс дружеских стран для того чтобы зайти на сайт)\n﻿﻿﻿3. Рассказать про работу CORS\n﻿﻿﻿4. Нравится ли заниматься версткой?\n﻿﻿﻿5. Flex vs grid когда что использовать\n﻿﻿﻿6. Как сделать разную тему у сайта? Через чистый css\n﻿﻿﻿﻿7. Что находится внутри type DependencyList =\nReadonlyArray<unknown>\n﻿﻿﻿﻿8. Для чего нужен never и void?\n﻿﻿﻿﻿9. Чем отличается стрелочная функция от обычной?\n﻿﻿﻿﻿10. fn.bind(this1) .bind (this2) что будет?(вопрос про bind)\n﻿﻿﻿﻿11. arrowFn.apply(this, []) что будет?\n﻿﻿﻿﻿12. Как можно сделать запрос к серверу?\n﻿﻿﻿﻿13. Как мы можем отслеживать ошибку в промисах?\n﻿﻿﻿﻿14. Как отработает then и catch в каждом случае?\n\nthen().then().catch()\nthen.catch().then()\ncatch().then().then()\n\n15. ﻿﻿﻿﻿Как отловить в async|await в try\\catch?\n﻿﻿﻿﻿16. Если обернуть в блок try код из пункта 17, поймает ли тогда catch из try\\catch ? Почему отловит?\n﻿﻿﻿﻿17. Что такое чистая функция?\n﻿﻿﻿﻿18. let a = 1; ()=>{a =1 ; return 1} это чистая функция?\n﻿﻿﻿﻿19. Кто быстрее отрендерит кнопку реакт или ванильный js ?\n﻿﻿﻿﻿20. Для чего нужно мемоизация? какие методы знаешь и что сделали в реакт 19 для мемоизации?\nЗадача 1:\n\nconst p = new Promise((resolve) => {\n  resolve('');\n});\n\np.then(() => {\n  p.then(() => console.log('A'));\n  console.log('C');\n});\n\np.then(() => console.log('B'));\n\nОтвет: С B A\n\nЗадача 2:\n\n//Сгенерировать массив из 10 элементов, где каждый элемент это случайное число (целое) от 0 до 10. Найти сколько пар чисел из этого массива дают в сумме 10;\n\nfunction randomTen(){\n  const arr = Array.from({length:10},() => Math.floor(Math.random() * 11))\n  const target = 10\n  let count = 0;\n  const template = {}\n  \n  for(const num of arr){\n    const completed = target - num;\n   \n    if(template[completed]){\n      count += template[completed]\n    }\n    template[num] = (template[num] || 0) + 1\n  }\n  console.log('Текущий массив: ', arr)\n   console.log('Количество пар: ', count)\n  return count\n}\n\nrandomTen()"
      },
      {
        "timestamp": "2025-07-10 12:24:07",
        "content": "2025-07-10 12:24:07\n Евгений -> 2071074234:\nКомпания: Сбер\nПроект: HR платформа\nЗнакомство с командой\n\nРасскажи про свой опыт. \nВопросы: \n1) Почему уволился?\n2) Какой видишь свою команду? \n3) Назови 3 своих плюс и 3 минуса\n4) Как решаешь конфликты\n5) Что будешь делать если с бэкенда не нравятся как данные приходят?\n6) Если у вас спор с бекендером как будешь решать ? \n7) Что не нравится в людях? \n8) Что будешь делать данные еще не готовы но задачу надо делать? \n9) Как вы выбирал архитектуру, стек...",
        "full_content": "2025-07-10 12:24:07\n Евгений -> 2071074234:\nКомпания: Сбер\nПроект: HR платформа\nЗнакомство с командой\n\nРасскажи про свой опыт. \nВопросы: \n1) Почему уволился?\n2) Какой видишь свою команду? \n3) Назови 3 своих плюс и 3 минуса\n4) Как решаешь конфликты\n5) Что будешь делать если с бэкенда не нравятся как данные приходят?\n6) Если у вас спор с бекендером как будешь решать ? \n7) Что не нравится в людях? \n8) Что будешь делать данные еще не готовы но задачу надо делать? \n9) Как вы выбирал архитектуру, стек? \n10) Чем занимался, где работал до разработки ? \n11) Какое хобби? \nПотом вопросы к ним"
      },
      {
        "timestamp": "2025-07-10 08:27:58",
        "content": "2025-07-10 08:27:58\n Sentry -> 2071074234:\nСбер Девайс ФИНАЛ\nзп: 250+ \n\nПолтора часа рассказа про опыт, очень долго копались по всем технологиям.\n\nОбщие вопросы:\n\nНастройка ci/ci\nНаписание тестов\nКак решаешь конфликтные ситуации",
        "full_content": "2025-07-10 08:27:58\n Sentry -> 2071074234:\nСбер Девайс ФИНАЛ\nзп: 250+ \n\nПолтора часа рассказа про опыт, очень долго копались по всем технологиям.\n\nОбщие вопросы:\n\nНастройка ci/ci\nНаписание тестов\nКак решаешь конфликтные ситуации"
      },
      {
        "timestamp": "2025-07-09 17:05:42",
        "content": "2025-07-09 17:05:42\n Daniil Daniil -> 2071074234:\nКомпания: Сбербанк SberCraft\nРасскажи о себе\nВопросы по резюме\nТеория:\n1. Как ставились задачки(путь от бизнеса до того, как выкатили в прод)\n2. На что обращаешь внимание при ревью\n3. Какие самые сложные задачки делал\n4. Почему FSD и с какими трудностями столкнулись\n5. Какие тесты писали и что использовали\n6. С какими state manager работал? Какой ты считаешь наиболее оптимальнее?\n7. Делал ли ты адаптивный дизайн и что использовал?\n8. С каким преп...",
        "full_content": "2025-07-09 17:05:42\n Daniil Daniil -> 2071074234:\nКомпания: Сбербанк SberCraft\nРасскажи о себе\nВопросы по резюме\nТеория:\n1. Как ставились задачки(путь от бизнеса до того, как выкатили в прод)\n2. На что обращаешь внимание при ревью\n3. Какие самые сложные задачки делал\n4. Почему FSD и с какими трудностями столкнулись\n5. Какие тесты писали и что использовали\n6. С какими state manager работал? Какой ты считаешь наиболее оптимальнее?\n7. Делал ли ты адаптивный дизайн и что использовал?\n8. С каким препроцессором работал\n9. Сравни css/ccs-in-js\n10. LocalStorage,Session storage, cookie, index db\n11. Подробно про cookie и его теги\n12. Как создать куку\n13. как удалить куку\nДальше дает задачи\nЗадачи и их решение\n\n// пример гласных: a, i, o, e, u, y\n const vowels = new Set(['a', 'i', 'o', 'e', 'u'])\n\nconst findVowelsLength = str => {\n // let count = 0 это решение можешь писать в самом начале как не самое лучше а после оптимизации то, что ниже\n \n  // for(let char of str) {\n  //   if(vowels.includes(char)) {\n  //     count++\n  //   }\n  // }\n  // return count\n\n  if(typeof str !== 'string') throw new Error('Нужна строка')\n  if(!str.length) return 0\n  return Array.from(str).filter(char.toLowerCase() => vowels.has(char)).length\n}\n \nexpect(findVowelsLength('Akksja')).toBe(2);\n\n\n\n---------------\n const API_URL = 'api/tada.json' \n  \nconst fetchData = () => {\n     return fetch(API_URL).then(res => res.json())\n}\n//  ['hello', 'again', 'hello', 'Just called to say hello']\n \n \nfunction OrderList() {\n  const [loading, setLoading] = useState(true)\n  const [errorMsg, setErrorMsg] = useState('')\n  const [data, setData] = useState([])\n  \n  useEffect(() => {\n    fetchData()\n      .then(setData)\n     .catch(e => setErrorMsg(e.message))\n     .finally(() => setLoading(false))\n  },[])\n  \n  if(loading) {\n    return <div>Loading ...</div>\n  }\n  if(errorMsg) {\n    return <div>Error:{errorMsg}</div>\n  }\n  \n    return (\n      <div>\n        ....\n        <ul key='first'>\n        {data.map( (name, idx) => <li key={idx}> {name}</li>)}\n        </ul>\n        .....\n        <ul key='second'>\n        {data.map( (name, idx) => <li key={idx}> {name}</li>)}\n        </ul>\n        </div>\n    )\n}\n        \n\n--------\n\n\n\n// Анаграмма - это слово, образованное путём перестановки букв, составляющих другое слово\n// Дан массив строк, необходимо вернуть массив с массивами анаграмм, которые встречаются в массиве строк более 1 раза\nprocess(['xyz','abc', 'bca', 'zyx', 'klm', 'cab', 'zxy', 'xzy']) // [['xyz', 'zyx', 'zxy', 'xzy'], ['abc','bca', 'cab']]\n\nfunction process (arr) {\n  const map = new Map()\n  \n  for(const word of arr) {\n    const key = word.toLowerCase().split('').sort().join('')\n    if(!map.has(key)) {\n      map.set(key,[])\n    }\n    map.get(key).push(word)\n  }\n  const result = Array.from(map.values()).filter(group => group.length>1)\n  \n  return result\n}"
      },
      {
        "timestamp": "2025-07-09 16:03:46",
        "content": "2025-07-09 16:03:46\n Евгений -> 2071074234:\nКомпания: iFellow\nПроект: Сбер финансы\nЗП: 230\n\nВопросы: \n1. Расскажи о последнем релевантном опыте. Сделать акцент на личных достижениях, знаковых задачах    \n2. Как у вас выстроен производственный процесс? Команда большая?    \n3. Unit тесты писали? Как писали? Доп: какие еще тесты писал? Какой опыт есть в тестировании?    \n4. Какие ожидания от нового места работы? Чтобы хотелось получить в итоге?    \n5. Какие способы организации CSS кода приходилось ...",
        "full_content": "2025-07-09 16:03:46\n Евгений -> 2071074234:\nКомпания: iFellow\nПроект: Сбер финансы\nЗП: 230\n\nВопросы: \n1. Расскажи о последнем релевантном опыте. Сделать акцент на личных достижениях, знаковых задачах    \n2. Как у вас выстроен производственный процесс? Команда большая?    \n3. Unit тесты писали? Как писали? Доп: какие еще тесты писал? Какой опыт есть в тестировании?    \n4. Какие ожидания от нового места работы? Чтобы хотелось получить в итоге?    \n5. Какие способы организации CSS кода приходилось использовать?    \n6. Какие значения знаешь у display?    \n7. Какие способы центрировать блок знаешь?    \n8. Какие способы организации асинхронности знаешь в JS?    \n9. Какие способы копирования объекта знаешь? Доп вопрос: При кастомном решении копирования объекта - как скопировать функцию?\n10. Чем типы отличаются от interface ? \n11. Расскажи про Декораторы в typescript\n12. Для чего нужен нужен key в react. Доп вопрос что будет если поменять местами элементы?\n13. В каких случаях нужно использовать мемоизацию и какие способы ты знаешь ? Доп вопрос как ты можешь понять что нужно ее применять? \n14. Что используете на проекте merge или rebase ? \n\nЗадача 1: \n<!--Как на CSS сделать фигуру: в квадрат должны быть вписаны четыре треугольника с общей вершиной в центре?-->\n\n<div class='container'>\n  <div class='triangle red'></div>\n  <div class='triangle green'></div>\n  <div class='triangle yellow'></div>\n</div>\n\n<style>\n   .container {\n  position: relative;\n  width: 200px; /* Настройте размер по необходимости */\n  height: 200px; /* Настройте размер по необходимости */\n}\n\n.triangle {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-style: solid;\n}\n\n.red {\n  border-width: 100px 100px 0 0;\n  border-color: red transparent transparent transparent;\n  top: 0;\n  left: 0;\n}\n\n.green {\n  border-width: 0 0 100px 100px;\n  border-color: transparent transparent green transparent;\n  bottom: 0;\n  right: 0;\n}\n\n.yellow {\n  border-width: 100px 0 0 100px;\n  border-color: transparent transparent transparent yellow;\n  bottom: 0;\n  left: 0;\n} \n    \n</style>\nЗадача 2: \n// Что будет в консоли? И почему именно так?\n(function() {\n    var a = b = 3;\n})();\nconsole.log(typeof a);\nconsole.log(typeof b);\nЗадача 3: \nsetTimeout(() => console.log('timeout'));\nPromise.resolve().then(() => console.log('promise'));\nwindow.requestAnimationFrame(() => console.log('requestAnimationFrame'));\nconsole.log('code');\nЗадача 4: \n//Что будет выведено? И почему именно так?\n//Доп вопрос: что будет с value, которая внутри функции?\n//Доп вопрос: как исправить? Какие есть способы?\n\nvar test = (function() {\n    var value = 1;\n    function setValue(newValue) {\n        value = newValue;\n    }\n    return {\n        value: value,\n        setValue: setValue,\n    };\n})();\n\ntest.setValue(2);\nconsole.log(test.value);\nЗадача 5: \nfunction fibonacci(n) {\n    if (n <= 0) return 0; // Первый элемент последовательности\n    if (n === 1) return 1; // Второй элемент последовательности\n\n    let prevNum = 0; // Предыдущее число\n    let currNum = 1; // Текущее число\n\n    for (let i = 2; i <= n; i++) {\n        const temp = prevNum + currNum; // Следующее число\n        prevNum = currNum; // Обновляем предыдущее число\n        currNum = temp; // Обновляем текущее число\n    }\n\n    return currNum; // тут начал сомневаться, что так возвращать, но проверяющий сказал: принимается, логика мышления ясна - комментировал устно решение\n}\n\n// Пример использования:\nconsole.log(fibonacci(5)); // Вывод: 3"
      },
      {
        "timestamp": "2025-07-07 15:15:06",
        "content": "2025-07-07 15:15:06\n Diyor -> 2071074234:\n1. Сбер Ассистент\n2. Сами написали (даже не сказали что за вака сначала)\n3. ЗП просил от 330\n\n4. Лайвкодинга не было\n1) Зачем нужен key\n2) useEffect кейсы использования\n3) script async defer\n4) Виртуализация, пагинация\n5) Lighthouse\n6) Что происходит после ввода url?\n7) Способ хранить данные\n8) Как сузить тип\n9) Зачем нужен .lock файл\n10) NGINX проблема с SPA",
        "full_content": "2025-07-07 15:15:06\n Diyor -> 2071074234:\n1. Сбер Ассистент\n2. Сами написали (даже не сказали что за вака сначала)\n3. ЗП просил от 330\n\n4. Лайвкодинга не было\n1) Зачем нужен key\n2) useEffect кейсы использования\n3) script async defer\n4) Виртуализация, пагинация\n5) Lighthouse\n6) Что происходит после ввода url?\n7) Способ хранить данные\n8) Как сузить тип\n9) Зачем нужен .lock файл\n10) NGINX проблема с SPA"
      },
      {
        "timestamp": "2025-07-07 14:56:32",
        "content": "2025-07-07 14:56:32\n Евгений -> 2071074234:\nКомпания: Сбер\nПроект: HR-платформа\nЗП: 230\n\nРассказать немного про опыт\nВопросы:\n1. вводим url что происходит\n2. если сайт где то в сша, помешате ли нам открыть страницу\n3. можем ли мы использовать днс дружеских стран для того чтобы зайти на сайт сша\n4. рассказать про работу CORS\n5. Нравится ли заниматься версткой? \n6. flex vs grid когда что использовать\n7. работал ли с ui kit? как был устроен на прошлой работе? \n8. Как сделать разную тему у сайта? Че...",
        "full_content": "2025-07-07 14:56:32\n Евгений -> 2071074234:\nКомпания: Сбер\nПроект: HR-платформа\nЗП: 230\n\nРассказать немного про опыт\nВопросы:\n1. вводим url что происходит\n2. если сайт где то в сша, помешате ли нам открыть страницу\n3. можем ли мы использовать днс дружеских стран для того чтобы зайти на сайт сша\n4. рассказать про работу CORS\n5. Нравится ли заниматься версткой? \n6. flex vs grid когда что использовать\n7. работал ли с ui kit? как был устроен на прошлой работе? \n8. Как сделать разную тему у сайта? Через чистый css \n9. был ли у вас any под запретом? \n10. что находится внутри type DependencyList = ReadonlyArray<unknown>\n11. для чего never ? \n12. чем отличается стрелочная функция от обычной\n13. fn.bind(this1).bind(this2) что будет?\n14. arrowFn.apply(this3, []) что будет? \n15. Как можно сделать запрос к серверу?\n16. Как мы можем отслеживать ошибку в промисах ? \n17. Как отработает then и catch в каждом случае? \nthen().then().catch()\nthen.catch().then()\ncatch().then().then()\n18. чем отличается async\\await при примере в вопросе 17\n19. Как отловить в async\\await в try\\catch\n20. Если обернуть в блок try код из пункта 17, поймает ли тогда catch из try\\catch ? Почему отловит? \n21. Что такое чистая функция?\n22. let a = 1; ()=>{a =1 ; return 1} это чистая функция? \n23. кто быстрее отрендерит кнопку реакт или ванильный js ? \n24. Для чего нужно мемоизация? какие методы знаешь?\n25. Что сделали в реакт 19 для мемоизации?\nЗадача 1: евентлуп, в какой последовательности выведет буквы\nconst p = new Promise((resolve) => {\n  resolve('');\n});\n\np.then(() => {\n  p.then(() => console.log('A'));\n  console.log('C');\n});\n\np.then(() => console.log('B'));\nОтвет: C B A\nЗадача 2: \n/*\nСгенерировать массив из 10 элементов,\nгде каждый элемент это случайное число (целое) от 0 до 10. Найти сколько пар чисел из этого массива дают в сумме 10;\n*/\nfunction countPairsWithSum() {\n  const array = Array.from({ length: 10 }, () => Math.floor(Math.random() * 11));\n  const target = 10;\n\n  // Считаем количество вхождений каждого числа\n  const frequency = {};\n  let count = 0;\n\n  for (const num of array) {\n    const complement = target - num;\n    if (frequency[complement]) {\n      count += frequency[complement];\n    }\n\n    frequency[num] = (frequency[num] || 0) + 1;\n  }\n\n  console.log(array, count);\n  return count;\n}\n\ncountPairsWithSum();"
      },
      {
        "timestamp": "2025-07-04 18:17:47",
        "content": "2025-07-04 18:17:47\n Sentry -> 2071074234:\nСбер Девайс\nЗп: -\n\nЭтап алгосов 3 задачи. \n\nfunction compress(arr) {\n    if (arr.length === 0) return '';\n\n    // Удаляем дубликаты и сортируем массив\n    arr = [...new Set(arr)].sort((a, b) => a - b);\n\n    let result = [];\n    let start = arr[0];\n    let end = arr[0];\n\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] === end + 1) {\n            // Последовательность продолжается\n            end = arr[i];\n        } else {\n            // Посл...",
        "full_content": "2025-07-04 18:17:47\n Sentry -> 2071074234:\nСбер Девайс\nЗп: -\n\nЭтап алгосов 3 задачи. \n\nfunction compress(arr) {\n    if (arr.length === 0) return '';\n\n    // Удаляем дубликаты и сортируем массив\n    arr = [...new Set(arr)].sort((a, b) => a - b);\n\n    let result = [];\n    let start = arr[0];\n    let end = arr[0];\n\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] === end + 1) {\n            // Последовательность продолжается\n            end = arr[i];\n        } else {\n            // Последовательность закончилась\n            if (start === end) {\n                result.push(`${start}`);\n            } else {\n                result.push(`${start}-${end}`);\n            }\n            start = end = arr[i];\n        }\n    }\n\n    // Добавляем последнюю последовательность\n    if (start === end) {\n        result.push(`${start}`);\n    } else {\n        result.push(`${start}-${end}`);\n    }\n\n    return result.join(',');\n}\n\n\nfunction oddSort(arr) {\n    // Шаг 1: Разделяем массив на нечетные и четные числа\n    const odds = [];\n    const evens = [];\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 1) {\n            odds.push({ value: arr[i], index: i }); // Сохраняем значение и индекс\n        } else {\n            evens.push({ value: arr[i], index: i });\n        }\n    }\n\n    // Шаг 2: Сортируем нечетные числа по возрастанию\n    odds.sort((a, b) => a.value - b.value);\n\n    // Шаг 3: Создаем новый отсортированный массив\n    let result = new Array(arr.length).fill(null); // Инициализируем результирующий массив\n\n    // Вставляем нечетные числа на их новые позиции\n    for (let i = 0; i < odds.length; i++) {\n        result[odds[i].index] = odds[i].value;\n    }\n\n    // Вставляем четные числа на их исходные позиции\n    for (let i = 0; i < evens.length; i++) {\n        result[evens[i].index] = evens[i].value;\n    }\n\n    return result;\n}\n\n\nconst groupAnagrams = (arr) => {\n  const mapa = {};\n\n  arr.forEach((el) => {\n    const sorted = el.toLowerCase().split(\"\").sort().join(\"\");\n\n    if (!mapa[sorted]) mapa[sorted] = [];\n\n    mapa[sorted].push(el);\n  });\n\n  return Object.values(mapa);\n};"
      },
      {
        "timestamp": "2025-06-18 13:32:19",
        "content": "2025-06-18 13:32:19\n Александр -> 2071074234:\nСбер для экспертов\nЗп - не назвали\nВакансия- https://hh.ru/vacancy/121048726\nРезультат - еще не сказали\nВопрос были по Архитектуре имено фронтенд части!",
        "full_content": "2025-06-18 13:32:19\n Александр -> 2071074234:\nСбер для экспертов\nЗп - не назвали\nВакансия- https://hh.ru/vacancy/121048726\nРезультат - еще не сказали\nВопрос были по Архитектуре имено фронтенд части!"
      },
      {
        "timestamp": "2025-06-17 12:00:46",
        "content": "2025-06-17 12:00:46\n Василий -> 2071074234:\nСбер\n\nСозвон-знакомство с руководителем отдела. Познакомиться, узнать про меня и рассказать про команды и задачи.\nТехнических вопросов не было",
        "full_content": "2025-06-17 12:00:46\n Василий -> 2071074234:\nСбер\n\nСозвон-знакомство с руководителем отдела. Познакомиться, узнать про меня и рассказать про команды и задачи.\nТехнических вопросов не было"
      },
      {
        "timestamp": "2025-06-16 14:13:23",
        "content": "2025-06-16 14:13:23\n Василий -> 2071074234:\nСбер техничка\n\n1) Открыл задачки из редактора \"Что будет в консоли\". Вопросы по принципу работы ивентлуп и замыканию\n2) Какие стадии рендера тормозят виртуализацию больших таблиц. Спрашивал про критический путь рендера, asinc defer. а хотел услышать про transform\n3) \n/**\n * Перегрузка функции sum\n */\nfunction sum(a: number, b: number): number; // Сигнатура для двух чисел\nfunction sum(a: string, b: string): string; // Сигнатура для двух строк\nfunction s...",
        "full_content": "2025-06-16 14:13:23\n Василий -> 2071074234:\nСбер техничка\n\n1) Открыл задачки из редактора \"Что будет в консоли\". Вопросы по принципу работы ивентлуп и замыканию\n2) Какие стадии рендера тормозят виртуализацию больших таблиц. Спрашивал про критический путь рендера, asinc defer. а хотел услышать про transform\n3) \n/**\n * Перегрузка функции sum\n */\nfunction sum(a: number, b: number): number; // Сигнатура для двух чисел\nfunction sum(a: string, b: string): string; // Сигнатура для двух строк\nfunction sum(a: any, b: any): any {         // Реализация функции\n    return a + b;\n}\n\n// Примеры использования\nconst result1 = sum(5, 10);     // 15 (тип number)\nconst result2 = sum(\"Hello, \", \"world!\"); // \"Hello, world!\" (тип string)\n4) \ntype Pick<T, K extends keyof T> = {\n  [P in K]: T[P];\n};\n5) \ntype Partial<T> = {\n    [P in keyof T]?: T[P];\n};\n6) \ntype ResponseSuccess<T> = { payload: T }\ntype ResponseError<E> = { error: E }\n\nconst payloadFrom = <T, E>(data?: ResponseSuccess<T> | ResponseError<E>): T | undefined => {\n  if (data && 'payload' in data) {\n    return data.payload\n  }\n  return undefined\n}\n\nconst errorFrom = <T, E>(data?: ResponseSuccess<T> | ResponseError<E>): E | undefined => {\n  if (data && 'error' in data) {\n    return data.error\n  }\n  return undefined\n}\n\n// Примеры\nconst responseSuccess = {\n  payload: {\n    a: 1,\n    b: '2',\n  },\n}\n\nconst responseError = {\n  error: {\n    message: '123',\n  },\n}\n\nconst payload = payloadFrom(responseSuccess)\n// Тип payload: { a: number; b: string }\n\nconst error = errorFrom(responseError)\n// Тип error: { message: string }\n7) Как реализовать универсальную button\n// components/Button.tsx\nimport React from 'react';\n\ntype ButtonProps = {\n  children: React.ReactNode;\n  onClick?: () => void;\n  type?: 'button' | 'submit' | 'reset';\n  disabled?: boolean;\n};\n\nexport const Button: React.FC<ButtonProps> = ({\n  children,\n  onClick,\n  type = 'button',\n  disabled = false,\n}) => {\n  return (\n    <button type={type} onClick={onClick} disabled={disabled}>\n      {children}\n    </button>\n  );\n};\n8) Как из оригинальной Button вытащить атрибуты \ntype ButtonProps = {\n  children: React.ReactNode;\n} & React.ButtonHTMLAttributes<HTMLButtonElement>;\n9) Спрашивал про Solid, принци open close\n10) \nfunction mergeSortedArrays(arr1, arr2) {\n  const merged = []; // Итоговый массив для результата\n  let i = 0; // Индекс для первого массива\n  let j = 0; // Индекс для второго массива\n\n  // Пока не дошли до конца одного из массивов\n  while (i < arr1.length && j < arr2.length) {\n    // Сравниваем текущие элементы двух массивов\n    if (arr1[i] < arr2[j]) {\n      // Если элемент из первого массива меньше, добавляем его в merged\n      merged.push(arr1[i]);\n      i++; // двигаемся дальше по первому массиву\n    } else {\n      // Иначе добавляем элемент из второго массива\n      merged.push(arr2[j]);\n      j++; // двигаемся дальше по второму массиву\n    }\n  }\n  return merged; // Возвращаем объединённый отсортированный массив\n}"
      },
      {
        "timestamp": "2025-06-11 08:36:40",
        "content": "2025-06-11 08:36:40\n Василий -> 2071074234:\nСбер знакомство с лидом\n\nЦель собеса познакомить с процессами в команде (Сбер Пульс - команда солянка собрана из кусочков других команд, сейчас разработка похожа на стартап).\nМеня спрашивали только о том, на каких этапах у меня другие собесы.",
        "full_content": "2025-06-11 08:36:40\n Василий -> 2071074234:\nСбер знакомство с лидом\n\nЦель собеса познакомить с процессами в команде (Сбер Пульс - команда солянка собрана из кусочков других команд, сейчас разработка похожа на стартап).\nМеня спрашивали только о том, на каких этапах у меня другие собесы."
      },
      {
        "timestamp": "2025-06-08 06:39:54",
        "content": "2025-06-08 06:39:54\n Василий -> 2071074234:\nСбер Пульс техничка (1\\3 частей)\n\n1) Путь от запроса Url в адресной строке до рендера\n2) безопасность frontend приложения\n3) flex и grid разница\n4) Что делает тип type DependencyList = ReadonlyArray<unknown>\n5) разница never и void\n6) разница стрелочной и функции declaration\n7) как перехватить ошибку в fetch запросе\n8) зачем нужен react. В маленьком одностраничном приложении, что быстрее html+js или jsx\n9) Мемоизация в react как и зачем\n10) простая зад...",
        "full_content": "2025-06-08 06:39:54\n Василий -> 2071074234:\nСбер Пульс техничка (1\\3 частей)\n\n1) Путь от запроса Url в адресной строке до рендера\n2) безопасность frontend приложения\n3) flex и grid разница\n4) Что делает тип type DependencyList = ReadonlyArray<unknown>\n5) разница never и void\n6) разница стрелочной и функции declaration\n7) как перехватить ошибку в fetch запросе\n8) зачем нужен react. В маленьком одностраничном приложении, что быстрее html+js или jsx\n9) Мемоизация в react как и зачем\n10) простая задачки на знание eventloop (ответ СВА)"
      },
      {
        "timestamp": "2025-06-03 08:21:14",
        "content": "2025-06-03 08:21:14\n Kamil -> 2071074234:\nКомпания: Сбер для экспертов\nВакансия: Frontend-разработчик (Architect.Hub) \nhttps://rabota.sber.ru/search/4418648/\nЗП: 250 тыс. рублей\n\nСразу перешли к задачам:\n\n1. user.getName()\nconst user = {\n  name: 'Ivan',\n  getName: () => {\n    console.log('name: ', this.name);\n  },\n};\nuser.getName();\nРешение:\nname: undefined\ngetName — стрелочная функция, она не имеет собственного this и берёт его из внешнего контекста. Здесь this указывает на глобальный объект (w...",
        "full_content": "2025-06-03 08:21:14\n Kamil -> 2071074234:\nКомпания: Сбер для экспертов\nВакансия: Frontend-разработчик (Architect.Hub) \nhttps://rabota.sber.ru/search/4418648/\nЗП: 250 тыс. рублей\n\nСразу перешли к задачам:\n\n1. user.getName()\nconst user = {\n  name: 'Ivan',\n  getName: () => {\n    console.log('name: ', this.name);\n  },\n};\nuser.getName();\nРешение:\nname: undefined\ngetName — стрелочная функция, она не имеет собственного this и берёт его из внешнего контекста. Здесь this указывает на глобальный объект (window в браузере, undefined в strict mode).\n\n\n2. palette.getColor()\nconst palette = {\n  color: 'red',\n  color: 'blue',\n  getColor() {\n    console.log('color: ', this.color);\n  },\n};\npalette.getColor();\nРешение:\ncolor: blue\nОбъект не может иметь два одинаковых ключа — 'red' перезаписывается 'blue'. Метод getColor() — обычная функция, this указывает на palette.\n\n\n3. foo()\nfunction foo() {\n  console.log(this === window);\n}\nfoo();\nРешение:\ntrue\nВ глобальном контексте обычная функция (function foo()) привязана к глобальному объекту (window в браузере). В strict mode this будет undefined.\n\n4. bar()\nconst bar = () => {\n  console.log(this === window);\n};\nbar(); \n\n5.  Конструктор функции\nfunction Person(firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n}\nconst p = Person('Ivan', 'Petrov');\n6. Работа с Map и spread оператор\nconst data = new Map();\ndata.set('foo', { a: 'bar' });\nconst dataCopy = { ...data };\n7. Присваивание объекта по ссылке\nconst person = {\n  name: 'Ivan',\n  age: 23,\n};\nconst newPerson = person;\nnewPerson.name = 'Bob';\n// console.log(newPerson.name);\n8. Создание объекта через конструктор Object\nconst anotherPerson = {};\nanotherPerson['name'] = 'Bob';\nanotherPerson['age'] = '32';\n// console.log(anotherPerson);\n9. Потеря контекста this при извлечении метода\nconst obj = {\n  name: 'Ivan',\n  getName() {\n    return this.name;\n  },\n};\nconst name = obj.getName;\nconsole.log('name: ', name());\nРешение:\n// 1. Вызвать метод на объекте\nconsole.log('name: ', obj.getName());\n\n// 2. Привязать контекст с помощью bind\nconst name = obj.getName.bind(obj);\nconsole.log('name: ', name());\n\n// 3. Использовать стрелочную функцию\nconst name = () => obj.getName();\nconsole.log('name: ', name());\n10. Нужно чтобы  \"1+5\" было отложенным\nconst sum = (a, b) => {\n  return a + b;\n};\nconsole.log(sum(1 + 5, 2));\n11. До этой задачи я не дошёл\nasync function fs_mkdir() {\n  throw new Error('bad error');\n}\n\nasync function getObj() {\n  return { foo: 'foo' };\n}\n\nasync function run() {\n  try {\n    const result1 = await fs_mkdir();\n    const result2 = await getObj();\n    console.log('results: ', { result1, result2 });\n  } catch (error) {\n    console.error(error);\n  }\n}\nrun();"
      },
      {
        "timestamp": "2025-05-22 14:05:39",
        "content": "2025-05-22 14:05:39\n Ivan -> 2071074234:\nКомпания - Сбер-навигатор,\nпозиция - мидл-разработчик,\nзп - не обсуждали\n\nСобес обещали на час, в итоге 2 часа, интервьюер - молодой скромный парень, каверзных вопросов не задавал =)\n\nВопросы:\n- Расскажи о последнем месте работе и какие интересные задачи выполнил.\n- Чем отличаются Var let и Const?\n- Чем отличаются примитивные ссылочные типы. (Хочет услышать про мутирование ссылочных).\n- Что такое Promises?\n- Что такое Реакт и как он работает.\n- Чем отлича...",
        "full_content": "2025-05-22 14:05:39\n Ivan -> 2071074234:\nКомпания - Сбер-навигатор,\nпозиция - мидл-разработчик,\nзп - не обсуждали\n\nСобес обещали на час, в итоге 2 часа, интервьюер - молодой скромный парень, каверзных вопросов не задавал =)\n\nВопросы:\n- Расскажи о последнем месте работе и какие интересные задачи выполнил.\n- Чем отличаются Var let и Const?\n- Чем отличаются примитивные ссылочные типы. (Хочет услышать про мутирование ссылочных).\n- Что такое Promises?\n- Что такое Реакт и как он работает.\n- Чем отличается TypeScript от JavaScript?\n- Какие Знаешь Utility Types и какие из них использовал?\n\nИ одна задача: попросил склонировать репозиторий и дописать приложение:\n\nЗадание:\n\n// 0. Добавить типизацию\n// 1. Получить список пользователей и отобразить их список\n// 2. Реализовать функцию удаления пользователя\n// 3. Реализовать компонент формы добавления пользователя\n//    - Создание должно работать при нажатии на enter или клик на кнопку\n//    - Установить фокус на форму с названием\n// 4. Избавиться от лишних ререндеров\n// 5. Любые улучшения на свой вкус\n\nИтог: 😒"
      },
      {
        "timestamp": "2025-05-19 16:56:42",
        "content": "2025-05-19 16:56:42\n Sasha -> 2071074234:\nСбер.\n\nСкрин 1\nВопросы: \n1. Что будет выводиться в консоль и на каком этапе?\n2. Можешь ли ты гарантировать, что useEffect  отработает один раз?\n\nСкрин 2\nВопросы:\n1. Что делает unwrap?\n2. Что нужно указать вместо - ?\n\nСкрин 3\nВопросы:\n\n1. Расскажи про unknown. Что такое TypeGuard (далее TG)? Для чего нужен TG? Что означает ключевое слово is в TG?\n2. Расскажи про три сценария использования extends\n3. Как типизировать пустой объект?\n4. Как типизировать объе...",
        "full_content": "2025-05-19 16:56:42\n Sasha -> 2071074234:\nСбер.\n\nСкрин 1\nВопросы: \n1. Что будет выводиться в консоль и на каком этапе?\n2. Можешь ли ты гарантировать, что useEffect  отработает один раз?\n\nСкрин 2\nВопросы:\n1. Что делает unwrap?\n2. Что нужно указать вместо - ?\n\nСкрин 3\nВопросы:\n\n1. Расскажи про unknown. Что такое TypeGuard (далее TG)? Для чего нужен TG? Что означает ключевое слово is в TG?\n2. Расскажи про три сценария использования extends\n3. Как типизировать пустой объект?\n4. Как типизировать объект с помощью Record? Какой синтаксис? Как указать разные типы?\n\nОстальные вопросы: \nРаботал ли css module? Что такое Tailwind? Как сделать так, чтобы при ошибке в className, код не собирался ?"
      },
      {
        "timestamp": "2025-04-15 00:56:25",
        "content": "2025-04-15 00:56:25\n Ber -> 2071074234:\n— Название компании: iFellow (Сбер Финансы), 1 этап (технический) в Сбере\n— Ссылка на вакансию: https://ifellow.ru/vacancy/frontend-razrabotchik-react/\n— ЗП: 250 гросс\n— Вопросы:\n1) Расскажи о последнем релевантном опыте. Сделать акцент на личных достижениях, \nзнаковых задачах\n2) Как у вас выстроен производственный процесс? Команда большая?\n3) Unit тесты писали? Как писали? Доп: какие еще тесты писал? Какой опыт есть в тестировании?\n4) Какие ожидания от но...",
        "full_content": "2025-04-15 00:56:25\n Ber -> 2071074234:\n— Название компании: iFellow (Сбер Финансы), 1 этап (технический) в Сбере\n— Ссылка на вакансию: https://ifellow.ru/vacancy/frontend-razrabotchik-react/\n— ЗП: 250 гросс\n— Вопросы:\n1) Расскажи о последнем релевантном опыте. Сделать акцент на личных достижениях, \nзнаковых задачах\n2) Как у вас выстроен производственный процесс? Команда большая?\n3) Unit тесты писали? Как писали? Доп: какие еще тесты писал? Какой опыт есть в тестировании?\n4) Какие ожидания от нового места работы? Чтобы хотелось получить в итоге?\n5) Какие способы организации CSS кода приходилось использовать?\n6) Какие значения знаешь у display?\n7) Какие способы центрировать блок знаешь?\n8) Какие способы организации асинхронности знаешь в JS?\n9) Какие способы копирования объекта знаешь?\nДоп вопрос: При кастомном решении копирования объекта - как скопировать функцию?\n10) Как внутри обработчика события onClick получить доступ к элементу, по которому \nпользователь кликнул?\n11) Какое отличие event.target от event.currentTarget?\n12) Чем useEffect отличается от useLayoutEffect?\n13) \n<!--Как на CSS сделать фигуру: в квадрат должны быть вписаны четыре треугольника с общей вершиной в центре?-->\n\n<div class='container'>\n  <div class='triangle red'></div>\n  <div class='triangle green'></div>\n  <div class='triangle yellow'></div>\n</div>\n\n<style>\n   .container {\n  position: relative;\n  width: 200px; /* Настройте размер по необходимости */\n  height: 200px; /* Настройте размер по необходимости */\n}\n\n.triangle {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-style: solid;\n}\n\n.red {\n  border-width: 100px 100px 0 0;\n  border-color: red transparent transparent transparent;\n  top: 0;\n  left: 0;\n}\n\n.green {\n  border-width: 0 0 100px 100px;\n  border-color: transparent transparent green transparent;\n  bottom: 0;\n  right: 0;\n}\n\n.yellow {\n  border-width: 100px 0 0 100px;\n  border-color: transparent transparent transparent yellow;\n  bottom: 0;\n  left: 0;\n} \n    \n</style>\n14) \n// Что будет в консоли? И почему именно так?\n(function() {\n    var a = b = 3;\n})();\nconsole.log(typeof a);\nconsole.log(typeof b);\n15) \nsetTimeout(() => console.log('timeout'));\nPromise.resolve().then(() => console.log('promise'));\nwindow.requestAnimationFrame(() => console.log('requestAnimationFrame'));\nconsole.log('code');\n16)\n// Что будет выведено?\n// Доп вопрос: что будет, если убрать 'use strict'?\n\n'use strict';\n\nvar obj = {\n    i: 10,\n    b: () => console.log(this.i, this),\n    c: function() {\n        console.log(this.i, this)\n    }\n}\n\nobj.b();\nobj.c();\n17) \n//Что будет выведено? И почему именно так?\n//Доп вопрос: что будет с value, которая внутри функции?\n//Доп вопрос: как исправить? Какие есть способы?\n\nvar test = (function() {\n    var value = 1;\n    function setValue(newValue) {\n        value = newValue;\n    }\n    return {\n        value: value,\n        setValue: setValue,\n    };\n})();\n\ntest.setValue(2);\nconsole.log(test.value);\n18) \n// Что будет выведено и почему именно так?\n\nclass A {\n    constructor () {\n        this.value = 10;\n    }\n\n    print() {\n        console.log(this.value)\n    }\n}\n\nconst a = new A;\n\nconst print = a.print;\nprint() //?\n\nconst b = new B(print);\n\nclass B {\n    constructor(foo) {\n        foo();   // ?\n        print(); // ?\n    }\n}\n19) Написать функцию, которая будет возвращать число Фибоначчи\nНаписал это решение:\nfunction fibonacci(n) {\n    if (n <= 0) return 0; // Первый элемент последовательности\n    if (n === 1) return 1; // Второй элемент последовательности\n\n    let prevNum = 0; // Предыдущее число\n    let currNum = 1; // Текущее число\n\n    for (let i = 2; i <= n; i++) {\n        const temp = prevNum + currNum; // Следующее число\n        prevNum = currNum; // Обновляем предыдущее число\n        currNum = temp; // Обновляем текущее число\n    }\n\n    return currNum; // тут начал сомневаться, что так возвращать, но проверяющий сказал: принимается, логика мышления ясна - комментировал устно решение\n}\n\n// Пример использования:\nconsole.log(fibonacci(5)); // Вывод: 3\n\n— Успех собеса: ✅\n— Фитбек о собесе от HR: ос отличная, готовы пригласить на финальный этап - знакомство с командой"
      },
      {
        "timestamp": "2025-04-10 22:13:14",
        "content": "2025-04-10 22:13:14\n Ostrov Ostrov -> 2071074234:\nКомпания: Сбер CIB Research (2 этап - команда)\n\nЗП - от 250k\n📢 Вакансия - hr написала\n\n❓ Вопросы:\n\n1.  Что тебя привлекает на том проекте, на котором ты работаешь?\n2.  Какая твоя роль в проекте? \n3.  За какие задачи отвечаешь и что делал. В каком виде это проявляется?\n4.  Как взаимодействуете в команде? \n5.  Как до тебя доходит задача?\n6.  Какой технический стек используете?\n7.  Где черпаешь свой интерес и мотивацию?\n8.  А что вообще за проект, н...",
        "full_content": "2025-04-10 22:13:14\n Ostrov Ostrov -> 2071074234:\nКомпания: Сбер CIB Research (2 этап - команда)\n\nЗП - от 250k\n📢 Вакансия - hr написала\n\n❓ Вопросы:\n\n1.  Что тебя привлекает на том проекте, на котором ты работаешь?\n2.  Какая твоя роль в проекте? \n3.  За какие задачи отвечаешь и что делал. В каком виде это проявляется?\n4.  Как взаимодействуете в команде? \n5.  Как до тебя доходит задача?\n6.  Какой технический стек используете?\n7.  Где черпаешь свой интерес и мотивацию?\n8.  А что вообще за проект, на котором ты работаешь?\n9.  Что ты хочешь найти на нашем проекте? Почему уходишь со своего?\n10.  Какие задачи тебя вообще интересуют как фронта?\n11.  Как выглядит твоя команда? Сколько человек на фронте?\n12.  Есть ли код ревью на том проекте где ты работаешь, и как оно выглядит?\n13.  Бывало ли такое что что-то не успевали за спринт? Что в таком случае ты делаешь?"
      },
      {
        "timestamp": "2025-04-10 22:12:03",
        "content": "2025-04-10 22:12:03\n Ostrov Ostrov -> 2071074234:\nКомпания: Сбер CIB Research (1 этап - тех)\n\nЗП - от 250k\n\n📢 Вакансия - hr написала\n\n❓ Вопросы\n\n1.Расскажи про себя, кратко про опыт. Какие задачи выполнял?\n2. Зачем нужны data атрибуты и можно ли  в них хранить пароли? (пароли нельзя хранить)\n3. Для чего нужны медиа-запросы в css?\n4. Разница между position relative, fixed, absolute\n5. Как вы следите за чистотой кода в проекте? И следите ли вообще?\n6. В работе git используете?\nЧто такое git stash?...",
        "full_content": "2025-04-10 22:12:03\n Ostrov Ostrov -> 2071074234:\nКомпания: Сбер CIB Research (1 этап - тех)\n\nЗП - от 250k\n\n📢 Вакансия - hr написала\n\n❓ Вопросы\n\n1.Расскажи про себя, кратко про опыт. Какие задачи выполнял?\n2. Зачем нужны data атрибуты и можно ли  в них хранить пароли? (пароли нельзя хранить)\n3. Для чего нужны медиа-запросы в css?\n4. Разница между position relative, fixed, absolute\n5. Как вы следите за чистотой кода в проекте? И следите ли вообще?\n6. В работе git используете?\nЧто такое git stash? Как достать последнее сохранение из git stash ? (git stash pop)\n7. В чем разница между git rebase и git merge?\n8. Какой способ у себя на работе используете?\n9. Сколько потоков в js?\n(хочет услышать про веб-воркеры)\n10. Каким образом устроена асинхронность в js ? (про event loop)\n11. Расскажи про событийную модель в браузере. Как остановить всплытие?\n11. Что такое Promise? Для чего нужен? Как  обработать его?\n12. Какой тип данных возвращает метод массива  .reduce() ?\n13. В чем разница между function declaration и function expression? В чем разница между стрелочными функциями и  fd и fe?\n14. Какие хуки на работе используешь?\n15. setState синхронный или асинхронный? И почему он асинхронный? Для чего?\n16. Расскажи про useEffect все что знаешь? как его можно применять? Как он устроен (синтаксис). Какие параметры принимает?\n17. Хук useCallback. Для чего? Когда его нужно применять, а когда не нужно?\n18. Для чего в рендере списков нужно передавать key в React?\n\n\n🧑🏻‍💻Лайвкодинг: \n-1 архив с задачей\n-2 с валидным решением\nВ краце: работа с таблицей в реакте"
      },
      {
        "timestamp": "2025-03-28 06:40:12",
        "content": "2025-03-28 06:40:12\n Матвей Захаров -> 2071074234:\nСбер HR-пульс (3 этап, с командой)\nВакансия: https://hh.ru/vacancy/118077320.\n\nВопросы:\n\n- Расскажи о себе\n- Как проводили ревью кода, на что обращаю внимание при ревью\n- Как приходили задачи\n- В каком бы направлении хотел развиваться \n- Зачем нужны стейт-менеджеры\n- Было ли межкомандное взаимодействие",
        "full_content": "2025-03-28 06:40:12\n Матвей Захаров -> 2071074234:\nСбер HR-пульс (3 этап, с командой)\nВакансия: https://hh.ru/vacancy/118077320.\n\nВопросы:\n\n- Расскажи о себе\n- Как проводили ревью кода, на что обращаю внимание при ревью\n- Как приходили задачи\n- В каком бы направлении хотел развиваться \n- Зачем нужны стейт-менеджеры\n- Было ли межкомандное взаимодействие"
      },
      {
        "timestamp": "2025-03-25 11:41:16",
        "content": "2025-03-25 11:41:16\n Матвей Захаров -> 2071074234:\nКомпания: Сбер \"HR-платформа Пульс\"\n\nВакансия: https://hh.ru/vacancy/118077320\n\nНесколько маленьких задач как здесь и похожих на них: \n\nhttps://t.me/c/2071074234/489/100927\nhttps://t.me/c/2071074234/489/44821\n\nИ задачи на скрине",
        "full_content": "2025-03-25 11:41:16\n Матвей Захаров -> 2071074234:\nКомпания: Сбер \"HR-платформа Пульс\"\n\nВакансия: https://hh.ru/vacancy/118077320\n\nНесколько маленьких задач как здесь и похожих на них: \n\nhttps://t.me/c/2071074234/489/100927\nhttps://t.me/c/2071074234/489/44821\n\nИ задачи на скрине"
      },
      {
        "timestamp": "2025-02-25 11:14:56",
        "content": "2025-02-25 11:14:56\n alzor -> 2071074234:\nКомпания: iFellow(Сбер) - финал\nСсылка на вакансию: написала HR\nЗП: от 250к\n\nВопросы от компании:\n1) Расскажи о последнем релевантном опыте. Сделать акцент на личных достижениях, знаковых задачах.\n2) Как у вас выстроен производственный процесс? Команда большая?\n3) Комфортно в коллективе разработчиков или одному работать?\n4) Сталкивался ли с DevOps? Сам можешь настроить и/или делать правки в конфигах?\n\nРассказ о продукте и сервисе Сбера куда идет набор.\n\n...",
        "full_content": "2025-02-25 11:14:56\n alzor -> 2071074234:\nКомпания: iFellow(Сбер) - финал\nСсылка на вакансию: написала HR\nЗП: от 250к\n\nВопросы от компании:\n1) Расскажи о последнем релевантном опыте. Сделать акцент на личных достижениях, знаковых задачах.\n2) Как у вас выстроен производственный процесс? Команда большая?\n3) Комфортно в коллективе разработчиков или одному работать?\n4) Сталкивался ли с DevOps? Сам можешь настроить и/или делать правки в конфигах?\n\nРассказ о продукте и сервисе Сбера куда идет набор.\n\nВстречные вопросы:\n1) Расскажите о команде.\n2) Какой стек на сервисе.\n3) Расскажите про особенности UI kitа.\n4) Как часто проходят релизы?\n5) Во сколько проходят дейли и какая продолжительность?\n6) Где проходит общение команды?\n7) Какие ожидания от нового разработчика?\n8) Какие планы по запуску/развитию  продукта в целом?"
      },
      {
        "timestamp": "2025-02-21 12:46:43",
        "content": "2025-02-21 12:46:43\n alzor -> 2071074234:\nАудиозапись к собеседованияю\nКомпания: iFellow(Сбер) - 2ой этап\nСсылка на вакансию: написала HR\nЗП: от 250к",
        "full_content": "2025-02-21 12:46:43\n alzor -> 2071074234:\nАудиозапись к собеседованияю\nКомпания: iFellow(Сбер) - 2ой этап\nСсылка на вакансию: написала HR\nЗП: от 250к"
      },
      {
        "timestamp": "2025-02-21 12:45:05",
        "content": "2025-02-21 12:45:05\n alzor -> 2071074234:\nКомпания: iFellow(Сбер) - 2ой этап\nСсылка на вакансию: написала HR\nЗП: от 250к\n\n1. Расскажи о себе, о своем опыте, чем занимался, что такого классного делал в последнее время, что получалось, что не получалось?\n2. Расскажи про команду, сколько фронтов в команде было?\n3. Как были устроены процессы(Agile, kanban)?\n4. Код ревью было, как проходило?\n5. Как оцениваешь погружонность других команд в ваш проект?(тк кросс командное ревью кода)\n6. Unit тесты писал...",
        "full_content": "2025-02-21 12:45:05\n alzor -> 2071074234:\nКомпания: iFellow(Сбер) - 2ой этап\nСсылка на вакансию: написала HR\nЗП: от 250к\n\n1. Расскажи о себе, о своем опыте, чем занимался, что такого классного делал в последнее время, что получалось, что не получалось?\n2. Расскажи про команду, сколько фронтов в команде было?\n3. Как были устроены процессы(Agile, kanban)?\n4. Код ревью было, как проходило?\n5. Как оцениваешь погружонность других команд в ваш проект?(тк кросс командное ревью кода)\n6. Unit тесты писали? Есть смысл тратить на это время?\n7. Почему работу меняешь? Что не устраивает?\n8. Удаленно работаешь?\n9. Какие ожидания от нового места работы? Чтобы хотелось получить в итоге?\n\n1.Какие способы организации CSS кода приходилось использовать?\n2.Какие значения знаешь у св-ва  display?\n3.Какие способы центрировать блок знаешь?\n4.Как работает z-index?\n5.Может ли меньший z-index перекрыть больший?\n6.Какие способы организации асинхронности знаешь в js?\n7.Какие способы копирования объекта знаешь?\n8.Как внутри обработчика события onClick получить доступ к элементу по которому пользователь кликнул?\n9. Какое отличие event.target от event.currentTarget?\n10. Чем type от interface отличается в TS?\n11. Чем useEffect отличается от useLayoutEffect?\n12. Зачем нужен атрибут key?\n13. Скажи чем merge от rebase отличается?\n\nЗадача 1: как на CSS сделать фигуру: в квадрат вписаны четыре треугольника с общей вершиной в центре:\n\n<div class=\"container\">\n  <div class=\"triangle red\"></div>\n  <div class=\"triangle green\"></div>\n  <div class=\"triangle yellow\"></div>\n</div>\n\n\n.container {\n  position: relative;\n  width: 200px; /* Настройте размер по необходимости */\n  height: 200px; /* Настройте размер по необходимости */\n}\n.triangle {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-style: solid;\n}\n.red {\n  border-width: 100px 100px 0 0;\n  border-color: red transparent transparent transparent;\n  top: 0;\n  left: 0;\n}\n.green {\n  border-width: 0 0 100px 100px;\n  border-color: transparent transparent green transparent;\n  bottom: 0;\n  right: 0;\n}\n.yellow {\n  border-width: 100px 0 0 100px;\n  border-color: transparent transparent transparent yellow;\n  bottom: 0;\n  left: 0;\n}\n\n\nЗадача 2: Что будет в консоли?\n\n(function(){\n    var a = b = 3;\n})();\nconsole.log(typeof a);\nconsole.log(typeof b);\n\nОтвет: undefined number\n\nЗадача 3: Что будет в консоли?\n\nsetTimeout(() => console.log(\"timeout\"));\n\nPromise.resolve().then(() => console.log(\"promise\"));\n\nwindow.requestAnimationFrame(() => console.log(\"requestAnimationFrame\"));\n\nconsole.log(\"code\");\n \nОтвет: code promise requestAnimationFrame timeout\n\nЗадача 4: Что будет в консоли?\n\n'use strict';\n\nvar obj = {\n  i: 10,\n  b: () => console.log(this.i, this),\n  c: function() {\n    console.log(this.i, this);\n  }\n}\nobj.b(); \nobj.c(); \n\nОтвет: \nпри 'use strict': \nobj.b(); // undefined, undefined\nobj.c(); // 10, объект obj\n\nбез 'use strict':\nobj.b(); // undefined, window\nobj.c(); // 10, объект obj\n\nЗадача 5: Что будет в консоли?\n\nvar test = (function() {\n    var value = 1;\n    function setValue(newValue) {\n        value = newValue;\n    }\n    return {\n        value: value,\n        setValue: setValue,\n    };\n})();\n\ntest.setValue(2);\nconsole.log(test.value); \n\nОтвет: 1\nДоп. вопрос: если удалить value: value, что будет?\nОтвет: undefined\n \nЗадача 6: Напишите функцию которая возвращает n-е число Фибоначчи.\n\nfunction fibonacci(n) {\n    if (n <= 0) return 0; // Первый элемент последовательности\n    if (n === 1) return 1; // Второй элемент последовательности\n\n    let a = 0; // Предыдущее число\n    let b = 1; // Текущее число\n\n    for (let i = 2; i <= n; i++) {\n        const temp = a + b; // Следующее число\n        a = b; // Обновляем предыдущее число\n        b = temp; // Обновляем текущее число\n    }\n\n    return a; // Возвращаем предыдущее число, так как цикл идет до n\n}\n\n// Пример использования:\nconsole.log(fibonacci(5)); // Вывод: 3"
      },
      {
        "timestamp": "2025-02-14 19:34:15",
        "content": "2025-02-14 19:34:15\n alzor -> 2071074234:\nКомпания: iFellow(Сбер)\nСсылка на вакансию: написала HR\nЭтап: 1ый этап тех. собеса\nЗП: от 250к",
        "full_content": "2025-02-14 19:34:15\n alzor -> 2071074234:\nКомпания: iFellow(Сбер)\nСсылка на вакансию: написала HR\nЭтап: 1ый этап тех. собеса\nЗП: от 250к"
      },
      {
        "timestamp": "2025-02-14 15:56:32",
        "content": "2025-02-14 15:56:32\n alzor -> 2071074234:\nКомпания: iFellow(Сбер) - 1эй этап\nСсылка на вакансию: написала  HR\nЗП: от 250к\nВопросы.\n\nБлок 1(Теория):\n1) Что такое промисы, как используешь в проектах, что предпочитаешь: async-await или .then.catch?\n2) Назови статические методы промисов.\n3) Назови реальный use case для Promice.race.\n4) Расскажи про Event Loop.\n5) Где кроме браузера может работать Event Loop?\n6) Были случаи в практике для использования Event Loop? Чтобы действительно помогло.\n7) Назо...",
        "full_content": "2025-02-14 15:56:32\n alzor -> 2071074234:\nКомпания: iFellow(Сбер) - 1эй этап\nСсылка на вакансию: написала  HR\nЗП: от 250к\nВопросы.\n\nБлок 1(Теория):\n1) Что такое промисы, как используешь в проектах, что предпочитаешь: async-await или .then.catch?\n2) Назови статические методы промисов.\n3) Назови реальный use case для Promice.race.\n4) Расскажи про Event Loop.\n5) Где кроме браузера может работать Event Loop?\n6) Были случаи в практике для использования Event Loop? Чтобы действительно помогло.\n7) Назови типы данных в JS.\n8) Какой тип данных у массивов?\n9) Был ли опыт работы с прототипами?\n10) Расскажи про DOM, что это такое в контексте JS? \n11) Как в JS получить доступ к какому либо узлу(ноде)?\n12) Расскажи про фазы всплытия-погружения.\n13) Как остановить всплытие?\n14) Есть опыт верстки? На сколько этот процесс нравится?\n15) Как центрировать блок с помощью CSS?\n16) Чем блочные элементы отличаются от строчных?\n17) Какие методы адаптивной верстки знаешь?\n18) В чем отличие единиц измерения em от rem?\n19) Теоретическая задача: есть шапка(header), слева логотип, справа кнопка. Как утощить кнопку вправо?\nОтвет на задачу: 1) хедеру сделать display: flex,  justify-content: space-between 2) кнопке margin-left: auto;\n20) Какую задачу решает React? Зачем он нужен?\n21) Разрабатывал компоненты на классах?\n22) Почему команда React решила отказаться от классовых компонентов и перешла к функциональным с разработкой хуков?\n23) Почему команда React заявляет, что хуки должны быть чистыми?\n24) Props которые прокидываются в компоненты можно мутировать или нельзя?\n25) Приведи пример когда можно мутировать состояние в React? //WTF\n26) Часто используешь хук useCallback и для чего?\n27) Были реальные случаи использования useCallback и ты ощущал пользу от него?\n28) Были ли случаи в твоей практике оптимизации приложение с влиянием на UX?\n29) Приведи пример способа оптимизации дорогой(объемной) операции чтобы она не влияла на весь остальной компонент.\n30) В каких случаях в React запускается ререндеринг?\n31) Расскажи про key.\n32) Тесно работаешь с TypeScript?\n33) Как у вас на проекте заведено: может быть ли такое, что что-то затипизированно через any.\n\nБлок 2(Опыт работы):\n1) Все еще работаешь или уволился?\n2) Где живешь?\n3) Расскажи про корпоративную культуру т.е. как у вас налажен процесс написания кодовой базы, что вы используете, какие методологии?\n4) Расскажи про опыт работы по SCRUM.\n5) В команде сколько разработчиков фротенд/бекэнд?\n6) Как ты считаешь в организации рабочего дня какие основные проблемы/задачи есть? Как организуешь свой рабочий день, пытаешься это делать?\n7) Какой грейд у тебя сейчас в команде?\n8) С микрофронтендом есть опыт работы?\n9) Есть опыт настройки webpack?\n10) Можно в vite сделать тонкую настройку, как в webpack?\n11) Сколько лет работаешь?\n12) Каков твой путь в IT?\n\nБлок 3(Встречные вопросы):\n1) Расскажи про проект.\n2) На своем компьютере можно работать?\n3) Есть ли онбординг?\n4) Слышал про командное(парное) программирование? Есть такое в сбере?\n5) Сам давно в iFellow работаешь?\n6) Как в целом опыт?\n7) Сколько всего этапов тех. собеседований?"
      },
      {
        "timestamp": "2025-02-14 12:50:42",
        "content": "2025-02-14 12:50:42\n Klimenty Karavaev -> 2071074234:\n- Компания Сбер через Глобус IT\n- Вакансия: сами написали\n- ЗП: 260 к\n- Вопросы: много теории, event loop, js, typescript, запись опять без звука\n\nДо этого был другой человек, его запись вот https://t.me/c/2071074234/489/100927\n\nЗадачки на код тут: https://stackblitz.com/edit/stackblitz-starters-4xhgchom?file=package.json",
        "full_content": "2025-02-14 12:50:42\n Klimenty Karavaev -> 2071074234:\n- Компания Сбер через Глобус IT\n- Вакансия: сами написали\n- ЗП: 260 к\n- Вопросы: много теории, event loop, js, typescript, запись опять без звука\n\nДо этого был другой человек, его запись вот https://t.me/c/2071074234/489/100927\n\nЗадачки на код тут: https://stackblitz.com/edit/stackblitz-starters-4xhgchom?file=package.json"
      },
      {
        "timestamp": "2025-02-14 07:56:44",
        "content": "2025-02-14 07:56:44\n Aintripin -> 2071074234:\n🤡 Викдывали вот чё:\n0. Что значит // WTF коммент в коде?\n1. Что такое to-do?\n2. Как дела, в целом?\n3. Как работается? Норм?\n4. Код реально тяжело читать; у меня знакомый есть джун, он без работы. Можем его посадить решать такие задачи, чтобы код рефакторить, а мы пойдём в плойку поиграем\n5. Как тебе вариант просто проект удалить полностью и просто с нуля переписать? (Тут он ответил, что норм места тут есть)\n6. Сказать ему, что по разговору я понял, ч...",
        "full_content": "2025-02-14 07:56:44\n Aintripin -> 2071074234:\n🤡 Викдывали вот чё:\n0. Что значит // WTF коммент в коде?\n1. Что такое to-do?\n2. Как дела, в целом?\n3. Как работается? Норм?\n4. Код реально тяжело читать; у меня знакомый есть джун, он без работы. Можем его посадить решать такие задачи, чтобы код рефакторить, а мы пойдём в плойку поиграем\n5. Как тебе вариант просто проект удалить полностью и просто с нуля переписать? (Тут он ответил, что норм места тут есть)\n6. Сказать ему, что по разговору я понял, что он очень опытный спец\n7. Тебе больше нравится React или чистый JS?\n8. Почему на JQuery не пишете?\n9. Почему был выбран React? Есть же другие фреймворки/библиотеки? Там, Vue или Angular?\n10. Я, вот, переписывал проект с JQuery на React\n11. Какие фронтовые курсы он смотрел для развития? (Тут он больше начнёт рассказывать, что он сам ходячий курс и так-то хостил дохуллион лекций, принимал участия в хакатонах, выигрывал даже)\n12. Планирует ли он курсы делать? (Короче, он делал курсы, но локально). Планирует ли он на YouTube и, в целом, на онлайн-площадки вывести?\n13. После этих рассказов додавить и спросить как именно развивался во фронте, что читал/смотрел\n14. По поводу деплоя и docker'а: прям вижу, что ты за это очень сильно шаришь. А можем подсказать/посоветовать ресурсы, где ты это изучал? Вообще, чё смотрел и т.д.?\n15. Про развитие на стороне фронта вопрос: архитектура, оптимизация проекта и проч: какие ресурсы смотрел?\n16. Вопрос по ЗП: если до 560 не получится, то хочу другую цифру озвучить в 251,000 и вот по какой причине: в прошлом месте работы у меня была ЗП в 240,000, а щас квартира подорожала, поэтому +10,000 к этой сумме; ещё 1000 рублей, как заклад ан инфляцию. А ещё 500 рублей — для личностного роста в материальном плане, как чистая прибавка к ЗП от уровня прошлой. Смогут ли они это сделать?\n17. Предложить ему заняться подбором квалифицированных сотрудников\n18. Спросить про размер уставного капитала\n19. Как он сморит на наличие 2-3 работ?\n20. Я хотел бы с вами покататься на лыжах или на сноуборде. Я сам на сноуборде катаюсь и компенсация в 150к, как будто бы, не совсем достаточно для того, чтобы покататься\n21. Есть ли в компании вертолёт? (Скажет, что нет). Я принесу столько денег компании, что и вертолёт появится. Собственно, я к чему: я хотел с вами улететь в горы на вертолёте, потом с вертолёта спрыгивать с парашютом и далее кататься по пухляку на сноуборде. Как ты на это смотришь?\n22. Как можно развить такие же софты, как у него? Я считаю, что сам вайб интервью задаётся интервьювером и у него это очень хорошо получается, располагает к себе и задаёт дружественную обстановку\n23. Дали оффер на 500к в тинькофф и 450 сбер, но я туда не пойду. Хотя, если вам надо, могу за 50% от оффера закинуть\n24. Сколько, как ты считаешь, можно заработать денег во фронтенд-разработке?\n25. Был ли он когда-нибудь в штатах? Спрашиваю потому что в последней моей компании я работал удалённо, но приехал как-то к ним на 2 месяца, где мы собирались вместе и курили траву (каннабис) (в этом моменте я шарил ему экран хрома, где гуглил, где легально можно это делать по штатам)\n26. Это были вопросы к Андрею; есть ещё Дмитрий — это PM и HR в одном лице; вопрос к нему: какие дальнейшие планы на своё развитие\n27. У тя на аватарке луна: входит ли в твои планы поездка на луну? Я предлагаю начать с вертолёта\n28. Сложно ли одновременно быть и HR, и PM'ом?\n29. Если сравнивать с биг-техами, ваш собес остался у меня в сердце. Многое для себя подчерпнул, многое запомнил\n30. В жизни главное позитив. Не важно, сойдёмся ли мы в зарплатных ожиданиях или нет, главное — что мы обменялись опытом и позитивом, а дальше, если оффер будет, работа пойдёт только вверх\n\n————————————————————————————————————————\nГоворили преимущественно про это:"
      },
      {
        "timestamp": "2025-02-12 13:55:48",
        "content": "2025-02-12 13:55:48\n Vsevolod -> 2071074234:\nКомпания: Сбер Казначейство\n\nЗП: пока не обсуждали\n\nВопросы: \nЧто такое переменные окружения?\nКакую IDE используете?\nКак взаимодействовал с git (консоль, UI)\nКак оцениваешь свой грейд?\nЕсли таску по времени не успеваешь сделать в срок какие твои действия?\nКак развиваешься в IT?\nдля чего package-lock.json?\nЧем отличается for от forEach?\nРазница == и ===\nМерджите ветки или делаете rebase?\nКак сузить тип в TS? что такое satisfies и чем от Record отличает...",
        "full_content": "2025-02-12 13:55:48\n Vsevolod -> 2071074234:\nКомпания: Сбер Казначейство\n\nЗП: пока не обсуждали\n\nВопросы: \nЧто такое переменные окружения?\nКакую IDE используете?\nКак взаимодействовал с git (консоль, UI)\nКак оцениваешь свой грейд?\nЕсли таску по времени не успеваешь сделать в срок какие твои действия?\nКак развиваешься в IT?\nдля чего package-lock.json?\nЧем отличается for от forEach?\nРазница == и ===\nМерджите ветки или делаете rebase?\nКак сузить тип в TS? что такое satisfies и чем от Record отличается?\nЗадачи:\nconsole.log(new Date(2000,1,1) == new Date(2000,1,1)) // что выведется (false) и как сделать чтобы было true \nРешение: \nпривести два объекта к строке, здесь же вопрос про глубокое и неглубокое копирование объекта\n\nconst array = [1,2,3];\n \nconst array2 = array.forEach((elem) => elem * 2).filter(item => item > 3);\n \nчто выведется? выведется TypeError так как forEach ничего не возвращает а filter не может пройтись по undefined\n\nпотом попросили исправить, делается через map\n\nconst array2 = array.map((elem) => elem * 2).filter(item => item > 3);\nЗдесь же вопрос можно ли пройтись forEach только по половине элементов \nОтвет: нельзя, потому что он итерируется по всем элементам\n\ninterface Todo {\n    id: number;\n    title: string;\n    done: boolean;\n}\n \nconst createNewTodo = (todo: Partial<Omit<Todo, 'id'>>): Todo => {\n    const id = useId();\n \n    return ({\n      title: todo.title,\n      done: todo.done,\n      id\n    })\n}\nОтрефакторить код и прикрутить типизацию здесь надо было, изначальный код задачи потерялся"
      },
      {
        "timestamp": "2025-01-31 18:28:52",
        "content": "2025-01-31 18:28:52\n Владислав -> 2071074234:\nКомпания: СБЕР\nвакансия: https://hh.ru/vacancy/116034557\nзп: не указано\n\nВопросы:\n - как писал тесты?\n - как настраивал ci-cd? (как писал Dockerfile, docker-compose, gitlab-ci.yml\n - говорили об архитектуре FSD\n - в каком файле описаны зависимости проекта с версиями\n - что описано в package.json и что в package-lock.json\n - какие плюсы вышли в 16 версии React\n - какие методы жизненных циклов можно заменить в современных хуках и как\n - отличие useMemo...",
        "full_content": "2025-01-31 18:28:52\n Владислав -> 2071074234:\nКомпания: СБЕР\nвакансия: https://hh.ru/vacancy/116034557\nзп: не указано\n\nВопросы:\n - как писал тесты?\n - как настраивал ci-cd? (как писал Dockerfile, docker-compose, gitlab-ci.yml\n - говорили об архитектуре FSD\n - в каком файле описаны зависимости проекта с версиями\n - что описано в package.json и что в package-lock.json\n - какие плюсы вышли в 16 версии React\n - какие методы жизненных циклов можно заменить в современных хуках и как\n - отличие useMemo от React.memo\n - что такое jsx\n - как работает redux\n - какие свойства display в css знаю\n - Семантическое версионирование (SemVer) - что это \n  (система версионирования програмного обеспечения)\n - что такое Babel"
      },
      {
        "timestamp": "2025-01-31 15:39:19",
        "content": "2025-01-31 15:39:19\n Матвей Захаров -> 2071074234:\nКомпания: Сбер (скрининг с фронтом)\nВакансия: https://spb.hh.ru/vacancy/116034557\nЗП: не обсуждалась\n\nПочти копия: https://t.me/c/2071074234/489/100942\n\nВопросы:\n- спрашивали преимущественно по опыту из резюме\n- тестирование (Jest, react-testing-library), snapshot тесты в react\n- Как был устроен CI/CD, как проходило code review \n- был ли опыт работы с Docker\n- был ли на проекте UI-kit\n- преимущества axios\n- хуки в React\n- зачем нужен package.jso...",
        "full_content": "2025-01-31 15:39:19\n Матвей Захаров -> 2071074234:\nКомпания: Сбер (скрининг с фронтом)\nВакансия: https://spb.hh.ru/vacancy/116034557\nЗП: не обсуждалась\n\nПочти копия: https://t.me/c/2071074234/489/100942\n\nВопросы:\n- спрашивали преимущественно по опыту из резюме\n- тестирование (Jest, react-testing-library), snapshot тесты в react\n- Как был устроен CI/CD, как проходило code review \n- был ли опыт работы с Docker\n- был ли на проекте UI-kit\n- преимущества axios\n- хуки в React\n- зачем нужен package.json и package json.lock\n- Семантическое версионирование\n- как отрендерил бы список при запросе по REST API длительностью 5 секунд (хуки, стейты для ошибки и загрузки)\n- что буду делать, если есть недопонимания с дизайнером, что буду делать, если нужно сверстать компонент, а дизайна ещё нет"
      },
      {
        "timestamp": "2025-01-30 06:17:08",
        "content": "2025-01-30 06:17:08\n Данил Красный -> 2071074234:\nНазвание компании: Сбер\nСсылка на вакансию: хр сама написала\nЗП: не обсуждалась\n\nВопросы:\n\n- Рассказать про то как браузер отрисовывает страницу\n- Преимущества GraphQL над REST\n- Коды ответа с сервера\n- cors\n- Git, git flow\n- merge vs rebase\n- inline vs block vs inline-block\n- flex vs grid\n- event loop\n- типы данных js\n- отличие function declaration от function expression, рассказать про стрелочную функцию\n- зачем react\n- useMemo, useCallback, me...",
        "full_content": "2025-01-30 06:17:08\n Данил Красный -> 2071074234:\nНазвание компании: Сбер\nСсылка на вакансию: хр сама написала\nЗП: не обсуждалась\n\nВопросы:\n\n- Рассказать про то как браузер отрисовывает страницу\n- Преимущества GraphQL над REST\n- Коды ответа с сервера\n- cors\n- Git, git flow\n- merge vs rebase\n- inline vs block vs inline-block\n- flex vs grid\n- event loop\n- типы данных js\n- отличие function declaration от function expression, рассказать про стрелочную функцию\n- зачем react\n- useMemo, useCallback, memo\n- зачем ts\n- interface vs type \n- webpack, module federation\n- рассказать про babel\n\nлайвкодинга не было"
      },
      {
        "timestamp": "2024-12-27 07:36:27",
        "content": "2024-12-27 07:36:27\n Egor -> 2071074234:\nКомпания: IBS(сбер)\nСсылка на вакансию: закрыли\nЗп: от 300\nЗапись: https://www.youtube.com/watch?v=jzV00LSW_rI",
        "full_content": "2024-12-27 07:36:27\n Egor -> 2071074234:\nКомпания: IBS(сбер)\nСсылка на вакансию: закрыли\nЗп: от 300\nЗапись: https://www.youtube.com/watch?v=jzV00LSW_rI"
      },
      {
        "timestamp": "2024-12-26 14:19:42",
        "content": "2024-12-26 14:19:42\n Egor -> 2071074234:\nКомпания: IBS(сбер)\nСсылка на вакансию: закрыли\nЗп: от 300\nЗадачи: \nfunction getStartDate(endDate: Date, n: number): Date | null {\n    let counter = n; \n    let startDate = endDate;\n\n    while (counter > 0) {\n        startDate = addDay(startDate, -1);\n        if (!isWeekend(startDate)) {\n            counter--;\n        }\n    }\n\n    return counter === 0 ? startDate : null;\n}\n\nпотом инет начал лагать, на этом закончился собес",
        "full_content": "2024-12-26 14:19:42\n Egor -> 2071074234:\nКомпания: IBS(сбер)\nСсылка на вакансию: закрыли\nЗп: от 300\nЗадачи: \nfunction getStartDate(endDate: Date, n: number): Date | null {\n    let counter = n; \n    let startDate = endDate;\n\n    while (counter > 0) {\n        startDate = addDay(startDate, -1);\n        if (!isWeekend(startDate)) {\n            counter--;\n        }\n    }\n\n    return counter === 0 ? startDate : null;\n}\n\nпотом инет начал лагать, на этом закончился собес"
      },
      {
        "timestamp": "2024-12-20 08:59:49",
        "content": "2024-12-20 08:59:49\n Egor -> 2071074234:\nКомпания: Сбер\nСсылка на вакансию: hr сама написала\nЗп: ???\nЗапись: https://youtu.be/YrRYjeXHfQQ",
        "full_content": "2024-12-20 08:59:49\n Egor -> 2071074234:\nКомпания: Сбер\nСсылка на вакансию: hr сама написала\nЗп: ???\nЗапись: https://youtu.be/YrRYjeXHfQQ"
      },
      {
        "timestamp": "2024-12-20 08:58:58",
        "content": "2024-12-20 08:58:58\n Egor -> 2071074234:\nКомпания: Сбер\nССылка на вакансию: закрыта \nЗп: от 330\nЗапись: https://youtu.be/ooxoRy2Rvko",
        "full_content": "2024-12-20 08:58:58\n Egor -> 2071074234:\nКомпания: Сбер\nССылка на вакансию: закрыта \nЗп: от 330\nЗапись: https://youtu.be/ooxoRy2Rvko"
      },
      {
        "timestamp": "2024-12-19 16:49:28",
        "content": "2024-12-19 16:49:28\n Egor -> 2071074234:\nКомпания: IBS(Сбер)\nСсылка на вакансию: закрыли вакансию \nЗп: от 330\nЗапись: https://www.youtube.com/watch?v=n9ktoVByUgU",
        "full_content": "2024-12-19 16:49:28\n Egor -> 2071074234:\nКомпания: IBS(Сбер)\nСсылка на вакансию: закрыли вакансию \nЗп: от 330\nЗапись: https://www.youtube.com/watch?v=n9ktoVByUgU"
      },
      {
        "timestamp": "2024-12-13 15:23:09",
        "content": "2024-12-13 15:23:09\n Damir -> 2071074234:\nСБЕР (Миграция SAP)\nЗП: озвучил 250k\nВакансия: https://hh.ru/vacancy/112544767 \n\n1) Расскажи о себе\n2) Спросит по резюме, что понравится\n\nПотом сразу лайфкод: \n1) Сгруппировать по датам\n2) Отсортировать по ключам\n3) Протипизировать функцию (скажет максимально переиспользуемо, лучше спросить, какие ключи вщ нужны будут, а то неоч понятно говорит, что вообще нужно)\n4) Написать небольшой реакт компонент с этими данными\n5) Оптимизация в реакт\n\n\nconst divisio...",
        "full_content": "2024-12-13 15:23:09\n Damir -> 2071074234:\nСБЕР (Миграция SAP)\nЗП: озвучил 250k\nВакансия: https://hh.ru/vacancy/112544767 \n\n1) Расскажи о себе\n2) Спросит по резюме, что понравится\n\nПотом сразу лайфкод: \n1) Сгруппировать по датам\n2) Отсортировать по ключам\n3) Протипизировать функцию (скажет максимально переиспользуемо, лучше спросить, какие ключи вщ нужны будут, а то неоч понятно говорит, что вообще нужно)\n4) Написать небольшой реакт компонент с этими данными\n5) Оптимизация в реакт\n\n\nconst divisions = [\n  {\n    name: 'Разработка',\n    tasks: [\n      {\n        id: 1,\n        status: 'in_progress',\n        date: '2023-01-01',\n        epics: 'epic1',\n        author: 'Иванов Иван',\n      },\n      {\n        id: 2,\n        status: 'completed',\n        date: '2023-01-02',\n        author: 'Иванов Иван',\n      },\n    ],\n  },\n  {\n    name: 'Тестирование',\n    tasks: [\n      {\n        id: 3,\n        status: 'waiting',\n        date: '2023-01-03',\n        author: 'Сидоров Сергей',\n      },\n      {\n        id: 4,\n        status: 'in_progress',\n        date: '2023-01-04',\n        author: 'Сидоров Сергей',\n        components: ['comp1', 'comp2'],\n      },\n      {\n        id: 5,\n        status: 'completed',\n        date: '2023-01-05',\n        author: 'Петрова Мария',\n      },\n    ],\n  },\n  {\n    name: 'Аналитика',\n    tasks: [\n      {\n        id: 3,\n        status: 'waiting',\n        date: '2023-01-03',\n        author: 'Сидоров Сергей',\n      },\n      {\n        id: 4,\n        status: 'in_progress',\n        date: '2023-01-04',\n        author: 'Иванова Анна',\n      },\n      {\n        id: 5,\n        status: 'completed',\n        date: '2023-01-05',\n        author: 'Петрова Мария',\n      },\n      {\n        id: 4,\n        status: 'in_progress',\n        date: '2023-01-04',\n        author: 'Иванова Анна',\n      },\n    ],\n  },\n];\n\n// Цель отобразить график сгруппированный по датам и отображающий количество задач в день\n// Задача подготовить данные для графика\n\n\n\ntype GroupByDate = <T extendes { tasks: { date: string }[] }[]> (arr: T) => [string, number][]\n\n\n\nconst groupByDate: GroupByDate = (arr) => {\n  const map = {};\n  arr.forEach((el) => {\n    el.tasks.forEach((task) => {\n      const date = task.date;\n\n      if (map[date]) {\n        map[date]++\n      } else {\n        map[date] = 1\n      }\n    })\n  })\n\n  const sortedDates = Object.keys(map).sort((a, b) => new Date(a) - new Date(b)).reduce((acc, val) => {\n    acc[val] = map[val]\n    return acc;\n  }, {});\n\n  return Object.entries(sortedDates)\n}\n\nconst Chart () => {\n  // реализация не важна\n}\n\nconst ChartPage = () => {\n  const [chartData, setChartData] = useState([])\n\n  useEffect(() => {\n    loadChartData();\n  }, [])\n\n  const loadChartData = () => {\n    return new Promise((res, rej) => res(divisions)).then((data) => {\n      const transformedData = groupByDate(data);\n      setChartData(transformedData)\n    })\n  }\n  \n  return <Chart value={chartData} />\n}"
      },
      {
        "timestamp": "2024-12-11 12:28:51",
        "content": "2024-12-11 12:28:51\n Mikhail Sorokin -> 2071074234:\nСбер Еаптека\nВакансия — https://hh.ru/vacancy/108965591\nЗп — на тот момент не обсуждалось, я называл желаемую сумму от 300 000 на руки",
        "full_content": "2024-12-11 12:28:51\n Mikhail Sorokin -> 2071074234:\nСбер Еаптека\nВакансия — https://hh.ru/vacancy/108965591\nЗп — на тот момент не обсуждалось, я называл желаемую сумму от 300 000 на руки"
      },
      {
        "timestamp": "2024-12-11 08:11:31",
        "content": "2024-12-11 08:11:31\n Tonidevs -> 2071074234:\nНазвание: СБЕР Миграция САП SAP\nссылка: https://hh.ru/vacancy/112544767 \nЗП: не обсуждали\nФидбек: не ответили\n\nвопросы и задачи: отсюда https://t.me/c/2071074234/489/47098\n- спросит про оптимизации реакт приложений\n- спросит про опыт, про задачи, скиллы итд\n\nможет дать ещё эту задачу:\n/* Дано мок массив из 5 элементов. В реальности апи выдает 10 тысяч + элементов\nНеобходимо сделать вывод списка курсов и реализовать функционал открытия модального окна\n...",
        "full_content": "2024-12-11 08:11:31\n Tonidevs -> 2071074234:\nНазвание: СБЕР Миграция САП SAP\nссылка: https://hh.ru/vacancy/112544767 \nЗП: не обсуждали\nФидбек: не ответили\n\nвопросы и задачи: отсюда https://t.me/c/2071074234/489/47098\n- спросит про оптимизации реакт приложений\n- спросит про опыт, про задачи, скиллы итд\n\nможет дать ещё эту задачу:\n/* Дано мок массив из 5 элементов. В реальности апи выдает 10 тысяч + элементов\nНеобходимо сделать вывод списка курсов и реализовать функционал открытия модального окна\n*/\n\nconst courseData = [\n  {\n    title: 'Основы программирования',\n    description: 'Курс для начинающих программистов, который поможет освоить основы программирования на JavaScript.',\n    duration: 10,\n    difficulty: 'beginner'\n  },\n  {\n    title: 'Продвинутый JavaScript',\n    description: 'Курс для опытных разработчиков, который поможет углубить знания в области JavaScript и освоить продвинутые техники.',\n    duration: 20,\n    difficulty: 'intermediate'\n  },\n  {\n    title: 'Frontend разработка',\n    description: 'Курс по фронтенд разработке, который поможет освоить HTML, CSS и JavaScript для создания веб-интерфейсов.',\n    duration: 40,\n    difficulty: 'intermediate',\n    prerequisites: ['Основы HTML', 'Основы CSS'], // Предварительные требования к курсу\n    instructors: ['<NAME>', '<NAME>'] // Преподаватели курса\n  },\n  {\n    title: 'Backend разработка',\n    description: 'Курс по backend разработке, который поможет освоить Node.js и другие технологии для создания серверной части веб-приложений.',\n    duration: 60,\n    difficulty: 'intermediate',\n    prerequisites: ['Основы программирования на JavaScript'] // Предварительные требования к курсу\n  },\n  {\n    title: 'Fullstack разработка',\n    description: 'Курс по fullstack разработке, который поможет освоить полный стек технологий для создания веб-приложений от начала до конца.',\n    duration: 80,\n    difficulty: 'advanced'\n  } \n];\n\ninterface IModal<T> extends {\n    course: T\n}\n\nconst Modal = <T extends {title: string}>({ course }:IModal<T>) => {\n  return <div style={{ position: 'fixed', inset: '15vh', background: 'gray', zIndex: 1000 }}>\n    <h1>Модальное окно</h1>\n    <div>\n       <button>действие1</button>\n       <button>действие2</button>\n       <button>действие2</button>\n    </div>\n  </div>\n}\n\ninterface IList {\n    title: string,\n    description: string,\n    duration: number,\n    difficulty: string,\n}\n\nconst List = ({courseData}):IList => {\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [selectedCourse, setSelectedCourse] = useState(null)\n    const [filter, setFilter] = useState(')\n\n    const openModal = (course) => {\n        serSelectedCourse(course)\n        setIsModalOpen(true)\n    }\n\n    const closeModal = (course) => {\n        setIsModalOpen(false)\n        serSelectedCourse(null)\n    }\n\n\n    const filteredCourse = courseData.filter(course => course.title.toLowerCase().includes(filter.tolowerCase))\n    \n\n    return (\n        <div>\n            <input\n                    type=\"text\"\n                    value={filter}\n                    placeholder=\"search\"\n                    onchange={(e) => setFilter(e.target.value)}\n            />\n            <ul>\n             courseData.map((course) = > (\n                <li key={course.title} onClick={() => openModal(course)l}>\n                    {course.title}\n                </li>\n                ))\n            </ul>\n            <Modal isOpen={isModalOpen} onClose={closemodal} course={selectedCourse}/>\n        </div>\n    )\n    \n}"
      },
      {
        "timestamp": "2024-11-27 14:31:31",
        "content": "2024-11-27 14:31:31\n Егор -> 2071074234:\nКомпания: IBS в Сбер в \"Пульс\" (Финал)\nВакансия: https://spb.hh.ru/vacancy/102216684\nЗП: 200+\n\nМного рассказывал про проект, про процессы в команде. Показывал storybook и компоненты\n\nСпросил про:\n- опыт написания UI компонентов\n- как проходило код ревью\n- что такое design token",
        "full_content": "2024-11-27 14:31:31\n Егор -> 2071074234:\nКомпания: IBS в Сбер в \"Пульс\" (Финал)\nВакансия: https://spb.hh.ru/vacancy/102216684\nЗП: 200+\n\nМного рассказывал про проект, про процессы в команде. Показывал storybook и компоненты\n\nСпросил про:\n- опыт написания UI компонентов\n- как проходило код ревью\n- что такое design token"
      },
      {
        "timestamp": "2024-11-24 11:20:24",
        "content": "2024-11-24 11:20:24\n George Nizamutdinow -> 2071074234:\nКомпания: SberTech (Сбер)\nВакания: https://hh.ru/vacancy/109472410\nЗП: не указана (просил от 240000р на руки)\n\nВопросы:\n1) Рассказать про опыт\n2) Был ли опыт написания своего UI кита\n3) Рассказать про свои достижения\n\nЗадачи:\n1) Вывести сумму всех \"value\" в дереве и сделать типизацию\n\n\nconst tree = {\n  left: {\n    left: {\n      left: {\n        right: {\n          left: {\n            value: 7,\n          },\n          right: {\n            value...",
        "full_content": "2024-11-24 11:20:24\n George Nizamutdinow -> 2071074234:\nКомпания: SberTech (Сбер)\nВакания: https://hh.ru/vacancy/109472410\nЗП: не указана (просил от 240000р на руки)\n\nВопросы:\n1) Рассказать про опыт\n2) Был ли опыт написания своего UI кита\n3) Рассказать про свои достижения\n\nЗадачи:\n1) Вывести сумму всех \"value\" в дереве и сделать типизацию\n\n\nconst tree = {\n  left: {\n    left: {\n      left: {\n        right: {\n          left: {\n            value: 7,\n          },\n          right: {\n            value: 14,\n          },\n          value: 66,\n        },\n        value: 23,\n      },\n      value: 90,\n    },\n    right: {\n      value: 67,\n    },\n    value: 34,\n  },\n  right: {\n    value: 11,\n  },\n  value: 16,\n};\n\nfunction treeValueSumm(value) {\n  // your code here\n  return 0;\n}\n\nconsole.log(treeValueSumm(tree));\nconsole.log(treeValueSumm(tree) === 328);\n\n\n\n2) Убрать повторения из строки\n\n\nconst sentence = \"Кккоооот Бааарссиккк зззапрыыгнннул   наааа зааабоооррррр\";\n\nfunction removeRepeats(value) {\n  // your code here\n  return \"Кот Барсик запрыгнул на забор\";\n}\n\nconsole.log(removeRepeats(sentence));\nconsole.log(removeRepeats(sentence) === \"Кот Барсик запрыгнул на забор\");\n\n\n\n3) Сделать мини-аналог jQuery\n\n\n// helpers.js\n//init code\nconst el = document.createElement(\"div\");\nel.className = \"js-node\";\ndocument.body.appendChild(el);\n\n\n\nimport \"./helpers\";\n\nfunction $(selector) {\n  //code here\n}\n\n// пример использования\n// const $node = $(\".js-node\");\n\n// $node.addClass(\"bordered\").html(\"<li>hello</li>\").toggleClass(\"disabled\").css({\n//   color: \"green\",\n//   padding: \"10px\"\n// });\n\n\n\n4) Сделать 10 запросов и вывести среднее время выполнения запроса и количество выполненных запросов.\n\n\nimport React from \"react\";\n\nexport function App() {\n  const [numOfRequests] = React.useState(10);\n  const [url] = React.useState(\"codesandbox.io\");\n\n  return (\n    <div>\n      <div>\n        <label>URL</label>\n        <input value={url} />\n      </div>\n      <div>\n        <label>Number of requests</label>\n        <input value={numOfRequests} />\n      </div>\n      <div>\n        <label>Avg response time</label>\n        <input />\n      </div>\n      <div>\n        <label>Requests made</label>\n        <input />\n      </div>\n      <button>Start</button>\n    </div>\n  );\n}"
      },
      {
        "timestamp": "2024-11-21 11:50:21",
        "content": "2024-11-21 11:50:21\n Maksim -> 2071074234:\nКомпания: Сбер                                                                                                                                                                                                                       Вакансия: https://hh.ru/vacancy/110444904                                                                                                                                                                                           ...",
        "full_content": "2024-11-21 11:50:21\n Maksim -> 2071074234:\nКомпания: Сбер                                                                                                                                                                                                                       Вакансия: https://hh.ru/vacancy/110444904                                                                                                                                                                                                                                                      Зп: до 350к                                                                                                                                                                                                                                       Вопрос расскажи про опыт и Задачи:                                                                                                                                                                                           const isAnagram = (firstString, secondString) => {\n   return firstString.toLowerCase().split('').sort().join('') ===\n   secondString.toLowerCase().split('').sort().join('')\n}\nconsole.log(isAnagram(\"foefet\", \"toffee\"));       // true\nconsole.log(isAnagram(\"Buckethead\", \"DeathCubeK\")); // true\nconsole.log(isAnagram(\"hello\", \"world\"));         // false\n\n\n/* 1. Что будет в консоли? */\nfunction sayHi() {\n  console.log(name) // undifiend\n  console.log(age)  //  Referens Errror\n  var name = \"Lydia\"\n  let age = 21\n}\nsayHi();\n\n/* 2. Что будет в консоли? */\nconst shape = {\n  radius: 10,\n  diameter() {\n    return this.radius * 2;\n  },\n  perimeter: () => 2 * Math.PI * this.radius\n};\n\nconsole.log(shape.diameter()); // 20\nconsole.log(shape.perimeter()); // NaN\n\n\n/* 3. Что будет в консоли? */\nlet c = { greeting: 'Hey!' };\nlet d;\nd = c;\nc.greeting = 'Hello';\nconsole.log(d.greeting); // Hello\n\n/* 4. Что будет в консоли? */\nconst person = { name: 'Lydia' };\n\nfunction greeting(age) {\n  console.log(`${this.name} is ${age}`);\n}\n\ngreeting.call(person, 21); //Lydia is 21\ngreeting.bind(person, 21); // ничего\n\n\n/* 5. Что будет в консоли? */\n\n(() => {\n  let x, y;\n  try {\n    throw new Error();\n  } catch (x) {\n    (x = 1), (y = 2);\n    console.log(x);\n  }\n  console.log(x);\n  console.log(y);\n})();\n\n\n/* 5. Что будет в консоли? */\nlet person1 = { name: 'Lydia' };\nconst members = [person1];\nperson1 = null;\n\nconsole.log(members); [{ name: 'Lydia' }]\n\n\n/* 6. Что будет в консоли? */\nconst person2 = {\n  name: 'Lydia',\n  age: 21\n};\n\nfor (const item in person2) {\n  console.log(item); \n}\n\n\n/* 7. Какое значение num? */\nconst num = parseInt(\"7*6\", 10);\n\n\n\n/* 8. Что будет в консоли? */\nfunction getInfo(member, year) {\n  member.name = 'Lydia';\n  year = 1998;\n}\n\nconst person3 = { name: 'Sarah' };\nconst birthYear = '1997';\n\ngetInfo(person3, birthYear);\n\nconsole.log(person3, birthYear);\n\n\n\n/* 8. Что будет в консоли? */\nfunction greeting() {\n  throw 'Hello world!';\n}\n\nfunction sayHiWithTryCatch() {\n  try {\n    const data = greeting();\n    console.log('It worked!', data);\n  } catch (e) {\n    console.log('Oh no an error:', e);\n  }\n}\n\nsayHiWithTryCatch();\n\n/* 9. Что будет в консоли? */\nfunction Car() {\n  console.log(this)    \n  //this.make = 'Lamborghini';\n // return { make: 'Maserati' };\n}\n\nconst myCar = new Car();\nconsole.log(myCar.make);\n\n\n/* 10. Что будет в консоли? */\nconst numbers = [1, 2, 3, 4, 5];\nconst [y] = numbers;\n\nconsole.log(y);\n\n<!-- /* 1. Что будет в консоли? */-->\n <div onclick=\"console.log('div')\">\n  <p onclick=\"console.log('p')\">\n    Кликни меня!\n  </p>\n</div>"
      },
      {
        "timestamp": "2024-11-19 19:29:57",
        "content": "2024-11-19 19:29:57\n Гладких Александр -> 2071074234:\nКомпания Сбер Bell Integrator 2 этап \nОбщение с менеджерами\nВакансия hr написала\nЗП: от 200\nВопросы\n- Расскажи о своем опыте \n- Причины ухода\n- как пришел во фронтенд как выбирал стэк какой учить\n- был ли опыты в бэкенде\n- был ли опыт настройки пайплайна\n- Потом был рассказ о своем продукте\n- готов ли поработать с CI-CD c релизами",
        "full_content": "2024-11-19 19:29:57\n Гладких Александр -> 2071074234:\nКомпания Сбер Bell Integrator 2 этап \nОбщение с менеджерами\nВакансия hr написала\nЗП: от 200\nВопросы\n- Расскажи о своем опыте \n- Причины ухода\n- как пришел во фронтенд как выбирал стэк какой учить\n- был ли опыты в бэкенде\n- был ли опыт настройки пайплайна\n- Потом был рассказ о своем продукте\n- готов ли поработать с CI-CD c релизами"
      },
      {
        "timestamp": "2024-11-19 10:59:54",
        "content": "2024-11-19 10:59:54\n Михаил -> 2071074234:\n// пример гласных: a, i, o, e, u, y\nconst findVowelsLength = str => {\n    if(!str) return 0;\n    \n    const vowelsMap = {\n        a:true, \n        i:true,\n         o:true, \n         e:true, \n         u:true,\n         y:true\n    }\n    \n    let count = 0;\n    \n    for(let i = 0; i < str.length; i++){\n        const cur = str[i].toLowerCase()\n        if(vowelsMap[cur]) count+=1\n    }\n    \n    return count\n}\n \nexpect(findVowelsLength('akksja')).toBe(2);\nexpe...",
        "full_content": "2024-11-19 10:59:54\n Михаил -> 2071074234:\n// пример гласных: a, i, o, e, u, y\nconst findVowelsLength = str => {\n    if(!str) return 0;\n    \n    const vowelsMap = {\n        a:true, \n        i:true,\n         o:true, \n         e:true, \n         u:true,\n         y:true\n    }\n    \n    let count = 0;\n    \n    for(let i = 0; i < str.length; i++){\n        const cur = str[i].toLowerCase()\n        if(vowelsMap[cur]) count+=1\n    }\n    \n    return count\n}\n \nexpect(findVowelsLength('akksja')).toBe(2);\nexpect(findVowelsLength('')).toBe(0);\nexpect(findVowelsLength(null)).toBe(0);\nexpect(findVowelsLength('aaaa12121212')).toBe(0);\n\n//----------------------------------\n\nconst proccess = arr => {\n    const anagramsMap = {}\n    \n    arr.forEach((el)=>{\n        const sortedEl = el.toLowerCase().sort();\n        \n        if(!anagramsMap[sortedEl]){\n            anagramsMap[sortedEl] = [el]\n        }else{\n            anagramsMap[sortedEl].push(el)\n        }\n        \n    })\n    \n    return Object.values(anagramsMap)\n}\n\n// Анаграмма - это слово, образованное путём перестановки букв, составляющих другое слово\n// Дан массив строк, необходимо вернуть массив с массивами анаграмм, которые встречаются в массиве строк более 1 раза\nprocess(['xyz','abc', 'bca', 'zyx', 'klm', 'cab', 'zxy', 'xzy']) // [['xyz', 'zyx', 'zxy', 'xzy'], ['bca', 'cab']]\n\n\n\n//------------------\nconst node = new Jquery(\".some-block\")\n\nconst node = $(\".some-block\");\n \nnode\n    .appendClass(\".additional-class\")\n    .setHTML(\"<h1>Hello, World!</h1>\")\n    .onClick(() => {\n        console.log(\"click\");\n    })\n    \n    \n    \nclass Jquery {\n    this.node = null\n    \n    constructor(selector){\n        this.node = document.querySelector(selector)\n    }\n    \n    \n    appendClass:(cn) => {\n        this.node.classlist.add(cn)\n        return this\n    }\n    \n    setHTML: (html)=>{\n        this.node.innerHTML = html\n        return this\n    }\n    \n    onClick: (cb) => {\n       this.node.addEventListener(\"click\", cb)\n       return this\n    }\n}\n\n\n\n--------\n\n\nfunction fetchData() {\n    return fetch('api/tada.json');\n     \n}\n//  ['hello', 'again', 'hello', 'Just called to say hello']\n \n \nfunction Component() {\n    const [data, setData] = useState([]);\n    \n    useEffect(() => {\n        const getData = async () => {\n            try {\n                const res = await fetchData();\n                const data = await res.json()\n                setData(data);\n            } catch(e){}\n        }\n        \n        getData();\n    }, [])\n    \n     \n    return <div>\n        \n        <ul>\n            {data.map((el, idx) => <li key={idx}>{el}</li>)\n        </ul>\n    </div>\n}\n\n\n\n//--------------\n\n\nexport const InfoWindow = ({ errors }) => {\n    const [showErrors, setShowErrors] = useState(false);\n     \n    const onToggleErorr = () => setShowErrors(showErrors => !showErrors);\n \n    return (\n        <div>\n            <h2>Attention</h2>\n            <p>You have error in your form data. Please, correct the following mistakes:</p>\n            <button onClick={onToggleErorr}>Toggle to see error</button>\n            {showErrors && <ul>{errors.map((item, idx) => <li key={idx}>{item}</li>)}</ul>}\n        </div>\n    )\n}\n\n\n\n\n// ------\n\n\n\nconst numbers = [2,3,4,1,7,6,19];\nconst target = 10;\n \nfunction findTwoNumbers(arr, target) {\n    const numsMap = new Map()\n    \n    for(let i = 0; i < arr.length; i++){\n        const cur = arr[i]\n        \n        if(numsMap.has(target - cur)){\n            return [cur, target - cur]\n        } else {\n            numsMap.set(cur, i);\n        }\n    }\n    \n    return []\n};\n \nfindTwoNumbers(numbers, target); // [3, 7]\nКомпания: СБЕР SberPrime\nЗП: 300k\n\nВопросы:\n- Хуки React\n- useLayoutEffect vs useEffect\n- key\n- cookie / localStoraga / sessionStoraga / indexDb\n- JWT\n- как реализовать JWT авторизацию\n\n+ задачи на JS / refactoring"
      },
      {
        "timestamp": "2024-11-14 19:37:47",
        "content": "2024-11-14 19:37:47\n Гладких Александр -> 2071074234:\nКомпания Сбер UI/UX Team 2 этап \nОбщение с РО\nВакансия https://hh.ru/vacancy/108949751\nЗП: от 200\nВопросы\n- В основном болтология рассказывали о проекте\n- расскажи за опыт в кратце\n- Причины ухода\n- Что ждешь от нового места работы\n- Есть ли план своего развития в целом куда хочешь расти\n- Какие у  тебя увлечения хобби\n- Что считаешь болле важным качество или срок\n- Что будешь делать когда таски раньше завершения спринта выполнил\n- Расскажи п...",
        "full_content": "2024-11-14 19:37:47\n Гладких Александр -> 2071074234:\nКомпания Сбер UI/UX Team 2 этап \nОбщение с РО\nВакансия https://hh.ru/vacancy/108949751\nЗП: от 200\nВопросы\n- В основном болтология рассказывали о проекте\n- расскажи за опыт в кратце\n- Причины ухода\n- Что ждешь от нового места работы\n- Есть ли план своего развития в целом куда хочешь расти\n- Какие у  тебя увлечения хобби\n- Что считаешь болле важным качество или срок\n- Что будешь делать когда таски раньше завершения спринта выполнил\n- Расскажи про конфликт и как решал"
      },
      {
        "timestamp": "2024-11-14 19:26:49",
        "content": "2024-11-14 19:26:49\n Гладких Александр -> 2071074234:\nСбер (Bell Integrator)\n Вакансия: hr сама написала\n Вопросы \n  - Расскажи про свой опыт в кратце\n  - Проекты команды как взаимодействовали\n  \n  - Задачи\n  \n  var a = 10\n   function foo() {\n   a = 5\n  }\nНазови все способы сделать перменную а недоступной для изменений\n \n  console.log('' || {})\n  console.log('' ?? {})\n  \n  Что такое ?? и что будет в консоли\n  \n  console.log(this.user.name)\n  \n  что будет в консоли \n  как сделать чтобы был undefi...",
        "full_content": "2024-11-14 19:26:49\n Гладких Александр -> 2071074234:\nСбер (Bell Integrator)\n Вакансия: hr сама написала\n Вопросы \n  - Расскажи про свой опыт в кратце\n  - Проекты команды как взаимодействовали\n  \n  - Задачи\n  \n  var a = 10\n   function foo() {\n   a = 5\n  }\nНазови все способы сделать перменную а недоступной для изменений\n \n  console.log('' || {})\n  console.log('' ?? {})\n  \n  Что такое ?? и что будет в консоли\n  \n  console.log(this.user.name)\n  \n  что будет в консоли \n  как сделать чтобы был undefined\n  \n  что такое каррирование\n  \n  const a = {key: 'a'}, b = {key: 'b'}, c = {key: 'c'}\n  a[b] = c\n  a[c] = b\n   console.log(a[b], a[c])\n  что будет в консоли\n  \n  function foo(a) {\n   console.log(b)\n       return  {\n           foo: (b) => foo(b)\n   }\n  }\n   foo(1).foo(2).foo(3).foo(4)\n  что в консоли\n  \n  написать кастомный промис который резолвит 1\n  вопросы по промисам\n  \n  <Component func={this.foo}/>\n  <Component func={() => this.foo()}/>\n  в чем разница что лучше\n  \n  useEfect(() => {\n   console.log(1)\n  \n  return () => {\n   console.log(2)\n  }\n  }, [name])\n  порядок логов\n  \n  использовал abourt controller\n  \n  useEffect(() => {\n  const controller = new AbortController();\n  dispatch(getData(controller.signal));\n  return () => {\n   controller.abort(); // Отменяет запрос при размонтировании компонента\n   };\n  }, []);\n  \n  - зачем нужен combineReducer\n  \n  import {style} from './style.less'\n  почему мы можем так написать\n  будет ли ругаться ts и как исправить\n  \n  try {\n  } catch (error: ?) {\n  }\n  как типизировать error и почему так\n  - какие утилити тайп знаешь\n  \n   const props: IProps<Record<EState, number>> = {\n    value: {\n        [EState.ONE]: 1,\n        [EState.TWO]: 2,\n        [EState.THREE]: 3\n }\n};"
      },
      {
        "timestamp": "2024-11-12 18:20:57",
        "content": "2024-11-12 18:20:57\n Гладких Александр -> 2071074234:\nКомпания Сбер UI/UX Team \nВакансия https://hh.ru/vacancy/108949751\nЗП: от 200\nВопросы\n- расскажи за опыт\n- расскажи про интересные задачи которые приходилось делать\n- как веб-сокеты в проект подключали\n- в целом по резюме за опыт идут\n- почему меняешь место работы\n- про Virtual DOM и Реконсилатион\n- Для чего нужен Context в реакт где бы использовал\n- Что такое чистый компонент пример\n- React.memo\n- Управляемые и неуправляемые компоненты для ч...",
        "full_content": "2024-11-12 18:20:57\n Гладких Александр -> 2071074234:\nКомпания Сбер UI/UX Team \nВакансия https://hh.ru/vacancy/108949751\nЗП: от 200\nВопросы\n- расскажи за опыт\n- расскажи про интересные задачи которые приходилось делать\n- как веб-сокеты в проект подключали\n- в целом по резюме за опыт идут\n- почему меняешь место работы\n- про Virtual DOM и Реконсилатион\n- Для чего нужен Context в реакт где бы использовал\n- Что такое чистый компонент пример\n- React.memo\n- Управляемые и неуправляемые компоненты для чего и где использовал\n- Какие хуки знаешь\n- useRef для чего и где использовал\n- Какие делал свои кастомные хуки\n- Правила реализации кастомных хуков\n- useEffect зачем нужен (рассказывай все что знаешь)\n- Какие псевдоэлементы и псевдоклассы знаешь и используешь\n- Назови все свойства флекс какие знаешь\n- Когда использовать флекс когда грид\n- Что такое промис и все что знаешь\n- Методы промиса\n\n\nЗадачи \n 1. \n\nconst Child = () => {\n  useEffect(() => {\n    console.log('3')\n  }, [])\n  console.log('4')\n\n  return <div>Child</div>\n}\n\nconst App = () => {\n  console.log('1')\n\n  useEffect(() => {\n    console.log('2')\n  }, [])\n\n  return (\n    <div>\n      Parent\n      <Child/>\n    </div>\n  )\n}\n\nпорядок логов,  что сделать чтобы чтобы 2 была раньше 3\n\n\n2. реализовать компонент UserWrapper\n\ninterface UserWrapperProps {\n    username: string;\n    children: (user: User | null) => React.Node\n}\n\nexport const UserWrapper: React.FC<UserWrapperProps> = ({ username, children }) => {\n    const [user, setUser] = useState<User | null>(null);\n\n    useEffect(() => {\n        fetchUser(username)\n          .then(user => setUser(user));\n    }, [username]);\n\n    if (loading) {\n        return <Loader />;\n    }\n\n    return (\n      <>\n        {children(user)}\n      </>\n     )\n};\n\n\nдополнительно как можно отменить запрос (abort controller)\n\n3. отрефакторить проект https://stackblitz.com/edit/react-ts-kadbze?file=App.tsx"
      },
      {
        "timestamp": "2024-11-06 15:39:05",
        "content": "2024-11-06 15:39:05\n Mike -> 2071074234:\nКомпания: Сбер УВХД \nСначала собеса попросили расшарить ВЕСЬ ЭКРАН \nЗП:200к \nВопросы: \n1.Работал ли с webpack \n2.Работал ли с микрофронтами \n3.Самая запоминающаяся задача за время работы \n4.Дали кусок кода на реакте, посмотреть что не так и что бы иправил\nуже исправленный\n    const getPosts = async () => { \n        const data = await getData(\"posts\"); \n        setPosts(data); \n    }; \n \n    const getComments = async () => { \n        const data = await get...",
        "full_content": "2024-11-06 15:39:05\n Mike -> 2071074234:\nКомпания: Сбер УВХД \nСначала собеса попросили расшарить ВЕСЬ ЭКРАН \nЗП:200к \nВопросы: \n1.Работал ли с webpack \n2.Работал ли с микрофронтами \n3.Самая запоминающаяся задача за время работы \n4.Дали кусок кода на реакте, посмотреть что не так и что бы иправил\nуже исправленный\n    const getPosts = async () => { \n        const data = await getData(\"posts\"); \n        setPosts(data); \n    }; \n \n    const getComments = async () => { \n        const data = await getData(\"comments\"); \n        setComments(data); \n    }; \n \n    getPosts(); \n    getComments(); \n}, []);\n5.UseEffect vs UseLayoutEffect \n6.Как в одном запросе сделать разделение\n(1.разделить сами запросы - для постов и комметов,  \n2. Использовать методы промисов\n    const fetchData = async () => { \n        const [postData, commentData] = await Promise.all([ \n            getData(\"posts\"), \n            getData(\"comments\"), \n        ]); \n        setPosts(postData); \n        setComments(commentData); \n    }; \n    fetchData(); \n}, []);\n7.all vs allsettled vs race vs any \n8.Реализовать функцию фибонначи, но не через рекурсию \nfunction fibonacci(n) {    \nif (n <= 0) return 0; \n    if (n === 1) return 1; \n    let a = 0; \n    let b = 1; \n    for (let i = 2; i <= n; i++) { \n        const www = b; \n        b = a + b; \n        a = www; \n    } \n    return b; \n} \n9.Погружение/всплытие \n10.Реализуй функцию, чтобы получить значение как в консоле \nconst flattenedArray = nestedArray.flat(); \nconsole.log(flattenedArray); \n// Output: [0, 1, 2, 3, 4, 5] \nКак мог бы реализовать её по-другому?(через цикл) \n11.реализовать debouced \n12.bind / call / apply \nP.S. т.к. шарил весь экран в середине собеса попросил показать ХРОМ И ЗАТЕМ ЗАКРЫТЬ ЕГО \nбез записи)"
      },
      {
        "timestamp": "2024-11-06 14:56:01",
        "content": "2024-11-06 14:56:01\n Гасим Мурасов -> 2071074234:\nкомпания: Сбер\nзп: 250 000\nвакансия: пригласил друг по рефералке\nвидео: https://youtu.be/tKMeOglkUms",
        "full_content": "2024-11-06 14:56:01\n Гасим Мурасов -> 2071074234:\nкомпания: Сбер\nзп: 250 000\nвакансия: пригласил друг по рефералке\nвидео: https://youtu.be/tKMeOglkUms"
      },
      {
        "timestamp": "2024-11-03 11:22:42",
        "content": "2024-11-03 11:22:42\n Artyom Sozykin -> 2071074234:\nКомпания: Лига Цифровой Экономики (сбер)\nВакансия: https://hh.ru/vacancy/107380873\nЗП: 200к\nВопросы:\n 1. Чем отличается var let const\n 2. Можещь ли ты изменять объект в const\n 3. Что такое generic\n 4. Для чего нужны enum\n 5. Как можно скопировать объект?\n 6. Какие есть минусы у копирования объекта через json\n 7. Что такое garbage коллекторы\n 8. Что такое слабые ссылки?\n 9. Зачем нужен отрибут key?\n 10. setState асинхронная или синхронная?\n 11. Ч...",
        "full_content": "2024-11-03 11:22:42\n Artyom Sozykin -> 2071074234:\nКомпания: Лига Цифровой Экономики (сбер)\nВакансия: https://hh.ru/vacancy/107380873\nЗП: 200к\nВопросы:\n 1. Чем отличается var let const\n 2. Можещь ли ты изменять объект в const\n 3. Что такое generic\n 4. Для чего нужны enum\n 5. Как можно скопировать объект?\n 6. Какие есть минусы у копирования объекта через json\n 7. Что такое garbage коллекторы\n 8. Что такое слабые ссылки?\n 9. Зачем нужен отрибут key?\n 10. setState асинхронная или синхронная?\n 11. Что делает strictMode в React\n 12. Где хранить refresh token?"
      },
      {
        "timestamp": "2024-10-29 10:34:04",
        "content": "2024-10-29 10:34:04\n Вадим -> 2071074234:\nКомпания : Сбер(что-то для инкассаторов)\nЗп: не обсуждали\nВакансия: https://hh.ru/vacancy/108070756\nВопросы: про тех опыт\nЗадачи: на просимисы, и походу вопросы к нему\n- задача затянуть себе репу, развернуть и реализовать запрос за данными и их отобразить( курсы валют) и потом спрашивал по по архитектуре как бы я сделал если бы из бэка данные менялись бы а у нас клиент лег, как можно сделать так, чтобы ничего не падало.",
        "full_content": "2024-10-29 10:34:04\n Вадим -> 2071074234:\nКомпания : Сбер(что-то для инкассаторов)\nЗп: не обсуждали\nВакансия: https://hh.ru/vacancy/108070756\nВопросы: про тех опыт\nЗадачи: на просимисы, и походу вопросы к нему\n- задача затянуть себе репу, развернуть и реализовать запрос за данными и их отобразить( курсы валют) и потом спрашивал по по архитектуре как бы я сделал если бы из бэка данные менялись бы а у нас клиент лег, как можно сделать так, чтобы ничего не падало."
      },
      {
        "timestamp": "2024-10-28 18:34:49",
        "content": "2024-10-28 18:34:49\n Sergey Chizhikov -> 2071074234:\nКомпания: Сбер\nЗП: 250к\nВакансия: hr написала\n\nВопросы:\n+var, let, const\n+Ссылочные типы данных\n+Отличия функций\n+call, apply, bind\n+чистые функции\n+асинхронность в js\n+расскажи про React\n+Хуки React\n+жизненный цикл компонента\n+ база по TypeScript\n+webSocket, longPolling, Polling\n\nЗадачка на запрос данных и их сортировку",
        "full_content": "2024-10-28 18:34:49\n Sergey Chizhikov -> 2071074234:\nКомпания: Сбер\nЗП: 250к\nВакансия: hr написала\n\nВопросы:\n+var, let, const\n+Ссылочные типы данных\n+Отличия функций\n+call, apply, bind\n+чистые функции\n+асинхронность в js\n+расскажи про React\n+Хуки React\n+жизненный цикл компонента\n+ база по TypeScript\n+webSocket, longPolling, Polling\n\nЗадачка на запрос данных и их сортировку"
      },
      {
        "timestamp": "2024-10-25 14:16:52",
        "content": "2024-10-25 14:16:52\n Sergey Chizhikov -> 2071074234:\n- компания: сбер\n-зп: просил 250к\n-вакансия: нет\n\nВопросы:\n+Был один вопрос про различие GET и POST\n+Задача на код ревью\n+Задача на запрос юзеров и сортировку по имени",
        "full_content": "2024-10-25 14:16:52\n Sergey Chizhikov -> 2071074234:\n- компания: сбер\n-зп: просил 250к\n-вакансия: нет\n\nВопросы:\n+Был один вопрос про различие GET и POST\n+Задача на код ревью\n+Задача на запрос юзеров и сортировку по имени"
      },
      {
        "timestamp": "2024-10-23 04:28:18",
        "content": "2024-10-23 04:28:18\n Сергей -> 2071074234:\nСбер - встреча с командой(проект связанный с банкоматами)\nЗП: от 200к, дальше не обсуждали\n\nСпрашивали про опыт довольно подробно и поведенческое(минут 40, остальные 20 минут про проект рассказывают)\n- расскажи про последнее место работы\n- что будешь делать если задача описана не подробно(допустим, есть модалка где можно выбрать пользователя и группу, там вот две кнопки эти)\n- были ли конфликты, предлагал ли новые решения, как аргументировал их(если там...",
        "full_content": "2024-10-23 04:28:18\n Сергей -> 2071074234:\nСбер - встреча с командой(проект связанный с банкоматами)\nЗП: от 200к, дальше не обсуждали\n\nСпрашивали про опыт довольно подробно и поведенческое(минут 40, остальные 20 минут про проект рассказывают)\n- расскажи про последнее место работы\n- что будешь делать если задача описана не подробно(допустим, есть модалка где можно выбрать пользователя и группу, там вот две кнопки эти)\n- были ли конфликты, предлагал ли новые решения, как аргументировал их(если там тимлид допустим говорил что надо по-другому делать)\n- про опыт подробно реализацию спрашивали(в моем случае интересная задача была с dnd, про нее, где вешались обработчики, как обрабатывались, где сохранялись)\n- немного по TS пробежались, был ли TS, зачем он нужен, на задачу с использованием Omit, что такое дженерики, зачем нужны\n- как обучаешься, где смотришь новую информацию\n- почему уходишь с текущего места работы\n- предупредил ли об уходе\n- как будешь выбирать офферы, какие критерии\n- как с ui kit работа была, где он хранился на проекте\n- какая архитектура была\n- что такое redux-rtk, как внутри реализован\n- работал ли с нативным redux, graphQL, effector, webpack, vite\n- если на текущем месте работы предложили бы повысить зарплату, все равно ушел бы?"
      },
      {
        "timestamp": "2024-10-22 13:39:26",
        "content": "2024-10-22 13:39:26\n аыеъа -> 2071074234:\nСбер (проект аналог нетмонет альфабанка, но в сбере)\nЗП: Не обсуждали\nВакансия: Написал HR\nВопросы:\nБыла только одна задача на 1.5 - 2 часа\nНа основе Rick And Morty API (слышал что могут дать Pokemon API) написать приложение на React TypeScript\n// request \nhttps://rickandmortyapi.com/api/character/page=1\n // api\nhttps://rickandmortyapi.com/documentation/#character\n // 1. получить список персонажей и отрисовать карточки с аватаром персонажа // и его имене...",
        "full_content": "2024-10-22 13:39:26\n аыеъа -> 2071074234:\nСбер (проект аналог нетмонет альфабанка, но в сбере)\nЗП: Не обсуждали\nВакансия: Написал HR\nВопросы:\nБыла только одна задача на 1.5 - 2 часа\nНа основе Rick And Morty API (слышал что могут дать Pokemon API) написать приложение на React TypeScript\n// request \nhttps://rickandmortyapi.com/api/character/page=1\n // api\nhttps://rickandmortyapi.com/documentation/#character\n // 1. получить список персонажей и отрисовать карточки с аватаром персонажа // и его именем \n// 2. реализовать пагинацию по списку (стрелки назад и вперед) (\n// 3. добавить поля с вводом имени и селект с полом (женский и мужской) // 4. реализовать фильтрацию по полу и имени."
      },
      {
        "timestamp": "2024-10-22 11:31:32",
        "content": "2024-10-22 11:31:32\n Artyom Sozykin -> 2071074234:\nКомпания: Сбер (Экспресс)\nВакансия: -\nЗП: 250к\nВопросы:\n 1. С какими UIkit поработал?\n 2. Что такое ООП?\n 3. Расскажи про принципы SOLID?\n 4. С какими языками программирования работал?\n 5. С какими сборшиками работал?\n 6. Тесты делал?\n 7. Что у класса можно протестировать?\n 8. Что такое функция-конструктор?\n 9. Можно ли тестровать геттеры и сеттеры?\n 10. Какие структуры данных изучал?\n 11. Что такое O большая\n 12. Какие виды алгоритмов бывают по...",
        "full_content": "2024-10-22 11:31:32\n Artyom Sozykin -> 2071074234:\nКомпания: Сбер (Экспресс)\nВакансия: -\nЗП: 250к\nВопросы:\n 1. С какими UIkit поработал?\n 2. Что такое ООП?\n 3. Расскажи про принципы SOLID?\n 4. С какими языками программирования работал?\n 5. С какими сборшиками работал?\n 6. Тесты делал?\n 7. Что у класса можно протестировать?\n 8. Что такое функция-конструктор?\n 9. Можно ли тестровать геттеры и сеттеры?\n 10. Какие структуры данных изучал?\n 11. Что такое O большая\n 12. Какие виды алгоритмов бывают по сложности\n 13. Что происходит когда вбиваешь в адресную строку сайт и нажимешь кнопку enter?\n 14. Что будет если не указать размеры width и heigth картинки в html?\n 15. Что такое this?\n 16. Что такое прототипное наследование?\n 17. Какие есть особенности прототипов?\n\nЗадачи 1\nКаким цветом будет Text 1 и Text 2?\nПравильный ответ: оба будут блу\n\nЗадача 2\nПравильный ответ: name будет ho, потому что присваивается новый объект переменной firstObj, а secondObj сохраняет ссылку на самый первый объект\n\nЗадача 3\n// start end resolve setTimeout\n\nЗадача 4\nПравильный ответ: barfoo barbar. Дело в том, что super воспроизводит конструктор из А, создается name = foo, а getName берет реализацию из this, вот и получается barfoo, а затем name заменяется на bar и вызывается снова getName из текущего контекста barbar\n\nЗадача 5\nРешение 1:  return arr.concat(arr)\nРешение 2: Чтобы оптимизировать по памяти return arr.push(arr)"
      },
      {
        "timestamp": "2024-10-22 10:26:06",
        "content": "2024-10-22 10:26:06\n Вадим -> 2071074234:\nКомпания:Сбер(1 этап) \nВакансия: они направляют в команды после первого этапа \nЗП: не обсуждали \nВопросы: \n-про последнее место работы; \n-затем css, html( приоритетные selects, семантика, доступность, как скрыть элемент, в чем отличие display:none от других свойств сокрытия элемента, задачку какой фон был уже скидывали ее в эту группу)\n- js( var,let,const, promises, ооп, event loop, задачки такие же были и в этой группе https://t.me/c/2071074234/489/7717...",
        "full_content": "2024-10-22 10:26:06\n Вадим -> 2071074234:\nКомпания:Сбер(1 этап) \nВакансия: они направляют в команды после первого этапа \nЗП: не обсуждали \nВопросы: \n-про последнее место работы; \n-затем css, html( приоритетные selects, семантика, доступность, как скрыть элемент, в чем отличие display:none от других свойств сокрытия элемента, задачку какой фон был уже скидывали ее в эту группу)\n- js( var,let,const, promises, ооп, event loop, задачки такие же были и в этой группе https://t.me/c/2071074234/489/77175) \n-ts( typeguard, утилитные типы дженерик, задачку тоже на типы несложную , интерфейс отличие от type) \n-react(хуки, правила хуков, реконселейшен, fiber, и так же задачка) \n- про монолит и микросервисы \n- http and https"
      },
      {
        "timestamp": "2024-10-20 16:14:29",
        "content": "2024-10-20 16:14:29\n Maksim -> 2071074234:\nСбер для Экспертов (Софт)                                                                                                                                                                                                                               Вакансия:https://hh.ru/vacancy/107892762                                                                                                                                                                         ...",
        "full_content": "2024-10-20 16:14:29\n Maksim -> 2071074234:\nСбер для Экспертов (Софт)                                                                                                                                                                                                                               Вакансия:https://hh.ru/vacancy/107892762                                                                                                                                                                                                                                                зп: 230                                                                                                                                                                                                                                             Вопросы: 1)Расскажи про последнее место работы 2)как работали(Scrum(ретро и т.д)) 3)Расскажи про задачи которыми гордишься 4)Как брал задачи + про перекрестное код ревью 5)Как с беком взаимодействовал (swagger) 6)Как ты считаешь должен ли разработчик общаться с заказчиком!? 7)После показали презентацию продукта,команду и стек."
      },
      {
        "timestamp": "2024-10-20 16:02:32",
        "content": "2024-10-20 16:02:32\n Maksim -> 2071074234:\nibs (2ой этап в сбер тех+софт)                                                                                                                                                                                                Вакансия: ссылки нет                                                                                                                                                                                                                       ...",
        "full_content": "2024-10-20 16:02:32\n Maksim -> 2071074234:\nibs (2ой этап в сбер тех+софт)                                                                                                                                                                                                Вакансия: ссылки нет                                                                                                                                                                                                                           Зп:250к                                                                                                                                                                                                                                             Вопросы: 1)Расскажи про опыт. 2)Как на проекте формировали папки и файлы 3)Был на проекте Storibook про него 4)Писали тесты и какие ,какое покрытие 5)Отличие стрелочной от Fn и напиши пример(прикриплю в конце) 6)Про key в React 7)В React перерисовки (Пропс изминение и т.д) 8)Про хуки (memo поверхностное сравнение делает) 9)useEffect подробно(про жизненные циклы) \nconst obj = {\n  name: \"Alice\",\n  greet: function() {\n    const sayHello = () => console.log(this.name);\n    sayHello();\n  }\n};\n\nobj.greet(); // Выведет: Alice\nlet i = 10;\nconst arr = [];\n\nwhile(--i){\n    let index = i  // исправление\n    arr.push(() => {\n      console.log(i)\n    })\n}\n\narr[2](); // 0  выведет 0\nsetTimeout(() => {\n  console.log(1);\n}, 0);\n\n\nconst p = new Promise((resolve) => {\n     console.log(2);\n     resolve();\n});\n\n\np.then(() => { console.log(3) }).then(() => { console.log(4); });\n\nconsole.log(5)\n\n// 2 5 3 4 1\nconst getFetchTime = (fetch) => {\n   const startTime = Date.now()\n\n   return fetch().then(response => { const endTime = Date.now();  return endTime - startTime })\n}\n\ngetFetchTime(fetch).then(diffTime => { log(diffTime); })"
      },
      {
        "timestamp": "2024-10-20 10:35:41",
        "content": "2024-10-20 10:35:41\n аыеъа -> 2071074234:\nСбер \nЗп: не обсуждали\nВакансия: написала hr\nВопросы:\nРассказать про разные протоколы\nРендеринг страницы в браузере\nЗадачи теже самые что и тут, но были еще\nНаписать свой promise any\nОстальные прикрепил картинкой",
        "full_content": "2024-10-20 10:35:41\n аыеъа -> 2071074234:\nСбер \nЗп: не обсуждали\nВакансия: написала hr\nВопросы:\nРассказать про разные протоколы\nРендеринг страницы в браузере\nЗадачи теже самые что и тут, но были еще\nНаписать свой promise any\nОстальные прикрепил картинкой"
      },
      {
        "timestamp": "2024-10-18 05:08:09",
        "content": "2024-10-18 05:08:09\n Сергей -> 2071074234:\n- Сбер(не помню какой именно)\n- Первый этап\n- ЗП: 200+\n- Успех: по не дали ответ(Скорее всего не прошел, повалился на TS лайвкоде)\nБыли вопросы по всем блокам.\n- Доступность\n- Button vs Link при их стилизации\n- DOM, CSSOM\n- Как страница отрисовывается(ip, dns, repaint, reflow)\n- Как изолировать стили, Shadow Dom\n- Замыкание\n- let,var,const\n- This\n- Fiber\n- Pick, Omit, Extract, Exclude, Partial, Required\n- Key реакт\n- WebSocket, SSE, SSR, Лонг пулинг\n- N...",
        "full_content": "2024-10-18 05:08:09\n Сергей -> 2071074234:\n- Сбер(не помню какой именно)\n- Первый этап\n- ЗП: 200+\n- Успех: по не дали ответ(Скорее всего не прошел, повалился на TS лайвкоде)\nБыли вопросы по всем блокам.\n- Доступность\n- Button vs Link при их стилизации\n- DOM, CSSOM\n- Как страница отрисовывается(ip, dns, repaint, reflow)\n- Как изолировать стили, Shadow Dom\n- Замыкание\n- let,var,const\n- This\n- Fiber\n- Pick, Omit, Extract, Exclude, Partial, Required\n- Key реакт\n- WebSocket, SSE, SSR, Лонг пулинг\n- Next плюсы минусы отличие от react\n- С какими БД работал\n- WebSocket/Vite\n- Перечисли все команды, которые знаешь с git\n- В чем плюс TS\n- Спрайты\n- хуки\n- uselayoutEffect vs useEffect\n- Virtual Dom, реконсилейшин\n- Как оптимизировать любое приложение(не только React)\n- Специфичность \n- Display\n- Дженерики\n\nЗадачи:\n// 1) после монтирования асинхронно получить число и вывести его\n// 2) выводить текущее значение вертикального скролла окна (window.scrollY)\n \n \n// import React, { useState, useEffect } from 'react';\n \n// // имитация запроса к серверу. просто получаем число асинхронно\n// const fetchRandomNumber = () => Promise.resolve(Math.random());\n \n// const NumberAndScroll = () => {\n//   const [number, setNumber] = useState(0);\n//   const [scroll, setScroll] = useState(0);\n   \n//   useEffect(() => {\n//     fetchRandomNumber().then(res => setNumber(res))\n//   },[]);\n  \n//   useEffect(()=>{\n//     const handleScroll = () => setScroll(window.scrollY)\n//     window.addEventListener('scroll', handleScroll);\n \n//     return () => window.removeEventListener('scroll', handleScroll);\n//   },[])\n   \n//   return (\n//     <div>\n//       <div> Number: { number } </div>\n//       <div> Scroll: { scroll } </div>\n//     </div> \n//   )\n// }\n\n\n// type FModificate = <T extends Record<string, unknown>, E extends unknown>(obj: T, fieldValue: E) => Record<string, E | keyof T>\n \n// const modificate:FModificate = (obj, fieldValue) => {\n//     obj.field = fieldValue;\n//     return obj;\n// }\n\n\n// const func = <T>(a:T): T {\n//     return a\n// } \n\n// const value = 1234;\n//  const a = typeof value; // \n// console.log(typeof (a)); //??? Number\n\n// /////////////////////////////\n\n// console.log(0.1 + 0.2 == 0.3);\n\n\n/////////////////////////////\n\n// console.log('one');\n// setTimeout(function() {\n//   console.log('two');\n// }, 0);\n// Promise.resolve().then(function() {\n//   console.log('three');\n// })\n// console.log('four');\n\n/// one four three two \n\n/////////////////////////////\n// for (var i = 0; i < 3; i++) {\n//     setTimeout(function log(j) {\n//         console.log(j); // что выведет?\n//     }, 1000, i);\n// }\n\n/////////////////////////////\n\n// console.log(1);\n// setTimeout(function() {\n//     console.log(2);\n// }, 0)\n// console.log(3);\n\n// // 1 3 2"
      },
      {
        "timestamp": "2024-10-16 17:38:49",
        "content": "2024-10-16 17:38:49\n Artyom Sozykin -> 2071074234:\nСбер (1 этап)\nЗП: 250к\nВопросы по протоколам, css селекторам, dom display: none vs visible: hidden\nЛайфкодинг:\nПо сути надо расставить bind в 2 и 3\nconst logger = {\n    mode: 'Dev',\n    check() {\n        console.log(`This is ${this.mode} mode`);\n    }\n};\n\nlogger.check(); // => ? (1) Dev\n\nconst loggerCheck = logger.check.bind(logger);\n\nloggerCheck(); // => ? (2) Dev\n\nfunction execute(fn) {\n    \n    return fn();\n}\n\nexecute(logger.check.bind(logger...",
        "full_content": "2024-10-16 17:38:49\n Artyom Sozykin -> 2071074234:\nСбер (1 этап)\nЗП: 250к\nВопросы по протоколам, css селекторам, dom display: none vs visible: hidden\nЛайфкодинг:\nПо сути надо расставить bind в 2 и 3\nconst logger = {\n    mode: 'Dev',\n    check() {\n        console.log(`This is ${this.mode} mode`);\n    }\n};\n\nlogger.check(); // => ? (1) Dev\n\nconst loggerCheck = logger.check.bind(logger);\n\nloggerCheck(); // => ? (2) Dev\n\nfunction execute(fn) {\n    \n    return fn();\n}\n\nexecute(logger.check.bind(logger)); // => ? (3) Dev\n\n2 задача\nреализовать второй counter умножающий на 2 от первого counter\n\nexport default function Two() {\n  const [count, setCount] = useState(0);\n  const [doubleCount, setDoubleCount] = useState(count * 2);\n  const handleCount = () => {\n    setCount((prevState) => prevState + 1);\n    // setDoubleCount(prev)\n  };\n\n  useEffect(() => {\n    setDoubleCount(count * 2);\n  }, [count]);\n\n  return (\n    <div className=\"App\">\n      <h2>Count Without useEffect</h2>\n      <h3>Count: {count}</h3>\n      <h3>Count * 2: {doubleCount}</h3>\n      <button onClick={handleCount}>Count++</button>\n    </div>\n  );\n}\n\n3 задача:\nvar i = 10;\nvar array = [];\n\n﻿﻿﻿while (i--) {\n﻿﻿ array. push(function() {\n return i + i;\n});\n\nconsole. log([\narray[0](), // ???\narray[1](), //???\n])\n\nНадо по сути сделать переменную в while let k = i и после заменить в функции return k + k"
      },
      {
        "timestamp": "2024-10-15 11:59:58",
        "content": "2024-10-15 11:59:58\n Katerina -> 2071074234:\nКомпания: ай теко\nВакансия: https://spb.hh.ru/vacancy/106341557?from=employer&hhtmFrom=employer\nЗП: 250к\nВопросы: один в один - https://t.me/c/2071074234/489/67643\n\nПроект в сбер! вопросы от проекта к проекту меняются, т.к. собесят чуваки с проекта непосредственно )",
        "full_content": "2024-10-15 11:59:58\n Katerina -> 2071074234:\nКомпания: ай теко\nВакансия: https://spb.hh.ru/vacancy/106341557?from=employer&hhtmFrom=employer\nЗП: 250к\nВопросы: один в один - https://t.me/c/2071074234/489/67643\n\nПроект в сбер! вопросы от проекта к проекту меняются, т.к. собесят чуваки с проекта непосредственно )"
      },
      {
        "timestamp": "2024-10-13 16:31:26",
        "content": "2024-10-13 16:31:26\n Maksim -> 2071074234:\nСбер (для экспертов тех+софт)                                                                                                                                                                                Вакансия:https://hh.ru/vacancy/107892762                                                                                                                                                                               зп:250                               ...",
        "full_content": "2024-10-13 16:31:26\n Maksim -> 2071074234:\nСбер (для экспертов тех+софт)                                                                                                                                                                                Вакансия:https://hh.ru/vacancy/107892762                                                                                                                                                                               зп:250                                                                                                                                                                                                                                                Вопросы:1)Расскажи об опыте.О задачах которыми гордишься.Как ты понимаешь ,что должен делать сеньер!?(брать больше ответственности  за команду,синковаться с бизнес частью,ответственность за достижения в команде) .2)Симантическая верстка и использовал ли на проектах.3)Какие знаешь position в css.4)С какими css работал(module,css in js),что лучше.5)Про window location,history(в браузере)5)Про оптимизацию(деление на чанки,виртулизация и т.д).6)Отличие webpack и vite (с чем работал).7)Про хранилище в браузере(local,session и т.д).8)Eventloop.9)Map , Set .10)requestAnimationFrame.11)Promise.12)CORS.13)Про хуки реакт.14)Как работает React(Virtyal Dom и т.д).15)git pull , git rebase , git chery pick (пользовался ли и что делают)!!!\nconst createCounter = () => {\n  let count = 0;\n\n  const increment = () => {\n    count++;\n  };\n\n  const decrement = () => {\n    count--;\n  };\n\n  return {\n    count,\n    increment,\n    decrement,\n  };\n};\n\nconst result = createCounter();\n\nresult.increment(); \nresult.increment();\nresult.decrement(); \n\nconsole.log(result.count); // 0\nПочему 0 и как исправить!?\nimport React, { useState, useEffect } from 'react';\n\n// Функция для получения данных\nconst fetchItems = () => Promise.resolve(['apple', 'orange']);\n\nconst ItemsAndScroll = () => {\n  const [items, setItems] = useState<string[]>([]);\n  const [scroll, setScroll] = useState<number>(0);\n\n  // useEffect для получения данных\n  useEffect(() => {\n    fetchItems().then((data) => setItems(data));\n  }, []); // Пустой массив зависимостей, чтобы выполнить только при монтировании\n\n  // useEffect для отслеживания прокрутки\n  useEffect(() => {\n    const handleScroll = () => {\n      setScroll(window.scrollY);\n    };\n\n    // Добавляем обработчик события прокрутки\n    window.addEventListener('scroll', handleScroll);\n\n    // Удаляем обработчик события при размонтировании\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []); // Пустой массив зависимостей, чтобы выполнить только при монтировании\n\n  return (\n    <>\n      <div style={{ height: '25vh', overflow: 'hidden' }}>\n        <div>Scroll: {scroll}</div>\n        <ul>\n          {items.map((item) => (\n            <li key={item} style={{ marginTop: '8px', marginBottom: '8px' }}>\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default ItemsAndScroll;\nисправить!!!"
      },
      {
        "timestamp": "2024-10-11 14:59:18",
        "content": "2024-10-11 14:59:18\n Mike -> 2071074234:\nКомпания: СБЕР Страхование(Angular)\nВакансия:https://hh.ru/vacancy/107613424\nЗП: 250к\nВопросы:\n1.Свойства Window\n2.local/sessionStorage\n3.JWT\n4.CORS\n5.ООП\n6.Полиморфизм детально\n7.Вопрос по процессам, как тесты на проекте делали и какой флоу тестов(закончил таску и как тестер получал её)\nБез задач",
        "full_content": "2024-10-11 14:59:18\n Mike -> 2071074234:\nКомпания: СБЕР Страхование(Angular)\nВакансия:https://hh.ru/vacancy/107613424\nЗП: 250к\nВопросы:\n1.Свойства Window\n2.local/sessionStorage\n3.JWT\n4.CORS\n5.ООП\n6.Полиморфизм детально\n7.Вопрос по процессам, как тесты на проекте делали и какой флоу тестов(закончил таску и как тестер получал её)\nБез задач"
      },
      {
        "timestamp": "2024-10-09 11:32:18",
        "content": "2024-10-09 11:32:18\n Михаил -> 2071074234:\nЛига Цифровой Экономики (на проект в Сбер)\nвакансия hh.ru/vacancy/107380873\nзп 200к",
        "full_content": "2024-10-09 11:32:18\n Михаил -> 2071074234:\nЛига Цифровой Экономики (на проект в Сбер)\nвакансия hh.ru/vacancy/107380873\nзп 200к"
      },
      {
        "timestamp": "2024-09-30 18:33:16",
        "content": "2024-09-30 18:33:16\n Анжелика -> 2071074234:\nСбер \n- зп :от 200;\n- вакансия: зарефералили;\n- успех: ✅, пригласили на сл этап;\n- по вопросам был разнобой классических:\n - js,\n - семантика, +- scss.module\n - из чего состоит сборка( про то что код без лишнего, при этом кросбраузерный)\n - реакт хуки для мемоизации, браузерные хранилища( и что хранить данные можно в квери параметрах)\n - задачки на скринах: 4( на стили, на js, просто по сути написать интерфейс( подробности про невер, на промисы)",
        "full_content": "2024-09-30 18:33:16\n Анжелика -> 2071074234:\nСбер \n- зп :от 200;\n- вакансия: зарефералили;\n- успех: ✅, пригласили на сл этап;\n- по вопросам был разнобой классических:\n - js,\n - семантика, +- scss.module\n - из чего состоит сборка( про то что код без лишнего, при этом кросбраузерный)\n - реакт хуки для мемоизации, браузерные хранилища( и что хранить данные можно в квери параметрах)\n - задачки на скринах: 4( на стили, на js, просто по сути написать интерфейс( подробности про невер, на промисы)"
      },
      {
        "timestamp": "2024-09-27 09:14:26",
        "content": "2024-09-27 09:14:26\n Timofei Syromiatnikov -> 2071074234:\n— Название: Антара (аутстаф в Сбер, 2 этап - тех. собес к клиенту)\n— Вакансия: https://hh.ru/vacancy/106841097?hhtmFrom=employer_vacancies\n— ЗП: от 200к\n— Вопросы:\n1) Расскажи про свой опыт. Какое образование. Сколько лет. Почему ушел с послед. места работы.\n2) Какие знаешь хуки? useRef особенности?\n3) Какие жизненные циклы компонента реализует useEffect и как?\n4) Каким стейт-менеджером пользовался, зачем нужны они вообще? Какой архитекту...",
        "full_content": "2024-09-27 09:14:26\n Timofei Syromiatnikov -> 2071074234:\n— Название: Антара (аутстаф в Сбер, 2 этап - тех. собес к клиенту)\n— Вакансия: https://hh.ru/vacancy/106841097?hhtmFrom=employer_vacancies\n— ЗП: от 200к\n— Вопросы:\n1) Расскажи про свой опыт. Какое образование. Сколько лет. Почему ушел с послед. места работы.\n2) Какие знаешь хуки? useRef особенности?\n3) Какие жизненные циклы компонента реализует useEffect и как?\n4) Каким стейт-менеджером пользовался, зачем нужны они вообще? Какой архитектурный патерн у Redux? Что в Redux реализует своевременное обновление данных при изменении? (observer)\n5) Что такое flux? \n6) Приоритетность селекторов.\n7) Как выровнять див?\n8) em, rem что это?\n9) Как парсится страница? Все этапы, на каком мы обрабатываем скрипты? Что такое async и defer у скриптов?\n10) Что такое эвентлупа, что входит в микро и макро задачи?\n11) Погружение, всплытие в DOM, что это?\n\n— Задачи:\n1) Что выведется и почему:\nsetTimeout(() => { console.log(a, b,c)  }, 100)\n\nconst promise = new Promise((resolve) => {\n  b--;\n  resolve();\n})\n\npromise\n  .then(() => console.log(a))\n  .catch(() => console.log(b--))\n  .catch(() => console.log(c))\n\nlet a = 1:\nlet b = 2;\n\nconsole.log(c)\n\nvar c = 3;\n\n// undefined 2 1 1 3\n\n2) Задача на ревью\nconst Component = ({ main  }) => {\n  if (main) return null\n  const [array, setArray] = useState([0])\n  const ref = useRef(0)\n\n  const handleClick = useCallback(() => {\n    setArray([array, ref.current])\n  }, [])\n\n  useEffect(() => {\n    ref.current = Math.random() + ref.current + array[array.length-1]\n  }, [array, ref])\n\n  retrun <div>{\n    array.map(id => <div>{id}</div>)\n  }</div>  \n}\n3) Напиши функцию которая вернет только уникальные значения массива. Не используя нативные способы JS, по типу new Set()\n// [1, 1, 2, 3, 5, 2, 8, 9, 1, 0] ===> [1, 2, 3, 5, 8, 9, 0]"
      },
      {
        "timestamp": "2024-09-24 16:12:33",
        "content": "2024-09-24 16:12:33\n SQwerty -> 2071074234:\nIFellow (аутстафф в Сбер)\nСсылка на вакансию: написала hr\nЗП: 250k\nВопросы: \nЧто такое контекст this? В чем особенность стрелочной функции? Что такое замыкание, подробно\nБаза по Promise. Какие типы есть в js?\nСпрашивал про классовые компоненты, про методы жизненного цикла в классовых компонентах. В чем отличие от функциональных компонентов? Про виртуализацию, как реализовывал кастомно?\nБыли вопросы по redux про сущности flux. Что такое RTK Query, в чем...",
        "full_content": "2024-09-24 16:12:33\n SQwerty -> 2071074234:\nIFellow (аутстафф в Сбер)\nСсылка на вакансию: написала hr\nЗП: 250k\nВопросы: \nЧто такое контекст this? В чем особенность стрелочной функции? Что такое замыкание, подробно\nБаза по Promise. Какие типы есть в js?\nСпрашивал про классовые компоненты, про методы жизненного цикла в классовых компонентах. В чем отличие от функциональных компонентов? Про виртуализацию, как реализовывал кастомно?\nБыли вопросы по redux про сущности flux. Что такое RTK Query, в чем его приемущество?"
      },
      {
        "timestamp": "2024-09-18 12:50:11",
        "content": "2024-09-18 12:50:11\n Timofei Syromiatnikov -> 2071074234:\n— Название: Антара (аутстаф в сбер)\n— Вакансия: https://hh.ru/vacancy/106841097?hhtmFrom=employer_vacancies\n— ЗП: когда откликался было до 200к, сейчас от 200к поставили, хз\n— Вопросы:\n1) Что такое useRef и useState хуки, расскажи о них поподробнее и разницу.\n2) Расскажи что такое useEffect, различие между useLaoutEffect, и как мы можем вызвать колбек при размонтировании компонента?\n3) Что такое event.stopPropagation() и event.preventDefa...",
        "full_content": "2024-09-18 12:50:11\n Timofei Syromiatnikov -> 2071074234:\n— Название: Антара (аутстаф в сбер)\n— Вакансия: https://hh.ru/vacancy/106841097?hhtmFrom=employer_vacancies\n— ЗП: когда откликался было до 200к, сейчас от 200к поставили, хз\n— Вопросы:\n1) Что такое useRef и useState хуки, расскажи о них поподробнее и разницу.\n2) Расскажи что такое useEffect, различие между useLaoutEffect, и как мы можем вызвать колбек при размонтировании компонента?\n3) Что такое event.stopPropagation() и event.preventDefault()?\n4) С помощью чего можно решить проблему пропс дриллинга?\n5) Какие минусы использования useContext в реакте?\n6) Что такое дженерики в  TS?\n\n— Задачи:\n1) Напиши функцию, которая принимает аргументом массив (в массиве могут быть числа и/или вложенные массивы), и выдает сумму всех чисел из переданного массива.\nconsole.log(sum([1,1,1, [2, 1], [1, [1, [1], 3]]]) // вернуть должно: 12\n2) Напиши кастомный хук useFetch, который принимает урл, и отдает объект с значениями data, isLoading, isError, и функцию reload, при вызове которой мы по новой шлем запрос за данными.\nfunction App() {\n  const { data, isLoading, isError, reload } = useFetch('https://externalapi')\n\n  return <div>\n    <div>{data?.map(value => <div>{value.name}</div>)</div>\n    <button onClick={reload}>reload</button>\n  </div>\n}\n3. Что выведется в консоли?\nconsole.log(1 + '2' + '2')\nconsole.log(1 + +'2' + '2')\nconsole.log('A' - 'B')\nconsole.log(typeof /abc/)\nconsole.log(true - 12)\nconsole.log(0.1 + 0.2)\n\nconst obj = { '1': 10, 1: 3 }\nconsole.log(obj['1'] + obj[1])\n4. Напиши функцию between, которая принимает минимальное и максимальное значение. И возвращает true или false если значение назходится в этом диапозоне соотвтественно. (Задача с подковыркой, вызов функции ничего нельзя менять, надо адаптировать решение под вызов который дан в задаче)\nfunction betwee(min, max) {\n\n// короче тут возвращаем функцию, чтобы filter мог её вызвать, в этот колбек принимает current число, и тут сравниваем уже, если в диапазоне возвращаем true, если нет - false\n}\n\nconst arr = [1, 2, 3, 4, 5, 6]\nconst range = arr.filter(betwee(3, 6))\nconsole.log(range) // [4, 5]"
      },
      {
        "timestamp": "2024-09-13 11:29:41",
        "content": "2024-09-13 11:29:41\n Timofei Syromiatnikov -> 2071074234:\n— Название: Сбер АБС для Индии (собес был полностью на русском)\n— Вакансия: https://hh.ru/vacancy/106373352?hhtmFrom=employer_vacancies\n— ЗП: 280-300к\n— Вопросы:\n1) Расскажи про свои задачи, которыми гордишься?\n2) Расскажи про флоу по которому вы работали? Например про CI/CD\n3) С какими сборщиками работал?\n4) Работал ли с SSR? Расскажи как использовали, если работал.\n\n— Задачи:\n1) Напиши кастомный хук useFetch, который принимает только ur...",
        "full_content": "2024-09-13 11:29:41\n Timofei Syromiatnikov -> 2071074234:\n— Название: Сбер АБС для Индии (собес был полностью на русском)\n— Вакансия: https://hh.ru/vacancy/106373352?hhtmFrom=employer_vacancies\n— ЗП: 280-300к\n— Вопросы:\n1) Расскажи про свои задачи, которыми гордишься?\n2) Расскажи про флоу по которому вы работали? Например про CI/CD\n3) С какими сборщиками работал?\n4) Работал ли с SSR? Расскажи как использовали, если работал.\n\n— Задачи:\n1) Напиши кастомный хук useFetch, который принимает только url. Обработай еще такой юз кейс когда у нас поменялся url, и может вернуться не актуальные данные. То есть у нас уже был фетч -> поменялся урл -> делаем новый фетч -> старый фетч возвращает данные позже, чем новый. Из за этого неактуальные данные приходят\n\nconst useFetch = (url) => {}\n\nfunction Comment({ url }) {\n// . . . = useFetch(url)\n\nreturn <div>{data}</div>\n}\n\n2) Напиши функцию дебаунс\n3) Напиши функцию promiseAll\n4) Напиши функционал рендера древовидного списка, где элемент может раскрываться и закрываться если у него есть дети.\n  // Task is quite ordinary:\n  //\n  // 1) import comments.ts file here\n  // 2) show results as \"toggle list\"\n\n  // + message 1\n  // - message 2\n  //   + message 4\n  //   message 5\n\nexport const comments = [\n  {\n    id: 1,\n    text: 'message 1',\n    children: [\n      {\n        id: 3,\n        text: 'message 3',\n      },\n    ],\n  },\n  {\n    id: 2,\n    text: 'message 2',\n    children: [\n      {\n        id: 4,\n        text: 'message 4',\n        children: [\n          {\n            id: 7,\n            text: 'message 7',\n          },\n          {\n            id: 8,\n            text: 'message 8',\n          },\n        ],\n      },\n      {\n        id: 5,\n        text: 'message 5',\n      },\n    ],\n  },\n];"
      },
      {
        "timestamp": "2024-09-11 11:05:11",
        "content": "2024-09-11 11:05:11\n аыеъа -> 2071074234:\nСбер для экспертов\n- ЗП: не обсуждали\n- Вопросы: \nОценить себя по грейду\npackage.lock.json для чего нужен, будет ли отправлен в Git\nПеременные окружения (env)\nНа какой версии React был проект, какие фичи новые из 18 версии использовал\nКакие хуки писал\nРассказать про порталы в React\n- Задачи:\nconsole.log(new Date(2000,1,1) == new Date(2000,1,1)) // ?\n// false\n// Как сделать что-бы был true\nconsole.log(new Date(2000,1,1).getTime() == new Date(2000,1,1).get...",
        "full_content": "2024-09-11 11:05:11\n аыеъа -> 2071074234:\nСбер для экспертов\n- ЗП: не обсуждали\n- Вопросы: \nОценить себя по грейду\npackage.lock.json для чего нужен, будет ли отправлен в Git\nПеременные окружения (env)\nНа какой версии React был проект, какие фичи новые из 18 версии использовал\nКакие хуки писал\nРассказать про порталы в React\n- Задачи:\nconsole.log(new Date(2000,1,1) == new Date(2000,1,1)) // ?\n// false\n// Как сделать что-бы был true\nconsole.log(new Date(2000,1,1).getTime() == new Date(2000,1,1).getTime()) // ?\n// true\n// ------------------------------------------------------------------------\n \nconst array = [1,2,3];\n                                2, 4, 6                 4, 6\nconst array2 = array.forEach(item => item * 2).filter(item => item > 3);\n const a = array.forEach(item => item * 2); // undefined\n const b = a.filter(item => item > 3) // error\n \n \nconst array3 = array.map(item => item * 2).filter(item => item > 3);\n \nconsole.log(array2) // ? // [4, 6] // undefined\nconsole.log(array3) // [4, 6]\n\n// Правильный ответ что forEach ничего не возвращает, а в filter попадает undefined, что вызывает ошибку  ------------------------------------------------------------------------    \n \n \n(function() {\n    function modifyBondData(price, bondType) {\n        price.rub = 1200;\n        bondType = \"fixed\";\n        isEditable = true;\n        \n        function printBondData() {\n            console.log(price); // 4 // {rub: 1200}\n            console.log(bondType); // 5 // \"fixed\"\n            console.log(isEditable); // 6 // null \n        }\n \n        return printBondData;\n    }\n \n    let price = { rub: 1000 };\n    let bondType = \"floating\";\n    let isEditable = false;\n \n    const printItemData = modifyBondData(price, bondType, isEditable);\n \n    console.log(price); // 1 // { rub: 1200 }\n    console.log(bondType); // 2 // \"floating\"\n    console.log(isEditable); // 3 // true \n \n    price = { usd: 10 };\n    bondType = \"amortization\";\n    isEditable = null;\n \n    printItemData();\n}());  \n// \n \n// ------------------------------------------------------------------------\n\n\n\ninterface Item {\n    id: number;\n    title: string;\n    done: boolean;\n}\n\n \nconst createNewItem = (itemData: Omit<Item, 'id'>): Item => {\n    const id = useId();\n \n    return ({\n      …itemData, id\n    })\n}\n\n\n// Что будет при нажатии на onClick, будет 0 т.к. setState асинхронен и выполнится при след. рендере\nconst ExampleComponent = () => {\n  const [state, setState] = useState(0);\n \n  const onClick = () => {\n    setState(1);\n  }\n \n  return <button onClick={onClick}>{state}</button> // \n\nconst ExampleComponent = () => {\n  const [state, setState] = useState(0);\n \n  const onClick = () => {\n    setState(state + 1);\n    setState(state + 1);\n    setState(state + 1);\n  }\n \n  return <button onClick={onClick}>{state}</button> // будет 1"
      },
      {
        "timestamp": "2024-09-11 10:00:24",
        "content": "2024-09-11 10:00:24\n Бахтияр -> 2071074234:\nIBS ЦФА 3 Этап\n- зп 230 - сказал что можно и больше \n- вакансия: https://t.me/c/2071074234/616/58479\n- вопросы:\n1) Где работал ,чем занимался(Подробно) !? \n2) Почему решили для себя рассмотреть новые предложения по работе!? \n3) Чего бы вам хотелось сейчас найти на ранке!? \n4) Какую зарплату хотели бы!?                                                                                                         Ваши вопросы: взаимодействие с командой ( Сбер-J...",
        "full_content": "2024-09-11 10:00:24\n Бахтияр -> 2071074234:\nIBS ЦФА 3 Этап\n- зп 230 - сказал что можно и больше \n- вакансия: https://t.me/c/2071074234/616/58479\n- вопросы:\n1) Где работал ,чем занимался(Подробно) !? \n2) Почему решили для себя рассмотреть новые предложения по работе!? \n3) Чего бы вам хотелось сейчас найти на ранке!? \n4) Какую зарплату хотели бы!?                                                                                                         Ваши вопросы: взаимодействие с командой ( Сбер-Juil (Scrum) ), легаси нет ( Давольно новый проект ), они вендер( аутсорс ), про испт (гигиенический выбор задач, настройка окружения, доступы)."
      },
      {
        "timestamp": "2024-09-10 19:15:24",
        "content": "2024-09-10 19:15:24\n Руслан -> 2071074234:\n— Название: сбер гораций\n— зп: 250 - 290к\n— вакансия: https://hh.ru/vacancy/104910371\n— задачи:\n1\n// Функция мемоизации\n// Это базовый патерн мемонизации так что пиши смело!!!!!!!!!!!\nconst memoize = (fn) => {\n  const cache = {}; // Создаем объект для хранения результатов\n\n  return (...args) => {\n    const key = JSON.stringify(args); // Преобразуем аргументы в строку для использования в качестве ключа\n    // !!! при сложении -2+2 будет ноль и в таком сл...",
        "full_content": "2024-09-10 19:15:24\n Руслан -> 2071074234:\n— Название: сбер гораций\n— зп: 250 - 290к\n— вакансия: https://hh.ru/vacancy/104910371\n— задачи:\n1\n// Функция мемоизации\n// Это базовый патерн мемонизации так что пиши смело!!!!!!!!!!!\nconst memoize = (fn) => {\n  const cache = {}; // Создаем объект для хранения результатов\n\n  return (...args) => {\n    const key = JSON.stringify(args); // Преобразуем аргументы в строку для использования в качестве ключа\n    // !!! при сложении -2+2 будет ноль и в таком случае проверка не пройдет, нужно учитывать это\n    if (cache[key]) {\n      console.log('Fetching from cache:', key); // Если результат есть в кеше, возвращаем его\n      return cache[key];\n    }\n\n    console.log('Calculating result for:', key); // Если результата в кеше нет, вычисляем его\n    const result = fn(...args); // Вызываем исходную функцию\n    cache[key] = result; // Сохраняем результат в кеш\n    return result;\n  };\n};\n\n// Пример использования\nconst sum = (a, b) => a + b; // Функция для сложения\nconst memoizedSum = memoize(sum); // Мемоизированная версия функции\n\nconsole.log(memoizedSum(2, 3)); // Вычисляет результат\nconsole.log(memoizedSum(2, 3)); // Возвращает результат из кеша\n2 Написать дебаунс\n\n3 вывод первых наиболее часто встречающихся дубликатов\n\nfunction topKFrequent(nums, k) {\n  const frequencyMap = {}; // Используем объект для хранения частоты\n\n  // Подсчет частоты каждого числа\n  nums.forEach(num => {\n    frequencyMap[num] = (frequencyMap[num] || 0) + 1;\n  });\n\n  // Преобразуем объект в массив пар [число, частота], затем сортируем по частоте\n  const sortedNums = Object.entries(frequencyMap).sort((a, b) => b[1] - a[1]);\n\n  // Возвращаем первые K чисел\n  return sortedNums.slice(0, k).map(entry => entry[0]);\n}\n\n// Пример использования\nconst nums = [4, 4, 3, 3, 3, 4, 4, 8, 8, 2];\nconst k = 2;\nconsole.log(topKFrequent(nums, k)); // Output: [4, 3]\n4 \nfunction groupAnagrams(strs) {\n  const map = {}; // Объект для хранения групп анаграмм\n\n  strs.forEach(str => {\n    // Сортируем буквы в слове по алфавиту, это будет ключ\n    const sortedStr = str.split('').sort().join('');\n\n    // Если ключ уже есть в объекте, добавляем туда слово\n    if (map[sortedStr]) {\n      map[sortedStr].push(str);\n    } else {\n      // Если ключа нет, создаем новый массив с этим словом\n      map[sortedStr] = [str];\n    }\n  });\n\n  // Возвращаем группы анаграмм как массив массивов\n  return Object.values(map);\n}\n\n// Пример использования\nconst strs = [\"act\", \"pots\", \"tops\", \"cat\", \"stop\", \"hat\"];\nconsole.log(groupAnagrams(strs)); \n// Output: [ [ 'act', 'cat' ], [ 'pots', 'tops', 'stop' ], [ 'hat' ] ]"
      },
      {
        "timestamp": "2024-09-06 14:11:26",
        "content": "2024-09-06 14:11:26\n Руслан -> 2071074234:\nИП Свистунова Екатерина Александровна сбер проект тех собес\n— зп: до 370к\n— вакансия: https://hh.ru/vacancy/105803250?hhtmFrom=chat\n— вопросы: \n1. интересные задачи\n2. var let const\n3. можно ли изменить объект, объявленный через const\n4. как сделать объект иммутабельным\n5. как скопировать объект глубоко и поверхностно\n6. eval для чего\n7. как работает сборщик мусора, слабые ссылки\n8. атрибут key, если не передать его\n9. рендеринг в реакте синхронный или ...",
        "full_content": "2024-09-06 14:11:26\n Руслан -> 2071074234:\nИП Свистунова Екатерина Александровна сбер проект тех собес\n— зп: до 370к\n— вакансия: https://hh.ru/vacancy/105803250?hhtmFrom=chat\n— вопросы: \n1. интересные задачи\n2. var let const\n3. можно ли изменить объект, объявленный через const\n4. как сделать объект иммутабельным\n5. как скопировать объект глубоко и поверхностно\n6. eval для чего\n7. как работает сборщик мусора, слабые ссылки\n8. атрибут key, если не передать его\n9. рендеринг в реакте синхронный или нет\n10. реакт fiber\n11. стрикт мод в реакт\n12. браузерные хранилища, отличия\n13. куда бы засунул refresh токен\n— задачи\nfunction fibonacci(n) {\n    if (n <= 0) return 0;\n    if (n === 1) return 1;\n\n    let a = 0; // F(0)\n    let b = 1; // F(1)\n    let c;\n\n    for (let i = 2; i <= n; i++) {\n        c = a + b; // F(n) = F(n-1) + F(n-2)\n        a = b;     // Сдвигаем значения\n        b = c;\n    }\n\n    return b; // Возвращаем F(n)\n}\n\n// Пример использования:\nconsole.log(fibonacci(10)); // Выведет 55"
      },
      {
        "timestamp": "2024-09-04 13:25:36",
        "content": "2024-09-04 13:25:36\n Maksim -> 2071074234:\n—- Сбер для Экспертов                                                                                                                                                                                                                                                 —зп 200                                                                                                                                                                                            ...",
        "full_content": "2024-09-04 13:25:36\n Maksim -> 2071074234:\n—- Сбер для Экспертов                                                                                                                                                                                                                                                 —зп 200                                                                                                                                                                                                                                                                   —ссылка https://hh.ru/vacancy/106488837                                                                                                                                                                                                                 import React, { useState, useEffect } from 'react';\n\nconst fetch = () => Promise.resolve(['apple', 'orange']);\n\nconst ItemsAndScroll = () => {\n    \n  const [items, setItems] = useState([]);\n  const [scroll, setScroll] = useState(0);\n\n  useEffect(() => {\n      \n    fetch()\n    .then((data) => setItems(data))\n    \n    const handleScroll = () => {\n        setScroll(window.scrollY)\n    }\n    \n    window.addEventListener('scroll', handleScroll );\n\n    return () => window.removeEventListener('scroll', handleScroll);\n\n  },[]);\n\n  return (\n    <>\n    \n      <div style={{height: '25vh'; overflow: 'hidden';}} className=\"styles ? styles1 : '\"> \n      \n       <div> Scroll: { scroll } </div>\n      <ul>\n        { items.map(item=>(\n        <li key={item}\n        style={{marginTop: '8px'; marginBottom: '8px';}}>\n        {item}\n        </li>))}\n        </ul>\n        \n      </div>\n      \n      \n    </> \n  )\n}  console.log('0');\n\nnew Promise(resolve => setTimeout(resolve)).then(() => console.log(1));\n\nsetTimeout(() => {\n    console.log('2');\n});\n\nnew Promise((resolve, reject) => {\n    console.log('3');\n    resolve(1);\n\n    new Promise(() => {\n        console.log('4');\n    });\n});\n\nPromise.resolve().then(() => {\n    console.log('5');\n});\n\nconsole.log('6');             //  console.log('0');\n\nnew Promise(resolve => setTimeout(resolve)).then(() => console.log(1));\n\nsetTimeout(() => {\n    console.log('2');\n});\n\nnew Promise((resolve, reject) => {\n    console.log('3');\n    resolve(1);\n\n    new Promise(() => {\n        console.log('4');\n    });\n});\n\nPromise.resolve().then(() => {\n    console.log('5');\n});\n\nconsole.log('6');  console.log('0');\n\nnew Promise(resolve => setTimeout(resolve)).then(() => console.log(1));\n\nsetTimeout(() => {\n    console.log('2');\n});\n\nnew Promise((resolve, reject) => {\n    console.log('3');\n    resolve(1);\n\n    new Promise(() => {\n        console.log('4');\n    });\n});\n\nPromise.resolve().then(() => {\n    console.log('5');\n});"
      },
      {
        "timestamp": "2024-09-03 13:15:35",
        "content": "2024-09-03 13:15:35\n Timofei Syromiatnikov -> 2071074234:\n— Название: Сбер \"Фокус\"\n— Вакансия: https://rabota.sber.ru/search/4312918\n— ЗП: 280-300к\n— Задачи: \n1) Отрефакторить, решить потенциальные ошибки. Блоки где править подсвечены комментами // 1 // 2 // 3\nimport { FC, useCallback, useEffect, useRef, useState } from \"react\";\n\nimport ... from ...\n\ntype Props = {\n  user: string;\n  roles?: string[]\n}\n\nexport const ProfilePage: FC<Props> = ({user, roles = []}) => {\n  // 1\n  let isShowInfo = fals...",
        "full_content": "2024-09-03 13:15:35\n Timofei Syromiatnikov -> 2071074234:\n— Название: Сбер \"Фокус\"\n— Вакансия: https://rabota.sber.ru/search/4312918\n— ЗП: 280-300к\n— Задачи: \n1) Отрефакторить, решить потенциальные ошибки. Блоки где править подсвечены комментами // 1 // 2 // 3\nimport { FC, useCallback, useEffect, useRef, useState } from \"react\";\n\nimport ... from ...\n\ntype Props = {\n  user: string;\n  roles?: string[]\n}\n\nexport const ProfilePage: FC<Props> = ({user, roles = []}) => {\n  // 1\n  let isShowInfo = false;\n\n  const handleShowInfo = useCallback(() => {\n    isShowInfo = !isShowInfo\n  }, [isShowInfo])\n\n  // 2\n  const [userData, setUserData] = userState<UserData | null>(null);\n  const [rolesData, setRolesData] = useState<LoaderRolesData | null>(null);\n\n  useEffect(() => {\n    const userData = calculateUserDataSync(user)\n    const fetchedRolesData = loadRoleData(user, roles)\n\n    setUserData(userData)\n    setRolesData(fetchedRolesData)\n  }, [user, roles])\n}\n\n// 3\nconst isAdmin = roles.includes(\"admin\")\n\nif(isAdmin) {\n  return <AdminPage user={user} />;\n}\n\nconst refParent = useRef<HTMLDivElement>()\nconst refContent = useRef<HTMLDivElement>()\n\nuseContentSizeUpdater(refParent, refContent);\n\nreturn (<ProfileContent.Provider>\n  <div ref={refParent} className=\"profile\">\n\n    <div ref={refContent}>\n      <ContentWithUsingProfileContext />\n    </div>\n\n    <Button onClick={handleShowInfo}>Show info</Button>\n\n    {isShowInfo && userData && rolesData && (<Info userData={userData} rolesData={rolesData} />)}\n\n  </div>\n</ProfileContent.Provider>)"
      },
      {
        "timestamp": "2024-08-26 14:09:08",
        "content": "2024-08-26 14:09:08\n Denis -> 2071074234:\nНазвание компании: Сбер\nВакансия: неизвестно, hr написала (~300k net)\nВопросы:\nЗадач не было, только вопросы:\nСемантика в css. Зачем нужна, aria атрибуты.\nЗамыкания в js. \nАсинхронность и eventloop. \nМетоды промисов ( Promise.all , .allSettled, .race, .any) зачем нужны\nВиды хуков. Вопросы по useEffect.\nКакими стейт-менеджерами пользовался?\nКакие типы хранилищ есть в браузере и как они работают? (session storage, localStorage, cookies)\nМемоизация, чем отл...",
        "full_content": "2024-08-26 14:09:08\n Denis -> 2071074234:\nНазвание компании: Сбер\nВакансия: неизвестно, hr написала (~300k net)\nВопросы:\nЗадач не было, только вопросы:\nСемантика в css. Зачем нужна, aria атрибуты.\nЗамыкания в js. \nАсинхронность и eventloop. \nМетоды промисов ( Promise.all , .allSettled, .race, .any) зачем нужны\nВиды хуков. Вопросы по useEffect.\nКакими стейт-менеджерами пользовался?\nКакие типы хранилищ есть в браузере и как они работают? (session storage, localStorage, cookies)\nМемоизация, чем отличается useCallback useMemo.\nЗачем нужен React.memo, какие параметры принимает?"
      },
      {
        "timestamp": "2024-08-24 13:30:41",
        "content": "2024-08-24 13:30:41\n Kirill Anikeev -> 2071074234:\nназвание компании: ПАО Сбербанк \nссылка: https://hh.ru/vacancy/104174075\nзп:270\nуспех: да, готовят оффер, но откажусь из-за того что гибрид в мск\nвопросы:\nВесь разговор почти был про опыт, про задачи которые делал\nЕщё спрашивал про реакт, про хукки\nпро кеширование в RTK Query\nкак работает redux по этапам\nredux saga, как работают функции генераторы. \nЛайвкодинга не было)",
        "full_content": "2024-08-24 13:30:41\n Kirill Anikeev -> 2071074234:\nназвание компании: ПАО Сбербанк \nссылка: https://hh.ru/vacancy/104174075\nзп:270\nуспех: да, готовят оффер, но откажусь из-за того что гибрид в мск\nвопросы:\nВесь разговор почти был про опыт, про задачи которые делал\nЕщё спрашивал про реакт, про хукки\nпро кеширование в RTK Query\nкак работает redux по этапам\nredux saga, как работают функции генераторы. \nЛайвкодинга не было)"
      },
      {
        "timestamp": "2024-08-19 14:24:54",
        "content": "2024-08-19 14:24:54\n Бахтияр -> 2071074234:\n- Компания: Сбер УВХД;\n- Ссылка на вакансию: https://schelkovo.hh.ru/vacancy/102297269?hhtmFrom=employer_vacancies;\n\n- ЗП: undefined;\n- Вопросы:\n- Ивент луп;\n- react fiber;\n- let, var, const;\n- Способы иммутабельной работы с объектами\n- strict mode\n- разница useLayoutEffect, useEffect\n- Задачи: Задачи на рефакторинг реакт, попросили расшарить ВЕСЬ экран, поэтому без скринов и записи\n\nimport React, { useState, useEffect, useCallback } from 'react';\n\n// ...",
        "full_content": "2024-08-19 14:24:54\n Бахтияр -> 2071074234:\n- Компания: Сбер УВХД;\n- Ссылка на вакансию: https://schelkovo.hh.ru/vacancy/102297269?hhtmFrom=employer_vacancies;\n\n- ЗП: undefined;\n- Вопросы:\n- Ивент луп;\n- react fiber;\n- let, var, const;\n- Способы иммутабельной работы с объектами\n- strict mode\n- разница useLayoutEffect, useEffect\n- Задачи: Задачи на рефакторинг реакт, попросили расшарить ВЕСЬ экран, поэтому без скринов и записи\n\nimport React, { useState, useEffect, useCallback } from 'react';\n\n// Интерфейсы для типов данных\ninterface Post {\n  id: number;\n  body: string;\n  title: string;\n  userId: number;\n}\n\ninterface Comment {\n  id: number;\n  postId: number;\n  body: string;\n  email: string;\n  name: string;\n}\n\n// Асинхронная функция для получения данных\nconst getData = async (url: string) => {\n  try {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/${url}`);\n    return await response.json();\n  } catch (e) {\n    console.error('Error fetching data:', e);\n    return [];\n  }\n};\n\n// Компонент списка с постами и комментариями\nconst List: React.FC<{ commentPrefix: string }> = ({ commentPrefix }) => {\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  // useEffect для загрузки данных\n  useEffect(() => {\n    const fetchData = async () => {\n      const postResp = await getData('posts');\n      const commentsResp = await getData('comments');\n      setComments(commentsResp);\n      setPosts(postResp);\n    };\n\n    fetchData();\n\n    return () => console.log('LIST UNMOUNT - компонент размонтирован');\n  }, []);\n\n  // Функция для поиска комментариев по postId\n  const findCommentsById = (postId: number) => {\n    return comments.filter(comment => comment.postId === postId);\n  };\n\n  return (\n    <div>\n      {posts.map((post) => (\n        <div key={post.id}>\n          <h1>Название поста: {post.title}</h1>\n          <p>Описание: {post.body}</p>\n          <p>Комментарии:</p>\n          <ul>\n            {findCommentsById(post.id).map((comment) => (\n              <li key={comment.id}>\n                Комментарий: {commentPrefix} {comment.body}\n              </li>\n            ))}\n          </ul>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// Главный компонент приложения\nexport const App: React.FC = () => {\n  const prefix = \"$\";\n  const [counter, setCounter] = useState(0);\n  const [text, setText] = useState(\"\");\n  const [showList, setShowList] = useState(true);\n\n  // Коллбек для обработки клика по кнопке\n  const onClickButton = useCallback(() => {\n    console.log(`поле инпута равно - ${text}`);\n    setShowList(!showList);\n  }, [text, showList]);\n\n  // Обработчик изменения текста в инпуте\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  };\n\n  // useEffect для установки интервала\n  useEffect(() => {\n    const intervalId = setInterval(() => setCounter((prev) => prev + 30), 1000 * 30);\n    return () => clearInterval(intervalId); // Очищаем интервал при размонтировании\n  }, []);\n\n  return (\n    <div>\n      <h1>Время с момента запуска {counter} сек!</h1>\n      <Input onChange={handleInputChange} value={text} />\n      <Button onClick={onClickButton} />\n      <hr />\n      {showList && <List commentPrefix={prefix} />}\n    </div>\n  );\n};"
      },
      {
        "timestamp": "2024-08-17 17:49:24",
        "content": "2024-08-17 17:49:24\n Руслан -> 2071074234:\nit one 2й этап сбер проект\n— зп: от 270к\n— вакансия: https://www.it-one.ru/vacancies/fc5e2a23182adfedf09a030c0ca1eced/\n— вопросы: \n1. Как выбирал бы что добавить в проект zustand или redux\n2. атрибут key\n3. type vs interface\n4. как был построен процесс разработки компонентов в ui kit\n5. когда твое решение не принимали либо предлагали другое - как разруливали\n6. про процессы в предудущем месте",
        "full_content": "2024-08-17 17:49:24\n Руслан -> 2071074234:\nit one 2й этап сбер проект\n— зп: от 270к\n— вакансия: https://www.it-one.ru/vacancies/fc5e2a23182adfedf09a030c0ca1eced/\n— вопросы: \n1. Как выбирал бы что добавить в проект zustand или redux\n2. атрибут key\n3. type vs interface\n4. как был построен процесс разработки компонентов в ui kit\n5. когда твое решение не принимали либо предлагали другое - как разруливали\n6. про процессы в предудущем месте"
      },
      {
        "timestamp": "2024-08-16 09:35:17",
        "content": "2024-08-16 09:35:17\n Serj Shalygin -> 2071074234:\nСбер\n- вакансия по рекомендации\n- зп от 350\n- вопросы\n\n1. Зачем нужны самописные хуки\n2. Отличие forEach от Map\n\nЗадачи\n\n1. что вернет сравнение объектов, понятно что ссылки разные и будет false, чтобы было true нужно в метод возвести\nconsole.log(new Date(2000,1,1).getTime() == new Date(2000,1,1).getTime()) // false\n\n2. \nconst array = [1,2,3];\n \nconst array2 = array.map(item => item * 2).filter(item => item > 3);\n \nconsole.log(array2) // ?[4,6]\n\n...",
        "full_content": "2024-08-16 09:35:17\n Serj Shalygin -> 2071074234:\nСбер\n- вакансия по рекомендации\n- зп от 350\n- вопросы\n\n1. Зачем нужны самописные хуки\n2. Отличие forEach от Map\n\nЗадачи\n\n1. что вернет сравнение объектов, понятно что ссылки разные и будет false, чтобы было true нужно в метод возвести\nconsole.log(new Date(2000,1,1).getTime() == new Date(2000,1,1).getTime()) // false\n\n2. \nconst array = [1,2,3];\n \nconst array2 = array.map(item => item * 2).filter(item => item > 3);\n \nconsole.log(array2) // ?[4,6]\n\n3. Рассказать что и почему будет выведено в консоль\n\n(function() {\n    \n    function modifyBondData(price, bondType) {\n        price.rub = 1200;\n        bondType = \"fixed\";\n        isEditable = true;\n \n        function printBondData() {\n            console.log(price); // 4 {rub: 1200, usd: 10}\n            console.log(bondType); // 5  \"fixed\"\n            console.log(isEditable); // 6 true\n        }\n \n        return printBondData;\n    }\n \n    let price = { rub: 1000 };\n    let bondType = \"floating\";\n    let isEditable = false;\n \n    const printItemData = modifyBondData(price, bondType, isEditable);\n \n    console.log(price); // 1 {rub: 1200}\n    console.log(bondType); // 2 \"floating\"\n    console.log(isEditable); // 3 false\n \n    price = { usd: 10 };\n    bondType = \"amortization\";\n    isEditable = null;\n \n    printItemData();\n}());"
      },
      {
        "timestamp": "2024-08-02 23:04:23",
        "content": "2024-08-02 23:04:23\n Евгений Лямин -> 2071074234:\n— Сбер Пульс знакомство с командой\n— hr написал\n— 250 -280 просил\nвопросы:\n-расскажи про себя, над какими проектами работал, какие интересные задачи решал\n-какие проекты интересуют что ищешь\n-доводилось ли писать проект с 0\n-работал ли со styled componets\n-были ли сложности какие то при написнаиии тестов\n-как ты видишь свое развитие\n-когда срабатывает селектор в редаксе\n-чем redux отличается от MobX\n-когда срабатывает useEffect, чем отлитчается о...",
        "full_content": "2024-08-02 23:04:23\n Евгений Лямин -> 2071074234:\n— Сбер Пульс знакомство с командой\n— hr написал\n— 250 -280 просил\nвопросы:\n-расскажи про себя, над какими проектами работал, какие интересные задачи решал\n-какие проекты интересуют что ищешь\n-доводилось ли писать проект с 0\n-работал ли со styled componets\n-были ли сложности какие то при написнаиии тестов\n-как ты видишь свое развитие\n-когда срабатывает селектор в редаксе\n-чем redux отличается от MobX\n-когда срабатывает useEffect, чем отлитчается от useLayoutEffect\n-были ли в команде конфликты как решали\nУспех:❌\nФитбек: Выбрали внутреннего сотрудника из другого департамента, который решил сменить проект"
      },
      {
        "timestamp": "2024-07-24 20:35:16",
        "content": "2024-07-24 20:35:16\n Евгений Лямин -> 2071074234:\n— Сбер Транзакционный бизнес\n— написал hr\n— зп: сказал от 250\n\nВопросы:\n- расскажи про опыт\n- как часто были релизы\n- что такое Event loop\n- что знаешь про сборщик мусора\n- чем отличаются  null и undefined\n- на что указывает this\n- какие виды контекста есть\n- расскажи про приоритеты у стилей\n- чем отличаются margin от  padding\n- что такое виртуальный дом? для чего нужен?\n- почему виртуальный дом быстрее за счет чего\n- как не переррисовывать лишни...",
        "full_content": "2024-07-24 20:35:16\n Евгений Лямин -> 2071074234:\n— Сбер Транзакционный бизнес\n— написал hr\n— зп: сказал от 250\n\nВопросы:\n- расскажи про опыт\n- как часто были релизы\n- что такое Event loop\n- что знаешь про сборщик мусора\n- чем отличаются  null и undefined\n- на что указывает this\n- какие виды контекста есть\n- расскажи про приоритеты у стилей\n- чем отличаются margin от  padding\n- что такое виртуальный дом? для чего нужен?\n- почему виртуальный дом быстрее за счет чего\n- как не переррисовывать лишний раз компонент\n- что такое портал\n- как  можно уснаследовать компонент реакта, его логику( речь про HOC)\n- как использовать метод родительского классовго компонента в дочернем(про super)\n- что такое jsx для чего нужен\n- можем ли мы без jsx писать в реакте\n- чем action отличается от reducer\n- что хранится в payload\n- все данные записываешь в стор?\n- как передать данные из дочернего в родительский компонент\n- что такое дженерики\n- как сделать что бы компонент принимал только number или string\n- зачем нужен менеджер состояний\n- зачем нам нужен глобальный стор\n- приходилось работать с готовыми Ui-kit\n- приходилось ли сталкиваться с модулями в css\n- как работает модульность в css\n- что такое rest api\n- Приходилось ли сталкиватся с module federation\n- Для чего нужен module federation. как объединяются микрофронты\n- в чем состоит концепция микрофронтэндов\n- как изменить стили компонента из библиотеки ui-kit\n- как доказать бэк разработчику что ошибка на его стороне )\n- как построен процесс нахождения ошибки"
      },
      {
        "timestamp": "2024-07-24 15:49:16",
        "content": "2024-07-24 15:49:16\n Tim -> 2071074234:\nСбер, финал\n\n-зп: 240k\n-вакансия: https://rabota.sber.ru/search/4301433/\n-фидбек: дали оффер\n\nЧем сейчас занимаешься, расскажи про себя, опыт?\nКак совмещал работу с учебой очной?\nКем себя видишь через 3 года?)))\nСможешь переехать?",
        "full_content": "2024-07-24 15:49:16\n Tim -> 2071074234:\nСбер, финал\n\n-зп: 240k\n-вакансия: https://rabota.sber.ru/search/4301433/\n-фидбек: дали оффер\n\nЧем сейчас занимаешься, расскажи про себя, опыт?\nКак совмещал работу с учебой очной?\nКем себя видишь через 3 года?)))\nСможешь переехать?"
      },
      {
        "timestamp": "2024-07-24 14:57:04",
        "content": "2024-07-24 14:57:04\n Tim -> 2071074234:\nСбер, техсобес в кластер миграции SAP\n\n-зп: 220-240k\n-вакансия: https://rabota.sber.ru/search/4301433/\n-успех: дали оффер ✅\n-фидбек: пригласили на собес с лидом \n\nВопросы:\nРасскажи про себя?\nЗачем нужны стейт менеджеры, алтернатива в react, минусы?\nКакие значешь стейт менеджеры?\nRTKQuery, useQuery/useMutation?\nКогда использовать UseCallback?\nЧто такое мемоизация?\nЗачем нужен css modules?\nStyled-components?\nИспользования useRef и useState для хранения состо...",
        "full_content": "2024-07-24 14:57:04\n Tim -> 2071074234:\nСбер, техсобес в кластер миграции SAP\n\n-зп: 220-240k\n-вакансия: https://rabota.sber.ru/search/4301433/\n-успех: дали оффер ✅\n-фидбек: пригласили на собес с лидом \n\nВопросы:\nРасскажи про себя?\nЗачем нужны стейт менеджеры, алтернатива в react, минусы?\nКакие значешь стейт менеджеры?\nRTKQuery, useQuery/useMutation?\nКогда использовать UseCallback?\nЧто такое мемоизация?\nЗачем нужен css modules?\nStyled-components?\nИспользования useRef и useState для хранения состояния?\nVar, let, const?\ncall, apply?\nОпиши что происходит, когда вводишь адрес в поисковою строку, URl, DNS, IP и тд?\nDefer, Async?\nCORS, как отрубить их или обойти?\nFSD, Enteties и Features?\n\nЗадачи:\n// Реализовать свой resolveAll без промисов:\nconst a = function(done) {\n  setTimeout(done, 0, 'result a');\n}\n\nconst b = function(done) {\n  setTimeout(done, 200, 'result b');\n}\n\nconst c = function(done) {\n  setTimeout(done, 500, 'result c');\n}\n\nresolveAll([a, b, c], (results) => {\n  console.log(results);\n})\n\nfunction resolveAll(funcArr, doneAll) {\n  const results = [];\n  \n  funcArr.forEach((func, index) => {\n    func((result) => {\n      results[index] = result;\n\n      if (funcArr.length - 1 === index) {\n        doneAll(results)\n      }\n    })\n  })\n}\n\n// Реализовать хук история состояний:\nfunction useStateWithHistory(initial) {\n  const [state, setStateFunc] = useState(() => initial);\n  const history = useRef([initial]);\n  let currentIndex = useRef(0);\n\n  const setState = useCallback((state) => {\n    history.current.push(state);\n    setStateFunc(state);\n    currentIndex.current = history.current.length - 1;\n  }, []);\n\n  const goBack = useCallback(() => {\n    if (currentIndex.current <= 0) {\n      return;\n    }\n    currentIndex.current -= 1;\n    setStateFunc(history.current[currentIndex.current]);\n  }, []);\n\n  const goForward = useCallback(() => {\n    if (currentIndex.current >= history.current.length - 1) {\n      return;\n    }\n    currentIndex.current += 1;\n    setStateFunc(history.current[currentIndex.current]);\n  }, []);\n\n  return [state, setState, goBack, goForward, history.current];\n}\n\n\n// Сколько раз выведет console.log() и что выведет?\nfor(var i = 0; i < 3; i++) {\n  console.log(i)\n}\n\n// Чтобы работало с var:\nfor(var i = 0; i < 3; i++) {\n    setTimeout((arg) => console.log(arg) , 1000, i) \n}\n\n// Можно сделать через IIFE для var. Либо исправить на let, чтобы работало правильно, т.е. выводил 1, 2, 3 (перероверь)\n\nconst person = {\n    name: 'Bob',\n    sayName: function() {\n        console.log(this.name);\n    }\n};\nconst sayName = person.sayName;\nsayName(); // undefined\nperson.sayName(); // Bob\n \n\n// Последовательность вывода \n\nconsole.log(1);\nsetTimeout(() => console.log(2));\nPromise.resolve().then(() => console.log(3));                 \nPromise.resolve().then(() => setTimeout(() => console.log(4)));\nPromise.resolve().then(() => console.log(5));\nsetTimeout(() => console.log(6));\nconsole.log(7);\nconsole.log(8);\n\n\nОтвет: 17835264"
      },
      {
        "timestamp": "2024-07-24 04:58:21",
        "content": "2024-07-24 04:58:21\n Ярослав Мудрый -> 2071074234:\n- Сбер IT\n- ссылка: сами написали\n- зп: 300+\n- вопросы:\n\n- расскажи про опыт\n- какие сложные задачи делал\n- как работает event loop\n- что используешь чтоб найти и исправить баги\n- задача на рефакторинг react компонента\n(код не сохранил, рекомендую повторить темы: использование хуков, использование useRef, оптимизация компонентов через useCallback, useMemo, методы жизненного цикла для функциональных компонентов)",
        "full_content": "2024-07-24 04:58:21\n Ярослав Мудрый -> 2071074234:\n- Сбер IT\n- ссылка: сами написали\n- зп: 300+\n- вопросы:\n\n- расскажи про опыт\n- какие сложные задачи делал\n- как работает event loop\n- что используешь чтоб найти и исправить баги\n- задача на рефакторинг react компонента\n(код не сохранил, рекомендую повторить темы: использование хуков, использование useRef, оптимизация компонентов через useCallback, useMemo, методы жизненного цикла для функциональных компонентов)"
      },
      {
        "timestamp": "2024-07-21 08:39:26",
        "content": "2024-07-21 08:39:26\n Евгений Лямин -> 2071074234:\n— Сбер Пульс\n— Hr написал\n— от 250\n— Задачи\nconst p = new Promise(rresolve => {\n     resolve('')\n})\n\nconsole.log('A')\n\nsetTimeout(() =>  {console.log('b')}, 0)\n\np.then(() => {\n  p.then(() console.log('c'))\n  consoile.log('d')\n})\n\np.then(() => console.log('e'))\nPromise.reject('error')\n   then(() => console.log('resolved'), ()=> console.log('reject'))\nPromise.reject('error')\n   .catch(data1 => console.log(data1))\n   then(() => console.log('resolved...",
        "full_content": "2024-07-21 08:39:26\n Евгений Лямин -> 2071074234:\n— Сбер Пульс\n— Hr написал\n— от 250\n— Задачи\nconst p = new Promise(rresolve => {\n     resolve('')\n})\n\nconsole.log('A')\n\nsetTimeout(() =>  {console.log('b')}, 0)\n\np.then(() => {\n  p.then(() console.log('c'))\n  consoile.log('d')\n})\n\np.then(() => console.log('e'))\nPromise.reject('error')\n   then(() => console.log('resolved'), ()=> console.log('reject'))\nPromise.reject('error')\n   .catch(data1 => console.log(data1))\n   then(() => console.log('resolved'), ()=> console.log('reject'))\nPromise.reject('error')\n   .catch(data1 => console.log(data1))\n   .catch(data2 => console.log(data2))\n   then(() => console.log('resolved'), ()=> console.log('reject'))\nvar x = function() {\n  return a\n  var a = 1\n  function a() {return 'hello'}\n}\n\nconsole.log(x())\nvar length = 10\n\nfunction fn() {\n  console.log(this.length)\n}\n\nvar obj = {\n   length: 5,\n   method: function(fn) {\n      fn()\n  }\n}\n\nobj.method(fn, 1)\nvar length = 10\n\nfunction fn() {\n  console.log(this.length)\n}\n\nvar obj = {\n   length: 5,\n   method: function(fn) {\n      arguments[0]()\n  }\n}\n\nobj.method(fn, 1)\nfor(var i = 0; i < 5 ; i++) {\n   setTimeout(() => {\n   console.log(i + i + '' + i)\n   }, i *10)\n}\nconst a = {}\nconst b = {key: 'b'}\nconst c = {key: 'c'}\n\na[b] = 123\na[c] = 456\n\nconsole.log(a[b])\nconsole.log(a[c])\n// Написать функцию которая на вход принимает url, ассинхронно ходит по этому Url get запросом и возвращает данные (json). если во время запроса произошла ошибка, то пробовать запросить еще 5 раз.Если в итоге не удалось, вернуть ошибку 'Заданный url недоступен'\nasync function fetchDataWithRetry(url, maxRetries = 5) {\n    let retries = 0;\n    while (retries < maxRetries) {\n        try {\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Ошибка');\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            retries++;\n            console.log(Попытка ${retries}: Произошла ошибка - ${error.message});\n        }\n    }\n    throw new Error('URL не доступен даже после 5 попыток');\n}\n\nfetchDataWithRetry('https://api.example.com/data')\n    .then(data => {\n        console.log('Полученные данные:', data);\n    })\n    .catch(error => {\n        console.error('Ошибка:', error.message);\n    });\n\n— Вопросы\n- Расскажи про опыт\n- Что происходит когда вводим адрес в валрессную строку\n- как обрабатываетсыя браузером html\n- как скрипты обрабатываются\n- методы http\n- что такое cors\n- Как верстал компоненты\n- Размерности css\n- Что такое семантическая верстка\n- Что такое Event Loop\n- Какой размер у стека\n- Var const let\n- отличия между циклами for  и  forEach\n- что такое чистая функция\n- расскажи про реакт плюсы минусы зачем нужен\n- методы жизненого цикла\n- как можно получить доступ к элементы в реакт\n- зачем нужен Key\n- Что такое батчинг как работает\n- Можешь рассказать про батчинг состояние в реакте\n- Как относишься к типизации"
      },
      {
        "timestamp": "2024-07-16 14:25:00",
        "content": "2024-07-16 14:25:00\n Ilya -> 2071074234:\n- Компания: Сбер УВХД;\n- Ссылка на вакансию: https://schelkovo.hh.ru/vacancy/102297269?hhtmFrom=employer_vacancies;\n- ЗП: undefined;\n- Вопросы:\n1) Ивент луп;\n2) react fiber;\n3) let, var, const;\n4) synthetic events;\n5) какие хуки знаешь;\n6) Способы иммутабельной работы с объектами\n7) strict mode\n8) зачем useCallback, useMemo\n- Задачи: Задачи на рефакторинг реакт, попросили расшарить ВЕСЬ экран, поэтому без скринов.\n\n- Успех собеса: Моментальный оффер, онли...",
        "full_content": "2024-07-16 14:25:00\n Ilya -> 2071074234:\n- Компания: Сбер УВХД;\n- Ссылка на вакансию: https://schelkovo.hh.ru/vacancy/102297269?hhtmFrom=employer_vacancies;\n- ЗП: undefined;\n- Вопросы:\n1) Ивент луп;\n2) react fiber;\n3) let, var, const;\n4) synthetic events;\n5) какие хуки знаешь;\n6) Способы иммутабельной работы с объектами\n7) strict mode\n8) зачем useCallback, useMemo\n- Задачи: Задачи на рефакторинг реакт, попросили расшарить ВЕСЬ экран, поэтому без скринов.\n\n- Успех собеса: Моментальный оффер, онли гибрид, по ЗП вообще не хотят говорить, особенно если говорите, что еще в другие команды сбера собеситесь. Только после принятия оффера."
      },
      {
        "timestamp": "2024-07-15 09:10:46",
        "content": "2024-07-15 09:10:46\n Руслан -> 2071074234:\nСбер\n—зп: 290к\n— вакансия: https://hh.ru/vacancy/103356750\n— Вопросы:\n1. critical rendering path\n2. фазы событий в js\n3. как остановить всплытие события\n4. как клонировать объекты\nЗадачи:\nfunction countConsecutiveChars(inputString) {\n    if (inputString.length === 0) {\n        return ''; // Если строка пустая, возвращаем пустую строку\n    }\n    \n    let result = '';\n    let count = 1; // Счётчик повторений, начинаем с 1, так как первый символ всегда счи...",
        "full_content": "2024-07-15 09:10:46\n Руслан -> 2071074234:\nСбер\n—зп: 290к\n— вакансия: https://hh.ru/vacancy/103356750\n— Вопросы:\n1. critical rendering path\n2. фазы событий в js\n3. как остановить всплытие события\n4. как клонировать объекты\nЗадачи:\nfunction countConsecutiveChars(inputString) {\n    if (inputString.length === 0) {\n        return ''; // Если строка пустая, возвращаем пустую строку\n    }\n    \n    let result = '';\n    let count = 1; // Счётчик повторений, начинаем с 1, так как первый символ всегда считается\n    \n    for (let i = 0; i < inputString.length; i++) {\n        if (inputString[i] === inputString[i + 1]) {\n            count++; // Если текущий символ равен следующему, увеличиваем счётчик\n        } else {\n            // Если текущий символ отличается от следующего, добавляем его и количество повторений к результату\n            result += inputString[i];\n            if (count > 1) {\n                result += count;\n            }\n            count = 1; // Сбрасываем счётчик для новой группы символов\n        }\n    }\n    \n    return result;\n}\n\n// Пример использования:\nconsole.log(countConsecutiveChars('aaabbc')); // Выведет 'a3b2c'\nconsole.log(countConsecutiveChars('aabbaa')); // Выведет 'a2b2a2'\nconsole.log(countConsecutiveChars('abc')); // Выведет 'abc'\nconsole.log(countConsecutiveChars('')); // Выведет ''\n// Создаем объект с ключами и значениями\nconst obj = {\n    key1: \"value1\",\n    key2: \"value2\",\n    key3: \"value3\",\n};\n\n// Добавляем метод getValues к объекту\nObject.prototype.getValues = function(...keys) {\n    // Если аргумент один и это строка, разбиваем её на массив\n    if (keys.length === 1 && typeof keys[0] === 'string') {\n        keys = keys[0].split(' ');\n    } else if (keys.length === 1 && Array.isArray(keys[0])) {\n        // Если аргумент один и это массив, используем его\n        keys = keys[0];\n    }\n    \n    // Используем map для извлечения значений по ключам и join для объединения их в строку\n    return keys.map(key => this[key]).join(' ');\n};\n\n// Пример использования:\nconsole.log(obj.getValues('key1 key2 key3')); // Выведет \"value1 value2 value3\"\nconsole.log(obj.getValues('key1', 'key2', 'key3')); // Выведет \"value1 value2 value3\"\nconsole.log(obj.getValues(['key1', 'key2', 'key3'])); // Выведет \"value1 value2 value3\"\nНужно было проревьюить компонент и и исправить ошибки. результат\nimport React, { useState, useEffect } from 'react';\n\n// Переименуем функцию для лучшей читаемости\nconst fetchRandomItems = () => Promise.resolve(['apple']);\n\nconst NumberAndScroll = () => {\n  const [items, setItems] = useState([]);\n  const [scroll, setScroll] = useState(0);\n\n  useEffect(() => {\n    // Объявляем асинхронную функцию внутри useEffect\n    const fetchItems = async () => {\n      const data = await fetchRandomItems();\n      setItems(data);\n    };\n    \n    fetchItems();\n\n    const handleScroll = () => setScroll(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n\n    // Очищаем обработчик событий при размонтировании компонента\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <div>\n      <ul>\n        {items.map(item => (\n          <li key={item}>{item}</li>\n        ))}\n      </ul>\n      <div>Scroll: {scroll}</div>\n    </div>\n  );\n};\n\nexport default NumberAndScroll;"
      },
      {
        "timestamp": "2024-07-11 14:55:33",
        "content": "2024-07-11 14:55:33\n Tim -> 2071074234:\nСбер, техсобес в команду ВРМ.Дэшборд\n\nВакансия: https://rabota.sber.ru/search/4306148/\nЗП(озвученная): 180-200k\n\nВопросы:\nЧто такое замыкание?\nФункция является обьектом первого класса?\nЧто такое декоратор?\nКакие декораторы бывают?\nЧто такое FSD?\nРасскажи про Flux?\n\n// Задача: написать функцию кеширования fib и sum\n\nfunction fib(n) {\n  if (n >= 40) {\n    return \"it will be really slow\";\n  }\n  if (n <= 2) {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);...",
        "full_content": "2024-07-11 14:55:33\n Tim -> 2071074234:\nСбер, техсобес в команду ВРМ.Дэшборд\n\nВакансия: https://rabota.sber.ru/search/4306148/\nЗП(озвученная): 180-200k\n\nВопросы:\nЧто такое замыкание?\nФункция является обьектом первого класса?\nЧто такое декоратор?\nКакие декораторы бывают?\nЧто такое FSD?\nРасскажи про Flux?\n\n// Задача: написать функцию кеширования fib и sum\n\nfunction fib(n) {\n  if (n >= 40) {\n    return \"it will be really slow\";\n  }\n  if (n <= 2) {\n    return 1;\n  }\n  return fib(n - 1) + fib(n - 2);\n}\n\nfunction sum(...values) {\n  return values.reduce((acc, value) => acc + value, 0);\n}\n\n// Дополнение к задаче: добавить возможность работы с методом обьекта\n\nconst obj = {\n  greeting: \"Hello\",\n  sayHi(name) {\n    console.log(this.greeting + name);\n  },\n};\n\n// Решение\n\nfunction memoFunc(fn) {\n  const cashed = {};\n  return function (...args) {\n    const argumentsString = JSON.stringify(args);\n    if (!cashed[argumentsString]) {\n      cashed[argumentsString] = fn(...JSON.parse(argumentsString));\n    }\n    return cashed[argumentsString];\n  };\n}\n\nЗадание 2. Рефакторинг React. Стандартные ошибки, ничего интересного.\nЗадание 3. Написать мемоизацию списка. При удалении элемента из списка, остальные элементы не должны ререндериться. \nЗадание 4. Огромное задание по написанию своего компонента:\n\nРепозиторий с готовым серверным приложением и скелетом клиентского приложения\n\nТребования:\n\nПолучение конфига опроса с сервера.\nРендер опроса по полученному конфигу.\nОтправка пользовательских событий answer/finish на сервер.\nДоп. требования:\n\nСохранять состояние частично пройденного опроса при перезагрузке страницы\nОбеспечить надежность доставки пользовательских событий. Например, у пользователя может отвалиться интернет, пока он едет в лифте\nОтправка событий “просмотра” вопроса/страницы. Хотим понимать увидел ли пользователь определенный вопрос или страницу.\n\nВпечатления\nСобеседующий душный и какой-то уставший. По факту собеседует в свою команду, так что придется с ним работать) Хз советовать или нет, но я бы ради опыта принял офер."
      },
      {
        "timestamp": "2024-07-01 13:12:18",
        "content": "2024-07-01 13:12:18\n dm . -> 2071074234:\n- Сбер\n- Вакансия: https://hh.ru/vacancy/100530637\n- ЗП от 250 net\n- Задачи:\n1) В каком порядке будут логаться числа?\n js\nconsole.log(1);\nsetTimeout(() => console.log(2));\nPromise.resolve().then(() => console.log(3));                 \nPromise.resolve().then(() => setTimeout(() => console.log(4)));\nPromise.resolve().then(() => console.log(5));\nsetTimeout(() => console.log(6));\nconsole.log(7);\nconsole.log(8);\nОтвет: 17835264\n2) Что выведется в консоль?\n js\n...",
        "full_content": "2024-07-01 13:12:18\n dm . -> 2071074234:\n- Сбер\n- Вакансия: https://hh.ru/vacancy/100530637\n- ЗП от 250 net\n- Задачи:\n1) В каком порядке будут логаться числа?\n js\nconsole.log(1);\nsetTimeout(() => console.log(2));\nPromise.resolve().then(() => console.log(3));                 \nPromise.resolve().then(() => setTimeout(() => console.log(4)));\nPromise.resolve().then(() => console.log(5));\nsetTimeout(() => console.log(6));\nconsole.log(7);\nconsole.log(8);\nОтвет: 17835264\n2) Что выведется в консоль?\n js\nconst person = {\n    name: 'Bob',\n    sayName: function() {\n        console.log(this.name);\n    }\n};\nconst sayName = person.sayName;\nsayName(); // undefined\nperson.sayName(); // Bob\n3) Написать функцию resolveAll, ниже готовый результат.\nfunction resolveAll(funcArr, doneAll) {\n    const results = [];\n    let completedCount = 0;\n    \n    funcArr.forEach((func, index) => {\n        func(result => {\n            results[index] = result;\n            completedCount++;\n            \n            if (completedCount === funcArr.length) {\n                doneAll(results);\n            }\n        });\n    });\n}\n// Запуск:\nconst a = function (done) {\n    setTimeout(done, 0, 'result a');\n}\n\nconst b = function (done) {\n    setTimeout(done, 200, 'result b');\n}\n\nconst c = function (done) {\n    setTimeout(done, 500, 'result c');\n}\n\nresolveAll([a, b, c], (results) => {\n    console.log(results); // ['result a', 'result b', 'result c']\n})\n4) Написать хук useStateWithHistory.\n js\nfunction useStateWithHistory(initial) {\n    const [state, setStateFunc] = useState(() => initial);\n    const history = useRef([initial]);\n    let currentIndex = useRef(0);\n\n    const setState = useCallback((state) => {\n        history.current.push(state);\n        setStateFunc(state);\n        currentIndex.current = history.current.length - 1;\n    });\n\n    const goBack = useCallback(() => {\n        if (currentIndex.current <= 0) {\n            return;\n        }\n        currentIndex.current -= 1;\n        setStateFunc(history.current[currentIndex.current]);\n    });\n\n    const goForward = useCallback(() => {\n        if (currentIndex.current >= history.current.length - 1) {\n            return;\n        }\n        currentIndex.current += 1;\n        setStateFunc(history.current[currentIndex.current]);\n    });\n\n    return [state, setState, goBack, goForward, history.current];\n}\n- Вопросы:\n1) Рассказать про интересные задачи.\n2) Для чего нужны стейт менеджеры?\n3) Рассказать о браузерных хранилищах.\n4) jwt-авторизация\n5) CORS\n6) rest API, методы\n7) websocket, graphQL, rpc\n- Успех: ✅"
      },
      {
        "timestamp": "2024-07-01 11:14:18",
        "content": "2024-07-01 11:14:18\n Matvey -> 2071074234:\nСбер для экспертов (УВХД)\n- Вакансия: https://schelkovo.hh.ru/vacancy/102297269?hhtmFrom=employer_vacancies\n- ЗП:  от 240 \n\nВопросы: \nJS:\n - var, let, const \n - почему у var есть всплытие \n - Object.freeze \n - сборщик мусора (есть ли разница в разных средах) \n\nБраузер: \n - local storage, session storage, cookie какая разница \n - какие флаги у cookie \n - CORS \n\nReact:\n - плюсы и минусы React \n - атрибут key \n - хуки какие используешь \n - разница useCallb...",
        "full_content": "2024-07-01 11:14:18\n Matvey -> 2071074234:\nСбер для экспертов (УВХД)\n- Вакансия: https://schelkovo.hh.ru/vacancy/102297269?hhtmFrom=employer_vacancies\n- ЗП:  от 240 \n\nВопросы: \nJS:\n - var, let, const \n - почему у var есть всплытие \n - Object.freeze \n - сборщик мусора (есть ли разница в разных средах) \n\nБраузер: \n - local storage, session storage, cookie какая разница \n - какие флаги у cookie \n - CORS \n\nReact:\n - плюсы и минусы React \n - атрибут key \n - хуки какие используешь \n - разница useCallback от useMemo\n - useLayoutEffect разница от useEffect \n \nЗадача:\n(Постановка: написал джун нужно исправить после 50 строки)\n - https://interview.tbank.ru/link/Q7jlQ7MtHmXb/interview"
      },
      {
        "timestamp": "2024-06-25 14:29:35",
        "content": "2024-06-25 14:29:35\n Вандал Нестреляй -> 2071074234:\nСбер для экспертов\n— Ссылка: https://hh.ru/vacancy/101519043\n— ЗП: не помню\n— Вопросы:\n1. В каком виде приходили задачи, насколько детально описаны?\n2. Какие баги приходилось фиксить?\n— Задачи:\n1.  Напишите функцию, которая принимает на вход массив чисел от 1 до 100. При этом возвращает массив в котором вместо чисел, кратных трем будет содержаться слово слово Fizz, а вместо чисел, кратных пяти — слово Buzz. Если число кратно и 3 и 5, то вместо...",
        "full_content": "2024-06-25 14:29:35\n Вандал Нестреляй -> 2071074234:\nСбер для экспертов\n— Ссылка: https://hh.ru/vacancy/101519043\n— ЗП: не помню\n— Вопросы:\n1. В каком виде приходили задачи, насколько детально описаны?\n2. Какие баги приходилось фиксить?\n— Задачи:\n1.  Напишите функцию, которая принимает на вход массив чисел от 1 до 100. При этом возвращает массив в котором вместо чисел, кратных трем будет содержаться слово слово Fizz, а вместо чисел, кратных пяти — слово Buzz. Если число кратно и 3 и 5, то вместо него должно храниться слово FizzBuzz. \n\n2.  Что выведется в консоль? \n for (var i = 0; i < 10; i++) {\n    setTimeout(function () {\n        console.log(‘timeout’, i);\n    }, 0);\n    console.log(‘loop’, i);\n}"
      },
      {
        "timestamp": "2024-06-19 19:09:34",
        "content": "2024-06-19 19:09:34\n Сергей -> 2071074234:\nСбер тех\n \n- Ссылка на платформе пульс \n- ЗП: от 200 т.р \n- успех: ?\n \nВОПРОСЫ:\n- event loop\n- типы данных\n- хуки React\n- reconciliation\n\nЗАДАЧИ:\n\n// 1 задача \n \nconst promise = new Promise((resolve) => { \n  console.log('3'); \n  resolve('6'); \n}).then(console.log); \n \nPromise.reject(5) \n    .then(() => console.log('35'), \n        () => console.log('36') \n    ) \n    .catch(() => console.log('Error')) \n    .then(() => console.log('ok')) \n \npromise.then(()...",
        "full_content": "2024-06-19 19:09:34\n Сергей -> 2071074234:\nСбер тех\n \n- Ссылка на платформе пульс \n- ЗП: от 200 т.р \n- успех: ?\n \nВОПРОСЫ:\n- event loop\n- типы данных\n- хуки React\n- reconciliation\n\nЗАДАЧИ:\n\n// 1 задача \n \nconst promise = new Promise((resolve) => { \n  console.log('3'); \n  resolve('6'); \n}).then(console.log); \n \nPromise.reject(5) \n    .then(() => console.log('35'), \n        () => console.log('36') \n    ) \n    .catch(() => console.log('Error')) \n    .then(() => console.log('ok')) \n \npromise.then(() => console.log('promise is done'))\n \n\n// 2 задача \n \nfunction test() { \n  const p = Promise.resolve(); \n   \n  const user = { \n      name: 'Ваня' \n  } \n   \n  const showUser = () => { \n      console.log(this.name) \n  } \nshowUser() \n  setTimeout(() => { \n    console.log('timeout'); \n \n    p.then(() => { \n      console.log('promise 1'); \n    }); \n  }); \n \n  setTimeout(() => { \n    console.log('timeout 2'); \n  }, 0); \n} \n \ntest(); \n \n// 3 задача - Написать свой Promise.all \n \nconst myPromiseAll = (promisesArray) => { \n    // your code \n};' \n \nconst promises = [ \n  new Promise(res => setTimeout(() => res(\"123\"), 1500)), \n  new Promise(res => setTimeout(() => res(\"456\"), 300)), \n  new Promise(res => setTimeout(() => res(\"789\"), 100)) \n];"
      },
      {
        "timestamp": "2024-03-27 20:07:16",
        "content": "2024-03-27 20:07:16\n Daniil Max -> 2071074234:\n— Название компании: Сбер Технологии [третий этап, общение с ПО]\n— Ссылка на вакансию: hr сама написал\n— ЗП: 310-400к.\n— Задачи: общение с ПО\n— Успех собеса: ✅\n— Фитбек о собесе: \nДаниил, извини за долгий ответ, был в поликлинике, взял на работе отгул, тк отравился. \n\nУ меня новости так себе( \nСамый максимум по сумме оффера, который сейчас готовы предложить - 270 тыс. рублей по ТК РФ. Ты прекрасно прошел собесы и о тебе очень хорошо отзывались интер...",
        "full_content": "2024-03-27 20:07:16\n Daniil Max -> 2071074234:\n— Название компании: Сбер Технологии [третий этап, общение с ПО]\n— Ссылка на вакансию: hr сама написал\n— ЗП: 310-400к.\n— Задачи: общение с ПО\n— Успех собеса: ✅\n— Фитбек о собесе: \nДаниил, извини за долгий ответ, был в поликлинике, взял на работе отгул, тк отравился. \n\nУ меня новости так себе( \nСамый максимум по сумме оффера, который сейчас готовы предложить - 270 тыс. рублей по ТК РФ. Ты прекрасно прошел собесы и о тебе очень хорошо отзывались интервьюеры, но бюджет просто не позволяет сделать предложение выше, я последние два дня общался с коллегами и пытался найти варианты повысить предложение. \n\nЯ помню, что у тебя, зп ожидания выше 310-400, но на данный момент вот так 😢"
      },
      {
        "timestamp": "2024-03-27 16:44:57",
        "content": "2024-03-27 16:44:57\n Kirill N -> 2071074234:\nДополнение с 11.03 - 27.03\nКомпания: Minevrasoft 11.03 \nhttps://youtu.be/c2TDgGjVxcQ \n \nКомпания: про Айти ресурс от 12.03 \nhttps://youtu.be/tBrVrALlflE \n \nКомпания: КиберЛаб 12.03 \nhttps://youtu.be/Ayov7AAZ9zA \nКомпания: 16.03 \nhttps://youtu.be/g8awopYcbh4   \n \nКомпания: IT ONE 18 03 \nhttps://youtu.be/opoqwpzVRVo \n \nКомпания: Эвотека 19 03 \nhttps://youtu.be/pq64Y2e0-CQ \n \nКомпания: BAUM от 20 03 \nhttps://youtu.be/YR2G2tRzgJo \n \nКомпания: Сбер Техноло...",
        "full_content": "2024-03-27 16:44:57\n Kirill N -> 2071074234:\nДополнение с 11.03 - 27.03\nКомпания: Minevrasoft 11.03 \nhttps://youtu.be/c2TDgGjVxcQ \n \nКомпания: про Айти ресурс от 12.03 \nhttps://youtu.be/tBrVrALlflE \n \nКомпания: КиберЛаб 12.03 \nhttps://youtu.be/Ayov7AAZ9zA \nКомпания: 16.03 \nhttps://youtu.be/g8awopYcbh4   \n \nКомпания: IT ONE 18 03 \nhttps://youtu.be/opoqwpzVRVo \n \nКомпания: Эвотека 19 03 \nhttps://youtu.be/pq64Y2e0-CQ \n \nКомпания: BAUM от 20 03 \nhttps://youtu.be/YR2G2tRzgJo \n \nКомпания: Сбер Технологии 22 03 \nhttps://youtu.be/dm34hydCIIA \n \nКомпания: KTS 22 03 \nhttps://youtu.be/Nt177GK9LAE \n \nКомпания: KTS 27 03 \nhttps://youtu.be/QDi0AkDwwgw \n \nКомпания: Лемма 27 03 \nhttps://youtu.be/grfpac_XgvA"
      },
      {
        "timestamp": "2024-03-26 06:10:48",
        "content": "2024-03-26 06:10:48\n Ivan -> 2071074234:\nНазвание компании: Сбер\nВакансия: Private Banking, отправила hr в галере\nВилка: 260к net\nБыл собес на 30 минут, общались с лидом на софт скиллы, прошлый опыт, почему ухожу с предыдущего места, работу в команде, задачи которыми я мог бы похвастаться, про грубые ошибки с точки зрения оптимизации, которые допускал и кем вижу себя через 2-3 года. Потом  с фронтом поговорили об отношении к ts, тестам, redux, с какими библиотеками по работе с формами взаимодейс...",
        "full_content": "2024-03-26 06:10:48\n Ivan -> 2071074234:\nНазвание компании: Сбер\nВакансия: Private Banking, отправила hr в галере\nВилка: 260к net\nБыл собес на 30 минут, общались с лидом на софт скиллы, прошлый опыт, почему ухожу с предыдущего места, работу в команде, задачи которыми я мог бы похвастаться, про грубые ошибки с точки зрения оптимизации, которые допускал и кем вижу себя через 2-3 года. Потом  с фронтом поговорили об отношении к ts, тестам, redux, с какими библиотеками по работе с формами взаимодействовал и дали тестовое сделать тастрекер с тремя колонками, возможностью добавлять и редактировать карточки, состояние должны хранится в redux"
      },
      {
        "timestamp": "2024-03-22 11:21:39",
        "content": "2024-03-22 11:21:39\n Daniil Max -> 2071074234:\n— Название компании: Сбер Технологии [второй этап]\n— Ссылка на вакансию: hr сама написал\n— ЗП: 310-400к.\n— Задачи: теория\nЗапись на ютуб: https://www.youtube.com/watch?v=dm34hydCIIA\n— Успех собеса: ✅\n— Фитбек о собесе: впечатления после собеса по мне очень положительные",
        "full_content": "2024-03-22 11:21:39\n Daniil Max -> 2071074234:\n— Название компании: Сбер Технологии [второй этап]\n— Ссылка на вакансию: hr сама написал\n— ЗП: 310-400к.\n— Задачи: теория\nЗапись на ютуб: https://www.youtube.com/watch?v=dm34hydCIIA\n— Успех собеса: ✅\n— Фитбек о собесе: впечатления после собеса по мне очень положительные"
      },
      {
        "timestamp": "2024-03-18 16:35:50",
        "content": "2024-03-18 16:35:50\n Vitalya Bedik -> 2071074234:\n#первый_собес\n\n— Название компании: Сбер (HR Пульс)\n— Ссылка на вакансию: HR сама написала\nhttps://hh.ru/vacancy/94347224?hhtmFrom=employer_vacancies\nOne Day Offer (в один день несколько собесов и сразу оффер, если все ок в этот же день)\n— ЗП: Просил 220-300 (предварительно 270 договаривались перед собесом)\n— Задачи: Теория + задача\n— Записи на ютуб:\n          -  созвон с командой (презентация продукта) - https://www.youtube.com/watch?v=mhljV1c0S...",
        "full_content": "2024-03-18 16:35:50\n Vitalya Bedik -> 2071074234:\n#первый_собес\n\n— Название компании: Сбер (HR Пульс)\n— Ссылка на вакансию: HR сама написала\nhttps://hh.ru/vacancy/94347224?hhtmFrom=employer_vacancies\nOne Day Offer (в один день несколько собесов и сразу оффер, если все ок в этот же день)\n— ЗП: Просил 220-300 (предварительно 270 договаривались перед собесом)\n— Задачи: Теория + задача\n— Записи на ютуб:\n          -  созвон с командой (презентация продукта) - https://www.youtube.com/watch?v=mhljV1c0S30\n          - техсобес: https://www.youtube.com/watch?v=g3oEfGKB9is\n          - созвон с кластер тимлид (про опыт и мои вопросы): https://www.youtube.com/watch?v=qIiWpVeV-UY (неполная запись)\n— Успех собеса: ☑️Pending (прохожу СБ) \n— Фидбек о собесе от HR:  уверенный мидл/мидл+\n\n❗️позднее отпишу все подробности и результат"
      },
      {
        "timestamp": "2024-03-09 13:32:31",
        "content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nh...",
        "full_content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nhttps://youtu.be/X4T0G_n1jqo \n \nКомпания ВТБ 06.03  \nhttps://youtu.be/3wfKfjohkw0 \n \nКомпания: Сбер технологии 07.03 \nhttps://youtu.be/gt2RcGbzloQ \n \nКомпания: Иннотех 07.03 \nhttps://youtu.be/soujRRxtnC8 \nКомпания: IT ONE 07.03 \nhttps://youtu.be/RaZ-iZOJgDM"
      },
      {
        "timestamp": "2024-03-07 14:01:15",
        "content": "2024-03-07 14:01:15\n Daniil Max -> 2071074234:\n— Название компании: Сбер Технологи\n— Ссылка на вакансию: hr сам написал \n— ЗП: 310~400К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/w0fOhN_dCec?si=Spvlb9lpAIVUMuAs\n— Успех собеса: ✅\n— Фитбек о собесе от HR:\nУверенный сениор, можно рассмотреть, если есть еще где то запросы, тем более активно ищет варианты\n\n#senior #сбер_технологим",
        "full_content": "2024-03-07 14:01:15\n Daniil Max -> 2071074234:\n— Название компании: Сбер Технологи\n— Ссылка на вакансию: hr сам написал \n— ЗП: 310~400К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/w0fOhN_dCec?si=Spvlb9lpAIVUMuAs\n— Успех собеса: ✅\n— Фитбек о собесе от HR:\nУверенный сениор, можно рассмотреть, если есть еще где то запросы, тем более активно ищет варианты\n\n#senior #сбер_технологим"
      },
      {
        "timestamp": "2024-03-05 21:33:30",
        "content": "2024-03-05 21:33:30\n Daniil Max -> 2071074234:\n— Название компании: Сбер [заключительный этап, общение с бизнесом]\n— Ссылка на вакансию: потеряна \n— ЗП: 200К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/h8Ki40Waxgk\n— Успех собеса: ✅\n— Фитбек о собесе от HR: оффер\n— Комментарий: на этот раз общение с бизнесом. Знакомлюсь и задаю много вопросов\n\n#middle #сбер",
        "full_content": "2024-03-05 21:33:30\n Daniil Max -> 2071074234:\n— Название компании: Сбер [заключительный этап, общение с бизнесом]\n— Ссылка на вакансию: потеряна \n— ЗП: 200К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/h8Ki40Waxgk\n— Успех собеса: ✅\n— Фитбек о собесе от HR: оффер\n— Комментарий: на этот раз общение с бизнесом. Знакомлюсь и задаю много вопросов\n\n#middle #сбер"
      },
      {
        "timestamp": "2024-03-05 20:49:04",
        "content": "2024-03-05 20:49:04\n Daniil Max -> 2071074234:\n— Название компании: Сбер [общение с бизнесом, последний этап)\n— Ссылка на вакансию: потеряна \n— ЗП: 200К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/p41IDNO_9n8\n— Успех собеса: ❌️\n— Фитбек о собесе от HR: не писала\n— Комментарий: на этот раз это общение с бизнесом. Задаю много вопросов \n\n#middle #сбер",
        "full_content": "2024-03-05 20:49:04\n Daniil Max -> 2071074234:\n— Название компании: Сбер [общение с бизнесом, последний этап)\n— Ссылка на вакансию: потеряна \n— ЗП: 200К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/p41IDNO_9n8\n— Успех собеса: ❌️\n— Фитбек о собесе от HR: не писала\n— Комментарий: на этот раз это общение с бизнесом. Задаю много вопросов \n\n#middle #сбер"
      },
      {
        "timestamp": "2024-02-26 12:27:35",
        "content": "2024-02-26 12:27:35\n Daniil Max -> 2071074234:\n— Название компании: Сбер девайсы [третий этап, заключительный] \n❗️Собес, где очень детально копают про твой опыт \n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Уровень собеса: hard 🧨\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/KyQE0C-1Jq0\n— Успех собеса: ✅\n— Фитбек о собесе от HR: начинаем поиск команды, в которую можно Вас разместить. \n— Комментарий: на этот раз это общение с бизнесом. это третий этап собеседования после первого и втор...",
        "full_content": "2024-02-26 12:27:35\n Daniil Max -> 2071074234:\n— Название компании: Сбер девайсы [третий этап, заключительный] \n❗️Собес, где очень детально копают про твой опыт \n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Уровень собеса: hard 🧨\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/KyQE0C-1Jq0\n— Успех собеса: ✅\n— Фитбек о собесе от HR: начинаем поиск команды, в которую можно Вас разместить. \n— Комментарий: на этот раз это общение с бизнесом. это третий этап собеседования после первого и второго технического. \n\n#middle #сбер_девайсы"
      },
      {
        "timestamp": "2024-01-25 07:26:12",
        "content": "2024-01-25 07:26:12\n Vladimir Latyshev -> 2071074234:\nНазвание компании: очередной Сбер))\nЗП: от 250+\nвопросы во многом такие же как и здесь  https://t.me/c/2071074234/489/3885\n\nИз теории необычные вопросы:\n- спросили про Доступность сайтов. Тоесть про доступность для слабовидящих людей.\n\nПоследняя задача:\nДопустим, к тебе пришли и сказали, что планируется новый проект. \n  Нужно создать веб-приложение для отдела КБ. В этом приложении сотрудник КБ должен видеть возникшие инциденты, которые поступ...",
        "full_content": "2024-01-25 07:26:12\n Vladimir Latyshev -> 2071074234:\nНазвание компании: очередной Сбер))\nЗП: от 250+\nвопросы во многом такие же как и здесь  https://t.me/c/2071074234/489/3885\n\nИз теории необычные вопросы:\n- спросили про Доступность сайтов. Тоесть про доступность для слабовидящих людей.\n\nПоследняя задача:\nДопустим, к тебе пришли и сказали, что планируется новый проект. \n  Нужно создать веб-приложение для отдела КБ. В этом приложении сотрудник КБ должен видеть возникшие инциденты, которые поступают из некоторой внешней системы, брать инциденты в работу, производить над ними все необходимые действия для закрытия инцидентов, взаимодействовать из интерфейса со всеми причастными к инциденту. Руководитель должен следить за работой подчинённых, видеть статистику по возникающим и обрабатываемым инцидентам, формировать из интерфейса отчёты. Что ты будешь делать со всей этой информацией и как организуешь свою работу?"
      },
      {
        "timestamp": "2024-01-23 16:46:30",
        "content": "2024-01-23 16:46:30\n Vladimir Latyshev -> 2071074234:\nНазвание компании: очередной Сбер))\nЗП: от 250\nвопросы во многом такие же как и здесь  https://t.me/c/2071074234/489/3244\n\nЗадача:\nconst a = {\n  value: 1,\n  children: [\n    {\n      value: 2,\n      children: [{ value: 4, value: 5 }]\n    },\n    {\n      value: 3,\n      children: [{ value: 6, value: 7 }]\n    },\n  ]\n}\n//  [1,2,3,4,5,6,7]\n\n\nconst foo = (obj) => {\n  const res = [];\n\n  const inFoo = (obj1) => {\n\n  Object.entries(obj1).map((item) => {...",
        "full_content": "2024-01-23 16:46:30\n Vladimir Latyshev -> 2071074234:\nНазвание компании: очередной Сбер))\nЗП: от 250\nвопросы во многом такие же как и здесь  https://t.me/c/2071074234/489/3244\n\nЗадача:\nconst a = {\n  value: 1,\n  children: [\n    {\n      value: 2,\n      children: [{ value: 4, value: 5 }]\n    },\n    {\n      value: 3,\n      children: [{ value: 6, value: 7 }]\n    },\n  ]\n}\n//  [1,2,3,4,5,6,7]\n\n\nconst foo = (obj) => {\n  const res = [];\n\n  const inFoo = (obj1) => {\n\n  Object.entries(obj1).map((item) => {    \n    \n    if (item[0] === 'value') {\n      \n      res.push(item[1]);\n    } else {\n      \n      inFoo(item[1]);    \n    }\n    \n  })     \n  }\n  inFoo(obj);\n\n  return res; \n}\n\nconsole.log(foo(a));\n\nНепонятно сознательно или нет, но в задаче есть ошибка  \n{ value: 6, value: 7 }\nФактически второй value перезатирает первый и объект получается из одного элемента. и в итоге ответ который собеседующий писал нужно получить, получить ни при каких обстоятельствах не получится."
      },
      {
        "timestamp": "2024-01-23 12:09:35",
        "content": "2024-01-23 12:09:35\n Michael Yakovlev -> 2071074234:\nКомпания: Сбер\n\nКоманда девопсов. Нужно написать таскменеджер на подобие Jira для их системы мониторинга и контроля серверов, облаков и тд.\n\nИщут на это 2 фронта. Команда без аналитиков, дизайнеров и продакта. Одни разрабы и тимлид)\nНужно сделать вчера)\n\nСпрашивали про мой опыт. Как устроено на текущей работе: какой стек, архитектурные вопросы, про docker, ci/cd, тесты, как команда работает и тд.\n\nПо теории: хуки, дженерики, тайп гард, HOC, ка...",
        "full_content": "2024-01-23 12:09:35\n Michael Yakovlev -> 2071074234:\nКомпания: Сбер\n\nКоманда девопсов. Нужно написать таскменеджер на подобие Jira для их системы мониторинга и контроля серверов, облаков и тд.\n\nИщут на это 2 фронта. Команда без аналитиков, дизайнеров и продакта. Одни разрабы и тимлид)\nНужно сделать вчера)\n\nСпрашивали про мой опыт. Как устроено на текущей работе: какой стек, архитектурные вопросы, про docker, ci/cd, тесты, как команда работает и тд.\n\nПо теории: хуки, дженерики, тайп гард, HOC, какие хуки относятся к жизненному циклу. На этом всё.\n\nЗадач не было.\n\nБыл вопрос как я организую работу и архитектуру их нового проекта.\n\nИз плюсов полная удалёнка на территории Мск и Подмосковья.\n\nЗП: 320к\n\nРезультат: сказал им, что дам обратную связь в понедельник, нужно подумать.\n\n#Сбер #senior"
      },
      {
        "timestamp": "2024-01-18 18:03:21",
        "content": "2024-01-18 18:03:21\n Daniil Max -> 2071074234:\n— Название компании: Сбер здоровье [второй этап, заключительный]\n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/btf2qOKXR2s?si=A_4f-ryP_gfmP3zD\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n— Комментарий: на этот раз это общение с бизнесом. это второй этап собеседования после первого технического. \n\n#middle #сбер_здоровье",
        "full_content": "2024-01-18 18:03:21\n Daniil Max -> 2071074234:\n— Название компании: Сбер здоровье [второй этап, заключительный]\n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: софтскиллы \n— Запись на ютуб: https://youtu.be/btf2qOKXR2s?si=A_4f-ryP_gfmP3zD\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n— Комментарий: на этот раз это общение с бизнесом. это второй этап собеседования после первого технического. \n\n#middle #сбер_здоровье"
      },
      {
        "timestamp": "2024-01-18 17:49:32",
        "content": "2024-01-18 17:49:32\n Michael Yakovlev -> 2071074234:\nСбер. IT\n\nСобес был приятный на чиле)\n\nМного разговаривали за технологии и мой опыт их применения. WebRTC, логирование ошибок, fsd, state менеджеры, микрофронты и тд. Без конкретных вопросов, просто беседа на кругозор.\nРассказать о своей работе, успехи и неудачи.\n\nВопросы:\n\nПаттерны программирования (общие и какие есть в Реакте)\nМожно ли применять SOLID в React\nОтличие useEffect от useLayoutEffect\nОтличие useRef от useState\nБатчинг\nПричины рен...",
        "full_content": "2024-01-18 17:49:32\n Michael Yakovlev -> 2071074234:\nСбер. IT\n\nСобес был приятный на чиле)\n\nМного разговаривали за технологии и мой опыт их применения. WebRTC, логирование ошибок, fsd, state менеджеры, микрофронты и тд. Без конкретных вопросов, просто беседа на кругозор.\nРассказать о своей работе, успехи и неудачи.\n\nВопросы:\n\nПаттерны программирования (общие и какие есть в Реакте)\nМожно ли применять SOLID в React\nОтличие useEffect от useLayoutEffect\nОтличие useRef от useState\nБатчинг\nПричины рендера и как работает Реакт (файбер и тд)\nЧем отличается npm install от npm ci\nЧем отличаются any, unknown и never.\nType guard\n\nЗадачи:\n\n1.\n\n\n\n\n\nconst a = {\n  value: 1,\n  children: [\n    {\n      value: 2,\n      children: [{ value: 4, value: 5 }]\n    },\n    {\n      value: 3,\n      children: [{ value: 6, value: 7 }]\n    },\n  ]\n}\n//  вывести [1,2,3,4,5,6,7]\n\n2.\n\n\n\n\nlet obj = {\n  a: 1\n};\n\nconsole.log(obj.a, '1');\n\nfunction b(obj) {\n  obj = {\n    a: 2\n  };\n}\n\nb(obj);\n\nconsole.log(obj.a, '2');\n\n(function(obj) {\n  obj.a = 3\n})(obj);\n\nconsole.log(obj.a, ‘3’);\n\nЗП: от 300к\n\n\nИз больших минусов вакансии: фигачить придётся в одного, нужно десктопное приложение переписать в веб (сделать сайт), проект полностью с нуля, есть только аналитика и моки дизайна.\n\n#СБЕРIT #senior"
      },
      {
        "timestamp": "2024-01-10 09:07:30",
        "content": "2024-01-10 09:07:30\n Daniil Max -> 2071074234:\n— Название компании: Сбер здоровье [первый этап, технический]\n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/phYS3Pt219s?si=LqUUybJO4d_MDKmR\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n— Комментарий: тимлид ищет развития, схожие интересы. \nЭто не только собес, а ещё и общение прямо после собеса с тимлидом.\n\n#middle",
        "full_content": "2024-01-10 09:07:30\n Daniil Max -> 2071074234:\n— Название компании: Сбер здоровье [первый этап, технический]\n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/phYS3Pt219s?si=LqUUybJO4d_MDKmR\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n— Комментарий: тимлид ищет развития, схожие интересы. \nЭто не только собес, а ещё и общение прямо после собеса с тимлидом.\n\n#middle"
      },
      {
        "timestamp": "2024-01-10 08:40:00",
        "content": "2024-01-10 08:40:00\n Daniil Max -> 2071074234:\n— Название компании: Сбер Девайсы \n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: лайвкодинг \n— Запись на ютуб: https://youtu.be/UsQDv6r1yxs?si=Zy_ecgZc98VzdVNP\n— Успех собеса: ✅\n— Фитбек о собесе от HR: предлагаем 240к рублей, 270к много\n\n#middle",
        "full_content": "2024-01-10 08:40:00\n Daniil Max -> 2071074234:\n— Название компании: Сбер Девайсы \n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: лайвкодинг \n— Запись на ютуб: https://youtu.be/UsQDv6r1yxs?si=Zy_ecgZc98VzdVNP\n— Успех собеса: ✅\n— Фитбек о собесе от HR: предлагаем 240к рублей, 270к много\n\n#middle"
      },
      {
        "timestamp": "2024-01-09 06:53:16",
        "content": "2024-01-09 06:53:16\n Daniil Max -> 2071074234:\n— Название компании: Сбер Core\n— Ссылка на вакансию: утеряна\n— ЗП: 350К \n— Задачи: лайвкодинг\n— Запись на ютуб: https://www.youtube.com/watch?v=7OwYdw3DTh8 команда\n— Успех собеса: ❌\n— Фитбек HR о собесе: нужно решать больше алгосов",
        "full_content": "2024-01-09 06:53:16\n Daniil Max -> 2071074234:\n— Название компании: Сбер Core\n— Ссылка на вакансию: утеряна\n— ЗП: 350К \n— Задачи: лайвкодинг\n— Запись на ютуб: https://www.youtube.com/watch?v=7OwYdw3DTh8 команда\n— Успех собеса: ❌\n— Фитбек HR о собесе: нужно решать больше алгосов"
      }
    ]
}
