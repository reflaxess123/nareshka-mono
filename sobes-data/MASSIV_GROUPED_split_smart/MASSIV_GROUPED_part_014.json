    ]
  },
  {
    "company": "БФТ-Холдинг",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-18 08:44:36",
        "content": "2024-07-18 08:44:36\n Alehandro¯\\_(ツ)_/¯ -> 2071074234:\n- компания: БФТ-Холдинг\n- вакансия: hr сам написал\n- зп: 200-220к\n- отзыв: много вопросов на понимание, что будет если так и так, клонили в сторону бэка, первый раз как раз был работал ли с бэком и хотел бы стать фуллстэком",
        "full_content": "2024-07-18 08:44:36\n Alehandro¯\\_(ツ)_/¯ -> 2071074234:\n- компания: БФТ-Холдинг\n- вакансия: hr сам написал\n- зп: 200-220к\n- отзыв: много вопросов на понимание, что будет если так и так, клонили в сторону бэка, первый раз как раз был работал ли с бэком и хотел бы стать фуллстэком"
      }
    ]
  },
  {
    "company": "Intermobility",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-11 12:56:09",
        "content": "2024-11-11 12:56:09\n Егор -> 2071074234:\nКомпания: intermobility\nВакансия: https://hh.ru/vacancy/107251514\nЗП: 200к\nВопросы:\n- Расскажи о себе\nМного спрашивал про прошлое место, что и как было устроено.\n\nтех вопросы :\n - зачем нужен key, и VDOM\n\nДал одну задачу на React:\n import React, { useState } from \"react\";\n/**\n * TODO\n * 1. Добавление любого количества инпутов по кнопке\n * 2. Во время ввода во всех инпутах производить валидацию.\n * Если input value везде \"react\", то кнопка \"Сохранить\"\n * д...",
        "full_content": "2024-11-11 12:56:09\n Егор -> 2071074234:\nКомпания: intermobility\nВакансия: https://hh.ru/vacancy/107251514\nЗП: 200к\nВопросы:\n- Расскажи о себе\nМного спрашивал про прошлое место, что и как было устроено.\n\nтех вопросы :\n - зачем нужен key, и VDOM\n\nДал одну задачу на React:\n import React, { useState } from \"react\";\n/**\n * TODO\n * 1. Добавление любого количества инпутов по кнопке\n * 2. Во время ввода во всех инпутах производить валидацию.\n * Если input value везде \"react\", то кнопка \"Сохранить\"\n * должна стать disabled={false}\n *\n */\n \nconst validate = (item: string) => item === \"react\";\nconst Form = () => {\n\n  const [inputs, setInputs] = useState([\n    { value: \"vue\" },\n    { value: \"angular\" },\n  ]);\n\n  const handleAddInput = () => {\n    setInputs([...inputs, { value: \"\" }]);\n  };\n\n  const handleChangeInput = (index: number, value: string) => {\n    const newInputs = [...inputs];\n    newInputs[index].value = value;\n    setInputs(newInputs);\n  };\n\n  const allValidData = !inputs.every((input) => validate(input.value));\n\n  return (\n    <form>\n      {inputs.map((input, index) => (\n        <input\n          key={index}\n          value={input.value}\n          className=\"input\"\n          onChange={(e) => handleChangeInput(index, e.target.value)}\n        />\n      ))}\n      <div className=\"controls\">\n        <button className=\"button\" type=\"button\" onClick={handleAddInput}>\n          Добавить инпут\n        </button>\n        <button className=\"button\" type=\"button\" disabled={allValidData}>\n          Сохранить\n        </button>\n      </div>\n    </form>\n  );\n};\n\n  \n\nexport { Form };"
      }
    ]
  },
  {
    "company": "Ланит Би Пи Эм",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-04-14 15:09:27",
        "content": "2025-04-14 15:09:27\n Ильдус Гизетдинов -> 2071074234:\nЛанит Би Пи Эм\nЗп не обсуждалось\nВопросы\nКратко про опыт\n1)Типы данных\n2)Чем примитивы отличаются от ссылочных \n3)Копирование объектов\n4)Мутабильность Иммутабельность\n5)Проверка на массив\n6)Способы объявления функции и разница между ними\n7)call apply bind\n8)Чистая функция\n9)Что такое сайд эффекты\n10)Функции высшего порядка\n11)Привидение типов\n12)Всплытие\n13)Делегирование событий\n14)Замыкание\n15)Ассинхронность\n16)Промисы\n17)Цепочка then\n18)eve...",
        "full_content": "2025-04-14 15:09:27\n Ильдус Гизетдинов -> 2071074234:\nЛанит Би Пи Эм\nЗп не обсуждалось\nВопросы\nКратко про опыт\n1)Типы данных\n2)Чем примитивы отличаются от ссылочных \n3)Копирование объектов\n4)Мутабильность Иммутабельность\n5)Проверка на массив\n6)Способы объявления функции и разница между ними\n7)call apply bind\n8)Чистая функция\n9)Что такое сайд эффекты\n10)Функции высшего порядка\n11)Привидение типов\n12)Всплытие\n13)Делегирование событий\n14)Замыкание\n15)Ассинхронность\n16)Промисы\n17)Цепочка then\n18)event loop\n19)Для чего React\n20)Какие хуки использовал\n21)Правила хуков\n22)Жизненный цикл\n23)UseState и состояние\n24)Ререндр\n25)key\n26)useEffect\n27)Мемоизация\n28)useRef\n29)Утилитарные типы\n30)Литеральные типы\n31)Юнион типы\n32)type и interface\n33)Дженерики\n34)type guard\n35)any unknown\n36) as\n37)Стейт менеджеры чем помогают\n38)Кэш менеджеры\n39)Стейт от Кэш менеджера"
      }
    ]
  },
  {
    "company": "Сапкод",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-12-02 12:31:46",
        "content": "2024-12-02 12:31:46\n Артем -> 2071074234:\nКомпания СапКод\nзп 300\nвопросы\nматериал ui как тему поменять\nработал ли с графиками",
        "full_content": "2024-12-02 12:31:46\n Артем -> 2071074234:\nКомпания СапКод\nзп 300\nвопросы\nматериал ui как тему поменять\nработал ли с графиками"
      }
    ]
  },
  {
    "company": "LiveDigital EdTech",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-06-19 07:36:13",
        "content": "2025-06-19 07:36:13\n Daniil Max -> 2071074234:\n— Название компании: LiveDigital EdTech\n— ЗП: 250~300К\n— Задачи + Live-Coding: https://youtu.be/gM-NX_mq0Wg?si=TksK3XWHCotkvwlo\n— Успех: да",
        "full_content": "2025-06-19 07:36:13\n Daniil Max -> 2071074234:\n— Название компании: LiveDigital EdTech\n— ЗП: 250~300К\n— Задачи + Live-Coding: https://youtu.be/gM-NX_mq0Wg?si=TksK3XWHCotkvwlo\n— Успех: да"
      }
    ]
  },
  {
    "company": "Цезио",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-05-23 05:19:41",
        "content": "2024-05-23 05:19:41\n stil -> 2071074234:\nНазвание компании: Цезио\nВакансия: https://hh.ru/vacancy/97603710?hhtmFrom=chat\nУспех: запросили тестовое \nЗадачи:\n1. Вопросы:\n- что такое иммутабельность в компонентах\n- как работает virtual dom и алгоритм реакта\n- несколько дефолтных вопросов (эвентлуп и прочее)\n2. Задача:\nЕсть реализация компонента, от которого требуется 2 вещи:\n1) выводить текущее значение вертикального скролла окна (window.scrollY)\n2) после монтирования асинхронно получить число и вы...",
        "full_content": "2024-05-23 05:19:41\n stil -> 2071074234:\nНазвание компании: Цезио\nВакансия: https://hh.ru/vacancy/97603710?hhtmFrom=chat\nУспех: запросили тестовое \nЗадачи:\n1. Вопросы:\n- что такое иммутабельность в компонентах\n- как работает virtual dom и алгоритм реакта\n- несколько дефолтных вопросов (эвентлуп и прочее)\n2. Задача:\nЕсть реализация компонента, от которого требуется 2 вещи:\n1) выводить текущее значение вертикального скролла окна (window.scrollY)\n2) после монтирования асинхронно получить число и вывести его\nНужно найти, объяснить и исправить как можно больше проблем в реализации\nimport React, { useState, useEffect } from 'react'\n\nexport default function App() {\n  return (\n    <div style={{height: 1200}}>\n      <SomeComponent />\n    </div>\n  )\n}\n\n// имитация запроса к серверу. просто получаем число асинхронно\nconst fetchRandomNumber = () => Promise.resolve(Math.random())\n\nconst SomeComponent = () => {\n  const [number, setNumber] = useState()\n  const [scroll, setScroll] = useState()\n\n  useEffect(async () => {\n    setNumber(await fetchRandomNumber())\n\n    window.addEventListener('scroll', () => setScroll(window.scrollY))\n\n    return () => {\n      window.removeEventListener('scroll', () => setScroll(window.scrollY))\n    }\n  })\n\n  return(\n    <div>\n      <div>Number: {number}</div>\n      <div>Scroll: {scroll}</div>\n    </div>\n  )\n}"
      }
    ]
  },
  {
    "company": "Premium IT Solution",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-11 16:21:29",
        "content": "2024-07-11 16:21:29\n Вандал Нестреляй -> 2071074234:\nPremium IT Solution\n— Ссылка: HR сама написала\n— ЗП: от 200\n— Вопросы:\nКакими стейт-менеджерами пользовался?\nОтличия Mobx от Redux?\nВ чём популярность react? Какую проблему он решает?\nИз чего состоит react? Компоненты, пропсы и т.д\nКаким образом можно использовать контекст в функциональных компонентах?\nКакие хуки использовал?\nОтличия useMemo от useCollback?\nЧем события в React отличаются от событий в JS?\nЧто такое порталы в React?\nРаботал ли с...",
        "full_content": "2024-07-11 16:21:29\n Вандал Нестреляй -> 2071074234:\nPremium IT Solution\n— Ссылка: HR сама написала\n— ЗП: от 200\n— Вопросы:\nКакими стейт-менеджерами пользовался?\nОтличия Mobx от Redux?\nВ чём популярность react? Какую проблему он решает?\nИз чего состоит react? Компоненты, пропсы и т.д\nКаким образом можно использовать контекст в функциональных компонентах?\nКакие хуки использовал?\nОтличия useMemo от useCollback?\nЧем события в React отличаются от событий в JS?\nЧто такое порталы в React?\nРаботал ли с SSR?\n\nЗадачи:\n\n // Написать аналог метода .flat()\nfunction flattenArray(arr) {\nreturn arr.reduce((flat, curr) => {\n return flat.concat(Array.isArray(curr) ? flattenArray(curr) : curr)\n }, [])\n }\n // Написать аналог .promiseAll()\n\nfunction newPromiseAll(promises) {\n  \n    if (promises.length === 0){\n    return Promise.resolve([])\n  }\n  \n  return new Promise((resolve, reject) => {\n    let result = [];\n    let allResolved = 0;\n    promises.forEach((curr, i) => {\n      Promise.resolve(curr).then((data) => {\n        result[i] = data;\n        allResolved += 1;\n        if (allResolved === promises.length){\n          resolve(result)\n        }\n      }).catch((error) => reject(error))\n    })\n  })\n\n // Написать компонент - конвертер километров в мили и наоборот\n\nconst KilometrToMilesConverter = () => {\n       const [value, setValue] = useState('')\n       const [converteredValue, setConverteredValue] = useState('')\n       const [conversionType, setConversionType] = useState('kilometr')\n   \n       const handleChangeValue = (e) => {\n       setValue(e.target.value)\n       }\n       \n       const handleSelectChange = (e) => {\n        setConversionType(e.target.value)\n       }\n       \n       const contertValue = () => {\n         if (conversionType === 'kilometr'){\n         const milesValue = +value * 1.6;\n         setConverteredValue(millesValue)\n         } else {\n         const kmValue = +value / 1.6;\n         setConverteredValue(kmValue)\n         }\n       }\n       return (\n           <>\n             <h1>Converter</h1>\n             <label> Enter value <input type='number' value={value} onChange={handleChangeValue}</label>\n             <select onChange={handleSelectChange}>\n             <option value = 'kilometr'>Kilometr</option>\n             <option valie - 'milles'>Milles</option>\n             </select>\n             <button onClick = {convertValue}> Enter </button>\n           </>\n       )\n}"
      }
    ]
  },
  {
    "company": "Selecty",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-04-04 14:05:38",
        "content": "2025-04-04 14:05:38\n Ivan Kulyaev -> 2071074234:\nКомпания: Selecty\nзп: готовы были дать 250к на руки\nВакансия: написала hr\n\nВопросы:\n\nзачем реакт нужен\nvirtual dom\nhttp статус коды 100 - 500\nв чем безопасность https\nпротокол шифрования TСP\nприоритезация селекторов в css\njwt подробно, части JWT\nrest api\nотправка данных в заголовках, где еще можно данные передавать в них\nметоды http\nавторизация и аутентификация \nвебсокеты\nзащищенность https и незащищеннось http\ncors и его отношение к https\nкак скр...",
        "full_content": "2025-04-04 14:05:38\n Ivan Kulyaev -> 2071074234:\nКомпания: Selecty\nзп: готовы были дать 250к на руки\nВакансия: написала hr\n\nВопросы:\n\nзачем реакт нужен\nvirtual dom\nhttp статус коды 100 - 500\nв чем безопасность https\nпротокол шифрования TСP\nприоритезация селекторов в css\njwt подробно, части JWT\nrest api\nотправка данных в заголовках, где еще можно данные передавать в них\nметоды http\nавторизация и аутентификация \nвебсокеты\nзащищенность https и незащищеннось http\ncors и его отношение к https\nкак скрыть контент на экране у юзера\nособенности стрелочной функции, зачем ее сделали\n\nБыла задачка формата, что будет выводиться в логи в react компоненте"
      }
    ]
  },
  {
    "company": "Рвд Инфосистемы",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-21 18:08:03",
        "content": "2024-06-21 18:08:03\n Tonidevs -> 2071074234:\nРВД ИНФОСИСТЕМЫ\n— вакансия: hr написала\n— ЗП: до 150\n— успех: скорее да\n— комментарии: тех поболтать без LC, уставшие работяги, в соло придется работать за фронта, девопса и ещё того парня, как первый опыт - ок.\n\nВОПРОСЫ\n- работал ли с TS какие преимущества\n- чем проекты собирали\n- каким образом взаимодействовал с бэкендом\n- расскажи про HTTP протокол своими словами из опыта как взаимодействовал на практике как писал запросы\n- из чего состоит URL запр...",
        "full_content": "2024-06-21 18:08:03\n Tonidevs -> 2071074234:\nРВД ИНФОСИСТЕМЫ\n— вакансия: hr написала\n— ЗП: до 150\n— успех: скорее да\n— комментарии: тех поболтать без LC, уставшие работяги, в соло придется работать за фронта, девопса и ещё того парня, как первый опыт - ок.\n\nВОПРОСЫ\n- работал ли с TS какие преимущества\n- чем проекты собирали\n- каким образом взаимодействовал с бэкендом\n- расскажи про HTTP протокол своими словами из опыта как взаимодействовал на практике как писал запросы\n- из чего состоит URL запроса\n- абстрактно: надо отправить запрос чтобы вытащить один товар в карточку что бы использовал как бы сделал эту задачу\n- какие HTTP  методы знаешь с какими работал, расскажи про OPTIONS\n- как CORS - работает и для чего нужен\n- как реализовать механизм обновления товаров в корзине, вытекающий вопрос: если пользователь меняет устройство(делаем авторизацию)\n- сессии и заголовок авторизации, что за префикс (bearer)\n- как реализовать передачу данных котировок в рилтайм\n- куча запросов списков с бека как все собрать, оптимизировать\n- представь, что у нас нет реакта, но мы хотим реализовать хуки, как бы ты реализовал систему хуков"
      }
    ]
  },
  {
    "company": "Страховая Компания Гайде",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-09-23 18:26:36",
        "content": "2024-09-23 18:26:36\n Александр -> 2071074234:\n- страховая компания гайде\n- вилка до 250\n- hr сама позвонила \n- до вопросов не дошли, было отвратительно общение с ведущим, который вначале опоздал, после не смог ответить на вопрос о переработках, сделал вид что не услышал его, после этого посмеялся над тем кто такие фронт-лиды, должен был быть второй собеседующий, но он не пришел поэтому он сказал что надо будет еще с ним собес пройти, как будто запись сделать нельзя и показать ему, после чего я с...",
        "full_content": "2024-09-23 18:26:36\n Александр -> 2071074234:\n- страховая компания гайде\n- вилка до 250\n- hr сама позвонила \n- до вопросов не дошли, было отвратительно общение с ведущим, который вначале опоздал, после не смог ответить на вопрос о переработках, сделал вид что не услышал его, после этого посмеялся над тем кто такие фронт-лиды, должен был быть второй собеседующий, но он не пришел поэтому он сказал что надо будет еще с ним собес пройти, как будто запись сделать нельзя и показать ему, после чего я сказал что об этом речи не шло, дальше он сказал тогда досвидания и вышел из беседы. ОБХОДИТЕ ЭТУ КОМПАНИЮ СТОРОНОЙ!!!\nКомпания переписывает легаси с пхп попутно встраивая фичи, сомневаюсь в том что они хоть что то переписывают, думаю пиздеж"
      }
    ]
  },
  {
    "company": "Mozen",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-25 16:36:33",
        "content": "2024-06-25 16:36:33\n Mummadhan -> 2071074234:\n- Mozen \n-  https://spb.hh.ru/vacancy/98722588?hhtmFrom=employer_vacancies\n- ЗП: от 180к на руки\n- Вопросы:\n1) Что такое чистая функция?\n2) Что такое иммутабельность?\n3) Методы массивов для чего они нужны? Почему нельзя было обойтись просто циклами?\nРассказать про map и forEach, разницу между ними.\n4) Рассказать про hoisting.\n5) Рассказать про облости видимости(scope).\n6) Рассказать про замыкания.\n7) Рассказать про IntersectionObserver API?\n😍 Рассказ...",
        "full_content": "2024-06-25 16:36:33\n Mummadhan -> 2071074234:\n- Mozen \n-  https://spb.hh.ru/vacancy/98722588?hhtmFrom=employer_vacancies\n- ЗП: от 180к на руки\n- Вопросы:\n1) Что такое чистая функция?\n2) Что такое иммутабельность?\n3) Методы массивов для чего они нужны? Почему нельзя было обойтись просто циклами?\nРассказать про map и forEach, разницу между ними.\n4) Рассказать про hoisting.\n5) Рассказать про облости видимости(scope).\n6) Рассказать про замыкания.\n7) Рассказать про IntersectionObserver API?\n😍 Рассказать про способы копирования объектов?\n9)  Рассказать про Промисы? async await?\n10) Что такое полифиллы?\n11) Рассказать про Virtual DOM?\n12) Что такое reconcilation?\n13) Что такое  key?\n14) Для чего нужен React?\n15) Вопросы про Webpack?\n14) Для чего нужны Loaders?\n15) Что такое Tree Shaking?\n16)Разница между Webpack и Vite?\n17) Что такое SPA?\n18) Минусы и плюсы SSR?"
      }
    ]
  },
  {
    "company": "X-Keeper",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-04 08:43:41",
        "content": "2024-06-04 08:43:41\n Александр Горохов -> 2071074234:\nX-Keeper Тех собес (но как-будто не тех)\nЗп:200\n\nМного софт вопросов, нет лайвкодинга.\nЧто такое redux, отличие от context, плюсы минусы.\nЧто такое react, в чем плюсы.\nАрхитектура программирования , какую знаешь.\nЕсли проблемы у пользователя на сайте при отображении страницы(долго грузит и т.д.) что бы делал, как бы искал проблему\nEvent loop, микро/макро. Где ждет макро своего выполнения.\nЧто происходит когда вводишь в адресную строку адрес и...",
        "full_content": "2024-06-04 08:43:41\n Александр Горохов -> 2071074234:\nX-Keeper Тех собес (но как-будто не тех)\nЗп:200\n\nМного софт вопросов, нет лайвкодинга.\nЧто такое redux, отличие от context, плюсы минусы.\nЧто такое react, в чем плюсы.\nАрхитектура программирования , какую знаешь.\nЕсли проблемы у пользователя на сайте при отображении страницы(долго грузит и т.д.) что бы делал, как бы искал проблему\nEvent loop, микро/макро. Где ждет макро своего выполнения.\nЧто происходит когда вводишь в адресную строку адрес и нажимаешь enter.\nКакое тестирование применяли на проектах.\nУмеешь ли работать с докером и аналогами, можешь самостоятельно настроить ?\nДля чего мемоизировать? Нужно ли все оборачивать в мемо? Какие варианты оптимизации знаешь.\nУ нас есть загрузка большого объема данных и когда мы пытаемся его загрузить все ломается, что будешь делать?\nЗнаешь ли сложность алгоритмическую?\nCi CD настраивал?"
      }
    ]
  },
  {
    "company": "Иннополис",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-06 17:14:01",
        "content": "2025-07-06 17:14:01\n Никита -> 2071074234:\nИннополис\nЗП: от 200\n\nВ основном задавал вопросы про опыт и немного общих технических\n\n1. Принцип headless-components?\n2. Какая была архитектура фронта на проекте?\n3. Как общались с бэком?\n4. Что такое BFF, был ли настроен на проекте?\n5. Расскажи всё что знаешь про авторизацию, по какому принципу она была построена у вас на фронте? Использовали библу для jwt токенов?\n6. Как происходит обновление access токена на фронте, опишите алгоритм? (axios intercep...",
        "full_content": "2025-07-06 17:14:01\n Никита -> 2071074234:\nИннополис\nЗП: от 200\n\nВ основном задавал вопросы про опыт и немного общих технических\n\n1. Принцип headless-components?\n2. Какая была архитектура фронта на проекте?\n3. Как общались с бэком?\n4. Что такое BFF, был ли настроен на проекте?\n5. Расскажи всё что знаешь про авторизацию, по какому принципу она была построена у вас на фронте? Использовали библу для jwt токенов?\n6. Как происходит обновление access токена на фронте, опишите алгоритм? (axios interceptors)\n7. У вас было 3 фронта на проекте, как вы распределяли задачи, какие предпочитаете и какие у вас были?\n8. При авторизации внедряли функционал ролей?\n9. Приходите в команду, а там access токен передаётся в query параметрах, ваши действия?\n10. Как работает ивент луп?\n11. Расскажите всё что знаете про промисы, их методы, chaining \n12. Можно ли после catch снова навесить then?\n13. Что такое область видимости, замыкание, лексическое окружение, var let const\n14. Пример использования замыканий в работе\n15. Что такое HOC, назвать пример\n16. Для чего нужен react.memo\n17. Как отслеживать ререндеры в реакте?\n18. Назвать хуки какие знаешь, жизненный цикл компонента\n19. Где мы используем жизненный цикл (useEffect)\n20. Что такое Map, пользовались ли маппингом?\n21. У нас есть 3 группы инпутов по 3 инпута в каждой. При вводе значения в один первый инпут, такое же значение появляется в остальных первых инпутах в других группах. Как избежать данного поведения? (уникальные имена создавать, динамические поля)\n22. Как обрабатывали данные с бэка с помощью TS, какие проблемы были?\n23. Utility types\n24. ООП, принципы\n\nЗадача\n\nimport \"./styles.css\";\n\nconst payload = [\n    { firstName: \"John\", age: 20, company: \"Google\" },\n    { firstName: \"Andrea\", age: 30, company: \"Amazon\" },\n    { firstName: \"Max\", age: 40, company: \"Amazon\" },\n    { firstName: \"Anthony\", age: 15, company: \"FirstClick\" },\n    { firstName: \"Nancy\", age: 25, company: \"FirstClick\" },\n    { firstName: \"Pryan\", age: 20, company: \"Google\" },\n];\n\n// 1. It's taking array of objects with following fields:\n// - firstName: string\n// - age: int\n// - company: string\n// 2. This function should return average age of employees per company.\n// For example, the 'payload' above it should return:\n// {\n//     Google: 20,\n//     Amazon: 35,\n//     FirstClick: 20\n// }\nfunction main(input) {\n}\n\ndocument.getElementById(\"app\").innerHTML = JSON.stringify(\n    main(payload),\n    null,\n    2\n);"
      }
    ]
  },
  {
    "company": "АО ГНИВЦ",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-03-26 11:45:40",
        "content": "2025-03-26 11:45:40\n twomadd -> 2071074234:\nКомпания: АО ГНИВЦ \nЗП: 230к\nВакансия: hr написал\n\nВопросы:\n1.Спрашивали про бэкграунд , достижения и самые интересные задачи\n2. async и defer , в чем разница\n3. Знаком ли с Web Workers , рассказать про них\n4. Замыкание\n5. Дженерики\n6. Для чего typeof и keyof\n7. Virtual Dom \n8. Для чего key\n9. Разница между useCallback и useMemo \n10. React.memo\n11. Какое сравнение осуществляет React.memo\n12. HOC \n13. Обработчики событий в React\n14. Error Boundaries\n15....",
        "full_content": "2025-03-26 11:45:40\n twomadd -> 2071074234:\nКомпания: АО ГНИВЦ \nЗП: 230к\nВакансия: hr написал\n\nВопросы:\n1.Спрашивали про бэкграунд , достижения и самые интересные задачи\n2. async и defer , в чем разница\n3. Знаком ли с Web Workers , рассказать про них\n4. Замыкание\n5. Дженерики\n6. Для чего typeof и keyof\n7. Virtual Dom \n8. Для чего key\n9. Разница между useCallback и useMemo \n10. React.memo\n11. Какое сравнение осуществляет React.memo\n12. HOC \n13. Обработчики событий в React\n14. Error Boundaries\n15. Если надо отправлять много запросов одновременно через axios , какие способы знаешь ? \n\nЗадача:\nfunction slowCalc(x) {\n  console.log('Вычисляю...');\n  return x * 2;\n}\n\nconst cached = (fn) => {\n  const cache = {}; // Простой объект вместо Map\n  return (x) => {\n    if (x in cache) { // Проверяем наличие ключа в объекте\n      console.log('(из кеша)');\n      return cache[x]; // Возвращаем сохранённое значение\n    }\n    const result = fn(x); // Вычисляем, если нет в кеше\n    cache[x] = result; // Сохраняем результат\n    return result;\n  };\n};\n\nconst cachedCalc = cached(slowCalc);\nconsole.log(cachedCalc(5));  // Вычисляю... → 10\nconsole.log(cachedCalc(5));  // (из кеша) → 10\nconsole.log(cachedCalc(10"
      }
    ]
  },
  {
    "company": "Айкон Про",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-05-09 06:39:27",
        "content": "2025-05-09 06:39:27\n Yuri Trondin -> 2071074234:\nКомпания: Айкон Про\nhttps://hh.ru/vacancy/117261224?hhtmFrom=employer_archived_vacancies\nЗП (называл от 300, вилка 380-460)\nВопросы (задач или кодинга не было):\n1) Разница SSR SSG CSR\n2) методология BFF\n3) getStaticProps getServerSideProps\n4) в каких случаях использвоать SSR SSG CSR\n5) react-query/RTK-query, инвалидация, кэширование, параметры\n6) отложенный рендеринг (lazy, suspense)\n7) плюсы минусы мутабельный и имутабельных данных\n8) TS, зачем н...",
        "full_content": "2025-05-09 06:39:27\n Yuri Trondin -> 2071074234:\nКомпания: Айкон Про\nhttps://hh.ru/vacancy/117261224?hhtmFrom=employer_archived_vacancies\nЗП (называл от 300, вилка 380-460)\nВопросы (задач или кодинга не было):\n1) Разница SSR SSG CSR\n2) методология BFF\n3) getStaticProps getServerSideProps\n4) в каких случаях использвоать SSR SSG CSR\n5) react-query/RTK-query, инвалидация, кэширование, параметры\n6) отложенный рендеринг (lazy, suspense)\n7) плюсы минусы мутабельный и имутабельных данных\n8) TS, зачем нужен как помогает\n9) Type guard/type assertion \n10) Union type/intersection type\n11) Object freeze\n12) unit тесты\n13) snapshot/screenshot тесты\n14) git rebase /cherypeek\n14) module auditor npm\n15) как поднять докер образ\n16) оптимизация загрузки JS/CSS\n17) подходы к кроссбраузерной верстке\n18) фигма (работал или нет)\n19) вэбсокеты (на чем делал)\n20)graphql (работал или нет)\n21) nodeJS (работал или нет)\n22) монорепа (нравится или нет что использовал плюсы минусы)\n23) микрофрнотенды (работал или нет плюсы минусы)\n\nдальше стандарт по мотивации, какие проекты делал и тд. \n\nУспех собеса  ✅ (позвали на сл этап)\n \n Запись увы без моего голоса, сорян. Но если кому будет надо, я залью."
      }
    ]
  },
  {
    "company": "More.tv",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-01-10 08:56:45",
        "content": "2024-01-10 08:56:45\n Daniil Max -> 2071074234:\n— Название компании: More.tv \n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/OE4Q3s5lZJE?si=9OEmCoP05iu8yRdj\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n\n#middle",
        "full_content": "2024-01-10 08:56:45\n Daniil Max -> 2071074234:\n— Название компании: More.tv \n— Ссылка на вакансию: потеряна \n— ЗП: 270К\n— Задачи: теория \n— Запись на ютуб: https://youtu.be/OE4Q3s5lZJE?si=9OEmCoP05iu8yRdj\n— Успех собеса: ✅\n— Фитбек о собесе от HR: огонь\n\n#middle"
      }
    ]
  },
  {
    "company": "Расчетные Решения",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-13 13:53:48",
        "content": "2024-06-13 13:53:48\n Tonidevs -> 2071074234:\nРасчетные Решения\nhr написала\nЗП от 260 просил, можно больше думаю 300+\nВопросы - не было, сразу лайвкод\nУСПЕХ: скорее нет, чем да(больше уверенности).\n\nЗадачи:\n- ПРОМИСЫ\nlog(1); // Вывод: 1\n\nsetTimeout(() => log(2), 0); // Вывод: 2\n\nnew Promise((res, rej) => {\n  log(3); // Вывод: 3\n  res(4); // Вывод: 4\n})\n.then((x) => {\n  log(x); // Вывод: 4\n  throw x; // Выбросит исключение, которое будет перехвачено catch\n})\n.catch(log) // Вывод: 4\n\nlog(5) // Выво...",
        "full_content": "2024-06-13 13:53:48\n Tonidevs -> 2071074234:\nРасчетные Решения\nhr написала\nЗП от 260 просил, можно больше думаю 300+\nВопросы - не было, сразу лайвкод\nУСПЕХ: скорее нет, чем да(больше уверенности).\n\nЗадачи:\n- ПРОМИСЫ\nlog(1); // Вывод: 1\n\nsetTimeout(() => log(2), 0); // Вывод: 2\n\nnew Promise((res, rej) => {\n  log(3); // Вывод: 3\n  res(4); // Вывод: 4\n})\n.then((x) => {\n  log(x); // Вывод: 4\n  throw x; // Выбросит исключение, которое будет перехвачено catch\n})\n.catch(log) // Вывод: 4\n\nlog(5) // Вывод: 5\n\nОТВЕТ: //  1 3 5 4 4 2\n- МЕМОИЗАЦИЯ\n// На вход получает функцию, которую необходимо мемоизировать и возвращает новую функцию\n\nconst memoization = (fn) => {\n  // Создаем карту для хранения результатов вычислений\n  const cache = new Map();\n\n  // Возвращаем новую функцию, которая будет использовать кэш для мемоизации\n  return (...args) => {\n    // Преобразуем аргументы в строку, чтобы использовать их в качестве ключа в карте\n    const str = JSON.stringify(args);\n\n    // Проверяем, есть ли результат вычисления для этих аргументов в кэше\n    if (cache.has(str)) {\n      // Если есть, возвращаем его из кэша\n      return cache.get(str);\n    }\n\n    // Если результата в кэше нет, вычисляем функцию с переданными аргументами\n    const result = fn(...args);\n\n    // Сохраняем результат в кэше\n    cache.set(str, result);\n\n    // Возвращаем результат\n    return result;\n  };\n};\n\n// Пример использования\nconst f = (a, b) => a + b; // Простая функция для примера\nconst f1 = memoization(f); // Мемоизируем функцию f\n\nconsole.log(f1(1, 2)); // 3, вычисляется и сохраняется в кэше\nconsole.log(f1(1, 2)); // 3, берется из кэша\n\n- ПРОМИС ALL | Написать свой Promise.all, не используя Promise.race\nconst promiseAll = (proms) => {\n  // Создаем массив для хранения результатов\n  const result = new Array(proms.length);\n  // Счетчик для отслеживания количества выполненных промисов\n  let count = 0;\n\n  // Возвращаем новый промис\n  return new Promise((resolve, reject) => {\n    // Проходим по массиву промисов\n    proms.forEach((pr, idx) => {\n      // Добавляем обработчики для каждого промиса\n      pr.then(res => {\n        // Сохраняем результат в соответствующую ячейку массива\n        result[idx] = res;\n        // Увеличиваем счетчик выполненных промисов\n        count += 1;\n        // Если все промисы выполнены, разрешаем возвращаемый промис с результатом\n        if (count === proms.length) resolve(result);\n      }).catch(reject); // Если промис отклонен, отклоняем возвращаемый промис\n    });\n  });\n};\n- АНАГРАМА \n// На вход подается массив строк. Необходимо вернуть сгруппированные анаграммы (массив массивов)\nconst getAnagrams = (arr) => {\n  // Создаем объект для хранения групп анаграмм\n  const mapa = {};\n  // Проходим по массиву строк\n  arr.forEach((el) => {\n    // Преобразуем строку в массив символов, сортируем его и объединяем обратно в строку\n    // При этом переводим все символы в нижний регистр, чтобы анаграммы не различались по регистру\n    const sorted = el.split(\"\").sort().join(\"\").toLowerCase();\n    // Если такой ключ (отсортированная строка) уже есть в mapa, добавляем текущую строку в массив\n    if (mapa[sorted]) {\n      mapa[sorted].push(el);\n    } else {\n      // Если такого ключа нет, создаем новый массив с текущей строкой и добавляем его в mapa\n      mapa[sorted] = [el];\n    }\n  });\n  // Возвращаем массив значений из mapa, которые являются группами анаграмм\n  return Object.values(mapa);\n};\n\n// Пример использования функции getAnagrams\nconst words = ['мир', 'Рим', 'сирота', 'Ариост', 'мри', 'пва', 'лор', 'авп'];\nconst anagrams = getAnagrams(words);\n\nconsole.log(anagrams);\n\n// Вывод: [[\"мир\", \"Рим\", \"мри\"], [\"сирота\", \"Ариост\"], [\"пва\", \"авп\"], [\"лор\"]]\n- что выведется в консоль и почему"
      }
    ]
  },
  {
    "company": "Фалт Системс",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-02 14:29:20",
        "content": "2025-07-02 14:29:20\n Евгений -> 2071074234:\nКомпания: ФАЛТ Системс\nПроект: сайт аэрофлота\nЗП: от 230\n\nВопросы:\n1)Что происходит когда вводить url\n2) Eventloop\n3) this \n4) как внутри DOM как ведет себя this\n5) рассказать про утечку памяти \n6) разница между SSR,SSG, ISR \n7) рассказать про SEO, как можно повлиять \n8) Что такое рекурсия\nЗадача 1: \nconst reduce = (callback, initial = [], arr) => {\n  if (arr.length === 0) return initial; // false\n\n  const [first, ...rest] = arr;\n  return callback(firs...",
        "full_content": "2025-07-02 14:29:20\n Евгений -> 2071074234:\nКомпания: ФАЛТ Системс\nПроект: сайт аэрофлота\nЗП: от 230\n\nВопросы:\n1)Что происходит когда вводить url\n2) Eventloop\n3) this \n4) как внутри DOM как ведет себя this\n5) рассказать про утечку памяти \n6) разница между SSR,SSG, ISR \n7) рассказать про SEO, как можно повлиять \n8) Что такое рекурсия\nЗадача 1: \nconst reduce = (callback, initial = [], arr) => {\n  if (arr.length === 0) return initial; // false\n\n  const [first, ...rest] = arr;\n  return callback(first, reduce(callback, initial, rest));\n};\n\nconst sumOfSquares = (arr) => {\n  return reduce((el, acc)=> {\n   return el * el + acc\n  },0, arr) \n};\n\nconst result = sumOfSquares([1, 2, 3]);\n\nconsole.log(result);\n// Ожидаемый результат: 14\n\n// sumOfSquares числа возводит в квадрат\n//\nЗадача 2: \n/**\n * Реализовать класс Subscription.\n * Должны поддерживаться методы subscribe, unsubscribe и next.\n * Все методы должны быть строго типизированы.\n */\ntype HandlerType<T> = (value: T) => void\n\nclass Subscription<T> {\n  subscriber: Set<HandlerType<T>> = new Set()\n  subscribe(handler : HandlerType<T>) {\n    this.subscriber.add(handler)\n    return ()=> this.unsubscribe1(handler)\n  }\n  unsubscribe1(handler: HandlerType<T>) {\n    this.subscriber.delete(handler )\n  }\n  next(value: T) {\n    this.subscriber.forEach(handler => handler(value))\n  }\n}\n\nconst sub = new Subscription<string>();\n\nconst handler1 = (value: string) => {\n  console.log('Handler1 received:', value);\n};\nconst handler2 = (value: string) => {\n  console.log('Handler2 received:', value);\n};\n\nconst unsubscribe1 = sub.subscribe(handler1);\nconst unsubscribe2 = sub.subscribe(handler2);\n\nsub.next('First');\n// Вывод:\n// Handler1 received: First\n// Handler2 received: First\n\nunsubscribe1();\n\nsub.next('Second');\n// Вывод:\n// Handler2 received: Second\nЗадача 3:  задача состоит из разных компонентов, ссылка на весь проект : https://stackblitz.com/edit/vitejs-vite-8orcxekc?file=src%2Fcontainers%2Fuser-container%2Findex.tsx,src%2Fapi%2Findex.ts\n/*\n- Реализовать React-компонент `UserContainer` (из `./containers/user-container/`) в классовом стиле.\n- Реализовать загрузку и обновление пользователя в компоненте используя класс `Api` (из `./api/`).\n- Реализовать отображение компонентов (из `./components/...`) — `<Loader />`, `<Error />` или `<UserCard />` — в зависимости от состояния.\n- Реализовать вызов функции `unmount`, который принимается через `props`, в соответствующем методе жизненного цикла.\n\n---\n\n*/\n\nimport { Component } from 'react';\nimport styles from './styles.module.css';\nimport Loader from \"../../components/loader\"\nimport {Api} from \"../../api\"\n\ninterface Props {\n  userId: number;\n  unmount: () => void;\n}\n\nclass UserContainer extends Component<Props> {  \n  constructor(props) {\n    super(props)\n    this.state = {\n      user: null,\n      isLoading: false, \n      error: null\n    }\n    this.api = new Api()\n  }\n    \n    componentDidMount() {\n      this.loadUser\n    }\n    loadUser = async () => {\n      try {\n        const user = await this.api.getUser(this.props.userId)\n        this.setState({user, isLoading: false})\n      } catch(error : unknown) {\n        this.setState({error: error.message, isLoading: false})\n      }\n    }\n\n  }\n  render() {\n    return <div className={styles.container}></div>;\n  }\n}\n\nexport default UserContainer;"
      }
    ]
  },
  {
    "company": "Algorithmic Brains",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-12 14:51:30",
        "content": "2024-07-12 14:51:30\n Илья -> 2071074234:\nAlgorithmic Brains\n- Вакансия: сами написали\n- до 190к\n\nВопросы:\n- расскажи про опыт\n- var,let,const\n- Cookie,LocalStorage,SessionStorage \n- callback hell, promise, async/await\n- статические методы promise\n- хуки\n\nЗадачи:\n1. Задачи с метом массива что выведет в зависимости от того,какая функция будет(стрелочная или декларейшен)\n2. дан массив с повторяющимися цифрами. Нужно получить объект : значение - количество \nconst result = array.reduce((acc, num) => ...",
        "full_content": "2024-07-12 14:51:30\n Илья -> 2071074234:\nAlgorithmic Brains\n- Вакансия: сами написали\n- до 190к\n\nВопросы:\n- расскажи про опыт\n- var,let,const\n- Cookie,LocalStorage,SessionStorage \n- callback hell, promise, async/await\n- статические методы promise\n- хуки\n\nЗадачи:\n1. Задачи с метом массива что выведет в зависимости от того,какая функция будет(стрелочная или декларейшен)\n2. дан массив с повторяющимися цифрами. Нужно получить объект : значение - количество \nconst result = array.reduce((acc, num) => {\n  if (acc[num]) {\n    acc[num] += 1;\n  } else {\n    acc[num] = 1;\n  }\n  return acc;\n}, {});\n\n3. Задача по ректу,сделать условно свой тудулист \n\nconst [users, setUsers] = useState(usersData);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const toggleEditMode = (user) => {\n    setIsEditing(!isEditing);\n    setCurrentUser(user);\n  };\n\n  const deleteUser = (id) => {\n    setUsers(users.filter(user => user.id !== id));\n  };\n\n  const editUser = (id, newUsername) => {\n    setUsers(users.map(user => user.id === id ? { ...user, username: newUsername } : user));\n    setIsEditing(false);\n    setCurrentUser(null);\n  };\n4. Последняя задача с применением Promise.all\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [userResponse, postResponse] = await Promise.all([\n          fetch(userUrl),\n          fetch(postUrl)\n        ]);\n\n        const userData = await userResponse.json();\n        const postData = await postResponse.json();\n\n        setUser(userData);\n        setPost(postData);\n      } catch (error) {\n        setError('Ошибка при загрузке данных');\n        console.error('Ошибка при загрузке данных:', error);\n      }\n    };\n\n    fetchData();\n  }, []);"
      }
    ]
  },
  {
    "company": "Gotbit",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-23 19:56:25",
        "content": "2024-07-23 19:56:25\n Valerii Neugomonov -> 2071074234:\nGotBit\n- Вакансия: https://careers.gotbit.io/jobs/4629252-react-developer\n- Вилка: ~ EUR 4-6k\n- Успех: уверен что мне отказ конечно, но оформил паровозик для товарища, прокнуло, ему завезли приглашение на следующий этап, финальный, знакомство с CTO.\n\n- Вопросы: база по типу приведения типов, методы массивов и их применение... Работают с графиками.\nЗадание: https://t.me/c/2071074234/45026/45301",
        "full_content": "2024-07-23 19:56:25\n Valerii Neugomonov -> 2071074234:\nGotBit\n- Вакансия: https://careers.gotbit.io/jobs/4629252-react-developer\n- Вилка: ~ EUR 4-6k\n- Успех: уверен что мне отказ конечно, но оформил паровозик для товарища, прокнуло, ему завезли приглашение на следующий этап, финальный, знакомство с CTO.\n\n- Вопросы: база по типу приведения типов, методы массивов и их применение... Работают с графиками.\nЗадание: https://t.me/c/2071074234/45026/45301"
      }
    ]
  },
  {
    "company": "СтилСофт",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-08 11:06:04",
        "content": "2025-07-08 11:06:04\n Никита -> 2071074234:\nСтилсофт\nЗП: 200\n\nВопросы\n\nОтличия any unknown в TS?\nКакие знаешь утилити типы?\nЧто такое дженерики?\nНазови причины ререндеров в реакте? Как можем принудительно вызвать ререндер?\nЧто такое key?\nЧто такое useEffect? Какие ещё методы вызывать эффект знаешь?(useInsertionEffect)\nЧто такое useRef?\nПочему нужно обращаться к DOM элементу через ref, а не через querySelector?\nЗнаешь что такое callback ref?\nIntersection Obserever?\nПочему мы не можем хранить струк...",
        "full_content": "2025-07-08 11:06:04\n Никита -> 2071074234:\nСтилсофт\nЗП: 200\n\nВопросы\n\nОтличия any unknown в TS?\nКакие знаешь утилити типы?\nЧто такое дженерики?\nНазови причины ререндеров в реакте? Как можем принудительно вызвать ререндер?\nЧто такое key?\nЧто такое useEffect? Какие ещё методы вызывать эффект знаешь?(useInsertionEffect)\nЧто такое useRef?\nПочему нужно обращаться к DOM элементу через ref, а не через querySelector?\nЗнаешь что такое callback ref?\nIntersection Obserever?\nПочему мы не можем хранить структуры данных типа Map, Date в Redux сторе?\nЧто такое reselect?\nРасскажи про Critical Render Path. Отличия async/defer?\n\nЗадачи\n\n// Исходные данные\n// 1. Необходимо описать данную конструкцию (TypeScript)\n\n\ntype TGroup = {\n    id: number,\n    name: 'route' | 'session' | 'mission'\n}\n\ninterface Tlist = {\n    id: string,\n    revNo: number,\n    group: 1 | 2 | 3\n}\n\nconst group: TGroup[] = [\n    { id: 1, name: \"route\" },\n    { id: 2, name: \"session\" },\n    { id: 3, name: \"mission\" },\n];\n\nconst list: TList[] = [\n    {\n        id: \"R1311\",\n        revNo: 16815,\n        group: 1,\n    },\n    {\n        id: \"R1312\",\n        revNo: 16816,\n        group: 2,\n    },\n    {\n        id: \"R1313\",\n        revNo: 16817,\n        group: 3,\n    },\n    {\n        id: \"R1314\",\n        revNo: 16817,\n        group: 1,\n    },\n    {\n        id: \"R1315\",\n        revNo: 16818,\n        group: 2,\n    },\n];\n\ntype newGroup = Record<number, 'route' | 'session' | 'mission'> \n\n\n// Должно получиться\n// 2. У каждого элемент спика заменить поле group с ID => NAME (groupStatus)\n\nconst newList: TResult = list.map(item =>{\n    const groupName = group.find(groupItem => groupItem.id === item.group)?.name\n    if (groupName) {\n        return {...item, group: groupName}\n    };\n    return;\n})\n\ninterface TResult extends Tlist = {\n    group: 'route' | 'session' | 'mission'\n}\n\nconst result: TResult[] = [\n    {\n        id: \"R1311\",\n        revNo: 16815,\n        group: \"route\",\n    },\n    {\n        id: \"R1312\",\n        revNo: 16816,\n        group: \"session\",\n    },\n    {\n        id: \"R1313\",\n        revNo: 16817,\n        group: \"mission\",\n    },\n    {\n        id: \"R1314\",\n        revNo: 16817,\n        group: \"route\",\n    },\n    {\n        id: \"R1315\",\n        revNo: 16818,\n        group: \"session\",\n    },\n];"
      }
    ]
  },
  {
    "company": "Secure-T",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-01-31 17:31:14",
        "content": "2024-01-31 17:31:14\n Evgeniy -> 2071074234:\n#Secure-T #middle\nКомпания: Secure-T\nВилка: от 200\nСсылка на вакансию: hr написала сама\n\nКрутой собес. Все вопросы были только по реакту, как и лайвкод.\nВопросы:\n- Что добавили в 18 реакте \n- fiber\n- concurrent\n- Хуки useTransition, useDefferedValue\n- useRef\n- Как работает React. Reconciliation.\nБыло что-то еще, забыл\n\nЗадачи:\nРефакторинг кода \nДобавить кнопку которая появляется по скроллу \nНаписать кастомный хук который принимает функцию, ивент и наве...",
        "full_content": "2024-01-31 17:31:14\n Evgeniy -> 2071074234:\n#Secure-T #middle\nКомпания: Secure-T\nВилка: от 200\nСсылка на вакансию: hr написала сама\n\nКрутой собес. Все вопросы были только по реакту, как и лайвкод.\nВопросы:\n- Что добавили в 18 реакте \n- fiber\n- concurrent\n- Хуки useTransition, useDefferedValue\n- useRef\n- Как работает React. Reconciliation.\nБыло что-то еще, забыл\n\nЗадачи:\nРефакторинг кода \nДобавить кнопку которая появляется по скроллу \nНаписать кастомный хук который принимает функцию, ивент и навешивает обработчик на window\n\nКнопка\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { useEvent } from \"./useScroll\";\n\nexport const ScrollBtn = () => {\n  const [scrollY, setScrollY] = React.useState(0);\n  const handleScroll = () => {\n    setScrollY(window.scrollY);\n  };\n\n  useEvent(\"scroll\", handleScroll);\n\n  // сделать так, чтобы кнопка появлялась только в том случае, если scrollY > 200\n  const isVisible = scrollY > 200;\n\n  if (!isVisible) return null;\n\n  const scrollToTop = () => {\n    scrollTo({ top: 0 });\n  };\n\n  return (\n    <div style={{ position: \"fixed\", bottom: \"10px\", right: \"10px\" }}>\n      <button onClick={() => scrollToTop()}>Scroll</button>\n    </div>\n  );\n};\n\nКастомный хук\n\nimport React, { useEffect } from \"react\";\n\nexport const useEvent = (event, fn) => {\n  const savedFn = useRef();\n  useEffect(() => {\n    savedFn.current = fn;\n  }, [fn]);\n  useEffect(() => {\n    const eventListener = (event) => fn(event);\n\n    window.addEventListener(event, eventListener);\n\n    return () => {\n      window.removeEventListener(event, eventListener);\n    };\n  }, [fn, event]);\n};\n\nУспех собеса: скорее всего ❌"
      }
    ]
  },
  {
    "company": "Ноунейм Компания С Оплатой В Крипте",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-12-10 08:08:58",
        "content": "2024-12-10 08:08:58\n Igor -> 2071074234:\nНоунейм компания с оплатой в крипте\nhttps://hh.ru/vacancy/90951582?hhtmFrom=employer_vacancies\n\nСобес в формате поговорить, задач не было. Мужик даже не шарил за фронт\n\nЗапись в YouTube\nhttps://youtu.be/bDh4OVny6wA",
        "full_content": "2024-12-10 08:08:58\n Igor -> 2071074234:\nНоунейм компания с оплатой в крипте\nhttps://hh.ru/vacancy/90951582?hhtmFrom=employer_vacancies\n\nСобес в формате поговорить, задач не было. Мужик даже не шарил за фронт\n\nЗапись в YouTube\nhttps://youtu.be/bDh4OVny6wA"
      }
    ]
  },
  {
    "company": "Онлайн Школа-Тетрика",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-30 07:14:14",
        "content": "2024-10-30 07:14:14\n Artyom Sozykin -> 2071074234:\nОнлайн школа-тетрика\nЗП: 250к\n3 задачи\nПровалено ❌",
        "full_content": "2024-10-30 07:14:14\n Artyom Sozykin -> 2071074234:\nОнлайн школа-тетрика\nЗП: 250к\n3 задачи\nПровалено ❌"
      }
    ]
  },
  {
    "company": "Tybbo System",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-14 20:38:12",
        "content": "2024-11-14 20:38:12\n Артем -> 2071074234:\nКомпания: Tybbo System\nВакансия: https://tver.hh.ru/vacancy/109230359?\nЗП: 220\nВопросы: \nСколько информации может в себе хранить 1 бит\nсколько 1 байт\nчто такое чистая функция\nобласть видемости пермеменных\nизменения обьектов \nчто не так с if(0.1 + 0.2 === 0.3)\nпочему так\nпочему нельзя вызывать получения данных синхронно\nprocess.nextTick\nпорядок вывода тасок в node JS\nthis\nbind vs call vs apply\nWeekMap WeekSet \nсборщик мусора\nв чем проблема рекурсии\nкак мо...",
        "full_content": "2024-11-14 20:38:12\n Артем -> 2071074234:\nКомпания: Tybbo System\nВакансия: https://tver.hh.ru/vacancy/109230359?\nЗП: 220\nВопросы: \nСколько информации может в себе хранить 1 бит\nсколько 1 байт\nчто такое чистая функция\nобласть видемости пермеменных\nизменения обьектов \nчто не так с if(0.1 + 0.2 === 0.3)\nпочему так\nпочему нельзя вызывать получения данных синхронно\nprocess.nextTick\nпорядок вывода тасок в node JS\nthis\nbind vs call vs apply\nWeekMap WeekSet \nсборщик мусора\nв чем проблема рекурсии\nкак можно это побороть\nхвостовая рекурсия\nкак происходит рендер страницы\nнабил адрес нажал enter что дальше\nrequestAnimationsFrame для чего\nreact смысл \nkey in react\nuseEffect vs useLayoutEffect"
      }
    ]
  },
  {
    "company": "А2 Код",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-08-31 07:44:00",
        "content": "2024-08-31 07:44:00\n Руслан -> 2071074234:\nа2 код \n— зп: от 270к\n— вакансия: hr написала\n— задачи: один в один https://t.me/c/2071074234/489/44814",
        "full_content": "2024-08-31 07:44:00\n Руслан -> 2071074234:\nа2 код \n— зп: от 270к\n— вакансия: hr написала\n— задачи: один в один https://t.me/c/2071074234/489/44814"
      }
    ]
  },
  {
    "company": "Staff-IT",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-09-18 16:27:46",
        "content": "2024-09-18 16:27:46\n Бахтияр -> 2071074234:\n- Компания: Staff-IT (аутсорс) тех собес (1ч)\n- ЗП: от 250К\n- Вакансия: https://t.me/c/2071074234/616/62704\n- О проекте: маркетплейс для художников и студий\n- вопросы:\nкакая у вас была верстка на проекте \nПриходилось ли делать какие то специальные приколы UIX под мобилку, например с точки зрения инпутов или клавиатуры или какое то действие прожать, или разные картинки.\nНасколько мобильная версия отличался от десктопной \nНасколько отличался лаяут мобилк...",
        "full_content": "2024-09-18 16:27:46\n Бахтияр -> 2071074234:\n- Компания: Staff-IT (аутсорс) тех собес (1ч)\n- ЗП: от 250К\n- Вакансия: https://t.me/c/2071074234/616/62704\n- О проекте: маркетплейс для художников и студий\n- вопросы:\nкакая у вас была верстка на проекте \nПриходилось ли делать какие то специальные приколы UIX под мобилку, например с точки зрения инпутов или клавиатуры или какое то действие прожать, или разные картинки.\nНасколько мобильная версия отличался от десктопной \nНасколько отличался лаяут мобилки \nБыл ли рендер разных картинок\nВ чем дизайнеры готовили макеты \nКакой CSS был \nРаботал ли tailwind как он тебе\nПисали какие тесты кто писал какие либы\nЗнаком ли с unit тестами\nКак деплоили ваш проект \nС чем приходилось сталкиваться (прооблемы при деплое) \nКакой GITFLOW был\nКакие окружения были у тебя \nВ какие дебри приходилось залазить при деплое \nКакая отладка была при продакшене\nКак понимали что у пользователя проблемы\nКак замеряли скорость загрузки страницы\nСобирали аналитику\nРаботал ли Next \nЧто знаешь про Next\nПриходилось ли делать запуск отдельный фичей \nКак это делали \nЧто использовали для этого"
      }
    ]
  },
  {
    "company": "ROGII",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-12 17:15:01",
        "content": "2025-07-12 17:15:01\n Tima Pakholkov -> 2071074234:\nКомпания: ROGII\nЗп: попросил от 230\n\nВопросы:\n1. Расскажи про свой опыт\n2. Вопросы по опыту и резюме \n3. Почему на проект выбрал d3, а не Canvas. Чем различаются.\n4. Дебаунс и тротл. Как работают? Чем различаются?\n5. С сервера приходит 1000 объектов, как нам получить нужные? (рассуждения про фильтрацию, пагинацию, виртуализацию и работу с сервером)\n6. Структуры данных\n7. Чем обычный поиск отличается от бинарного?\n8. Какую сложность имеет find (л...",
        "full_content": "2025-07-12 17:15:01\n Tima Pakholkov -> 2071074234:\nКомпания: ROGII\nЗп: попросил от 230\n\nВопросы:\n1. Расскажи про свой опыт\n2. Вопросы по опыту и резюме \n3. Почему на проект выбрал d3, а не Canvas. Чем различаются.\n4. Дебаунс и тротл. Как работают? Чем различаются?\n5. С сервера приходит 1000 объектов, как нам получить нужные? (рассуждения про фильтрацию, пагинацию, виртуализацию и работу с сервером)\n6. Структуры данных\n7. Чем обычный поиск отличается от бинарного?\n8. Какую сложность имеет find (линейную)\n9. Сложности алгоритмов O(n), O(n2)\n10. Какую сложность имеет бинарный поиск?\n11. Что нам нужно сделать с массивом, чтобы применить на нем бинарный поиск? \n12. Хеш таблица Map\n\nTS:\n1. Дженерики. Зачем нужны? Как применять? Альтернатива?\n2. Тайпгарды. Зачем нужны? Как проверять типы? \n3. unknown, instance of, is\n4. Record, extends"
      }
    ]
  },
  {
    "company": "Darinsoft",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-06 11:31:18",
        "content": "2024-11-06 11:31:18\n Артем -> 2071074234:\nКомпания: DarinSoft\nЗП: 200\nВакансия: -\n\nВопросы: \nКак сделать синхронную операцию в js\nотличия promiseAll promiseAllSet promiseAny\nОтличия TS от JS (плюсы и минусы)\nХуки в react\nотличия useEffect от useLayoutEffect\nкэйс где ты его применя\nжизненный цикл компонента\nVirtual DOM\nReconsaletion\nFiber\nКак оптимизировать инпут\nreact.memo\nFCD(разказать про архитектуру)\nЕсть код писал его джун он там лагает в нем проблема как ты его оптимизируешь и там много шаг...",
        "full_content": "2024-11-06 11:31:18\n Артем -> 2071074234:\nКомпания: DarinSoft\nЗП: 200\nВакансия: -\n\nВопросы: \nКак сделать синхронную операцию в js\nотличия promiseAll promiseAllSet promiseAny\nОтличия TS от JS (плюсы и минусы)\nХуки в react\nотличия useEffect от useLayoutEffect\nкэйс где ты его применя\nжизненный цикл компонента\nVirtual DOM\nReconsaletion\nFiber\nКак оптимизировать инпут\nreact.memo\nFCD(разказать про архитектуру)\nЕсть код писал его джун он там лагает в нем проблема как ты его оптимизируешь и там много шагов"
      }
    ]
  },
  {
    "company": "MOVAVI",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-03-09 13:32:31",
        "content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nh...",
        "full_content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nhttps://youtu.be/X4T0G_n1jqo \n \nКомпания ВТБ 06.03  \nhttps://youtu.be/3wfKfjohkw0 \n \nКомпания: Сбер технологии 07.03 \nhttps://youtu.be/gt2RcGbzloQ \n \nКомпания: Иннотех 07.03 \nhttps://youtu.be/soujRRxtnC8 \nКомпания: IT ONE 07.03 \nhttps://youtu.be/RaZ-iZOJgDM"
      }
    ]
  },
  {
    "company": "Цифровые Привычки",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-06-06 15:05:04",
        "content": "2025-06-06 15:05:04\n Никита -> 2071074234:\nЦифровые привычки (аутстафф)\nЗП: от 180 говорил\nСобесился в проект сбера ERP\n\nИтог: Дали оффер 260к + 6% по ИП, отказался\n\nВопросы:\nvar, let, const различия\nЕсли объект в const передаём что будет?\nКак сделать иммутабельный объект? А через typescript?\nКак скопировать объект. Что в работе чаще всего использовал ?\nКак работает сборщик мусора?\nЧто такое слабые ссылки в контексте сборщика мусора?\nЗачем нужен key в реакте?\nКакие способы оптимизации в контекст...",
        "full_content": "2025-06-06 15:05:04\n Никита -> 2071074234:\nЦифровые привычки (аутстафф)\nЗП: от 180 говорил\nСобесился в проект сбера ERP\n\nИтог: Дали оффер 260к + 6% по ИП, отказался\n\nВопросы:\nvar, let, const различия\nЕсли объект в const передаём что будет?\nКак сделать иммутабельный объект? А через typescript?\nКак скопировать объект. Что в работе чаще всего использовал ?\nКак работает сборщик мусора?\nЧто такое слабые ссылки в контексте сборщика мусора?\nЗачем нужен key в реакте?\nКакие способы оптимизации в контексте реакта?\nФункцию обёрнутую в useCallback передаём в дочерний, нужно ли в дочернем что-то делать чтобы корректно работало?\nРендеринг в реакте синхронный или асинхронный?\nuseEffect/useLayoutEffect отличия\nЧто такое react fiber?\nsetState синхронный или нет? Почему?\nЗачем нужен StrictMode?\nКакие есть виды хранилищ в браузере?\nГде бы ты хранил refresh token и почему?\n\nЗадачи:\n// ЗАДАЧА 1\n// написать функцию с числами фибоначи\n// 0, 1, 1, 2, 3, 5, 8, 13 ...\nfunction fibonacci(n){\n  const numbers = [0, 1]\n\n  for (let i = 2; i < n; i++){\n    numbers.push(numbers[i-1] + numbers[i-2])\n  }\n\n  return numbers.pop()\n}\n\nconsole.log(fibonacci(1)) // 0\nconsole.log(fibonacci(2)) // 1\nconsole.log(fibonacci(7)) // 8\n\n// ЗАДАЧА 2 что не так с кодом?\nuseEffect(async ()=>{\n  const getPosts = await posts()\n  const getUsers = await users()\n\n  return ()=>console.log('123')\n},[])\n\n// ЗАДАЧА 3\n// что выведется при клике на div?\n<form onClick={()=>console.log(2)}>\n  <div onClick={()=>console.log(2)}>\n    <p onClick={()=>console.log(3)}></p>\n  </div>\n</form>\n\n// ЗАДАЧА 4\n// написать свой дебаунс\nfunction debounce(fn, ms){\n  return (...args)=>{\n    let timeout\n    clearTimeout(timeout)\n    timeout = setTimeout(()=>fn(args), ms)\n  }\n}\n\nconst callback = debounce(console.log, 100)\ncallback('hello')\n\n// ЗАДАЧА 5\n// Преобразовать в плоский массив\nconst arr = [[9],[[1]],[[2],[8],[3]],[5]]\n\nfunction flattenArr(arr){\n\n}\n\nflattenArr(arr) // [9, 1, 2, 8, 3, 5]"
      }
    ]
  },
  {
    "company": "Rusjet",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-08 15:25:32",
        "content": "2024-07-08 15:25:32\n Вандал Нестреляй -> 2071074234:\nRusJet\n— Ссылка: HR сама написала\n— ЗП: от 200\n— Вопросы:\n- Вопросы по typescript:\nЧто такое generic?\nКакие есть утилитарные типы?\nУ нас есть функция, и мы ожидаем, что на вход придёт объект с бэкенда. Но так получилось, что бэк прислал string. Может ли ts как-нибудь помочь?\n\n- Вопросы по react:\nСамые популярные хуки в React?\nМожно ли вместо кастомного хука создать обычную функцию?\n\n- Вопросы по RTK Query:\nМы получили get-запросом таблицу User...",
        "full_content": "2024-07-08 15:25:32\n Вандал Нестреляй -> 2071074234:\nRusJet\n— Ссылка: HR сама написала\n— ЗП: от 200\n— Вопросы:\n- Вопросы по typescript:\nЧто такое generic?\nКакие есть утилитарные типы?\nУ нас есть функция, и мы ожидаем, что на вход придёт объект с бэкенда. Но так получилось, что бэк прислал string. Может ли ts как-нибудь помочь?\n\n- Вопросы по react:\nСамые популярные хуки в React?\nМожно ли вместо кастомного хука создать обычную функцию?\n\n- Вопросы по RTK Query:\nМы получили get-запросом таблицу Users. В этой таблице есть функционал удаления, добавления и редактирования записей. Какие есть способы перерисовки таблицы?\n\n- Вопросы по MaterialUI:\nКак изменить дизайн кнопки в MUI?\nКак добавить к кнопке дополнительный функционал? Например, сделать состояние loading.\n\nСталкивался ли с микрофронтендом?\nЗнаком с библиотекой react-hook-form?\n\nУспех: К сожалению, на данный момент не готовы сделать предложение. \nРебята отметили, что ты хорошо справился с вопросами на техническом собеседовании."
      }
    ]
  },
  {
    "company": "Itsports",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-15 11:38:33",
        "content": "2024-11-15 11:38:33\n Егор -> 2071074234:\nКомпания: ITSports\nВакансия: https://hh.ru/vacancy/109771605\nЗП: 180к+\nВопросы:\nВопросы про опыт\n-Как были выстроены процессы в команде\n-Как происходила оценка задач\n\nТех. вопросы:\n-redux\n-for vs forEach\n-свойства position\n-семантика\n-ol vs ul\n-препроцессор\n-как центрировать блок\n-next зачем нужен\n\nЗадачи:\nimport React, { useState } from \"react\";\n\nexport const Form = () => {\n    const [userName, setUserName] = useState('');\n\n    const submit = () => {\n   ...",
        "full_content": "2024-11-15 11:38:33\n Егор -> 2071074234:\nКомпания: ITSports\nВакансия: https://hh.ru/vacancy/109771605\nЗП: 180к+\nВопросы:\nВопросы про опыт\n-Как были выстроены процессы в команде\n-Как происходила оценка задач\n\nТех. вопросы:\n-redux\n-for vs forEach\n-свойства position\n-семантика\n-ol vs ul\n-препроцессор\n-как центрировать блок\n-next зачем нужен\n\nЗадачи:\nimport React, { useState } from \"react\";\n\nexport const Form = () => {\n    const [userName, setUserName] = useState('');\n\n    const submit = () => {\n        console.log('Form submitted with username:', userName);\n    };\n\n    const closeForm = () => {\n        console.log('Form closed');\n    };\n\n    return (\n        <form>\n            <label>\n                Имя:\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={userName}\n                    onChange={(e) => setUserName(e.target.value)}\n                />\n            </label>\n            <button type=\"button\" onClick={submit}>Отправить</button>\n            <button type=\"button\" onClick={closeForm}>Закрыть</button>\n        </form>\n    );\n};\nimport React, { useState, useEffect } from \"react\";\n\n// Имитация запроса к серверу. Просто получаем число асинхронно\nconst fetchRandomNumber = () => Promise.resolve(Math.random());\n\nexport const NumberAndScroll = () => {\n    const [number, setNumber] = useState(0);\n    const [scroll, setScroll] = useState(0);\n\n    useEffect(() => {\n        const fetchNumber = async () => {\n            const randomNumber = await fetchRandomNumber();\n            setNumber(randomNumber);\n        };\n\n        fetchNumber();\n\n        const handleScroll = () => {\n            setScroll(window.scrollY);\n        };\n\n        window.addEventListener(\"scroll\", handleScroll);\n\n        return () => {\n            window.removeEventListener(\"scroll\", handleScroll);\n        };\n    }, []);\n\n    return (\n        <div>\n            <div>Number: {number}</div>\n            <div>Scroll: {scroll}</div>\n        </div>\n    );\n};"
      }
    ]
  },
  {
    "company": "Argo Studio",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-05-28 08:46:50",
        "content": "2025-05-28 08:46:50\n Никита -> 2071074234:\nArgo Studio (Арго студио)\nОткликнулся на HH вакансия\nЗП: запросил от 230\n\nВопросы:\nПо твоему опыту, с какими ограничениями реакта столкнулся? Во что упирается производительность?\nКак решать проблему с SEO оптимизацией реакта?\nРасскажи про virtual dom, как вообще это работает (reconciliation, эвристический алгоритм, сравнение узлов)?\nА к чему может привести вот это поведение, при котором старый дом сразу же удаляется, если элементы разные?(он про эвристи...",
        "full_content": "2025-05-28 08:46:50\n Никита -> 2071074234:\nArgo Studio (Арго студио)\nОткликнулся на HH вакансия\nЗП: запросил от 230\n\nВопросы:\nПо твоему опыту, с какими ограничениями реакта столкнулся? Во что упирается производительность?\nКак решать проблему с SEO оптимизацией реакта?\nРасскажи про virtual dom, как вообще это работает (reconciliation, эвристический алгоритм, сравнение узлов)?\nА к чему может привести вот это поведение, при котором старый дом сразу же удаляется, если элементы разные?(он про эвристический алгоритм).\nРасскажи про key в реакте?\nСпрашивает про глубокую работу браузера, как отрисовывает страницу реакт. Глубже чем Critical Render Path.(архитектура Chromium)\nРасскажи что такое Critical render path?\nvisibility: hidden / display: none отличия. Какие стадии отрисовки страницы затрагивают?\nКакие ещё css правила затрагивают изменение layout?\nИспользовал ли какие-то сложные конструкции Typescript?\nПриведи пример использования дженериков. Как бы ты типизировал компонент какой-нибудь, который может разный тип на вход принимать\nБыл ли опыт настройки линтеров, конфигов?\nБыл ли опыт создания своих npm-пакетов? (им нужен ответ ДА)\nРасспрашивает подробно как редачили npm пакеты, где хранили и тд\nКакими свойствами должен обладать хороший unit-тест? \nЕсть процентная метрика покрытия unit тестами проекта. Как думаешь, насколько эта метрика вообще полезна?\nА в каких случаях вот это покрытие тестами может только навредить разработке? Не ускорить, а замедлить?\nПо какому флоу разработки работали в команде? (Git Flow)\nЗнаешь что такое trunk based development?\nКакая у вас архитектура на проекте? Знаком с FSD?\n\nЗадачи:\n\nУСЛОВИЕ\nТипизируй компонент\nconst Select: FC = (value) =>{}\n\nРЕШЕНИЕ\ntype ModelType = 'single' | 'multi';\n\ntype SelectPropsType<T extends ModelType> = {\n    mode: T;\n    value: T extends 'single' ? string : string[];\n};\n\nconst Select = <T extends ModelType>({ mode, value }: SelectPropsType<T>) => <div>;"
      }
    ]
  },
  {
    "company": "Loyality Labs Hr Тех Скриннинг",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-07-17 10:55:33",
        "content": "2024-07-17 10:55:33\n Руслан -> 2071074234:\nloyality labs hr тех скриннинг\n—зп: 250к\n— вакансия: https://hh.ru/vacancy/101880669\n— Задачи:\n1.\n\"setTimeout(function timeout() {\n console.log('Таймаут');\n }, 0);\n \n\n let p = new Promise(function(resolve, reject) {\n console.log('Создание промиса');\n resolve();\n });\n \n\n p.then(function(){\n console.log('Обработка промиса');\n });\n \n\n console.log('Конец скрипта');\"\n\n2.\nЧто вернёт выражение?\n\"function add(x: string, y: string): string;\n function add(x: numb...",
        "full_content": "2024-07-17 10:55:33\n Руслан -> 2071074234:\nloyality labs hr тех скриннинг\n—зп: 250к\n— вакансия: https://hh.ru/vacancy/101880669\n— Задачи:\n1.\n\"setTimeout(function timeout() {\n console.log('Таймаут');\n }, 0);\n \n\n let p = new Promise(function(resolve, reject) {\n console.log('Создание промиса');\n resolve();\n });\n \n\n p.then(function(){\n console.log('Обработка промиса');\n });\n \n\n console.log('Конец скрипта');\"\n\n2.\nЧто вернёт выражение?\n\"function add(x: string, y: string): string;\n function add(x: number, y: number): number {\n return x + y;\n }\n \n\n add(’1’,’2’);\"\n\n3.\nКакой цвет будет у элемента?\n\"<div class=\"\"App\"\">\n <div id=\"\"box\"\" className=\"\"box\"\"></div>\n </div>\n \n\n <style>\n #box {\n background-color: green;\n }\n \n\n .App .box {\n background-color: blue;\n }\n \n\n .box {\n width: 50px;\n height: 50px;\n background-color: red;\n }\n </style>\"\n\n4.\n\"Составь интерфейс X, наследующий интерфейс Y, но со всеми необязательными свойствами.\nДобавь в этот интерфейс свойство props в виде объекта, в котором ключом будет один из ключей интерфейса Y, а значением - boolean.\nСоздай дженерик Z, состоящий из динамического поля data. В изначальном интерфейсе должно быть поле с любым типом, использующее этот дженерик\""
      }
    ]
  },
  {
    "company": "Газпром Медиа",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-04-03 17:44:01",
        "content": "2025-04-03 17:44:01\n Максим Соломыкин -> 2071074234:\nКомпания: Газпром Медиа\nВакансия: написала hr\nЗП: от 250 000\n\nВопросы:\n- подробно про опыт\n- ререндер компонентов\n- когда лучше стор, контекст?\n- Context v redux?\n- область видимости\n- почему появился let, const? \n- зачем область видимости?\n- замыкание?\n- хранение данных в браузере\n- приведение типов\n- 1 + \"1\" - 1 что будет?\n- типизация в js?\n- Typescript плюсы и минусы\n- any в TS?\n- Generics\n- как убрать\\скрыть блок ?\n- display: none vs visib...",
        "full_content": "2025-04-03 17:44:01\n Максим Соломыкин -> 2071074234:\nКомпания: Газпром Медиа\nВакансия: написала hr\nЗП: от 250 000\n\nВопросы:\n- подробно про опыт\n- ререндер компонентов\n- когда лучше стор, контекст?\n- Context v redux?\n- область видимости\n- почему появился let, const? \n- зачем область видимости?\n- замыкание?\n- хранение данных в браузере\n- приведение типов\n- 1 + \"1\" - 1 что будет?\n- типизация в js?\n- Typescript плюсы и минусы\n- any в TS?\n- Generics\n- как убрать\\скрыть блок ?\n- display: none vs visibility: hidden?\n- как убрать блок?\n- inline стили?\n- Специфичность селектора\n- !important\n- семантика\n- реализация поиска на фронте \n- debounce\n- Eventloop \n- Promise\n- способы оптимизации"
      }
    ]
  },
  {
    "company": "Сошиал Системс",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-02-04 15:49:28",
        "content": "2025-02-04 15:49:28\n Ilya -> 2071074234:\nКомпания Сошиал Системс\nзп: до 230 к\n\nВопросы: \n- расскажи как попал фронтэнд\n- про все компании\n- почему уходил \n- Работал ли с next js, ssr в целом. В чем преимущество ssr, когда использовать.\n- как была выстроена коммуникация с бекэндом на проекте  \n- какой состав команды был \n\nзадач не было\n\nnvidia что-то странное с моим голосом сделала",
        "full_content": "2025-02-04 15:49:28\n Ilya -> 2071074234:\nКомпания Сошиал Системс\nзп: до 230 к\n\nВопросы: \n- расскажи как попал фронтэнд\n- про все компании\n- почему уходил \n- Работал ли с next js, ssr в целом. В чем преимущество ssr, когда использовать.\n- как была выстроена коммуникация с бекэндом на проекте  \n- какой состав команды был \n\nзадач не было\n\nnvidia что-то странное с моим голосом сделала"
      }
    ]
  },
  {
    "company": "Чатап",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-05-26 07:36:30",
        "content": "2025-05-26 07:36:30\n Василий -> 2071074234:\nЧатап\n\n1) какие сложные задачи решал, чем горжусь?\n2) почему выбрал компанию?\n3) с каким стеком работал?\n4) как обучаюсь?\n\nДля выхода на следующий этап просят тестовое сД\nтое веб-приложение для управления списком задач (Todo List) с использованием React и Redux Toolkit. Ниже приведены основные требования к приложению: \n \n### Интерфейс пользователя: \n- Должен быть отображен список задач. \n- Пользователь должен иметь возможность добавлять новые задачи. \n...",
        "full_content": "2025-05-26 07:36:30\n Василий -> 2071074234:\nЧатап\n\n1) какие сложные задачи решал, чем горжусь?\n2) почему выбрал компанию?\n3) с каким стеком работал?\n4) как обучаюсь?\n\nДля выхода на следующий этап просят тестовое сД\nтое веб-приложение для управления списком задач (Todo List) с использованием React и Redux Toolkit. Ниже приведены основные требования к приложению: \n \n### Интерфейс пользователя: \n- Должен быть отображен список задач. \n- Пользователь должен иметь возможность добавлять новые задачи. \n- Пользователь должен иметь возможность отмечать задачи как выполненные. \n- Пользователь должен иметь возможность удалять задачи. \n \n### Реализация: \n- Используйте React для создания пользовательского интерфейса. \n- Для управления состоянием используйте Redux Toolkit. \n- Создайте необходимые actions, reducers и store для работы с задачами. \n- Для стилизации компонентов вы можете использовать любой подход на ваш выбор (например, CSS, Styled Components и т. д.). \n \n### Дополнительные требования (опционально): \n- Добавьте возможность редактирования задач. \n- Добавьте возможность фильтрации задач по статусу (выполненные / невыполненные). \n- Используйте TypeScript для статической типизации приложения. \n- Реализуйте функционал перетаскивания задач для изменения их порядка в списке. \n- Добавьте возможность сохранения задач в локальное хранилище браузера для сохранения данных между сеансами. \n \nПримечание: Пожалуйста, следуйте указанным требованиям и инструкциям для успешного выполнения задания."
      }
    ]
  },
  {
    "company": "F6 Кибербезопасность",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-03 17:44:16",
        "content": "2025-07-03 17:44:16\n Илья -> 2071074234:\nf6 кибербезопасность \nзп 250-300к\n\n1. Способы хранения данных в браузере(session/local storage, coockie)\n2. Особенности работы с IndexedDB\n3. Web Worker: отправка и получение данных\n4. Service Worker\n5. Особенности event loop + requestAnimationFrame / requestIdleCallback\n6. Обмен данными между микрофронтами\ncustom events, window.postMessage, shared state, localStorage, BroadcastChannel, EventBus\n7. Как встроить одну страницу в другую – iframe\n8. Обмен чер...",
        "full_content": "2025-07-03 17:44:16\n Илья -> 2071074234:\nf6 кибербезопасность \nзп 250-300к\n\n1. Способы хранения данных в браузере(session/local storage, coockie)\n2. Особенности работы с IndexedDB\n3. Web Worker: отправка и получение данных\n4. Service Worker\n5. Особенности event loop + requestAnimationFrame / requestIdleCallback\n6. Обмен данными между микрофронтами\ncustom events, window.postMessage, shared state, localStorage, BroadcastChannel, EventBus\n7. Как встроить одну страницу в другую – iframe\n8. Обмен через localStorage\nСобытие storage срабатывает в других вкладках\n9. Подписка на изменения DOM – MutationObserver\n10. Запрет изменений объекта\nObject.freeze(obj) – полная иммутабельность.\nObject.seal(obj) – запрет на добавление/удаление свойств.\nObject.defineProperty(obj, 'key', { writable: false }).\n11. MOBX vs Redux + Proxy  в чём отличие\n12. Для чего нужен symbol\n13. Для чего нужен jsx и как он работает\n14. Зачем нужен babel и что он делает\n15. Для чего нужен стейт менеджер и какую проблему решает\n16. Задача\n// Класс Dispatcher реализует паттерн \"издатель-подписчик\"\nclass Dispatcher {\n  constructor() {\n    // Хранилище всех событий и их обработчиков\n    this.events = {};\n  }\n\n  // Метод для подписки на событие\n  on(eventName, callback) {\n    // Если события ещё нет — создаём массив\n    if (!this.events[eventName]) {\n      this.events[eventName] = [];\n    }\n\n    // Добавляем обработчик в список\n    this.events[eventName].push(callback);\n  }\n\n  // Метод для вызова всех обработчиков события\n  trigger(eventName) {\n    const handlers = this.events[eventName];\n    if (handlers) {\n      handlers.forEach((handler) => handler());\n    }\n  }\n}\n\n// Пример использования\nconst dispatcher = new Dispatcher();\n\n// Подписка на событие 'event_one'\ndispatcher.on('event_one', function () {\n  console.log('message 1');\n});\n\ndispatcher.on('event_one', function () {\n  console.log('message 2');\n});\n\n// Подписка на событие 'event_two'\ndispatcher.on('event_two', function () {\n  console.log('message 3');\n});\n\n// Вызов обработчиков для 'event_one'\ndispatcher.trigger('event_one');\n// Вывод:\n// message 1\n// message 2\n\n// Вызов обработчиков для 'event_two'\ndispatcher.trigger('event_two');\n// Вывод:\n// message 3"
      }
    ]
  },
  {
    "company": "Кредит Европа Банк",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-06-25 17:05:12",
        "content": "2024-06-25 17:05:12\n Artur -> 2071074234:\nКРЕДИТ ЕВРОПА БАНК\n\n— Ссылка: https://hh.ru/vacancy/102454058?from=negotiations_item&hhtmFrom=negotiations_item\n— ЗП: сказал 200к+, вилку не озвучили\n\nВопросы:\n— какие методы оптимизации знаешь\n— useMemo и useCallback, разница\n—  разница пропсов и стейтов\n— реакт, плюсы и минусы\n— ограничения JSX\n— правила хуков\n— какие свои хуки писал",
        "full_content": "2024-06-25 17:05:12\n Artur -> 2071074234:\nКРЕДИТ ЕВРОПА БАНК\n\n— Ссылка: https://hh.ru/vacancy/102454058?from=negotiations_item&hhtmFrom=negotiations_item\n— ЗП: сказал 200к+, вилку не озвучили\n\nВопросы:\n— какие методы оптимизации знаешь\n— useMemo и useCallback, разница\n—  разница пропсов и стейтов\n— реакт, плюсы и минусы\n— ограничения JSX\n— правила хуков\n— какие свои хуки писал"
      }
    ]
  },
  {
    "company": "ZenCode",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-03-30 06:19:14",
        "content": "2024-03-30 06:19:14\n Владимир -> 2071074234:\n— Название Компании: ZenCode (тех собес)\n— Ссылка на вакансию: hr сама написала, https://saratov.hh.ru/vacancy/74254402\n— ЗП: озвучил от 200к\n— Задачи: теория + задачи\n— Запись на ютуб: https://youtu.be/bzcYQLHcEMc (забыл в начале запись поставить)\n— Успех: 👍 предложили оффер 200к, отказался тк выбрал другое предложение\n— Фидбек: https://docs.google.com/document/d/1kIJfZkcppuLspJsQYDq4mNNNYFEpyFdExyzPJeQA9Iw/edit",
        "full_content": "2024-03-30 06:19:14\n Владимир -> 2071074234:\n— Название Компании: ZenCode (тех собес)\n— Ссылка на вакансию: hr сама написала, https://saratov.hh.ru/vacancy/74254402\n— ЗП: озвучил от 200к\n— Задачи: теория + задачи\n— Запись на ютуб: https://youtu.be/bzcYQLHcEMc (забыл в начале запись поставить)\n— Успех: 👍 предложили оффер 200к, отказался тк выбрал другое предложение\n— Фидбек: https://docs.google.com/document/d/1kIJfZkcppuLspJsQYDq4mNNNYFEpyFdExyzPJeQA9Iw/edit"
      }
    ]
  },
  {
    "company": "Solar",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-25 18:14:42",
        "content": "2024-10-25 18:14:42\n Алмас -> 2071074234:\nКомпания: SOLAR\nЗП: от 300\nвакансия: hr написал\nлайвкодинга не было\nВопросы:\nпро опыт\nпочему fsd?\nчего бы хотелось на новом месте?\nкак были выстроены процессы в команде\nкак хотелось бы работать по скраму или канбану?\nчто такое виртуальный дом в реакте? \nкак сравнивается реальный с виртуальным домом? вопрос со звездочкой типо\nключевые отличия классового от функционального компонента\nрасскажи про хуки\nuseState, в чем ее ключевые особенности (хранить значен...",
        "full_content": "2024-10-25 18:14:42\n Алмас -> 2071074234:\nКомпания: SOLAR\nЗП: от 300\nвакансия: hr написал\nлайвкодинга не было\nВопросы:\nпро опыт\nпочему fsd?\nчего бы хотелось на новом месте?\nкак были выстроены процессы в команде\nкак хотелось бы работать по скраму или канбану?\nчто такое виртуальный дом в реакте? \nкак сравнивается реальный с виртуальным домом? вопрос со звездочкой типо\nключевые отличия классового от функционального компонента\nрасскажи про хуки\nuseState, в чем ее ключевые особенности (хранить значение между рендерами и при изменении значений вызывает перерендер)\nuseMemo\nuseCallback (в каких случаях он не избыточен)\nuseRef\nметоды http  запросов\ncors\nc графкуель работал?\nкуки?\nчто для тебя компания мечты? команда мечты ? что тебя тригернет сразу пойти?"
      }
    ]
  },
  {
    "company": "БКХ Еком",
    "count": 1,
    "records": [
      {
        "timestamp": "2025-07-08 11:13:10",
        "content": "2025-07-08 11:13:10\n Ivan -> 2071074234:\nНазвание компании: БКХ Еком 08.07\nЗП: +-250\n\nЗадач и стандартной теории не было вообще. Собеседование состояло из холивара на разные темы во фронте и около него.\n\n1. Рассказ про текущее место работы и интересные задачи.\n2. Какие были сложности?\n3. Какие направления в разработке интересны?\n4. Про SSR, SSG, ISR\n5. Как оптимизировать кеширование в ISR если на одном сервере запущено много инстансов одного приложения.\n6. Можешь ли справляться с задачами самост...",
        "full_content": "2025-07-08 11:13:10\n Ivan -> 2071074234:\nНазвание компании: БКХ Еком 08.07\nЗП: +-250\n\nЗадач и стандартной теории не было вообще. Собеседование состояло из холивара на разные темы во фронте и около него.\n\n1. Рассказ про текущее место работы и интересные задачи.\n2. Какие были сложности?\n3. Какие направления в разработке интересны?\n4. Про SSR, SSG, ISR\n5. Как оптимизировать кеширование в ISR если на одном сервере запущено много инстансов одного приложения.\n6. Можешь ли справляться с задачами самостоятельно? \n7. Какую роль в команде занимал?\n8. Нетипичные задачи, где пришлось что-то специфичное писать.\n9. Vite vs Webpack vs Turbopack\n10. node vs deno vs bun\n11. eslint/prettier vs biome"
      }
    ]
  },
  {
    "company": "Ниу Вшэ",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-04-11 19:19:29",
        "content": "2024-04-11 19:19:29\n Artem -> 2071074234:\nНазвание компании: НИУ ВШЭ\nСсылка на вакансию: https://t.me/js_rabota/363\nЗП: 170-250\nЗадачи: только теория. \n- оптимизация приложения при больших данных \n- замыкания \n- работа с DOM\n- какие алгоритмы знаешь\n- биг О. Что такое, как считается сложность\n- устная задача: даны три массива неупорядоченных чисел. Вывести числа, которые есть во всех трех массивах. Рассказать, как решить и какая будет сложность.\nПо реакту и ТС ни одного вопроса. \nУспех собеса: ❔",
        "full_content": "2024-04-11 19:19:29\n Artem -> 2071074234:\nНазвание компании: НИУ ВШЭ\nСсылка на вакансию: https://t.me/js_rabota/363\nЗП: 170-250\nЗадачи: только теория. \n- оптимизация приложения при больших данных \n- замыкания \n- работа с DOM\n- какие алгоритмы знаешь\n- биг О. Что такое, как считается сложность\n- устная задача: даны три массива неупорядоченных чисел. Вывести числа, которые есть во всех трех массивах. Рассказать, как решить и какая будет сложность.\nПо реакту и ТС ни одного вопроса. \nУспех собеса: ❔"
      }
    ]
  },
  {
    "company": "Sl Soft",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-10-31 10:16:32",
        "content": "2024-10-31 10:16:32\n Гладких Александр -> 2071074234:\nКомпания SL Soft \nВакансия https://hh.ru/vacancy/108711305\nЗП не обсуждали\nВопросы\n- расскажи за опыт\n- расскажи про интересные задачи которые приходилось делать\n- почему меняешь место работы\n- ES6 какие штуки привнес про spred и rest\n- что такое DOM\n- Для чего нужен Redux\n- Флоу Redux\n- Какие хуки из Redux используешь\n- Как реализованна асинхронность в JS (колбэки промисы эвент луп)\n- Promise.all\n- Какие хранилища есть в брузере\n- Как React ...",
        "full_content": "2024-10-31 10:16:32\n Гладких Александр -> 2071074234:\nКомпания SL Soft \nВакансия https://hh.ru/vacancy/108711305\nЗП не обсуждали\nВопросы\n- расскажи за опыт\n- расскажи про интересные задачи которые приходилось делать\n- почему меняешь место работы\n- ES6 какие штуки привнес про spred и rest\n- что такое DOM\n- Для чего нужен Redux\n- Флоу Redux\n- Какие хуки из Redux используешь\n- Как реализованна асинхронность в JS (колбэки промисы эвент луп)\n- Promise.all\n- Какие хранилища есть в брузере\n- Как React взаимодействует с DOM\n- useEffect зачем нужен (рассказывай все что знаешь)\n- useState зачем, что можем передать в качестве аргумента\n- Как реализованна авторизация на проекте\n- Был ли опыт настройки проекта (линтеры сборщики выбор архитектуры и тд)"
      }
    ]
  },
  {
    "company": "Avs Consulting",
    "count": 1,
    "records": [
      {
        "timestamp": "2024-11-20 10:16:06",
        "content": "2024-11-20 10:16:06\n zarina -> 2071074234:\nкомпания avs consulting\n\n180-220k\n\nвакансия https://tula.hh.ru/vacancy/110958893?hhtmFrom=employer_vacancies\n\nвопросы:\nhttp запросы\npreflight запрос(options)\nrest api методы\nооп\nlocalstorage sessionstorage cookie indexedDb\nкорс\nзаголовки корс, куки\n\nlet const\nпримитивные и ссылочные типы данных разница\nconst a = { test: 1};\na.test = 2;\nconst a = []:\na.push(1);\n\nFunction declaration, Expression, стрелочные \nbind call и apply\nthis\nзамыкание\n\nпромис, асинк...",
        "full_content": "2024-11-20 10:16:06\n zarina -> 2071074234:\nкомпания avs consulting\n\n180-220k\n\nвакансия https://tula.hh.ru/vacancy/110958893?hhtmFrom=employer_vacancies\n\nвопросы:\nhttp запросы\npreflight запрос(options)\nrest api методы\nооп\nlocalstorage sessionstorage cookie indexedDb\nкорс\nзаголовки корс, куки\n\nlet const\nпримитивные и ссылочные типы данных разница\nconst a = { test: 1};\na.test = 2;\nconst a = []:\na.push(1);\n\nFunction declaration, Expression, стрелочные \nbind call и apply\nthis\nзамыкание\n\nпромис, асинк эвэйт\nобработка ошибок\n\nтайпскрипт плюсы минусы\nинтерфейс типы разница\nутилити тайпс\nany unknown never\nGeneric"
      }
