      {
        "timestamp": "2024-03-27 16:44:57",
        "content": "2024-03-27 16:44:57\n Kirill N -> 2071074234:\nДополнение с 11.03 - 27.03\nКомпания: Minevrasoft 11.03 \nhttps://youtu.be/c2TDgGjVxcQ \n \nКомпания: про Айти ресурс от 12.03 \nhttps://youtu.be/tBrVrALlflE \n \nКомпания: КиберЛаб 12.03 \nhttps://youtu.be/Ayov7AAZ9zA \nКомпания: 16.03 \nhttps://youtu.be/g8awopYcbh4   \n \nКомпания: IT ONE 18 03 \nhttps://youtu.be/opoqwpzVRVo \n \nКомпания: Эвотека 19 03 \nhttps://youtu.be/pq64Y2e0-CQ \n \nКомпания: BAUM от 20 03 \nhttps://youtu.be/YR2G2tRzgJo \n \nКомпания: Сбер Техноло...",
        "full_content": "2024-03-27 16:44:57\n Kirill N -> 2071074234:\nДополнение с 11.03 - 27.03\nКомпания: Minevrasoft 11.03 \nhttps://youtu.be/c2TDgGjVxcQ \n \nКомпания: про Айти ресурс от 12.03 \nhttps://youtu.be/tBrVrALlflE \n \nКомпания: КиберЛаб 12.03 \nhttps://youtu.be/Ayov7AAZ9zA \nКомпания: 16.03 \nhttps://youtu.be/g8awopYcbh4   \n \nКомпания: IT ONE 18 03 \nhttps://youtu.be/opoqwpzVRVo \n \nКомпания: Эвотека 19 03 \nhttps://youtu.be/pq64Y2e0-CQ \n \nКомпания: BAUM от 20 03 \nhttps://youtu.be/YR2G2tRzgJo \n \nКомпания: Сбер Технологии 22 03 \nhttps://youtu.be/dm34hydCIIA \n \nКомпания: KTS 22 03 \nhttps://youtu.be/Nt177GK9LAE \n \nКомпания: KTS 27 03 \nhttps://youtu.be/QDi0AkDwwgw \n \nКомпания: Лемма 27 03 \nhttps://youtu.be/grfpac_XgvA"
      }
    ]
  },
  {
    "company": "CubeLab",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-07-13 09:07:57",
        "content": "2024-07-13 09:07:57\n Ярослав Мудрый -> 2071074234:\nCubeLab (тарологи)\n\n-вакансия: https://spb.hh.ru/vacancy/99741483\n-зп: 300k\n\nвопросы:\n-софтовые: почему меняешь работу, чего ждешь от команды, чего не хотел бы на новом месте.\n-как работает event loop\n-расскажи про ssr\n-расскажи как добавить разные теги для сео на разные страницы\n\nзадачи:\n\nстандартная задача на отображение счетчика на react, далее усложнение: показать количетво секунд проведенных на странице, не учитывая, то время, когда мы пере...",
        "full_content": "2024-07-13 09:07:57\n Ярослав Мудрый -> 2071074234:\nCubeLab (тарологи)\n\n-вакансия: https://spb.hh.ru/vacancy/99741483\n-зп: 300k\n\nвопросы:\n-софтовые: почему меняешь работу, чего ждешь от команды, чего не хотел бы на новом месте.\n-как работает event loop\n-расскажи про ssr\n-расскажи как добавить разные теги для сео на разные страницы\n\nзадачи:\n\nстандартная задача на отображение счетчика на react, далее усложнение: показать количетво секунд проведенных на странице, не учитывая, то время, когда мы переключимся на другой таб (если компонент-счетчик у нас на отдельном табе)\n\nimport React, { useState, useEffect } from 'react';\n\nconst TimeTracker = () => {\n  const [secondsSpent, setSecondsSpent] = useState(0);\n\n  useEffect(() => {\n    // Получаем время начала сессии или устанавливаем его, если оно ещё не задано\n    const startTime = localStorage.getItem('startTime') || Date.now();\n    localStorage.setItem('startTime', startTime);\n\n    // Интервал для обновления времени, проведённого на странице\n    const intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const timeElapsed = Math.floor((currentTime - startTime) / 1000);\n      setSecondsSpent(timeElapsed);\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n      // Сохраняем текущее время, когда пользователь уходит со страницы\n      const endTime = Date.now();\n      const totalSpent = endTime - parseInt(startTime);\n      localStorage.setItem('totalTimeSpent', totalSpent);\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Time You've Spent on This Page</h1>\n      <p>{secondsSpent} seconds</p>\n    </div>\n  );\n}\n\nexport default TimeTracker;\n \n\nзадача на проектирование: рассказать как спроектировал бы пошаговую систему бронирования и оплаты, как обработал бы ситуацию, когда несколько человек бронируют одно и то же время"
      },
      {
        "timestamp": "2024-07-10 00:49:11",
        "content": "2024-07-10 00:49:11\n Евгений Лямин -> 2071074234:\n— CubeLab\n— Вакансия: https://spb.hh.ru/vacancy/99741483\n— ЗП: сказал от 250\n— Проект:   lunaro.ru\n— Коментарий: зачем собес провводить, разложили бы свои таро на кандидата, у звезд спросили, духов вызвали)\n— Вопросы:\n1. По опыту, по процессам в команде, взаимодействие между командами, решение конфликтов\n2. Как определяешь нужен ли стейтменеджер проекту? если да то какой выберешь\n— Задачи:\n1. \n- реализовать страничку на которой отображается счетч...",
        "full_content": "2024-07-10 00:49:11\n Евгений Лямин -> 2071074234:\n— CubeLab\n— Вакансия: https://spb.hh.ru/vacancy/99741483\n— ЗП: сказал от 250\n— Проект:   lunaro.ru\n— Коментарий: зачем собес провводить, разложили бы свои таро на кандидата, у звезд спросили, духов вызвали)\n— Вопросы:\n1. По опыту, по процессам в команде, взаимодействие между командами, решение конфликтов\n2. Как определяешь нужен ли стейтменеджер проекту? если да то какой выберешь\n— Задачи:\n1. \n- реализовать страничку на которой отображается счетчик который показывает сколько времени вы находитесь на странице в секундах, коунтер который каждую секунду прибавляет 1.\n- продолжать счетчик если мы ушли со страницы и потом вернулись, тут порассуждать как мы можем сохранять накинуть вариантов \nimport React, { useState, useEffect } from 'react';\n\nfunction SecondCounter() {\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCounter(prevCounter => prevCounter + 1);\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Счетчик секунд</h1>\n      <p>Вы находитесь на этой странице: {counter} секунд</p>\n    </div>\n  );\n}\n\nexport default SecondCounter;"
      }
    ]
  },
  {
    "company": "Broad Apps",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-14 18:28:11",
        "content": "2025-07-14 18:28:11\n Ivan -> 2071074234:\nКомпания: Broad Apps Финал\nЗП: 250-300\n\nМинут на 20 созвон.\n\n1. Рассказали еще раз про проект.\n2. Какие ai решения используешь в работе?\n3. У нас есть функционал кторый нужно выкатить как можно скорее. Как оцениваешь по времени за сколько можно сделать?\n4. Почему интересен наш проект?\n5. Когда готов если будет оффер?",
        "full_content": "2025-07-14 18:28:11\n Ivan -> 2071074234:\nКомпания: Broad Apps Финал\nЗП: 250-300\n\nМинут на 20 созвон.\n\n1. Рассказали еще раз про проект.\n2. Какие ai решения используешь в работе?\n3. У нас есть функционал кторый нужно выкатить как можно скорее. Как оцениваешь по времени за сколько можно сделать?\n4. Почему интересен наш проект?\n5. Когда готов если будет оффер?"
      },
      {
        "timestamp": "2025-07-13 09:43:43",
        "content": "2025-07-13 09:43:43\n Ivan -> 2071074234:\nКомпания: Broad Apps\nЗП: 250-300\n\n1. Были опыт с Некстом и когда он нужен?\n2. Был ли опыт с 19 Реактом и что там использовал?\n3. Оптимизация фронтенд приложений.\n4. Про стейт менеджеры. Что бы выбрал сам?\n5. Про react query.\n6. Был ли опыт тимлидства?\n7. Всегда ли попадали в оценку? А если нет?\n8. Какие были инициативы от тебя?\n \nЗадача\n//что будет в консоли?\n// будет три вывода (сразу, через 1 секунду, через 2 секунды) в каждом случае [2,2,2]\nfor (let i ...",
        "full_content": "2025-07-13 09:43:43\n Ivan -> 2071074234:\nКомпания: Broad Apps\nЗП: 250-300\n\n1. Были опыт с Некстом и когда он нужен?\n2. Был ли опыт с 19 Реактом и что там использовал?\n3. Оптимизация фронтенд приложений.\n4. Про стейт менеджеры. Что бы выбрал сам?\n5. Про react query.\n6. Был ли опыт тимлидства?\n7. Всегда ли попадали в оценку? А если нет?\n8. Какие были инициативы от тебя?\n \nЗадача\n//что будет в консоли?\n// будет три вывода (сразу, через 1 секунду, через 2 секунды) в каждом случае [2,2,2]\nfor (let i = []; i.length < 3; i.push(2)) {\n setTimeout( () => {console.log(i)}, 1000 * i.length)\n}"
      }
    ]
  },
  {
    "company": "Bitronics Lab",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-02-26 18:58:45",
        "content": "2025-02-26 18:58:45\n Артем -> 2071074234:\nКомпания: BiTronics Lab\nЗП: до 200 К\n\nВопросы:\nКакие типы данных есть в JS\nnumber vs bigInt\nЗамыкание - приведи пример использования\nМеханизм сравнения VDOM с DOM какая сложность алгоритма\nPromise и его методы\nEvent Loop что это\nЗадача на Event Loop\nОтвет: \n'А' (синхронный код)\n'F' (синхронный код)\n'D' (Promise microtask)\n'E' (queueMicrotask)\n'B' (setTimeout - макрозадача)\n'С' (ответ от axios.get, если запрос выполнится успешно)\n\nКакие код ошибки знаешь ...",
        "full_content": "2025-02-26 18:58:45\n Артем -> 2071074234:\nКомпания: BiTronics Lab\nЗП: до 200 К\n\nВопросы:\nКакие типы данных есть в JS\nnumber vs bigInt\nЗамыкание - приведи пример использования\nМеханизм сравнения VDOM с DOM какая сложность алгоритма\nPromise и его методы\nEvent Loop что это\nЗадача на Event Loop\nОтвет: \n'А' (синхронный код)\n'F' (синхронный код)\n'D' (Promise microtask)\n'E' (queueMicrotask)\n'B' (setTimeout - макрозадача)\n'С' (ответ от axios.get, если запрос выполнится успешно)\n\nКакие код ошибки знаешь \nкак боришся с ними\nГде хранили JWT\nАунтификация vs Авторизация\nOauth что это\nЧто такое перегрузка функции в TS\nЧто делает keyof\nRedux vs Redux Toolkit\n\nЗадача:\nреализовать счетчик с кнопками стоп старт рестарт"
      },
      {
        "timestamp": "2025-02-25 18:39:06",
        "content": "2025-02-25 18:39:06\n Артем -> 2071074234:\nКомпания: BiTronics Lab (3 этап)\nЗП: до 200К\n\nСпросили как пообщался\nбыло комфортно или нет\nспросил про планы и чем хочешь заниматься",
        "full_content": "2025-02-25 18:39:06\n Артем -> 2071074234:\nКомпания: BiTronics Lab (3 этап)\nЗП: до 200К\n\nСпросили как пообщался\nбыло комфортно или нет\nспросил про планы и чем хочешь заниматься"
      }
    ]
  },
  {
    "company": "Unybrands",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-07-13 08:26:29",
        "content": "2024-07-13 08:26:29\n Ярослав Мудрый -> 2071074234:\nunyBrands финал\n- вакансия: https://hh.ru/vacancy/102276622\n- зп: 160к\n\nВопросы:\nКакие библиотеки использовал для работы с react?\nПользовался ли SSR?\nОтличия hook от hoc.\nМожет ли кастомный хук возвращать значение?\nЗадача: написать hoc для получения данных и вывода списка элементов, которые можно выделять по клику и снимать выделение по клику. Решение не сохранил.",
        "full_content": "2024-07-13 08:26:29\n Ярослав Мудрый -> 2071074234:\nunyBrands финал\n- вакансия: https://hh.ru/vacancy/102276622\n- зп: 160к\n\nВопросы:\nКакие библиотеки использовал для работы с react?\nПользовался ли SSR?\nОтличия hook от hoc.\nМожет ли кастомный хук возвращать значение?\nЗадача: написать hoc для получения данных и вывода списка элементов, которые можно выделять по клику и снимать выделение по клику. Решение не сохранил."
      },
      {
        "timestamp": "2024-07-11 10:01:31",
        "content": "2024-07-11 10:01:31\n Ярослав Мудрый -> 2071074234:\nUnyBrands, тех собес\n\n-Вакасния: https://hh.ru/vacancy/102276622\n-ЗП: 160k\n\nВопросы:\n- что происходит после вводе адреса в строку бразуера\n- как в js сравнивать дробные числа (пробелма с хранением чисел с плавающей запятой)\n- твоя идеальная команда\n- почему меняешь работу\n- какие интересне задачи делал\n\nЗадачи:\nпоиск индекса макс элемента\n\n    // Инициализация переменных для хранения максимального значения и его индекса\n    let maxIndex = 0;\n   ...",
        "full_content": "2024-07-11 10:01:31\n Ярослав Мудрый -> 2071074234:\nUnyBrands, тех собес\n\n-Вакасния: https://hh.ru/vacancy/102276622\n-ЗП: 160k\n\nВопросы:\n- что происходит после вводе адреса в строку бразуера\n- как в js сравнивать дробные числа (пробелма с хранением чисел с плавающей запятой)\n- твоя идеальная команда\n- почему меняешь работу\n- какие интересне задачи делал\n\nЗадачи:\nпоиск индекса макс элемента\n\n    // Инициализация переменных для хранения максимального значения и его индекса\n    let maxIndex = 0;\n    let maxValue = arr[0];\n\n    // Проход по массиву, начиная со второго элемента\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] > maxValue) {\n            maxValue = arr[i];\n            maxIndex = i;\n        }\n    }\n\n    // Возврат индекса максимального элемента\n    return maxIndex;\n}\n\nупорядочить элементы в массиве объектов arr, по полю key в порядке order\n\nfunction strictOrder(arr, key, order) {\n    const result = [];\n    order.forEach(orderKey => {\n        const found = arr.find(elem => elem[key] === orderKey);\n        if (found) {\n            result.push(found);\n        }\n    });\n    return result;\n}\n\nразбить определенную сумму на 4 части\n\nfunction dividePayment(payment) {\n    const parts = 4; // количество частей\n    const basePart = Math.floor(payment / parts); // базовая часть\n    const remainder = payment % parts; // остаток\n\n    // Создаем массив с базовыми частями\n    const result = Array(parts).fill(basePart);\n\n    // Распределяем остаток по первым элементам массива\n    for (let i = 0; i < remainder; i++) {\n        result[i]++;\n    }\n\n    return result;\n}"
      }
    ]
  },
  {
    "company": "Афлт-Системс",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-09-26 14:57:57",
        "content": "2024-09-26 14:57:57\n Анжелика -> 2071074234:\n- АФЛТ-системс\n-зп: от 180\n- вопросы:\n  - по опыту,\n  - fsd,\n  - паттерны проектирования и как они применяются в fsd,\n  - как работала с ui kit,\n  - разница между версиями реакта,\n  - разница между версиями некста.\nзадачка ну и все остальное в записи.",
        "full_content": "2024-09-26 14:57:57\n Анжелика -> 2071074234:\n- АФЛТ-системс\n-зп: от 180\n- вопросы:\n  - по опыту,\n  - fsd,\n  - паттерны проектирования и как они применяются в fsd,\n  - как работала с ui kit,\n  - разница между версиями реакта,\n  - разница между версиями некста.\nзадачка ну и все остальное в записи."
      },
      {
        "timestamp": "2024-08-06 07:52:21",
        "content": "2024-08-06 07:52:21\n Руслан -> 2071074234:\n— АФЛТ-системс\n— вакансия: https://hh.ru/vacancy/103476415?hhtmFrom=employer_vacancies\n— зп: 260к\n— Вопросы:\n1. Где работал, какие задачи делал\n2. Копал про процессы\n3. Почему перешли на fsd\n4. Что добавилось в новых версиях реакта\n5. Про опыт замены сборщика\n6. Про архитектуру редакса\n7. Почему используют сторы а не реакт контекст\n8. Для чего использовали вебсокеты на проекте\n9. Отличие тестирования на cypress и jest\n10. git pull vs git merge\n11. про р...",
        "full_content": "2024-08-06 07:52:21\n Руслан -> 2071074234:\n— АФЛТ-системс\n— вакансия: https://hh.ru/vacancy/103476415?hhtmFrom=employer_vacancies\n— зп: 260к\n— Вопросы:\n1. Где работал, какие задачи делал\n2. Копал про процессы\n3. Почему перешли на fsd\n4. Что добавилось в новых версиях реакта\n5. Про опыт замены сборщика\n6. Про архитектуру редакса\n7. Почему используют сторы а не реакт контекст\n8. Для чего использовали вебсокеты на проекте\n9. Отличие тестирования на cypress и jest\n10. git pull vs git merge\n11. про ребейз\nЗадачи:\n1. на вывод имени в документе. Там нужно было добавить еще один then для операции res.json() и поправить зависимости в useEffect;\n2. На починку вывода списка по текущим фильтрам в селекте\nИзменения\n<select value={filter} onChange={handleFilterChange}>\n\n const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as 'all' | 'active' | 'inactive');\n  };\n\n const [filter, setFilter] = useState<'all' | 'active' | 'inactive'>('all');\nconst filteredUsers = users.filter(user => {\n    if (filter === 'all') return true;\n    return user.status === filter;\n  });\n\n....\n<ul>\n        {filteredUsers.map(user => (\n          <li key={user.id}>\n            {user.name} - {user.status}\n          </li>\n        ))}\n      </ul>"
      }
    ]
  },
  {
    "company": "Comagic",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-02-13 13:13:52",
        "content": "2024-02-13 13:13:52\n Evgeniy -> 2071074234:\nКомпания: Comagic [второй этап]\nСсылка на вакансию: hr написала сама\nЗП: 250+\nРезультат: ❓(но судя по тому, что собес длился час, вместо запланированных 1.5, результат не очень)\n\nСначала подробно беседовали про опыт, причем много спрашивали про опыт в первой компании.\nДалее задача + вопросы по js (event loop, call stack, алгоритмы, че-то еще)\nЗадачу сначала решил через рекурсию, потом попросили переписать через стек\n\n//из этого \nconst tree = {\n    a: {...",
        "full_content": "2024-02-13 13:13:52\n Evgeniy -> 2071074234:\nКомпания: Comagic [второй этап]\nСсылка на вакансию: hr написала сама\nЗП: 250+\nРезультат: ❓(но судя по тому, что собес длился час, вместо запланированных 1.5, результат не очень)\n\nСначала подробно беседовали про опыт, причем много спрашивали про опыт в первой компании.\nДалее задача + вопросы по js (event loop, call stack, алгоритмы, че-то еще)\nЗадачу сначала решил через рекурсию, потом попросили переписать через стек\n\n//из этого \nconst tree = {\n    a: {\n        b: {\n            c: 'one',\n            h: 'two',\n        },\n        d: {\n            f: 'three',\n        },\n        g: 'four',\n    },\n}\n\n//нужно получить это\n\n// {\n//   'a.b.c': 'one',\n//   'a.b.h': 'two',\n//   'a.d.f': 'three',\n//     'a.g': 'four'\n// }\n\nfunction getTreeValues(tree) {\n    const result = {};\n    const stack = [{ node: tree, prefix: '' }]\n\n    while (stack.length) {\n        const { node, prefix } = stack.pop();\n\n        Object.keys(node).forEach((key) => {\n            const value = node[key];\n            const currentPath = prefix ? `${prefix}${key}` : key\n\n            if (typeof value === 'object') {\n                stack.push({ node: value, prefix: currentPath })\n            } else {\n                result[currentPath] = value\n            }\n        })\n    }\n\n    return result;\n}"
      },
      {
        "timestamp": "2024-02-01 11:06:57",
        "content": "2024-02-01 11:06:57\n Evgeniy -> 2071074234:\nНазвание компании: Comagic [первый этап, техскрининг (?)]\nСсылка на вакансию: https://hh.ru/vacancy/84735591\nВилка: 200+\nБыли вопросы по опыту и задачи. Собес на час. \nРекрутер с техническим бекграундом, охотно отвечал на вопросы, респект.\n\n# 1. В каком порядке и что будет выведено в консоли?\n\nsetTimeout(() => console.log('setTimeout 1'), 0);\n\nnew Promise((resolve, reject) => {\n    console.log('Promise 1');\n    resolve();\n    console.log('Promise 2');\n...",
        "full_content": "2024-02-01 11:06:57\n Evgeniy -> 2071074234:\nНазвание компании: Comagic [первый этап, техскрининг (?)]\nСсылка на вакансию: https://hh.ru/vacancy/84735591\nВилка: 200+\nБыли вопросы по опыту и задачи. Собес на час. \nРекрутер с техническим бекграундом, охотно отвечал на вопросы, респект.\n\n# 1. В каком порядке и что будет выведено в консоли?\n\nsetTimeout(() => console.log('setTimeout 1'), 0);\n\nnew Promise((resolve, reject) => {\n    console.log('Promise 1');\n    resolve();\n    console.log('Promise 2');\n}).then(() => console.log('Promise 3'));\n\nPromise.resolve().then(() => setTimeout(() => console.log('setTimeout 2'), 0));\n\nPromise.resolve().then(() => console.log('Promise 4'));\n\nsetTimeout(() => console.log('setTimeout 3'), 0);\n\nconsole.log('final');\n// Promise 1\n// Promise 2\n// final\n// Promise 3\n// Promise 4\n// setTimeout 1\n// setTimeout 3\n// setTimeout 2\n\n# 2. Что будет в консоли?\n\n\nlet obj = {\n    name: 'David',\n    getName() {\n        console.log(`name is: ${this.name}`);\n    },\n};\n\nlet fn = obj.getName;\n\nfn();\n// name is: undefined\n\nlet obj = {\n    name: 'David',\n    getName() {\n        console.log(name is: ${this.name});\n    },\n};\n\nlet fn = obj.getName.bind(obj);\n\nfn();\n\n\n# 3. Реализовать декоратор-функцию дебаунса\nfunction debounce(fn, time) {\n    let timeoutId;\n\n    return function(...args) {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n      timeoutId = setTimeout(() => {\n            fn.apply(this, args);\n        }, time);\n    }\n}\n\n-- Успех собеса:  ✅"
      }
    ]
  },
  {
    "company": "Мегаплан",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-02-25 13:03:28",
        "content": "2025-02-25 13:03:28\n It L -> 2071074234:\nКомпания: Мегаплан 1 этап без лайвкодинга\nСсылка: https://hh.ru/vacancy/116460571?hhtmFrom=employer_vacancy_responses\nЗП: от 200\n\n1. Расскажи, пожалуйста, про оптимизацию в React,\nкак оптимизируются компоненты, рендеры и так далее.\n2. Расскажи, поподробнее про use-мемо, use-callback,\nкогда их стоит использовать?\n3. Как React устроен, зачем он нужен?\nКак вообще он рисует компоненты, которые мы пишем в коде?\nКакие механизмы, он использует для этого?\n4.Как R...",
        "full_content": "2025-02-25 13:03:28\n It L -> 2071074234:\nКомпания: Мегаплан 1 этап без лайвкодинга\nСсылка: https://hh.ru/vacancy/116460571?hhtmFrom=employer_vacancy_responses\nЗП: от 200\n\n1. Расскажи, пожалуйста, про оптимизацию в React,\nкак оптимизируются компоненты, рендеры и так далее.\n2. Расскажи, поподробнее про use-мемо, use-callback,\nкогда их стоит использовать?\n3. Как React устроен, зачем он нужен?\nКак вообще он рисует компоненты, которые мы пишем в коде?\nКакие механизмы, он использует для этого?\n4.Как React взаимодействует с дом-деревом\nЗачем вообще React нужен?\n5 Расскажи про многопоточность в JavaScript.\n6 Расскажи про Web Worker \n7. Разница let, var и const"
      },
      {
        "timestamp": "2024-11-07 13:51:12",
        "content": "2024-11-07 13:51:12\n Katerina -> 2071074234:\nКомпания: Мегаплан\nВакансия: https://spb.hh.ru/vacancy/108582516?hhtmFrom=employer_vacancy_responses\nЗП: от 200к\nВопросы:\nПросто разговор за жизнь, по опыту\nКак принимала решения по выбору стека, почему именно его\n\nФинальный этап: выполнение тз по которому определят дать офер или нет",
        "full_content": "2024-11-07 13:51:12\n Katerina -> 2071074234:\nКомпания: Мегаплан\nВакансия: https://spb.hh.ru/vacancy/108582516?hhtmFrom=employer_vacancy_responses\nЗП: от 200к\nВопросы:\nПросто разговор за жизнь, по опыту\nКак принимала решения по выбору стека, почему именно его\n\nФинальный этап: выполнение тз по которому определят дать офер или нет"
      }
    ]
  },
  {
    "company": "Барсити",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-03-09 19:17:55",
        "content": "2025-03-09 19:17:55\n Артем -> 2071074234:\nКомпания: Барсити\nзп 150\n\nВопросы\nпрошлись по опыту из технички ничего не спршивал",
        "full_content": "2025-03-09 19:17:55\n Артем -> 2071074234:\nКомпания: Барсити\nзп 150\n\nВопросы\nпрошлись по опыту из технички ничего не спршивал"
      },
      {
        "timestamp": "2025-03-01 08:57:33",
        "content": "2025-03-01 08:57:33\n Артем -> 2071074234:\nБарсити\nВакансия: написала HR\n\nЗП: от 130к\nВопросы:\nРасскажи про опыт\nПодробные вопросы про опыт\nЧем занимаешься в свободное время\nПочему уходишь",
        "full_content": "2025-03-01 08:57:33\n Артем -> 2071074234:\nБарсити\nВакансия: написала HR\n\nЗП: от 130к\nВопросы:\nРасскажи про опыт\nПодробные вопросы про опыт\nЧем занимаешься в свободное время\nПочему уходишь"
      }
    ]
  },
  {
    "company": "Smena",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-07 07:38:18",
        "content": "2025-07-07 07:38:18\n Антон -> 2071074234:\nSMENA\nЗП 250\n\n0) Вопросы про опыт\n1) Отличие декларативного от императивного подхода\n2) Какие знаешь семантические теги + тег role для скринридеров\n3) Что происходит, когда мы ввели адрес сайта и нажали Enter\n4) Кеширование клиента и сервера, какие есть отличия\n5) SSE vs websocket\n6) Какие есть заголовки в headers\n7) Какие есть коды статуса ответа\n8) Расскажи всё что знаешь про http\n9) Какие есть http методы\n10) Можно ли использовать body в get\n11) Расск...",
        "full_content": "2025-07-07 07:38:18\n Антон -> 2071074234:\nSMENA\nЗП 250\n\n0) Вопросы про опыт\n1) Отличие декларативного от императивного подхода\n2) Какие знаешь семантические теги + тег role для скринридеров\n3) Что происходит, когда мы ввели адрес сайта и нажали Enter\n4) Кеширование клиента и сервера, какие есть отличия\n5) SSE vs websocket\n6) Какие есть заголовки в headers\n7) Какие есть коды статуса ответа\n8) Расскажи всё что знаешь про http\n9) Какие есть http методы\n10) Можно ли использовать body в get\n11) Расскажи про заголовок rabbitmq"
      },
      {
        "timestamp": "2025-06-25 17:07:23",
        "content": "2025-06-25 17:07:23\n Daniil Max -> 2071074234:\nКомпания SMENA(smena.space)\n\nСКРИННИНГ:\n\nЕсть вероятность большая, что записывают видео скриннинга и потом их смотрит тимлид, так как по ходу ответов HR ничего не записывала, а только кивала головой.\n\n1 часть - Рассказывает про компанию.\n\n2 часть - Вопросы по легенде:\n\n- Почему меняете работу?\n- Какой был состав команды был?\n- Что делали на последнем месте работе, какие фичи?\n- Какая архитектура по проекту?\n- Спрашивала за первый опыт! Почему ушли и...",
        "full_content": "2025-06-25 17:07:23\n Daniil Max -> 2071074234:\nКомпания SMENA(smena.space)\n\nСКРИННИНГ:\n\nЕсть вероятность большая, что записывают видео скриннинга и потом их смотрит тимлид, так как по ходу ответов HR ничего не записывала, а только кивала головой.\n\n1 часть - Рассказывает про компанию.\n\n2 часть - Вопросы по легенде:\n\n- Почему меняете работу?\n- Какой был состав команды был?\n- Что делали на последнем месте работе, какие фичи?\n- Какая архитектура по проекту?\n- Спрашивала за первый опыт! Почему ушли из предыдущих компаний?\n- Что ищете для себя, чего хочется, какую компанию выбираете и команда мечты?\n- Собеседуетесь ли, активно ли ищете, есть ли оффер, если да, то почему не приняли?\n-  Если будет стоять выбор перед несколькими офферами, какие критерии по выбору?\n- Как хотели бы оформиться по ТК РФ или по ИП?\n\n3  часть - Блок технических вопросов:\n\n* Все вопросы из головы для неё придумывал тимлид, который в целом завёрнут на нативном JS, браузере и в целом на общем понимании computer science.\nПоэтому есть шанс, что вопросы не совпадут.\n\nВажно!!! Если на тех вопросы какие-то не ответил и позовут на второй этап, обязательно их изучи, потому что тимлид спросит прочитал ли ты и вообще интересовался ли этими вопросами!\n\n(HR не душит, помогает чуть что с ответами и наводит на мысли !!! )\n\nИтак:\n\n1) События жизненного цикла html документа в контексте именно JS, не Реакта( вопрос про DOMContentLoaded и прочее)\n2) Отличия BOM от DOM\n3) Что такое reflow и repaint\n4) Вопрос со звёздочкой* Ничего страшного, если не ответишь.\nПо какой WebVital симметрике можно отследить дергание странички во время загрузки (мерцание) - ответ - \"CLS (Cumulative Layout Shift)\" - почитай про это, тимлид на следующем собесе спросит.\n5) Отличия обычного объекта vs Map vs WeakMap в JS\n6) Принципы чистой функции\n7) Назовите все известные способы инкапсуляции логики в Реакте \n8) Что такое diffing и reconcilation в Реакте? Как работает?\n9) При каких случаях Reconcilation может быть замедлен?\n10) С помощью чего можно реализовать code spliting в Реакте?\n11) Что такое HOC ? Приведи примеры HOC в Реакт?\n12)  Перечислите критические этапы рендеринга? (Это про 13) Что такое Дебаунсинг, Тротлинг и Каррирование?\n14) Какие есть правила ограничения в использовании Реакт хуков?\n15) Что такое делегирование событий?"
      }
    ]
  },
  {
    "company": "Highhelp",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-18 10:05:22",
        "content": "2025-07-18 10:05:22\n Daniil Daniil -> 2071074234:\nКомпания Highhelp Финальный этап\nВопросы:\n1. Как оптимизировал приложение?\n2. Топ 5 твоих достижений в компании(какую идею/фичу внедрил и как она помогла бизнесу)\n3. Топ 5 твоих достижений в жизни\n4. Как свободное время проводишь\n5. Чем увлекаешься\n6. Хобби\n7. Семейное положение\n8. Ожидания по зп(мин/макс/комфорт)\n9. Когда готов выходить\n10. Готов ли работать с 11 до 21",
        "full_content": "2025-07-18 10:05:22\n Daniil Daniil -> 2071074234:\nКомпания Highhelp Финальный этап\nВопросы:\n1. Как оптимизировал приложение?\n2. Топ 5 твоих достижений в компании(какую идею/фичу внедрил и как она помогла бизнесу)\n3. Топ 5 твоих достижений в жизни\n4. Как свободное время проводишь\n5. Чем увлекаешься\n6. Хобби\n7. Семейное положение\n8. Ожидания по зп(мин/макс/комфорт)\n9. Когда готов выходить\n10. Готов ли работать с 11 до 21"
      },
      {
        "timestamp": "2025-07-15 06:49:26",
        "content": "2025-07-15 06:49:26\n Daniil Daniil -> 2071074234:\nКомпания: Highhelp\nВопросы:\n1. Что такое event loop?\n2. promise и их методы\n3. Разница promise all/allsettled, race/any\n4. Что такое VDOM и как работает\n5. Reconsilation\n6. React.memo, useMemo, useCallback\n7. Расскажи про redux\n8. RTK Query\n9. Оптимистик запрос\nЗадача:\nнаписать debounce для компонента, чтоб инпут корректно работал\nРешение:\n\nimport React, { useState } from \"react\";\n\nconst useDebounce = (value, delay) => {\n  const [debounceValue, s...",
        "full_content": "2025-07-15 06:49:26\n Daniil Daniil -> 2071074234:\nКомпания: Highhelp\nВопросы:\n1. Что такое event loop?\n2. promise и их методы\n3. Разница promise all/allsettled, race/any\n4. Что такое VDOM и как работает\n5. Reconsilation\n6. React.memo, useMemo, useCallback\n7. Расскажи про redux\n8. RTK Query\n9. Оптимистик запрос\nЗадача:\nнаписать debounce для компонента, чтоб инпут корректно работал\nРешение:\n\nimport React, { useState } from \"react\";\n\nconst useDebounce = (value, delay) => {\n  const [debounceValue, setDebounceValue] = useState(value);\n  React.useEffect(() => {\n    const timer = setTimeout(() => setDebounceValue(value), delay);\n    return () => clearTimeout(timer);\n  }, [value]);\n\n  return debounceValue;\n};\n\nconst SearchInput = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const debounceInputValue = useDebounce(inputValue, 1000);\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder=\"Введите текст...\"\n      />\n      <div>{debounceInputValue}</div>\n    </div>\n  );\n};\n\nexport default SearchInput;"
      }
    ]
  },
  {
    "company": "Xsolla",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-11-26 10:55:19",
        "content": "2024-11-26 10:55:19\n Артем -> 2071074234:\nКомпания: Xsolla(3 этап)\nВопросы: \nспросил про опыт\nРешаю ли задачки\nспросил про сколярное призведение векторов(Вектор столбец умножили на вектор строки что будет) \nОтвет Результатом будет число\nа если наоборот умножить то матрица",
        "full_content": "2024-11-26 10:55:19\n Артем -> 2071074234:\nКомпания: Xsolla(3 этап)\nВопросы: \nспросил про опыт\nРешаю ли задачки\nспросил про сколярное призведение векторов(Вектор столбец умножили на вектор строки что будет) \nОтвет Результатом будет число\nа если наоборот умножить то матрица"
      },
      {
        "timestamp": "2024-11-15 16:44:25",
        "content": "2024-11-15 16:44:25\n Артем -> 2071074234:\nКомпания: Xsolla\nВакансия: написала hr\nЗп: 4000$\nВопросы: уточнили про опыт\nСпросили куда хочешь расти \nДальше задача\nЗадача: на скрине\nрешение: \nconst someFunc = (input) => {\n  const notes = [5000, 1000, 500, 100];\n  const result = {};\n\n// Проходим по каждому номиналу\n  notes.forEach(note => {\n// Определяем количество банкнот текущего номинала\n    result[note] = Math.floor(input / note);\n// Определяем количество банкнот текущего номинала\n    input %= no...",
        "full_content": "2024-11-15 16:44:25\n Артем -> 2071074234:\nКомпания: Xsolla\nВакансия: написала hr\nЗп: 4000$\nВопросы: уточнили про опыт\nСпросили куда хочешь расти \nДальше задача\nЗадача: на скрине\nрешение: \nconst someFunc = (input) => {\n  const notes = [5000, 1000, 500, 100];\n  const result = {};\n\n// Проходим по каждому номиналу\n  notes.forEach(note => {\n// Определяем количество банкнот текущего номинала\n    result[note] = Math.floor(input / note);\n// Определяем количество банкнот текущего номинала\n    input %= note;\n  });\n\n  return result;\n}"
      }
    ]
  },
  {
    "company": "Р-Софт",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-03-25 12:26:09",
        "content": "2025-03-25 12:26:09\n Лёша -> 2071074234:\nКомпания: Р-софт\nЗп: 300\nВакансия: написал hr\n\nВопросы: \nРазрешает ли нам redux хранить несколько стейтов?\nНужно ли для сегковесных операций использовать reedux?\nКак оптимизировать работу с загрузкой больших объемов данных по api (таблица)?\nНужно ли мапить данные (изменять структуру), которые приходят с бекенда?\n\nТех часть:\nКод ревью.\n\nimport * as React from 'react';\nimport {ITennisGame, TennisGame} from \"./Interfaces/ITennisGame\";\nimport {useReducer} fro...",
        "full_content": "2025-03-25 12:26:09\n Лёша -> 2071074234:\nКомпания: Р-софт\nЗп: 300\nВакансия: написал hr\n\nВопросы: \nРазрешает ли нам redux хранить несколько стейтов?\nНужно ли для сегковесных операций использовать reedux?\nКак оптимизировать работу с загрузкой больших объемов данных по api (таблица)?\nНужно ли мапить данные (изменять структуру), которые приходят с бекенда?\n\nТех часть:\nКод ревью.\n\nimport * as React from 'react';\nimport {ITennisGame, TennisGame} from \"./Interfaces/ITennisGame\";\nimport {useReducer} from \"react\";\n\nexport interface ITennisGame\n{\n    wonPoint(string): void;\n    getScore(): string;\n}\n\nexport class TennisGame implements  ITennisGame{\n    private score1:number = 0;\n    private score2:number = 0;\n    private player1Name: string;\n    private player2Name: string;\n\n    constructor(player1Name: string, player2Name: string) {\n        this.player1Name = player1Name;\n        this.player2Name = player2Name;\n    }\n\n    getScore(): string {\n        var score: string;\n        var tempScore = 0;\n        if(this.score1 == this.score2){\n            switch (this.score1){\n                case 0:\n                    score = \"Love-All\";\n                    break;\n                case 1:\n                    score = \"Fifteen-All\";\n                    break;\n                case 2:\n                    score = \"Thirty-All\";\n                    break;\n                default:\n                    score = \"Deuce\";\n                    break;\n            }\n        }\n        else if (this.score1 >= 4 || this.score2 >= 4)\n        {\n            var minusResult = this.score1 - this.score2;\n            if (minusResult === 1) score = \"Advantage player1\";\n            else if (minusResult === -1) score = \"Advantage player2\";\n            else if (minusResult >= 2) score = \"Win for player1\";\n            else score = \"Win for player2\";\n        }\n    else\n        {        \n            for (var i = 1; i < 3; i++)\n            {\n                if (i == 1) {\n                    tempScore = this.score1;\n                } else { \n                    score += \"-\"; \n                    tempScore = this.score2; \n                }\n                switch (tempScore)\n                {\n                    case 0:\n                        score += \"Love\";\n                        break;\n                    case 1:\n                        score += \"Fifteen\";\n                        break;\n                    case 2:\n                        score += \"Thirty\";\n                        break;\n                    case 3:\n                        score += \"Forty\";\n                        break;\n                }\n            }\n            \n        }\n        return score;\n    }\n\n    wonPoint(playerName: string): void {\n        if(playerName == \"player1\")\n            this.score1+=1;\n        else\n            this.score2+=1;\n    }\n\n}\n\n\n\ninterface State{\n    game: ITennisGame;\n}\n\nvar tennisGame: ITennisGame\n    = new TennisGame(\"playerName1\", \"playerName2\");\n\nvar initialState: State = { game: tennisGame};\n\ntype CounterAction =\n    | { type: \"addPlayer1Point\" }\n    | { type: \"addPlayer2Point\"}\n    | { type: \"getScore\" }\n\nfunction stateReducer(state: State, action: CounterAction): State | Never {\n    switch (action.type) {\n        case \"addPlayer1Point\":\n            initialState.game.wonPoint(\"firstPlayer\");\n            return state;\n        case \"addPlayer2Point\":\n            initialState.game.wonPoint(\"secondPlayer\");\n            return state;\n        case \"getScore\":\n            return state;\n        default:\n            throw new Error(\"Unknown action\");\n    }\n}\n\nconst [state, dispatch] = useReducer(stateReducer, initialState);\n\nconst addFirstPlayerPoint = () => dispatch({ type: \"addPlayer1Point\" });\nconst addSecondPlayerPoint = () => dispatch({ type: \"addPlayer2Point\" });\nconst getScore = () => dispatch({ type: \"getScore\" });\n\nexport default function App() {\n    \n    return (\n        <div>\n\n            <h1>Welcome to tennis game</h1>"
      },
      {
        "timestamp": "2025-02-24 11:54:47",
        "content": "2025-02-24 11:54:47\n Адам -> 2071074234:\nКомпания: Р-Софт\nЗП: 260-300 на руки\nВакансия:https://hh.ru/vacancy/117085747?hhtmFrom=employer_vacancies\nБыла 1 задача и немного вопросов по redux и стейт менеджеры\n\nСделать ревью и рефактор кода\nimport * as React from 'react';\nimport { ITennisGame, TennisGame } from \"./Interfaces/ITennisGame\";\nimport { useReducer } from \"react\";\n\nexport interface ITennisGame {\n  wonPoint(string): void;\n  getScore(): string;\n}\n\nexport class TennisGame implements ITennisG...",
        "full_content": "2025-02-24 11:54:47\n Адам -> 2071074234:\nКомпания: Р-Софт\nЗП: 260-300 на руки\nВакансия:https://hh.ru/vacancy/117085747?hhtmFrom=employer_vacancies\nБыла 1 задача и немного вопросов по redux и стейт менеджеры\n\nСделать ревью и рефактор кода\nimport * as React from 'react';\nimport { ITennisGame, TennisGame } from \"./Interfaces/ITennisGame\";\nimport { useReducer } from \"react\";\n\nexport interface ITennisGame {\n  wonPoint(string): void;\n  getScore(): string;\n}\n\nexport class TennisGame implements ITennisGame {\n  private score1: number = 0;\n  private score2: number = 0;\n  private player1Name: string;\n  private player2Name: string;\n\n  constructor(player1Name: string, player2Name: string) {\n    this.player1Name = player1Name;\n    this.player2Name = player2Name;\n  }\n\n  getScore(): string {\n    var score: any;\n    let tempScore = 0;\n    if (this.score1 == this.score2) {\n      switch (this.score1) {\n        case 0:\n          score = \"Love-ALL\";\n          break;\n        case 1:\n          score = \"Fifteen-ALL\";\n          break;\n        case 2:\n          score = \"Thirty-ALL\";\n          break;\n        default:\n          score = \"Deuce\";\n          break;\n      }\n    } else if (this.score1 >= 4 || this.score2 >= 4) {\n      var minusResult = this.score1 - this.score2;\n      if (minusResult == 1) score = \"Advantage player1\";\n      else if (minusResult == -1) score = \"Advantage player2\";\n      else if (minusResult >= 2) score = \"Win for player1\";\n      else score = \"Win for player2\";\n    } else {\n      for (var i = 1; i < 3; i++) {\n        if (i == 1) {\n          tempScore = this.score1;\n        } else {\n          score += \"-\";\n          tempScore = this.score2;\n        }\n        switch (tempScore) {\n          case 0:\n            score += \"Love\";\n            break;\n          case 1:\n            score += \"Fifteen\";\n            break;\n          case 2:\n            score += \"Thirty\";\n            break;\n          case 3:\n            score += \"Forty\";\n            break;\n        }\n      }\n    }\n    return score;\n  }\n\n  wonPoint(playerName: string): void {\n    if (playerName == \"player1\") this.score1 += 1;\n    else this.score2 += 1;\n  }\n}\n\ninterface State {\n  game: ITennisGame;\n}\n\nlet tennisGame: ITennisGame = new TennisGame(\"playerName1\", \"playerName2\");\n\nconst initialState: State = { game: tennisGame };\n\ntype CounterAction =\n  | { type: \"addPlayer1Point\" }\n  | { type: \"addPlayer2Point\" }\n  | { type: \"getScore\" };\n\nfunction stateReducer(state: State, action: CounterAction): State | Never {\n  switch (action.type) {\n    case \"addPlayer1Point\":\n      state.game.wonPoint(\"firstPlayer\");\n      return state;\n    case \"addPlayer2Point\":\n      state.game.wonPoint(\"secondPlayer\");\n      return state;\n    case \"getScore\":\n      return state;\n    default:\n      throw new Error(\"Unknown action\");\n  }\n}\n\nconst [state, dispatch] = useReducer(stateReducer, initialState);\n\nconst addFirstPlayerPoint = () => dispatch({ type: \"addPlayer1Point\" });\nconst addSecondPlayerPoint = () => dispatch({ type: \"addPlayer2Point\" });\nconst getScore = () => dispatch({ type: \"getScore\" });\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Welcome to tennis game</h1>\n      <p>Count: {state.game.getScore()}</p>\n      <button onClick={addFirstPlayerPoint}>add first player point</button>\n      <button onClick={addSecondPlayerPoint}>add second player point</button>\n      <button onClick={getScore}>get score</button>\n    </div>\n  );\n}"
      }
    ]
  },
  {
    "company": "Uremont",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-09-25 11:30:46",
        "content": "2024-09-25 11:30:46\n Михаил -> 2071074234:\n- Uremont\n- 200к\n- вакансия: hh.ru/vacancy/106132026\n- по факту вместо знакомство с TL был еще один тех собес с командой, была только теория, но душная",
        "full_content": "2024-09-25 11:30:46\n Михаил -> 2071074234:\n- Uremont\n- 200к\n- вакансия: hh.ru/vacancy/106132026\n- по факту вместо знакомство с TL был еще один тех собес с командой, была только теория, но душная"
      },
      {
        "timestamp": "2024-09-24 09:05:45",
        "content": "2024-09-24 09:05:45\n Михаил -> 2071074234:\n- Uremont\n- 200к\n- вакансия: hh.ru/vacancy/106132026\n- смотреть с 21 минуты(!) - опоздали, собес с 21 начался",
        "full_content": "2024-09-24 09:05:45\n Михаил -> 2071074234:\n- Uremont\n- 200к\n- вакансия: hh.ru/vacancy/106132026\n- смотреть с 21 минуты(!) - опоздали, собес с 21 начался"
      }
    ]
  },
  {
    "company": "ED-IT",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-02-07 05:42:19",
        "content": "2025-02-07 05:42:19\n Klimenty Karavaev -> 2071074234:\nКомпания: ED-IT (техническое собеседование)\nЗапись: https://youtu.be/09sqQy7MDRk?si=sjMwjE7l1eNHzGA4\nЗП: до 220 \nВакансия: https://hh.ru/vacancy/116587352?hhtmFrom=vacancy_search_list\nЗадачи: такие же как здесь https://t.me/c/2071074234/489/103596",
        "full_content": "2025-02-07 05:42:19\n Klimenty Karavaev -> 2071074234:\nКомпания: ED-IT (техническое собеседование)\nЗапись: https://youtu.be/09sqQy7MDRk?si=sjMwjE7l1eNHzGA4\nЗП: до 220 \nВакансия: https://hh.ru/vacancy/116587352?hhtmFrom=vacancy_search_list\nЗадачи: такие же как здесь https://t.me/c/2071074234/489/103596"
      },
      {
        "timestamp": "2025-02-06 13:55:23",
        "content": "2025-02-06 13:55:23\n Nodar -> 2071074234:\nНазвание: ED-IT \nВакансия: https://hh.ru/vacancy/116587352?hhtmFrom=vacancy_search_list\nЗП: до 220 на руки\nТеория: краткий обзор по резюме и навыкам, что делал, кратко. Спросил про react hook form, chart js, fsd, ts, ,без подробностей и деталей.\nЗадачи:\n1./* Преварительная задача, в решении учитывать что объектов может быть\n условно миллиард, а типов миллион, исходить из необходимости максимально снизить затраты по времени и ресурсам\n Написать функцию вы...",
        "full_content": "2025-02-06 13:55:23\n Nodar -> 2071074234:\nНазвание: ED-IT \nВакансия: https://hh.ru/vacancy/116587352?hhtmFrom=vacancy_search_list\nЗП: до 220 на руки\nТеория: краткий обзор по резюме и навыкам, что делал, кратко. Спросил про react hook form, chart js, fsd, ts, ,без подробностей и деталей.\nЗадачи:\n1./* Преварительная задача, в решении учитывать что объектов может быть\n условно миллиард, а типов миллион, исходить из необходимости максимально снизить затраты по времени и ресурсам\n Написать функцию вывода строкой через запятую названий (name) объектов\n Брать только объекты связанные с типами у которых class=\"Устройства\" */\n\nОбъекты\nconst objects = [\n  { id: 1, name: \"Test 1\", object_type: 1 },\n  { id: 2, name: \"Test 2\", object_type: 1 },\n  { id: 3, name: \"Test 3\", object_type: 2 },\n  { id: 4, name: \"Test 4\", object_type: 3 },\n]\n\n  //Типы\n  const object_types = [\n    { id: 1, class: \"Устройства\" },\n    { id: 2, class: \"Устройства\" },\n    { id: 3, class: \"Порты\" },\n    { id: 4, class: \"Кабели\" }\n  ]\n\n  function outputNames(objects: any[],types:any[],classType='Устройства'){\n    const resultNames = []\n    const map: any={}\n\n    for(const obj of types){\n\n      map[obj.id] = obj\n    }\n\n    for(const {name,object_type} of objects){\n      const type = map[object_type]\n      if (type && type.class === classType) \n      resultNames.push(name)\n    }\n\n    return resultNames.join(', ')\n  }\n2. /* 1. Отложенный вызов\nНеобходимо реализовать текстовый поиск с участием бэкенда (только эмуляция)\nРеагируем на каждую набранную букву, но вызываем функцию поиска на бэк (callApi)\nтолько если пауза в наборе составила 1 секунду\n- Использовать готовые библиотеки нельзя, делаем на голом js\n- HTML форму реализовывать не надо, только реакцию на условный onChange(value)\n- React окружение не использовать\n*/\n\nconst callApi = (value:string) => console.log(value)\n\n\nfunction debounce(fn:(value:string):void,ms:number){\nlet timer =null\n  return (...args)=>{\n    clearTimeout(timer)\n    timer = setTimeout(()=>{\n      fn(...args)\n    },ms)\n\n  }\n}\n3. /* Получить объект с отчётом из массива\nЯ хочу получить функцию которая примет этот массив на вход и вернёт объект,\n  который скажет сколько у меня субъектов в регионе 1 и сколько в регионе 2\nДополнительные объявления переменны - массивов использовать нельзя, нужен return { какое то действие создающее объект из массива }\nЛогику реализовать внутри этой функции getResult\n  */\n\n\nconst Task2 = () => {\n  interface ISubjectRegion { name: string, region: number }\n  interface IResult { [key: ISubjectRegion['region']]: number }\n\n  const sourceData: ISubjectRegion[] = [\n    { name: \"Субъект 1\", region: 1 },\n    { name: \"Субъект 2\", region: 2 },\n    { name: \"Субъект 3\", region: 2 },\n    { name: \"Субъект 4\", region: 2 },\n    { name: \"Субъект 5\", region: 4 }\n  ]\n\n  const expectedResult: IResult = {\n    1: 1, //1 субъект в регионе 1\n    2: 3 //3 субъекта в регионе 2\n  }\n\n  //!!! Логику реализовать внутри этой функции !!!\n  const getResult = (data: ISubjectRegion[]): IResult => {\n    return data.reduce((acc, { region }) => {\n      if (region === 1 || region === 2) {\n        acc[region] = (acc[region] || 0) + 1\n        return acc\n      }\n      return acc\n    }, {} as IResult)\n  }\n  //Это выведет результат её работы справа\n  return { expectedResult: expectedResult, result: getResult(sourceData) }\n}\n//Это выведет результат её работы справа\nshowTaskResult(2, Task2())"
      }
    ]
  },
  {
    "company": "Sminex",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-04 13:48:52",
        "content": "2025-07-04 13:48:52\n Sodnom Tyksheev -> 2071074234:\nSminex \nзп: 230\n\n1.Отличия http от https2.Какой статус вернет успешный POST запрос?\n3.Что такое CORS? Кто является инициатором блокировки браузер или сервер?\n4.Как бы ты реализовал аккардион с помощью HTML/CSS\n5.Какая версия реакт была на последнем месте работы? Какие хуки из версии 18+ использовал? Кейс для чего именно\n6.Сколько будет перерендеров если будет несколько setState подряд, после какая асинхронная функция через asyn await и далее оп...",
        "full_content": "2025-07-04 13:48:52\n Sodnom Tyksheev -> 2071074234:\nSminex \nзп: 230\n\n1.Отличия http от https2.Какой статус вернет успешный POST запрос?\n3.Что такое CORS? Кто является инициатором блокировки браузер или сервер?\n4.Как бы ты реализовал аккардион с помощью HTML/CSS\n5.Какая версия реакт была на последнем месте работы? Какие хуки из версии 18+ использовал? Кейс для чего именно\n6.Сколько будет перерендеров если будет несколько setState подряд, после какая асинхронная функция через asyn await и далее опять несколько setState?(Чтоб понять сколько нужно у него спросить какая именно версия React)\n7.Что будет в консоли и какая сложность алгоритма\n\nfunction filterArrayByArray(first, second) {\n  const newArray = [];\n  for (let k = 0; k < second.length; k++) {\n    for (let i = 0; i < first.length; i++) {\n      if (first[i].code === second[k]) {\n        newArray.push(first[i]);\n        break; \n      }\n    }\n  }\n  return newArray;\n}\n\nconst a = [{ code: 0 }, { code: 1 }, { code: 2 }, { code: 3 }];\nconst b = [0, 3, 4];\n\nconst result = filterArrayByArray(a, b);\nconsole.log(result);"
      },
      {
        "timestamp": "2025-04-04 15:43:06",
        "content": "2025-04-04 15:43:06\n Равиль Васильев -> 2071074234:\nSminex \n\n📢 Вакансия - написала hr\n\n❓Вопросы: \n\n- Отличие http и https\n- CORS\n- Какие знаю хуки\n- Отличие react 17 18 19\n- Различие map и forEach\n- Что вызывает перерендер компонента\n- Как я бы реализовал хлебные крошки\n\n\n📌 Задачи:\n\n\n// Был скриншот с кодом, рассказать что делает этот код. Спрашивал зачем тут нужен break. \n\nconst filterArrayByArray = (first, second) => {\n    let newArray = [];\n    for (let k = 0; k < second.length; k++) {\n      ...",
        "full_content": "2025-04-04 15:43:06\n Равиль Васильев -> 2071074234:\nSminex \n\n📢 Вакансия - написала hr\n\n❓Вопросы: \n\n- Отличие http и https\n- CORS\n- Какие знаю хуки\n- Отличие react 17 18 19\n- Различие map и forEach\n- Что вызывает перерендер компонента\n- Как я бы реализовал хлебные крошки\n\n\n📌 Задачи:\n\n\n// Был скриншот с кодом, рассказать что делает этот код. Спрашивал зачем тут нужен break. \n\nconst filterArrayByArray = (first, second) => {\n    let newArray = [];\n    for (let k = 0; k < second.length; k++) {\n        for (let i = 0; i < first.length; i++) {\n            if (first[i].code === second[k]) {\n                newArray.push(first[i]);\n                break;\n            }\n        }\n    }\n    return newArray;\n};\n\nconst a = [{ code: 0 }, { code: 1 }, { code: 2 }, { code: 3 }, { code: 4 }];\nconst b = [0, 3, 4];\n\nconsole.log(filterArrayByArray(a, b));\n\n// Ответ типо для оптимизации не прокатывает. \n// Правильный ответ - чтоб вернуть первый найденный элемент. \n\n// Рассказать как улучшить компонент \n\nimport { ActiveStep, Step, StepperContainer } from './styles';\n\ntype StepperProps = {\n    length: number;\n    activeStep: number;\n};\n\nconst generateSteps = (length: number, activeStep: number) => {\n    const steps = [];\n    for (let i = 0; i < length; i += 1) {\n        if (i === activeStep) steps.push(<ActiveStep key={i} />);\n        else steps.push(<Step key={i} />);\n    }\n    return steps;\n};\n\nconst Stepper = ({ length, activeStep }: StepperProps) => {\n    return <StepperContainer>{generateSteps(length, activeStep)}</StepperContainer>;\n};\n\n// Ответ: использовать мемонизацию. Создать массив заполненный, только компонентом Steps и замемонизировать его.\n// И работать с этим мемонизированным списком. Подставлять куда нужно по индексу AtiveStep\n\n// Рассказать как я улучшил бы код\nimport { IconPlus } from '@shared/ui/icons/icon-plus';\nimport React, { useState } from 'react';\nimport styles from './styles.module.css'; // Предполагается использование CSS-модулей\n\nexport interface AccordionWithIconProps {\n    children?: React.ReactNode;\n    title: string;\n    hasBorder?: boolean;\n}\n\nexport const AccordionWithIcon: React.FC<AccordionWithIconProps> = ({ children, title, hasBorder = true }) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n\n    const handleToggle = () => {\n        setIsExpanded(!isExpanded);\n    };\n\n    const rowContainerClass = hasBorder ? styles.rowContainer : styles.rowContainerNoBorder;\n\n    return (\n        <div className={styles.container}>\n            {isExpanded ? (\n                <div className={rowContainerClass}>\n                    <div className={styles.button} onClick={handleToggle}>\n                        <div className={styles.iconMinus}>\n                            <IconMinus />\n                        </div>\n                        <p className={styles.title}>{title}</p>\n                    </div>\n                    {children}\n                </div>\n            ) : (\n                <div className={styles.button} onClick={handleToggle}>\n                    <div className={styles.iconPlus}>\n                        <IconPlus />\n                    </div>\n                    <p className={styles.title}>{title}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\n// Все cвелось к тому что этот код бесcмысленный.  стейт тут не нужно использовать и аккордион можно реализовать с помощью нативных <details>, <summary>"
      }
    ]
  },
  {
    "company": "Kedoo",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-04 19:35:02",
        "content": "2025-07-04 19:35:02\n Никита -> 2071074234:\nKEDOO (Zvonko digital)\nЗП: от 180\n\nВопросы:\n1. Спрашивал про опыт\n2. Работал с формами, графиками?\n3. Настраивал вебпак, разбираешься в конфиге?\n4. UI Kit использовали на проекте?\n5. Изучаешь спецификацию js, что нового выходит за последнее время?\n6. Как можем понять, что можем использовать ту или иную новую функцию?(поддержка в браузерах)\n7. Что делать если мы хотим использовать новый синтаксис js, но чтобы он поддерживался в старых браузерах?(полифил)...",
        "full_content": "2025-07-04 19:35:02\n Никита -> 2071074234:\nKEDOO (Zvonko digital)\nЗП: от 180\n\nВопросы:\n1. Спрашивал про опыт\n2. Работал с формами, графиками?\n3. Настраивал вебпак, разбираешься в конфиге?\n4. UI Kit использовали на проекте?\n5. Изучаешь спецификацию js, что нового выходит за последнее время?\n6. Как можем понять, что можем использовать ту или иную новую функцию?(поддержка в браузерах)\n7. Что делать если мы хотим использовать новый синтаксис js, но чтобы он поддерживался в старых браузерах?(полифил)\n8. Как оптимизировать загрузку тяжелого js файла\n9. Какие функции выполняет babel?\n10. Что такое вендорные префиксы?\n11. Что такое замыкание?\n\nЗадача 1\n\nconst products = [\n  { name: 'Laptop', price: 1200, instock: true },\n  { name: 'House', price: 20, instock: false },\n  { name: 'Monitor', price: 300, instock: true },\n  { name: 'Keyboard', price: 100, instock: true },\n  { name: 'Phone', price: 800, instock: true },\n  { name: 'Desk', price: 450, instock: false },\n  { name: 'Chair', price: 150, instock: true },\n  { name: 'Tablet', price: 350, instock: true },\n  { name: 'Webcam', price: 70, instock: true },\n  { name: 'Speaker', price: 130, instock: false },\n];\n\n// 1. Сгруппировать на 3 ценовые категории:\n// . cheap до 150 включительно\n// . medium от 151 до 500\n// . expensive от 501 и выше\n\nfunction group(products) {\n  const result = { cheap: [], medium: [], expensive: [] };\n  products.forEach((product) => {\n    const price = product.price;\n\n    if (price <= 150) {\n      result.cheap.push(product);\n    } else if (price <= 500) {\n      result.medium.push(product);\n    } else {\n      result.expensive.push(product);\n    }\n  });\n  return result;\n\n  // Переписать на reduce\n  return products.reduce((acc, item) => {\n    if (item.price <= 150) {\n        acc.cheap.push(item);\n  } else if (item.price >= 151 && item.price <= 500) {\n      acc.medium.push(item);\n  } else {\n      acc.expensive.push(item);\n  }\n  return acc;\n}, result);\n}\n\n// Переписать используя новый метод groupBy (даёт посмотреть доку)\n\nconst result = Object.groupBy(products, (product) => {\n    if (product.price <= 150) {\n        return \"cheap\";\n    } else if (product.price <= 500) {\n        return \"medium\";\n    } else {\n        return \"expensive\";\n    }\n});\n\n// 2. Задача:\n// взять из полученных групп дешевые товары и:\n// . Оставить только товары, которые есть в наличии (inStock)\n// . Отсортировать их по цене по убыванию\n// . Взять топ-2 самых дорогих\n// . Вернуть массив из их названий\n\nfunction newGroup(obj) {\n    return obj.cheap\n    .filter((item) => item.instock)\n    .sort((a, b) => b.price - a.price)\n    .slice(0, 2)\n    .map((item) => item.name);\n}\n\nЗадача 2\n\n// Для данной функции fn вернуть новую функцию,\n//которая идентична исходной функции,\n// за исключением того, что она гарантирует,\n//что fn будет вызвана не более одного раза.\n\n// При первом вызове возвращаемой функции она должна возвращать тот же результат, что и fn.\n// При каждом последующем вызове она должна возвращать undefined.\nfunction once(fn) {\n    let isCalled = false;\n\n    return (...args) => {\n        if (!isCalled) {\n            isCalled = true;\n            return fn(...args);\n        }\n    };\n}\n\nlet fn = (a, b, c) => a + b + c;\nlet oncefn = once(fn);\nconsole.log(oncefn(1, 2, 3)); // 6\nconsole.log(oncefn(2, 3, 6)); // возвращает undefined без вызова fn"
      },
      {
        "timestamp": "2025-05-23 14:27:58",
        "content": "2025-05-23 14:27:58\n Егор -> 2071074234:\nKEDOO Entertainment \nЗП: 200-220\n\n- Рассказ о последнем месте работы;\n- Использовал ли в своих проектах React-hook-form;\n- Работал ли с CI\\CD;\n- Практики создании общих компонентов;\n- Занимался ли обновлением пакетов внутри проекта;\n- Каждый год выходит новый ECMAScript , фичи, функции и т.д. Стоит их сразу использовать или нет;\n- Что происходит в браузере, когда пользователь вводит в url;\n- useEffect, useLayoutEffect, зачем нужны и их отличия;\n- Отличие ...",
        "full_content": "2025-05-23 14:27:58\n Егор -> 2071074234:\nKEDOO Entertainment \nЗП: 200-220\n\n- Рассказ о последнем месте работы;\n- Использовал ли в своих проектах React-hook-form;\n- Работал ли с CI\\CD;\n- Практики создании общих компонентов;\n- Занимался ли обновлением пакетов внутри проекта;\n- Каждый год выходит новый ECMAScript , фичи, функции и т.д. Стоит их сразу использовать или нет;\n- Что происходит в браузере, когда пользователь вводит в url;\n- useEffect, useLayoutEffect, зачем нужны и их отличия;\n- Отличие event.target от event.currentTarget;\n- Расскажи про события и фазы;\n- Зачем нужен метод stopPropagation;\n\n3 задачи по js:\nconst products = [\n  { name: \"Laptop\", price: 1200, inStock: true },\n  { name: \"Mouse\", price: 20, inStock: false },\n  { name: \"Monitor\", price: 300, inStock: true },\n  { name: \"Keyboard\", price: 100, inStock: true },\n  { name: \"Phone\", price: 800, inStock: true },\n  { name: \"Desk\", price: 450, inStock: false },\n  { name: \"Chair\", price: 150, inStock: true },\n  { name: \"Tablet\", price: 350, inStock: true },\n  { name: \"Webcam\", price: 70, inStock: true },\n  { name: \"Speaker\", price: 130, inStock: true },\n];\n\n// 1. Задача:\n// * Оставить только товары, которые есть в наличии (inStock = true)\n// * Отсортировать их по цене по убыванию\n// * Взять топ-3 самых дорогих\n// * Вернуть массив из их названий\n\n\n// Для данной функции fn вернуть новую функцию, которая идентична исходной функции,\n// за исключением того, что она гарантирует, что fn будет вызвана не более одного раза.\n// При первом вызове возвращаемой функции она должна возвращать тот же результат, что и fn.\n// При каждом последующем вызове она должна возвращать undefined.\n\nfunction once(fn) {}\n\nlet fn = (a, b, c) => a + b + c;\nlet onceFn = once(fn);\n\nconsole.log(onceFn(1, 2, 3)); // 6\nconsole.log(onceFn(2, 3, 6)); // undefined\n\n\n// Дана асинхронная функция cb и время t в миллисекундах,\n// вернуть новую версию входной функции с ограничением по времени.\n// cb принимает аргументы, предоставленные функции с ограничением по времени.\n// Функция с ограничением по времени должна следовать следующим правилам:\n// Если cb завершается в течение лимита времени t миллисекунд,\n// функция с ограничением по времени должна разрешиться с результатом.\n// Если выполнение cb превышает лимит времени,\n// функция с ограничением по времени должна отклониться со строкой «Превышен лимит времени».\n\nconst asyncLimit = (fn, limit) => {\n  return async (...args) => {\n    const timeoutPromise = new Promise((_, reject) => {\n      setTimeout(() => reject('Превышен лимит времени'), limit);\n    });\n    const resultPromise = fn(...args);\n    return Promise.race([timeoutPromise, resultPromise]);\n  };\n};\n\nconst fn = async (n) => {\n  await new Promise((res) => setTimeout(res, 100));\n  return n * n;\n};\n\nconst fn2 = async (a, b) => {\n  await new Promise((res) => setTimeout(res, 120));\n  return a + b;\n};\n\n(async () => {\n  try {\n    // const res1 = await asyncLimit(fn, 50)(5); // rejected: Превышен лимит времени исполнения\n    // const res2 = await asyncLimit(fn, 150)(5); // resolved: 25\n    // const res3 = await asyncLimit(fn2, 100)(1, 2); // rejected: Превышен лимит времени исполнения\n    // const res4 = await asyncLimit(fn2, 150)(1, 2); // resolved: 3\n    console.log(res1);\n  } catch (e) {\n    console.log(e);\n  }\n})();"
      }
    ]
  },
  {
    "company": "- Ту Софт",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-09-26 11:33:14",
        "content": "2024-09-26 11:33:14\n Katerina -> 2071074234:\nКомпания - ТУ СОФТ\nВакансия: https://spb.hh.ru/vacancy/106312435\nзп: 250\nРезультат: ❌\nВопросы:\n1) Замыкания\n2) Event loop\n3) Чистый код - SOLID, KISS, DRY, YAGNI\n5) Что такое React\n6) Виртуальный дом\n7) Хуки с чем работаешь\n8) Разговор про Big O\nЗадачи:\nНайти медиану двух отсортированных массивов. Через sort здорово, но по условию они уже сортированы, как-то по ним нужно пройтись... не знаю.....\nПорядок выполнения",
        "full_content": "2024-09-26 11:33:14\n Katerina -> 2071074234:\nКомпания - ТУ СОФТ\nВакансия: https://spb.hh.ru/vacancy/106312435\nзп: 250\nРезультат: ❌\nВопросы:\n1) Замыкания\n2) Event loop\n3) Чистый код - SOLID, KISS, DRY, YAGNI\n5) Что такое React\n6) Виртуальный дом\n7) Хуки с чем работаешь\n8) Разговор про Big O\nЗадачи:\nНайти медиану двух отсортированных массивов. Через sort здорово, но по условию они уже сортированы, как-то по ним нужно пройтись... не знаю.....\nПорядок выполнения"
      },
      {
        "timestamp": "2024-09-22 19:47:41",
        "content": "2024-09-22 19:47:41\n Никита -> 2071074234:\n— Название ТУ СОФТ\n— Вакансия https://hh.ru/vacancy/106312435?hhtmFrom=employer_vacancies\n— зп: 230 net (как понимаю потолок)\n— поговорили про опыт, про то как и в чем измерить время на выполнение задач: стори поинты, часы, майки, собаки и тп.\n— Лайв кодинг:\nнужно найти медиану двух отсортированных массивов(за O(n)):\nчерез concat и sort сделал, но это nlog(n)\nпопробовал через 2 указателя, не решил,\nпоговорили ещё 15 минут по стек, почему выбирали, почем...",
        "full_content": "2024-09-22 19:47:41\n Никита -> 2071074234:\n— Название ТУ СОФТ\n— Вакансия https://hh.ru/vacancy/106312435?hhtmFrom=employer_vacancies\n— зп: 230 net (как понимаю потолок)\n— поговорили про опыт, про то как и в чем измерить время на выполнение задач: стори поинты, часы, майки, собаки и тп.\n— Лайв кодинг:\nнужно найти медиану двух отсортированных массивов(за O(n)):\nчерез concat и sort сделал, но это nlog(n)\nпопробовал через 2 указателя, не решил,\nпоговорили ещё 15 минут по стек, почему выбирали, почему от next отказываются\n— итог: оффер 230net"
      }
    ]
  },
  {
    "company": "Армо-Системы",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-10-25 15:19:54",
        "content": "2024-10-25 15:19:54\n Artyom Sozykin -> 2071074234:\nКомпания: АРМО-СИСТЕМЫ\nЗП: 150к\n\nПоведенческое интервью:\n 1. Как выводил зп из крипты? (p2p binance заблокировали с начала года, валидный ответ через обменники, либо через ton)\n 2. Какой последний блокер был на дейли\n 3. Что делали на грумминге\n 4. Что делали на планирование\n 5. По какому принципу задачи попадали в спринт\n 6. Как происходила оценка задач\n 7. Как команда оценивала сколько задач можно загрузить в один спринт?\n 8. Как ты оцениваешь...",
        "full_content": "2024-10-25 15:19:54\n Artyom Sozykin -> 2071074234:\nКомпания: АРМО-СИСТЕМЫ\nЗП: 150к\n\nПоведенческое интервью:\n 1. Как выводил зп из крипты? (p2p binance заблокировали с начала года, валидный ответ через обменники, либо через ton)\n 2. Какой последний блокер был на дейли\n 3. Что делали на грумминге\n 4. Что делали на планирование\n 5. По какому принципу задачи попадали в спринт\n 6. Как происходила оценка задач\n 7. Как команда оценивала сколько задач можно загрузить в один спринт?\n 8. Как ты оцениваешь задачу? Как оцениваешь задачу, которую никогда раньше не делал?\n 9. Что делал, если возникла сложность по задаче?\n 10. Где трекали задачи, где хранили код?\n 11. Как принималось решение взять vite вместо webpack?\n 12. Были ли конфликты или споры по code review?\n 13. Опиши свой обычный рабочий день"
      },
      {
        "timestamp": "2024-10-25 13:56:00",
        "content": "2024-10-25 13:56:00\n Artyom Sozykin -> 2071074234:\nКомпания: АРМО-СИСТЕМЫ\nЗП: 150к\nВакансия: https://hh.ru/vacancy/107883266\n\nВопросы:\n1. Почему лучше стоит использовать Map, например на 1000 объектов\n2. Что такое замыкание? Как оно работает?\n3. Где может использоваться замыкание в React\n4. Какие области видимости бывают в js?\n5. Расскажи про специфичность в css?\n6. Почему не стоит использовать !important в css\n7. Какие виды position бывают\n8. Чем отличается flex от grid\n9. Разница между absolut...",
        "full_content": "2024-10-25 13:56:00\n Artyom Sozykin -> 2071074234:\nКомпания: АРМО-СИСТЕМЫ\nЗП: 150к\nВакансия: https://hh.ru/vacancy/107883266\n\nВопросы:\n1. Почему лучше стоит использовать Map, например на 1000 объектов\n2. Что такое замыкание? Как оно работает?\n3. Где может использоваться замыкание в React\n4. Какие области видимости бывают в js?\n5. Расскажи про специфичность в css?\n6. Почему не стоит использовать !important в css\n7. Какие виды position бывают\n8. Чем отличается flex от grid\n9. Разница между absolute, fixed и sticky\n10. Как позиционируется fixed, отностительно чего?\n11. Расскажи про жизненный цикл компонента\n12. Что провоцирует ререндер в React?\n13. Как можем хранить данные к компоненте?\n14. Расскажи про useReducer\n15. Расскажи про useContext\n\nЗадачи решались просто на словах\n\nЗадача 1:\nВывести массив уникальных значений из двух массивов: \nconst uniqueArr([1,1,2,4,8,8], [3,6,6,9])\n\nЗадача 2:\n/*Имеется массив интервалов.\nНеобходимо объединить интервалы так, чтобы пересекающие интервалы были объеденены, причем первым значением интервала будет наименьшее значение из имеющихся двух интервалов, а вторым - наибольшее.\nНепересекающиеся интервалы оставить как есть.\nПример 1:\nИсходное значение: [[1,3], [2,6],\n[8, 10], [15, 18]]\nРезультат: [[1,6], [8,10], [15,18]]\nПример 2:\nИсходное значение: [[1,4], [4,5]]\nРезультат: [[1,5]] */"
      }
    ]
  },
  {
    "company": "Мой Склад",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-11-19 21:09:11",
        "content": "2024-11-19 21:09:11\n Андрей -> 2071074234:\nКомпания: Мой склад\nВакансия: https://hh.ru/vacancy/110422163\nЗП: 200+\nВопросы за опыт, что такое JS, чем нравится react, почему хуки нельзя юзать в циклах и условиях, какие минусы реакта видишь, как работает useEffect.\nЗадачи на чистый JS:\n\nЧто будет выведено\n let obj = { \"a\": 1 };\n \n (function (obj) {\n   obj = { \"a\": 2 };\n })(obj);\n \n console.log(obj.a)  //\n\n let obj = { \"a\": 1 };\n \n (function (obj) {\n   obj.a = 2;\n })(obj);\n \nconsole.log(obj.a) //\n\n\n...",
        "full_content": "2024-11-19 21:09:11\n Андрей -> 2071074234:\nКомпания: Мой склад\nВакансия: https://hh.ru/vacancy/110422163\nЗП: 200+\nВопросы за опыт, что такое JS, чем нравится react, почему хуки нельзя юзать в циклах и условиях, какие минусы реакта видишь, как работает useEffect.\nЗадачи на чистый JS:\n\nЧто будет выведено\n let obj = { \"a\": 1 };\n \n (function (obj) {\n   obj = { \"a\": 2 };\n })(obj);\n \n console.log(obj.a)  //\n\n let obj = { \"a\": 1 };\n \n (function (obj) {\n   obj.a = 2;\n })(obj);\n \nconsole.log(obj.a) //\n\n\n let x = { \"a\": 1 };\nlet y = x;\n\n y = { \"a\": 2 };\n\n console.log(x.a) //\n\n\nНаписать ф-ю counter, которая будет возвращать кол-во вызовов самой себя\ncounter() // 1\ncounter() // 2\n...\ncounter() // n\n\n\nнаписать функцию memoize.\nconst sum = (a,b,c) => a + b + c;\nconst sumobjects = ({a,b,c}) => a + b + c;\n\nconst memoizeSum = memoize(sum);\nconst memoizeSumoObjects = memoize(sumobjects)\n\nmemoizeSumoObjects({a: 1, b: 2, c: 3}); // calc 6\nmemoizeSumoObjects({a: 1, c: 3, b: 2}); // from cache 6\nmemoizeSumoObjects({c: 3, b: 3}); // from cache 6 ???\n\nmemoizeSum(1,2,3) // 6 calc\nmemoizeSum(1,2,2) // 5 calc\nmemoizeSum(1,2,3) // 6 from cache\n\nmemoizeSum(-1,-2, 3) // \nmemoizeSum(-1,-2, 3) //\n\n\nЗадача на реакт: https://stackblitz.com/edit/vitejs-vite-zbxh9h?file=README.md"
      },
      {
        "timestamp": "2024-03-09 13:32:31",
        "content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nh...",
        "full_content": "2024-03-09 13:32:31\n Kirill N -> 2071074234:\nЗаписи собеседований  \nКомпания: MOVAVI от 26.02 \nhttps://www.youtube.com/watch?v=X8BAWSHpr9g \n \nКомпания: Мой склад 26.02 \nhttps://www.youtube.com/watch?v=I5vdydjkmAE \n \nКомпания: Собес 27.02 \nhttps://www.youtube.com/watch?v=USFqJBmNrW4 \n \nКомпания: Озон 1.03 (1 этап) \nhttps://www.youtube.com/watch?v=-9CTCHiGLtg \n \nКомпания: Озон 05.03 (2 этап) \nhttps://youtu.be/SsOs-mTIiN8 \n \nКомпания: ГПБ 01.03 \nhttps://youtu.be/dn7HsjOcDfk \n \nКомпания: ВК 05.03 \nhttps://youtu.be/X4T0G_n1jqo \n \nКомпания ВТБ 06.03  \nhttps://youtu.be/3wfKfjohkw0 \n \nКомпания: Сбер технологии 07.03 \nhttps://youtu.be/gt2RcGbzloQ \n \nКомпания: Иннотех 07.03 \nhttps://youtu.be/soujRRxtnC8 \nКомпания: IT ONE 07.03 \nhttps://youtu.be/RaZ-iZOJgDM"
      }
    ]
  },
  {
    "company": "Билайн",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-03-21 14:04:57",
        "content": "2025-03-21 14:04:57\n Манс -> 2071074234:\nКомпания Билайн\nЗп 250.     \nВопросы: \n1. про жизненные ситуации типа кем видишь себя через 5 лет, с какими качествами тебя ассоциируют твои знакомые, Каким достижением в жизни гордишься. \n2. Потом задачка на логику: 1,5 кролика съедают 1,5  морковки за 1,5  минут. Сколько морковок съедать 9 кроликов за 9 минут.\n3. Дальше уже вопросы про Rest, http, https, авторизацию, про ввод url в адресную строку.\n4. После стандартные вопросы JS, типы данных, методы ма...",
        "full_content": "2025-03-21 14:04:57\n Манс -> 2071074234:\nКомпания Билайн\nЗп 250.     \nВопросы: \n1. про жизненные ситуации типа кем видишь себя через 5 лет, с какими качествами тебя ассоциируют твои знакомые, Каким достижением в жизни гордишься. \n2. Потом задачка на логику: 1,5 кролика съедают 1,5  морковки за 1,5  минут. Сколько морковок съедать 9 кроликов за 9 минут.\n3. Дальше уже вопросы про Rest, http, https, авторизацию, про ввод url в адресную строку.\n4. После стандартные вопросы JS, типы данных, методы массивов, замыкание, сборщик мусора.\n5. Отличия type от interface, задачка написать тип который принимает только отрицательные числа и также только положительные числа.\n6. React плюсы и минусы, какие есть аналоги. Какие хуки знаешь? Есть 5 useEffect в компоненте в каком сделаешь очистку обработчика событий?"
      },
      {
        "timestamp": "2024-02-05 15:34:53",
        "content": "2024-02-05 15:34:53\n 6044883114 -> 2071074234:\nНазвание компании: Билайн\nВакансия: https://hh.ru/vacancy/91647770\nЗП: 250к - ок \nЗадачи: подробные вопросы об опыте и технологиях + реализовать функцию: \n\nconsole.log(\n  fuzzySearch(\"am\", [\n    \"fuzzy\",\n    \"maskva\",\n    \"mama\",\n    \"search\",\n    \"algorithm\",\n    \"utility\"\n  ])) // [\"mama\",  \"algorithm\" ]",
        "full_content": "2024-02-05 15:34:53\n 6044883114 -> 2071074234:\nНазвание компании: Билайн\nВакансия: https://hh.ru/vacancy/91647770\nЗП: 250к - ок \nЗадачи: подробные вопросы об опыте и технологиях + реализовать функцию: \n\nconsole.log(\n  fuzzySearch(\"am\", [\n    \"fuzzy\",\n    \"maskva\",\n    \"mama\",\n    \"search\",\n    \"algorithm\",\n    \"utility\"\n  ])) // [\"mama\",  \"algorithm\" ]"
      }
    ]
  },
  {
    "company": "Sarex",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-03-05 12:34:45",
        "content": "2025-03-05 12:34:45\n Евгений Гусев -> 2071074234:\nSarex \nНаписала  hr\nзп:  200-250\nСразу задача:\nlet books = [\n  {\"id\": 7, \"name\": \"Война и Мир\"},\n  {\"id\": 5, \"name\": \"Чистая архитектура\"},\n  {\"id\": 3, \"name\": \"Одиссея\"},\n  {\"id\": 9, \"name\": \"YDKJS\"},\n]\n\nlet reviews = [\n  {\"id\": 1001, \"book_id\": 7},\n  {\"id\": 1002, \"book_id\": 7},\n  {\"id\": 1003, \"book_id\": 3},\n  {\"id\": 1004, \"book_id\": 7},\n  {\"id\": 1005, \"book_id\": 5},\n]\nОтвет:\nconst resultArray = books.map(dataItem => {\n    const currentReviews =...",
        "full_content": "2025-03-05 12:34:45\n Евгений Гусев -> 2071074234:\nSarex \nНаписала  hr\nзп:  200-250\nСразу задача:\nlet books = [\n  {\"id\": 7, \"name\": \"Война и Мир\"},\n  {\"id\": 5, \"name\": \"Чистая архитектура\"},\n  {\"id\": 3, \"name\": \"Одиссея\"},\n  {\"id\": 9, \"name\": \"YDKJS\"},\n]\n\nlet reviews = [\n  {\"id\": 1001, \"book_id\": 7},\n  {\"id\": 1002, \"book_id\": 7},\n  {\"id\": 1003, \"book_id\": 3},\n  {\"id\": 1004, \"book_id\": 7},\n  {\"id\": 1005, \"book_id\": 5},\n]\nОтвет:\nconst resultArray = books.map(dataItem => {\n    const currentReviews = reviews.filter(elem => elem.id === dataItem.book_id )\n    return {...dataItem, reviews: currentReviews }\n    \n})"
      },
      {
        "timestamp": "2024-10-27 10:16:39",
        "content": "2024-10-27 10:16:39\n Сергей -> 2071074234:\nКомпания: Sarex\nЗП: вилка 190-230к\nhr сам написал\nВопросы: \n- Как дела, настроение чем занимаешься вне программирования)\n- Как пришел в it?\n- ErrorBoundary\n- была реализация функции дебаунс, нужно было понять по коду что это реализации дебаунса и переименовать функцию\n- var/let/cont, что будет если их вызвать до объявления\n- undefined vs null\n- задачка где в if объявлена функция и ниже вызывается, что выведет в консоль\n- с нейронками работал?\n- про TS(д...",
        "full_content": "2024-10-27 10:16:39\n Сергей -> 2071074234:\nКомпания: Sarex\nЗП: вилка 190-230к\nhr сам написал\nВопросы: \n- Как дела, настроение чем занимаешься вне программирования)\n- Как пришел в it?\n- ErrorBoundary\n- была реализация функции дебаунс, нужно было понять по коду что это реализации дебаунса и переименовать функцию\n- var/let/cont, что будет если их вызвать до объявления\n- undefined vs null\n- задачка где в if объявлена функция и ниже вызывается, что выведет в консоль\n- с нейронками работал?\n- про TS(дженерики, Interface vs type)\nЗадачи:\nподобная задача этой, только по block_id в refArray могли быть несколько одинаковых block_id, и добавить свойство, значнием которого был массив в dataArray\nconst refArray = [\n    {block_id: 12243, name: 'current'},\n    {block_id: 148434, name: 'old'},\n    {block_id: 18681, name: 'new'},\n    {block_id: 38311, name: 'backUp'},\n]\n\nconst dataArray = [\n    {conf_id: 4843, resName: 'r1', block_id: 122434},\n    {conf_id: 8768, resName: 'r2', block_id: 14834},\n    {conf_id: 45364, resName: 'r3', block_id: 18681},\n    {conf_id: 948, resName: 'r4', block_id: 38311},\n]\n\nconst resultArray = dataArray.map(dataItem => {\n    const block = refArray.find(refItem => refItem.block_id === dataItem.block_id);\n    return {...dataItem, blockName: block?.name}\n})\n\n////// еще решить сложность O(n)\n\n\nvar i = 10;\nvar array = [];\nwhile (i--){ \n    array.push(function() {\n         return i + i; }\n    );\n}\nconsole. log([ array[0](), array[1]()]) // что выведет, как исправить?\n\nЗадача на ревью кода React(useeffect, fetch, usecallback, usestate)"
      }
    ]
  },
  {
    "company": "Zero Agency",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-07-08 12:04:47",
        "content": "2025-07-08 12:04:47\n Daniil Daniil -> 2071074234:\nZero Agency(только офис пока, но потом мб будет гибрид или удаленка)\nЗп:320 на руки согласовали\nВначале он рассказывает о своих проектах, потом ты о своих\nПотом решение задачи:\n\nfunction getCurrentSeatLimit(currentHour) {\n// Настройки акции\nconst startHour = 12; // Акция начинается в 12:00\nconst endHour = 20; // Акция заканчивается в 20:00\nconst totalSeats = 100; // Общее количество мест\n// Акция еще не началась\nif (currentHour < startHour) {\nret...",
        "full_content": "2025-07-08 12:04:47\n Daniil Daniil -> 2071074234:\nZero Agency(только офис пока, но потом мб будет гибрид или удаленка)\nЗп:320 на руки согласовали\nВначале он рассказывает о своих проектах, потом ты о своих\nПотом решение задачи:\n\nfunction getCurrentSeatLimit(currentHour) {\n// Настройки акции\nconst startHour = 12; // Акция начинается в 12:00\nconst endHour = 20; // Акция заканчивается в 20:00\nconst totalSeats = 100; // Общее количество мест\n// Акция еще не началась\nif (currentHour < startHour) {\nreturn totalSeats;\n}\n// Акция уже закончилась\nif (currentHour >= endHour) {\nreturn 0;\n}\n\n// Прогресс акции от 0 (начало) до 1 (конец)\nconst currentPromotionProgress = (currentHour - startHour) / (endHour\n- startHour);\nreturn Math.floor(totalSeats * (1 - Math.pow(currentPromotionProgress,\n2)));\nТолько надо учесть, что в отвече ты получишь число проданных , тебе еще надо будет от всего вычесть это число\nПотом будут вопросы:\n1. Чем увлекаешься\n2. Комфорт зп\n3. как свободное время проводишь\n4. Сможешь ли ты перехать и когда готов"
      },
      {
        "timestamp": "2025-06-01 19:38:37",
        "content": "2025-06-01 19:38:37\n Никита -> 2071074234:\nZero Agency\nЗП: от 200 назвал, ванасия 150-250\nИщут сильного разраба\n\nВопросы:\nЧто происходит с момента ввода URL до получения первого пакета?\nСколько ip-адресов может быть у одного адреса сайте?(много)\nДля чего одному сайту много ip адресов?\nДля чего используется CDN?\nСталкивался с next.js, настройкой кеширования статики?\nКак синхронизировать смену темной/светлой темы при нескольких открытых вкладках сайта в браузере?\nРабота со storage синхронная или а...",
        "full_content": "2025-06-01 19:38:37\n Никита -> 2071074234:\nZero Agency\nЗП: от 200 назвал, ванасия 150-250\nИщут сильного разраба\n\nВопросы:\nЧто происходит с момента ввода URL до получения первого пакета?\nСколько ip-адресов может быть у одного адреса сайте?(много)\nДля чего одному сайту много ip адресов?\nДля чего используется CDN?\nСталкивался с next.js, настройкой кеширования статики?\nКак синхронизировать смену темной/светлой темы при нескольких открытых вкладках сайта в браузере?\nРабота со storage синхронная или асинхронная операция?\nЧто такое Service Worker?\nКак реализуется асинхронность в js?\nЧто такое изолированность потоков?\nСталкивался с вебсокетами? Какие плюсы минусы?\nКакие есть аналоги  вебсокета?(long polling)\nКак работает long polling?\nЧто будет происходить, если на клиенте таймаут опроса сервера 5 мин, а на клиенте 2 сек?\nЧто такое промисы и как с ними работать?\nPromise.any что такое и когда применяется? Практический пример (загрузка данных из нескольких источников)\n\nА вот тут начинается самая интересная часть собеса))))\nНужна ли фронтенд-программисту математика?\nКак давно решал квадратные уравнения?)\n\nЗАДАЧА 1\nРешить квадратное уравнение\n2x^2 - x = 0\n\nЗАДАЧА 2\nНаписать функцию в js для гиберболического графика https://imgur.com/a/WMvyzNe"
      }
    ]
  },
  {
    "company": "Платежное Решение",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-06-20 09:45:33",
        "content": "2025-06-20 09:45:33\n Alexander K -> 2071074234:\nПлатежное Решение (livecoding) \nзп:300+\n\n1.\nНеправильные регулярные выражения (неверное использование скобок)\nНеправильная логика определения сложности пароля(обратная последовательность)\n\nconst PasswordStrength = ({ value }) => {\n  const [complexity, setComplexity] = useState(0);\n\n  useEffect(() => {\n    // Исправленные регулярные выражения (без .test(value) внутри условий)\n    if (value.length === 0) {\n      setComplexity(0);\n    } else if (/\\d/....",
        "full_content": "2025-06-20 09:45:33\n Alexander K -> 2071074234:\nПлатежное Решение (livecoding) \nзп:300+\n\n1.\nНеправильные регулярные выражения (неверное использование скобок)\nНеправильная логика определения сложности пароля(обратная последовательность)\n\nconst PasswordStrength = ({ value }) => {\n  const [complexity, setComplexity] = useState(0);\n\n  useEffect(() => {\n    // Исправленные регулярные выражения (без .test(value) внутри условий)\n    if (value.length === 0) {\n      setComplexity(0);\n    } else if (/\\d/.test(value) && /[a-z]/.test(value)) {\n      setComplexity(1);\n    } else if (/\\d/.test(value) && /[a-zA-Z]/.test(value)) {\n      setComplexity(2);\n    } else if (/\\d/.test(value) && /[A-Z]/.test(value) && /\\W/.test(value)) {\n      setComplexity(3);\n    } else {\n      setComplexity(0);\n    }\n  }, [value]);\n\n  return (\n    <div className={`strong-item easy ${complexity > 0 ? \"active\" : \"\"}`}>\n      {complexity === 1 && \"Простой пароль\"}\n      {complexity === 2 && \"Средний пароль\"}\n      {complexity === 3 && \"Сложный пароль\"}\n      {complexity === 0 && \"Введите пароль\"}\n    </div>\n  );\n};\n\n2.\nНеоптимальная фильтрация пользователей\nОтсутствие обработки ошибок при загрузке данных\nОтсутствие loadingа в исходном варианте\n\n\nconst UserList = ({ filter }) => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const API_URL = 'https://jsonplaceholder.typicode.com/users';\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(API_URL)\n      .then((response) => response.json())\n      .then((data) => {\n        setUsers(data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log('Error:', error);\n        setLoading(false);\n      });\n  }, []);\n\n  // Рефакторинг фильтрации для более чистого кода\n  const filteredUsers = users.filter((user) =>\n    !(filter || \"\").toLowerCase().trim() || \n    user.name.toLowerCase().includes((filter || \"\").toLowerCase().trim())\n  );\n\n  return (\n    <div>\n      {loading && <p>Loading...</p>}\n      <ul>\n        {filteredUsers.map((user) => (\n          <li key={user.id}>\n            {user.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};"
      },
      {
        "timestamp": "2025-06-16 14:27:29",
        "content": "2025-06-16 14:27:29\n Alexander K -> 2071074234:\nПлатежное решение \nзп: 300+ \n\n2. React и компоненты\nЖизненный цикл компонентов:\nshouldComponentUpdate\ncomponentDidUpdate\ncomponentDidMount\nwillUnmount\nmount,unmount,update\nuseEffect для монтирования\nuseEffect с возвратом анмаунт\nРабота с зависимостями (deps)\n\n3. Обработка ошибок\nError boundary\nComponent did catch\n\n4. Оптимизация и кэширование\nuseMemo для кэширования результатов вычислений\nКороткоживущий кэш\nRace condition и его решение( React Query...",
        "full_content": "2025-06-16 14:27:29\n Alexander K -> 2071074234:\nПлатежное решение \nзп: 300+ \n\n2. React и компоненты\nЖизненный цикл компонентов:\nshouldComponentUpdate\ncomponentDidUpdate\ncomponentDidMount\nwillUnmount\nmount,unmount,update\nuseEffect для монтирования\nuseEffect с возвратом анмаунт\nРабота с зависимостями (deps)\n\n3. Обработка ошибок\nError boundary\nComponent did catch\n\n4. Оптимизация и кэширование\nuseMemo для кэширования результатов вычислений\nКороткоживущий кэш\nRace condition и его решение( React Query)\n\n5. JavaScript основы\nПроверка значений: true, false, null, 0, 1, undefined\nОператоры сравнения (??, ||)\nЛогические операторы и их особенности\n6. Архитектура и оптимизация\nУменьшение зависимостей\nРефакторинг\nВнедрение FSD \n\n7. Оптимизация производительности\ngzip сжатие\nМинификация и углификация\nОптимизация SVG\n\n8. Состояния приложения\nДанные, загрузка, ошибки\nКэширование состояний\nИзолированный layout\nРазличие Pages Router vs App Router\n\n9. Серверная часть\nAction server\nСерверные компоненты\n\n10. Стилизация\nМодульные стили\nГотовые решения\nTailwindCSS\n\n11. Авторизация\nОпыт с JWT и SSO"
      }
    ]
  },
  {
    "company": "Росбанк",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-01-18 18:00:49",
        "content": "2024-01-18 18:00:49\n Michael Yakovlev -> 2071074234:\nРосбанк\n\nСобес был классный. 3 человека от команды. Приятно общались, очень вежливо, про опечатки на лайвкодинге подсказывали (лайвкодинг был в приложении без подсказок синтаксиса и ошибок). Ребята очень понравились.\n\nСобеседование делится на 4 части:\n1. Задачи\n2. Теория\n3. Вопросы на кругозор\n4. Софтскилы\n\nЗадачи:\n1. Всем известный палиндром\n2. Консольлоги на eventloop + объяснить свой ответ и рассказать про eventloop\n3. Рефакторинг React ком...",
        "full_content": "2024-01-18 18:00:49\n Michael Yakovlev -> 2071074234:\nРосбанк\n\nСобес был классный. 3 человека от команды. Приятно общались, очень вежливо, про опечатки на лайвкодинге подсказывали (лайвкодинг был в приложении без подсказок синтаксиса и ошибок). Ребята очень понравились.\n\nСобеседование делится на 4 части:\n1. Задачи\n2. Теория\n3. Вопросы на кругозор\n4. Софтскилы\n\nЗадачи:\n1. Всем известный палиндром\n2. Консольлоги на eventloop + объяснить свой ответ и рассказать про eventloop\n3. Рефакторинг React компонента (что вынести, как поделить, мемоизация и тд). Можно не кодить, а словами объяснить каждое действие.\n\nТеория:\n- Оценить сложность своего решения палиндрома.\n- Как оценить сложность алгоритма?\n- Map, Set, WeekMap и WeekSet и до кучи про сборку мусора.\n- Спросили про все хуки кроме useReducer \n- Как не блокировать рендер стилями при очень большом бандле стилей?\n- Как написать инлайном скрипт в header, в котором есть обращение к DOM, и чтобы он не вернул ошибку?\n- Было много вопросов про оптимизации в js и React\n- Redux\n- Архетектура Flux\n- Были ещё вопросы из теории. Не запомнил.\n\nКругозор:\n- Отличие протоколов HTTP разных версий \n- Cors (зачем, как работает фронт/бэк и тд)\n- Много вопросов про спеки http запросов\n- Про куки, localStorage и sessionStorage (зачем, где хранятся, как создаются и тд)\n- SSR\n\nСофт скилы:\n- Про жизнь, конфликты, отношение к работе, ворк-лайф баланс и тд\n- Чем гордишся в текушей компании (чего достиг)\n- Какие были факапы на работе\n- Как решаешь конфликты на примере код-ревью\n\nЗП: от 300к\n\n#Росбанк #senior"
      },
      {
        "timestamp": "2024-01-15 13:32:01",
        "content": "2024-01-15 13:32:01\n Aleksei -> 2071074234:\nНазвание компании - Росбанк\nСсылка на вакансию - hh.ru/vacancy/90277247\nЗп -  от 340к\nЗадачи\n1)\n<script>\n  const check = () => {\n    console.log(1)\n    const promise = new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(2)\n        }, 1000);\n    })\n    setTimeout(() => {\n        console.log(3)\n    }, 2000);\n    Promise.resolve(4).then(console.log);\n    promise.then(r => console.log(r))\n  }\n  \n  // ответ: \n</script>\n2)\n<script>\nvar ...",
        "full_content": "2024-01-15 13:32:01\n Aleksei -> 2071074234:\nНазвание компании - Росбанк\nСсылка на вакансию - hh.ru/vacancy/90277247\nЗп -  от 340к\nЗадачи\n1)\n<script>\n  const check = () => {\n    console.log(1)\n    const promise = new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(2)\n        }, 1000);\n    })\n    setTimeout(() => {\n        console.log(3)\n    }, 2000);\n    Promise.resolve(4).then(console.log);\n    promise.then(r => console.log(r))\n  }\n  \n  // ответ: \n</script>\n2)\n<script>\nvar test1 = 'aaaabb';\nvar test2 = 'доход';\nvar test3 = 'А роза упала на лапу Азора';\nvar test4 = '';\n\nfunction isPalindrome(testString) {\n    // решение\n}\n\nfunction test(value, callback, target) {\n    var res = callback(value) === target;\n    console.log(`value: ${value}; result: ${res ? '+' : '-'}`);\n}\n\ntest(test1, isPalindrome, false)\ntest(test2, isPalindrome, true)\ntest(test3, isPalindrome, true)\ntest(test4, isPalindrome, null)\n\n</script>\n+ нужно было оценить сложность\n3)\nнужно доделать работающий слайдер на чистом жс (нашел код только сделанного задания)\n<div class=\"wrap\">\n  <div>1</div>\n  <div>2</div>\n  <div>3</div>\n  <div>4</div>\n  <div>5</div>\n  <div>6</div>\n  <div>7</div>\n  <div>8</div>\n  <div>9</div>\n  <div>10</div>\n</div>\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const wrap = document.querySelector('.wrap');\n  const items = document.querySelectorAll('.wrap > div');\n  const prevBtn = document.getElementById('prevBtn');\n  const nextBtn = document.getElementById('nextBtn');\n  let currentIndex = 0;\n\n  function showItem(index) {\n    items.forEach((item, i) => {\n      item.style.display = i === index ? 'block' : 'none';\n    });\n  }\n\n  function nextItem() {\n    currentIndex = (currentIndex + 1) % items.length;\n    showItem(currentIndex);\n  }\n\n  function prevItem() {\n    currentIndex = (currentIndex - 1 + items.length) % items.length;\n    showItem(currentIndex);\n  }\n\n  nextBtn.addEventListener('click', nextItem);\n  prevBtn.addEventListener('click', prevItem);\n\n  showItem(currentIndex); // Инициализация: показываем первый элемент\n});\n4)\nисправить код"
      }
    ]
  },
  {
    "company": "Signal",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-03-04 12:02:44",
        "content": "2025-03-04 12:02:44\n Timofei Syromiatnikov -> 2071074234:\n— Название компании: Signal (1 этап скрининг с лайвкодингом)\n— Ссылка на вакансию: https://hh.ru/vacancy/117579944\n— ЗП: 200-250к\n— Задачи:\n1) \n/*\n    Given a string s, \n    find the first non-repeating character in the entire string and return its index. \n    If it does not exist, return -1.\n    Examples:\n    firstUniqChar(\"wwoorks\") // 4\n    firstUniqChar(\"soundscool\") // 2\n    firstUniqChar(\"zzbb\") // -1\n*/\n\nfunction firstUniqChar(s: s...",
        "full_content": "2025-03-04 12:02:44\n Timofei Syromiatnikov -> 2071074234:\n— Название компании: Signal (1 этап скрининг с лайвкодингом)\n— Ссылка на вакансию: https://hh.ru/vacancy/117579944\n— ЗП: 200-250к\n— Задачи:\n1) \n/*\n    Given a string s, \n    find the first non-repeating character in the entire string and return its index. \n    If it does not exist, return -1.\n    Examples:\n    firstUniqChar(\"wwoorks\") // 4\n    firstUniqChar(\"soundscool\") // 2\n    firstUniqChar(\"zzbb\") // -1\n*/\n\nfunction firstUniqChar(s: string): number {\n  // throw new Error(\"not implemented\");\n\n// Моё решение\n  const repeatList = {}\n\n  for (let i = 0; i < s.length; i++) {\n    if (repeatList[s[i]]) {\n      repeatList[s[i]] += 1\n    } else {\n      repeatList[s[i]] = 1\n    }\n  }\n\n  for (const key in repeatList) {\n    if (repeatList[key] === 1) {\n      return s.indexOf(key)\n    }\n  }\n\n  return -1\n}\n\nconsole.log(firstUniqChar('wwoorks')); // 4\nconsole.log(firstUniqChar('soundscool')); // 2\nconsole.log(firstUniqChar('zzbb')); // -1\n\n2)\n/**\n * 1. Реализовать таймер. Должен отображать текущее значение в секундах.\n * Кнопка Toggle - останавливает и запускает отсчёт.\n * Кнопка Reset - сбрасывает значение.\n * 2. Избавиться от лишних ререндеров InnerComponent\n */\nconst Timer = () => {\n  return (\n    <div className=\"stack column\">\n      <h2>seconds: 0</h2>\n      <div className=\"stack\">\n        <button className=\"f-width\">Toggle</button>\n        <button className=\"f-width\">Reset</button>\n      </div>\n      <InnerComponent callback={() => console.log('Inner click')} />\n    </div>\n  );\n};\ntype Props = {\n  callback: () => void;\n};\n\nconst InnerComponent = ({ callback }: Props) => {\n  console.count('RenderInnerComponent');\n  return <button onClick={callback}>InnerComponent</button>;\n};\n\nexport default Timer;"
      },
      {
        "timestamp": "2024-04-05 18:09:35",
        "content": "2024-04-05 18:09:35\n Roman -> 2071074234:\n- Название компании: SIGNAL\n- Ссылка на вакансию: https://kazan.hh.ru/vacancy/95868250\n- ЗП: от 200 000 до 250 000 ₽ на руки\n- Задачи: Было 4 задачи. Сначала первые две дал hr, затем подключились разработчики с еще 2 задачами. Первые две задачи решил, нужно было за 30 минут, решил за 40 минут. На третьей задаче, не понял условие задачи и нормально не объяснили, выглядело сложно. Я ушел с собеса.\n- Успех собеса: ❌\nФидбэк о собесе: -\n\n\n1.\n/*\n    Given a st...",
        "full_content": "2024-04-05 18:09:35\n Roman -> 2071074234:\n- Название компании: SIGNAL\n- Ссылка на вакансию: https://kazan.hh.ru/vacancy/95868250\n- ЗП: от 200 000 до 250 000 ₽ на руки\n- Задачи: Было 4 задачи. Сначала первые две дал hr, затем подключились разработчики с еще 2 задачами. Первые две задачи решил, нужно было за 30 минут, решил за 40 минут. На третьей задаче, не понял условие задачи и нормально не объяснили, выглядело сложно. Я ушел с собеса.\n- Успех собеса: ❌\nФидбэк о собесе: -\n\n\n1.\n/*\n    Given a string s, \n    find the first non-repeating character in it and return its index. \n    If it does not exist, return -1.\n    Examples:\n    firstUniqChar(\"works\") // 0\n    firstUniqChar(\"soundscool\") // 2\n    firstUniqChar(\"zzbb\") // -1\n*/\n\nfunction firstUniqChar(s: string): number {\n  throw new Error(\"not implemented\");\n}\n\nconsole.log(firstUniqChar(\"works\")); // 0\nconsole.log(firstUniqChar(\"soundscool\")); // 2\nconsole.log(firstUniqChar(\"zzbb\")); // -1\n\n\n2. \n// Написать таймер, с кнопками Toggle - запускает и приостанавливает счетчик\n// Reset - сбрасывает счетчик. Если счетчик идет, то сбрасывает счетчик и запускает заново. Если счетчик приостановлен, то только сбрасывает счетчик\nimport * as React from \"react\";\n\nconst Timer = () => {\n  return (\n    <div>\n      <h2>seconds: 0</h2>\n      <button>Toggle</button>\n      <button>Reset</button>\n    </div>\n  );\n};\n\nexport default Timer;\n\n\n3.\n/**\n * Implement the function that will query the URLs and return an array of responses ['url1_answer', 'url2_answer', ...] in the shortest possible time.\n * At any given time, no more than [limit] requests can be executed.\n * Use the asyncFetch function as a replacement for fetch.\n */\n\ninterface ResponseDataType {\n  delay: number;\n  data: string;\n}\nconst asyncFetch = (url: string) =>\n  new Promise<ResponseDataType>((resolve) => {\n    const delay = Math.random() * 1000;\n    setTimeout(() => {\n      resolve({ delay, data: \"result\" + url });\n    }, delay);\n  });\n\nconst urlsToFetch = Array(30)\n  .fill((i: number) => `/${i}/aadt`)\n  .map((fn, index) => fn(index));\n\n/**               Решение задачи                */\nconst paralellUploading = (\n  urls: string[],\n  parallelLimit: number,\n): Promise<ResponseDataType[]> => {\n  /** START SOLUTION HERE */\n  return Promise.resolve([]);\n};\n\nparalellUploading(urlsToFetch, 3).then((x) =>\n  console.log(\"3_test-getUrls.ts\", x),\n);\n\n\n4.\n/*\n    The task is to remove from the object tree all nodes\n    where the Alive property is false. However, if a node\n    has an Alive property that is true, all of its parents\n    and children should remain in the tree.\n    \n    Extra:\n    Perform the task using recursive and iterative algorithms,\n    explain in which cases each one should be used, as well as\n    the advantages and disadvantages of each approach.\n*/\n\nimport { NodeItemWithUtils } from \"./tests\";\n\n/** SOLUTION */\nclass NodeItem extends NodeItemWithUtils {\n  constructor(\n    public id: number,\n    public alive: boolean,\n    public children: NodeItem[],\n    public parent?: NodeItem,\n  ) {\n    super(id, alive, children, parent);\n  }\n}\n\nexport function nodeCleaner(rootNode: NodeItem) {\n  /** START SOLUTION HERE  */\n}"
      }
    ]
  },
  {
    "company": "Девман",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-11-18 22:37:01",
        "content": "2024-11-18 22:37:01\n Артем -> 2071074234:\nКомпания: Девман\nЗП: 220\nВопросы:\nEventLoop\nПромисы\nReact плюсы\nreact минусы\nfiber reconsalation\nХуки\nuseLAoutotEffect\nвебворкеры\nкак работал с графиками\neffector\nЗадача: отобразить список предварительно отсортировать его\n\nlistenPosts((post) => {\n  if (post.id === findID) {\n    posts[findID] = post;\n    console.log(`Добавлен пост с ID ${post.id}`); // Логируем добавление поста\n    addPost(posts[findID]);\n    findID++;\n    \n    while (posts[findID]) {\n   ...",
        "full_content": "2024-11-18 22:37:01\n Артем -> 2071074234:\nКомпания: Девман\nЗП: 220\nВопросы:\nEventLoop\nПромисы\nReact плюсы\nreact минусы\nfiber reconsalation\nХуки\nuseLAoutotEffect\nвебворкеры\nкак работал с графиками\neffector\nЗадача: отобразить список предварительно отсортировать его\n\nlistenPosts((post) => {\n  if (post.id === findID) {\n    posts[findID] = post;\n    console.log(`Добавлен пост с ID ${post.id}`); // Логируем добавление поста\n    addPost(posts[findID]);\n    findID++;\n    \n    while (posts[findID]) {\n      console.log(`Добавлен пост с ID ${posts[findID].id}`); // Логируем добавление поста в цикле\n      addPost(posts[findID]);\n      findID++;\n    }\n  } else {\n    posts.push(post); // Просто добавляем в конец массива\n    console.log(`Пост с ID ${post.id} добавлен в конец массива`); // Логируем добавление в конец\n  }\n});\n\nэто не решение но близко к этому. решить не смог"
      },
      {
        "timestamp": "2024-11-15 11:51:56",
        "content": "2024-11-15 11:51:56\n Артем -> 2071074234:\nКомпания: Девман\nЗП: 220\nВопросы: \nЧувак просто все 40 минут спрашивал про опыт\nпро взаимодействие про задачи\nпро то как ревьюер как что делал\nчто проиходило там когда что то не получалось за спринт \nработал ли с графиками\nкак оптимизировал react\nкак работет useEffect",
        "full_content": "2024-11-15 11:51:56\n Артем -> 2071074234:\nКомпания: Девман\nЗП: 220\nВопросы: \nЧувак просто все 40 минут спрашивал про опыт\nпро взаимодействие про задачи\nпро то как ревьюер как что делал\nчто проиходило там когда что то не получалось за спринт \nработал ли с графиками\nкак оптимизировал react\nкак работет useEffect"
      }
    ]
  },
  {
    "company": "Goinvest",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-07-08 11:53:22",
        "content": "2024-07-08 11:53:22\n Ярослав Мудрый -> 2071074234:\n- компания: GoInvest финал\n- ссылка: сами написали \n- зп: 300к\n\nВопросы:\n1) Занимался ли инвестированием\n2) расскажи про последние проекты\n3) какую фичу реализовывал, как проходил анализ требований\n4) были ли проекты связанные с инвестициями\n5) какой состав команды\n6) какие задачи выполнял (проектирование, реализация, код ревью, менторинг)\n7) расскажи про задачу, в которой тебе потребовалась помощь\n8) почему уходишь с текущего места\n9) какую ком...",
        "full_content": "2024-07-08 11:53:22\n Ярослав Мудрый -> 2071074234:\n- компания: GoInvest финал\n- ссылка: сами написали \n- зп: 300к\n\nВопросы:\n1) Занимался ли инвестированием\n2) расскажи про последние проекты\n3) какую фичу реализовывал, как проходил анализ требований\n4) были ли проекты связанные с инвестициями\n5) какой состав команды\n6) какие задачи выполнял (проектирование, реализация, код ревью, менторинг)\n7) расскажи про задачу, в которой тебе потребовалась помощь\n8) почему уходишь с текущего места\n9) какую команду ищешь"
      },
      {
        "timestamp": "2024-07-03 14:31:09",
        "content": "2024-07-03 14:31:09\n Ярослав Мудрый -> 2071074234:\nGoInvest (livecoding)\n\n- ЗП: от 250к\n- Ссылка: hr сама написала\n- успех собеса: ✅ приглашен на финал\nЗадачи:\nНаписать функцию, принимающую как аргумент либо строку либо массив либо строки через запятую, содержащую ключи, на выходе должна быть строка из значений по этим ключам через пробел.\nРешение:\n\nconst obj = {\n  key1: \"value1\",\n  key2: \"value2\",\n  key3: \"value3\",\n  \n  getValues(...keys) {\n    if (keys.length === 1 && typeof keys[0] === 'strin...",
        "full_content": "2024-07-03 14:31:09\n Ярослав Мудрый -> 2071074234:\nGoInvest (livecoding)\n\n- ЗП: от 250к\n- Ссылка: hr сама написала\n- успех собеса: ✅ приглашен на финал\nЗадачи:\nНаписать функцию, принимающую как аргумент либо строку либо массив либо строки через запятую, содержащую ключи, на выходе должна быть строка из значений по этим ключам через пробел.\nРешение:\n\nconst obj = {\n  key1: \"value1\",\n  key2: \"value2\",\n  key3: \"value3\",\n  \n  getValues(...keys) {\n    if (keys.length === 1 && typeof keys[0] === 'string') {\n      keys = keys[0].split(' '); // Разбиваем строку по пробелам\n    } else if (keys.length === 1 && Array.isArray(keys[0])) {\n      keys = keys[0]; // Если аргумент - массив, используем его напрямую\n    }\n    \n    return keys.map(key => this[key]).join(' '); // Получаем значения и объединяем их в строку\n  }\n};\n\nНаписать функцию, которая строку вида AAABBCDDD приводит к A3B2CD3,\nрешение:\n\nfunction rle(input) {\n    let result = '';\n    let count = 1;\n\n    for (let i = 0; i < input.length; i++) {\n        if (input[i] === input[i + 1]) {\n            count++;\n        } else {\n            result += input[i];\n            if (count > 1) {\n                result += count;\n            }\n            count = 1;\n        }\n    }\n\n    return result;\n}\n\nусложнение: \nна входе строка вида 111223334, на выходе: 34274, пояснение: (1*3)(2*2)(3*3)(4*1)\n\nfunction rle(input) {\n    let result = '';\n    let count = 1;\n\n    for (let i = 0; i < input.length; i++) {\n        if (input[i] === input[i + 1]) {\n            count++;\n        } else {\n            let resSum = input[i];\n            if (count > 1) {\n                resSum = resSum * count;\n            }\n            result += resSum;\n            count = 1;\n        }\n    }\n\n    return result;\n}"
      }
    ]
  },
  {
    "company": "Нефтетранссервис",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-11-04 20:03:49",
        "content": "2024-11-04 20:03:49\n Никита -> 2071074234:\nНефтеТрансСервис\nза 260k net\nвакансия —\nстатус оффер",
        "full_content": "2024-11-04 20:03:49\n Никита -> 2071074234:\nНефтеТрансСервис\nза 260k net\nвакансия —\nстатус оффер"
      },
      {
        "timestamp": "2024-10-25 19:57:52",
        "content": "2024-10-25 19:57:52\n Mike -> 2071074234:\nКомпания: НефтеТрансСервис\nЗП:250к\nВопросы:\n1.Пользователь вводит адрес сайта и нажал ентер, флоу \n2.async/defer \n3.CORS(где он работает) \n4.WebSocket \n5.JWT \n6.EventLoop(что относится к макро/микротаскам) \n7.ServiceWorker/WebWorker \n8.React  \n9.VDOM \n10.Хуки  \n11.HOC \n12.Паттерны(рендер-пропс, событийный обработчик, состояние на уровне приложения) \n13.proto/prototype \n14.Webpack основные концепции",
        "full_content": "2024-10-25 19:57:52\n Mike -> 2071074234:\nКомпания: НефтеТрансСервис\nЗП:250к\nВопросы:\n1.Пользователь вводит адрес сайта и нажал ентер, флоу \n2.async/defer \n3.CORS(где он работает) \n4.WebSocket \n5.JWT \n6.EventLoop(что относится к макро/микротаскам) \n7.ServiceWorker/WebWorker \n8.React  \n9.VDOM \n10.Хуки  \n11.HOC \n12.Паттерны(рендер-пропс, событийный обработчик, состояние на уровне приложения) \n13.proto/prototype \n14.Webpack основные концепции"
      }
    ]
  },
  {
    "company": "Кловер Групп",
    "count": 2,
    "records": [
      {
        "timestamp": "2024-11-05 07:38:31",
        "content": "2024-11-05 07:38:31\n Алмас -> 2071074234:\nКловер Групп\nзп от 300к\nвакансия: написала сама\nСобес начинается с того, что они рассказывают про себя, потом дают задачу и только после задачи тебе задают вопросы по твоему резюме.\nЗадача, такая же, что была на собесе у предыдушего соискателя из этой группы  в мае. \nСcылка на задачу: https://codesandbox.io/p/sandbox/tree-file-list-8xytfy?file=%2Fsrc%2FApp.tsx\n\n/**\n * В приведенной задаче рассматриваем компонент для отображения списка файлов и папок.\n *\n...",
        "full_content": "2024-11-05 07:38:31\n Алмас -> 2071074234:\nКловер Групп\nзп от 300к\nвакансия: написала сама\nСобес начинается с того, что они рассказывают про себя, потом дают задачу и только после задачи тебе задают вопросы по твоему резюме.\nЗадача, такая же, что была на собесе у предыдушего соискателя из этой группы  в мае. \nСcылка на задачу: https://codesandbox.io/p/sandbox/tree-file-list-8xytfy?file=%2Fsrc%2FApp.tsx\n\n/**\n * В приведенной задаче рассматриваем компонент для отображения списка файлов и папок.\n *\n * Вам необходимо\n * - Дополнить интерфейсы компонента Tree согласно приведенному примеру принимаемого типа данных data\n * - Избавиться от any там, где это возможно\n * - Написать реализацию отображения элементов списка с раскрывающимися дочерними элементами по клику на иконку папки.\n * - По умолчанию папка имеет иконку \"folder-close\", меняющуюся на \"folder-open\" после раскрытия элементов\n * - Написать функцию для отображения иконок файлов в зависимости от их расширения (.tsx, .js). Остальные файлы имеют иконку \"file\"\n * - Написать коллбеки onSelect и onExpand для обработки событий выбора элемента и раскрытия/закрытия папки\n *\n */\n\nУточнения по задаче: ты делаешь основные изменения в компоненте Tree. Компонент Icon нельзя модифицировать, если сильно хочется, то по согласованию. Гуглить можно, задавать уточняюще вопросы тоже.\nПосле задачи попросили в подробностях рассказать как я реализовал фичу, которую я указал в резюме."
      },
      {
        "timestamp": "2024-05-22 15:58:30",
        "content": "2024-05-22 15:58:30\n Roman -> 2071074234:\nНазвание компании: Кловер Групп\nВакансия:  https://hh.ru/vacancy/97105663\nЗп: просил от 300к на руки\nУспех собеса: ? (вероятно ❌)\nЗадача: https://codesandbox.io/p/sandbox/tree-file-list-8xytfy?file=%2Fsrc%2FApp.tsx%3A108%2C16",
        "full_content": "2024-05-22 15:58:30\n Roman -> 2071074234:\nНазвание компании: Кловер Групп\nВакансия:  https://hh.ru/vacancy/97105663\nЗп: просил от 300к на руки\nУспех собеса: ? (вероятно ❌)\nЗадача: https://codesandbox.io/p/sandbox/tree-file-list-8xytfy?file=%2Fsrc%2FApp.tsx%3A108%2C16"
      }
    ]
  },
  {
    "company": "Гиксорс",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-05-29 08:10:55",
        "content": "2025-05-29 08:10:55\n Max -> 2071074234:\nАнкор(проект HrFile через Гиксорс)\nHR написала\nЗП: назвал от 180\nЭтап знакомство с PM :\nВ основном просто общались, я задавал много вопросов\n- Расскажи интересную задачу\n- Как выстроены процессы\n- Твой факап\n- Как реализовывал фильтрацию, виртуализацию в таблице\n- Как оценивали задачи\n- Используешь ИИ в работе?\n- Сможешь быть Техлидом?",
        "full_content": "2025-05-29 08:10:55\n Max -> 2071074234:\nАнкор(проект HrFile через Гиксорс)\nHR написала\nЗП: назвал от 180\nЭтап знакомство с PM :\nВ основном просто общались, я задавал много вопросов\n- Расскажи интересную задачу\n- Как выстроены процессы\n- Твой факап\n- Как реализовывал фильтрацию, виртуализацию в таблице\n- Как оценивали задачи\n- Используешь ИИ в работе?\n- Сможешь быть Техлидом?"
      },
      {
        "timestamp": "2025-05-23 13:43:21",
        "content": "2025-05-23 13:43:21\n Max -> 2071074234:\nГиксорс\nHr написала\nзп: не обсуждали\nвопросы:\n- типы данных\n- замыкание\n- контекст \n- всплытие, погружение\n- стрелочная функция\n- var, let, const\n- props, context, statemanager\n- как оптимизировать приложение\n- генераторы\n- чем лучше пользоваться state или context\n- ООП и другие парадигмы\n// что выведет?\nvar a1 = 4;\nvar a2 = new Number(4);\nconsole.log(a1 == a2); // true\nconsole.log(a1 === a2); // false\n\nvar s1 = '';\nvar s2 = '';\nvar s3 = new String('');\nva...",
        "full_content": "2025-05-23 13:43:21\n Max -> 2071074234:\nГиксорс\nHr написала\nзп: не обсуждали\nвопросы:\n- типы данных\n- замыкание\n- контекст \n- всплытие, погружение\n- стрелочная функция\n- var, let, const\n- props, context, statemanager\n- как оптимизировать приложение\n- генераторы\n- чем лучше пользоваться state или context\n- ООП и другие парадигмы\n// что выведет?\nvar a1 = 4;\nvar a2 = new Number(4);\nconsole.log(a1 == a2); // true\nconsole.log(a1 === a2); // false\n\nvar s1 = '';\nvar s2 = '';\nvar s3 = new String('');\nvar s4 = new String('');\n\nconsole.log(s1 == s2); // true\nconsole.log(s1 === s2); // true\nconsole.log(s1 == s3); // true\nconsole.log(s1 === s3); // false\nconsole.log(s3 == s4); // true\nconsole.log(s3 === s4); // false\n\n/////////////////////////////////////////////\n//что выведет?\nvar a = {\n    b: function() { console.log(this); }\n}\n\na.b(); // {b: f}\nvar b = a.b;\nb(); // undefined\n\n/////////////////////////////////////////////\n// написать функцию sum\nsum(1)(2)(3)() // 6\n\nfunction sum(a){\n    let curr = a\n    function inner(b){\n        if(b === undefined) return curr\n        curr += b\n        return inner\n    }\n    return inner\n}\n\n/////////////////////////////////////////////\n// что выведет, как исправить?\nfor (var i = 0; i < 5; i++) {\n    (function(num){\n        setTimeout(function() { console.log(num); }, 0);\n    })(i);\n}\n///////////////////////////////////////////////////////////////////////\n// написать preventDefault для ссылки\nfunction addClickListener() {\n    const link = document.getElementById('mlink');\n    link.addEventListener('click', function(event) {\n        alert('link');\n        event.preventDefault();\n    });\n}\n\n<div id=\"div\">\n    <a id=\"mlink\" href=\"\">Click me!</a>\n</div>"
      }
    ]
  },
  {
    "company": "СЗ РЦАИ",
    "count": 2,
    "records": [
      {
        "timestamp": "2025-02-28 13:53:25",
        "content": "2025-02-28 13:53:25\n Евгений Гусев -> 2071074234:\nКомпания: СЗ РЦАИ\nВакансия: https://hh.ru/vacancy/117172861?from=employer&hhtmFrom=employer\nЗП: 110-150\nВопросы: \n -Почему можно обратиться к примитивам вот так:\nКакая-то строка'.toUpperCase();\n(2).toString();\n Ответ: Автобоксинг - это процесс, при котором примитивный тип данных автоматически преобразуется в соответствующий объект-обёртку при попытке доступа к свойствам или методам, специфичным для объектов. Этот процесс позволяет примитивам врем...",
        "full_content": "2025-02-28 13:53:25\n Евгений Гусев -> 2071074234:\nКомпания: СЗ РЦАИ\nВакансия: https://hh.ru/vacancy/117172861?from=employer&hhtmFrom=employer\nЗП: 110-150\nВопросы: \n -Почему можно обратиться к примитивам вот так:\nКакая-то строка'.toUpperCase();\n(2).toString();\n Ответ: Автобоксинг - это процесс, при котором примитивный тип данных автоматически преобразуется в соответствующий объект-обёртку при попытке доступа к свойствам или методам, специфичным для объектов. Этот процесс позволяет примитивам временно вести себя как объекты. \n- Промисы:\nPromise.resolve(10)\n     .then(e => console.log(e))\n     .then(e => Promise.resolve(e))\n     .then(console.log)\n     .then(e => {\n         if (!e) {\n           throw 'Error';\n       }\n      })\n      .catch(e => {\n        console.log(e);\n        return new Error('New error');\n      })\n      .then(e => {\n        console.log(e.message);\n      })\n      .catch(e => {\n        console.log(e.message);\n      })\n Ответ: \nPromise.resolve(10)\n    .then(e => console.log(e))          // 1. Выведет `10`\n    .then(e => Promise.resolve(e))      // 2. Вернёт `undefined`, так как `console.log` ничего не возвращает\n    .then(console.log)                   // 3. Выведет `undefined`\n    .then(e => { \n        if (!e) { \n            throw 'Error';                // 4. Ошибка: `throw 'Error'`\n        } \n    })\n    .catch(e => { \n        console.log(e);                   // 5. Поймает `'Error'` и выведет его\n        return new Error('New error');    // 6. Возвращает `Error` объект\n    })\n    .then(e => { \n        console.log(e.message);           // 7. Выведет `'New error'`\n    })\n    .catch(e => { \n        console.log(e.message);           // 8. Этот `catch` уже не сработает\n    });\n\n\n-Event loop:  \nfunction test() {\n      setTimeout(() => {\n         console.log('1');\n      }, 0);\n      \n      setTimeout(() => {\n         console.log('2');\n      }, 1000);\n\n      const promise = new Promise((resolve, reject) => {\n         console.log('3');\n         resolve(4);\n      });\n\n      promise.then((result) => {\n         console.log(result);\n      })\n       \n      console.log('5');\n   }\n Ответ: Итоговый порядок вывода в консоли:\n\"3\" (синхронный код)\n\"5\" (синхронный код)\n\"4\" (микрозадача Promise.then)\n\"1\" (макрозадача setTimeout(0))\n\"2\" (макрозадача setTimeout(1000))\n- Что нужно сделать, что бы код заработал (2).plus(2).minus(3).plus(5);\nответ: Чтобы выражение (2).plus(2).minus(3).plus(5); работало, нужно расширить прототип Number, добавив методы plus и minus.\n- Задача на привязку контекста: \nfunction test() {\n     console.log(${ this.x });\n   }\n\nconst obj = {\n     x: 'SZRCAI'\n   };\nОтвет: использовать bind\n- Изменить объект \nconst obj = {\n      start: 1,\n      end: 10\n    }, const a = [ ...obj ];\n что бы получилось \n\n[1,2,3,4,5,6,7,8,9,10]\nОтвет: Добавляем Symbol.iterator в объект obj.\nИспользуем генератор function*, который по очереди отдает значения от start до end.\nТеперь при использовании [...] объект автоматически превращается в массив с нужными числами.\n-каррирование: \nfunction curry(fn) {\n    return function curried(...args) {\n        // Если количество переданных аргументов совпадает с ожидаемым количеством, вызываем основную функцию\n        if (args.length >= fn.length) {\n            return fn(...args);\n        }\n        // В противном случае возвращаем новую функцию, ожидающую оставшиеся аргументы\n        return function(...args2) {\n            return curried(...args, ...args2);\n        };\n    };\n}"
      },
      {
        "timestamp": "2024-11-26 13:57:50",
        "content": "2024-11-26 13:57:50\n Ivan -> 2071074234:\nКомпания: СЗ РЦАИ \nЗП: 150\nВопросы: \nСпрашивал за опыт , интересные задачи , какая была команда , как были устроены процессы в команде \nТипы данных в js\nЧем отличаются примитивы и ссылочный типы \nXMLHTTPrequest\nБыли вопросы про eventloop \nБыл небольшая задача: \n const obj = {start:1, end:10} \nConst a = […obj]\nЧто сделать чтобы получился массив : console.log(a) //[1,2,3,4,5,6,7,8,9,10]",
        "full_content": "2024-11-26 13:57:50\n Ivan -> 2071074234:\nКомпания: СЗ РЦАИ \nЗП: 150\nВопросы: \nСпрашивал за опыт , интересные задачи , какая была команда , как были устроены процессы в команде \nТипы данных в js\nЧем отличаются примитивы и ссылочный типы \nXMLHTTPrequest\nБыли вопросы про eventloop \nБыл небольшая задача: \n const obj = {start:1, end:10} \nConst a = […obj]\nЧто сделать чтобы получился массив : console.log(a) //[1,2,3,4,5,6,7,8,9,10]"
      }
