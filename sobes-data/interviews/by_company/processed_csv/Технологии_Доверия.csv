"id","question_text","company","date","interview_id"
"q1","Авторизация, ее виды, jwt, доменная аутентификация","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q2","Про вебсокеты, библиотека socket io","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q3","Решение проблемы автокомплита с несколькими запросами на сервер","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q4","Что использовать для типизации объекта, интерфейсы или типы","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q5","Дженерики","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q6","Можно ли типизировать объекты тайпом","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q7","Может ли быть тип дженериком","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q8","Порталы, всплытие в порталах","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q9","Есть таймер в реакте, где хранить значения чтобы не было перерисовок","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q10","Определить, есть ли ошибка в следующих определениях типов и интерфейсов: 1) type A<T> = {...} 2) interface A { foo: string } и interface A { bar: string } 3) interface A { bar: string } и interface A { bar: number } 4) type A = { bar: string } и type B = A & { bar: number }","Технологии Доверия","2024-06-07","interview_Технологии_Доверия_000"
"q1","Ваш продакт менеджер попросил написать приложение по поиску испорченных релизов. Релизы - это упорядоченная коллекция выпущенных релизов. Если один из релизов испорчен, все последующие тоже испорчены. Нужно найти самый ранний испорченный релиз из коллекции. На вход подается n - размер коллекции и функция isBadVersion(k), которая проверяет, испорчена ли версия под индексом k. Нужно вернуть индекс самой ранней испорченной версии или -1, если испорченных нет. Минимизировать количество вызовов isBadVersion, наихудшая сложность O(n).","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_001"
"q1","Что такое event-loop","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q2","Что такое замыкания","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q3","Объясните основные принципы работы React","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q4","Опишите жизненный цикл компонентов в React","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q5","Объясните, как работает виртуальный DOM в React","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q6","Что такое пропсы и состояние в React и как они взаимодействуют","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q7","Объясните разницу между контролируемыми и неконтролируемыми компонентами в React","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q8","Что такое хуки в React и как они используются","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q9","Объясните, как работает useEffect и его особенности","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q10","Опишите, как реализовать мемоизацию в React","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q11","Объясните, что такое контекст в React и как его использовать","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q12","Что такое чистые функции и почему они важны в React","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q13","Объясните, как работает асинхронность в JavaScript","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q14","Что такое промисы и как с ними работать","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q15","Объясните разницу между var, let и const","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q16","Что такое замыкание и приведите пример его использования","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q17","Объясните, как работает прототипное наследование в JavaScript","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q18","Что такое event bubbling и event capturing","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q19","Объясните, как работает this в JavaScript","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q20","Что такое debounce и throttle, и в чем их отличие","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q21","Объясните, как работает garbage collector в JavaScript","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q22","Опишите, как реализовать компонент с управляемым состоянием в React","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q23","Объясните, как работает ключи (keys) в списках React и почему они важны","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q24","Что такое HOC (Higher Order Component) в React","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q25","Объясните, как работает Context API в React","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
"q26","Опишите, как работает асинхронный код в JavaScript и как его можно контролировать","Технологии Доверия","2024-05-14","interview_Технологии_Доверия_002"
