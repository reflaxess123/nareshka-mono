"""Add code editor tables

Revision ID: bcbb5b411c42
Revises: b8b6bd67e2fc
Create Date: 2025-06-12 18:36:23.702556

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bcbb5b411c42'
down_revision = 'b8b6bd67e2fc'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create ENUM types first
    userrole_enum = sa.Enum('GUEST', 'USER', 'ADMIN', name='userrole', create_type=False)
    userrole_enum.create(op.get_bind(), checkfirst=True)
    
    op.create_table('SupportedLanguage',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('language', sa.Enum('PYTHON', 'JAVASCRIPT', 'TYPESCRIPT', 'JAVA', 'CPP', 'C', 'GO', 'RUST', 'PHP', 'RUBY', name='codelanguage'), nullable=False),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('dockerImage', sa.String(), nullable=False),
    sa.Column('fileExtension', sa.String(), nullable=False),
    sa.Column('compileCommand', sa.String(), nullable=True),
    sa.Column('runCommand', sa.String(), nullable=False),
    sa.Column('timeoutSeconds', sa.Integer(), nullable=False),
    sa.Column('memoryLimitMB', sa.Integer(), nullable=False),
    sa.Column('isEnabled', sa.Boolean(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('language')
    )
    op.create_table('CodeExecution',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('blockId', sa.String(), nullable=True),
    sa.Column('languageId', sa.String(), nullable=False),
    sa.Column('sourceCode', sa.Text(), nullable=False),
    sa.Column('stdin', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'SUCCESS', 'ERROR', 'TIMEOUT', 'MEMORY_LIMIT', name='executionstatus'), nullable=False),
    sa.Column('stdout', sa.Text(), nullable=True),
    sa.Column('stderr', sa.Text(), nullable=True),
    sa.Column('exitCode', sa.Integer(), nullable=True),
    sa.Column('executionTimeMs', sa.Integer(), nullable=True),
    sa.Column('memoryUsedMB', sa.Integer(), nullable=True),
    sa.Column('containerLogs', sa.Text(), nullable=True),
    sa.Column('errorMessage', sa.String(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('completedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['blockId'], ['ContentBlock.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['languageId'], ['SupportedLanguage.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_codeexecution_blockid', 'CodeExecution', ['blockId'], unique=False)
    op.create_index('idx_codeexecution_createdat', 'CodeExecution', ['createdAt'], unique=False)
    op.create_index('idx_codeexecution_status', 'CodeExecution', ['status'], unique=False)
    op.create_index('idx_codeexecution_userid', 'CodeExecution', ['userId'], unique=False)
    op.create_table('UserCodeSolution',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('blockId', sa.String(), nullable=False),
    sa.Column('languageId', sa.String(), nullable=False),
    sa.Column('sourceCode', sa.Text(), nullable=False),
    sa.Column('isCompleted', sa.Boolean(), nullable=False),
    sa.Column('lastExecutionId', sa.String(), nullable=True),
    sa.Column('executionCount', sa.Integer(), nullable=False),
    sa.Column('successfulExecutions', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['blockId'], ['ContentBlock.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['languageId'], ['SupportedLanguage.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lastExecutionId'], ['CodeExecution.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_usercodesolution_blockid', 'UserCodeSolution', ['blockId'], unique=False)
    op.create_index('idx_usercodesolution_userid', 'UserCodeSolution', ['userId'], unique=False)
    op.create_index('idx_usercodesolution_userid_blockid_languageid', 'UserCodeSolution', ['userId', 'blockId', 'languageId'], unique=True)
    # Convert User role column to ENUM with explicit steps
    # 1. Remove default
    op.execute("ALTER TABLE \"User\" ALTER COLUMN role DROP DEFAULT")
    # 2. Change column type
    op.execute("ALTER TABLE \"User\" ALTER COLUMN role TYPE userrole USING role::userrole")
    # 3. Set new default
    op.execute("ALTER TABLE \"User\" ALTER COLUMN role SET DEFAULT 'USER'::userrole")
    op.drop_column('User', 'created_at')
    op.drop_column('User', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('User', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('User', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.alter_column('User', 'role',
               existing_type=sa.Enum('GUEST', 'USER', 'ADMIN', name='userrole'),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text('\'USER\'::"UserRole"'))
    op.drop_index('idx_usercodesolution_userid_blockid_languageid', table_name='UserCodeSolution')
    op.drop_index('idx_usercodesolution_userid', table_name='UserCodeSolution')
    op.drop_index('idx_usercodesolution_blockid', table_name='UserCodeSolution')
    op.drop_table('UserCodeSolution')
    op.drop_index('idx_codeexecution_userid', table_name='CodeExecution')
    op.drop_index('idx_codeexecution_status', table_name='CodeExecution')
    op.drop_index('idx_codeexecution_createdat', table_name='CodeExecution')
    op.drop_index('idx_codeexecution_blockid', table_name='CodeExecution')
    op.drop_table('CodeExecution')
    op.drop_table('SupportedLanguage')
    # ### end Alembic commands ### 