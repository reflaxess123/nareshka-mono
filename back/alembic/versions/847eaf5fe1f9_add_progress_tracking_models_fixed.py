"""add_progress_tracking_models_fixed

Revision ID: 847eaf5fe1f9
Revises: 70e29a44e92f
Create Date: 2025-06-21 15:20:23.812224

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '847eaf5fe1f9'
down_revision = '70e29a44e92f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('LearningPath',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('blockIds', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('prerequisites', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('difficulty', sa.String(), nullable=True),
    sa.Column('estimatedHours', sa.Integer(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('isActive', sa.Boolean(), nullable=False),
    sa.Column('orderIndex', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_learningpath_difficulty', 'LearningPath', ['difficulty'], unique=False)
    op.create_index('idx_learningpath_isactive', 'LearningPath', ['isActive'], unique=False)
    op.create_table('UserCategoryProgress',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('mainCategory', sa.String(), nullable=False),
    sa.Column('subCategory', sa.String(), nullable=True),
    sa.Column('totalTasks', sa.Integer(), nullable=False),
    sa.Column('completedTasks', sa.Integer(), nullable=False),
    sa.Column('attemptedTasks', sa.Integer(), nullable=False),
    sa.Column('averageAttempts', sa.DECIMAL(precision=4, scale=2), nullable=False),
    sa.Column('totalTimeSpentMinutes', sa.Integer(), nullable=False),
    sa.Column('successRate', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('firstAttempt', sa.DateTime(), nullable=True),
    sa.Column('lastActivity', sa.DateTime(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_usercategoryprogress_lastactivity', 'UserCategoryProgress', ['lastActivity'], unique=False)
    op.create_index('idx_usercategoryprogress_maincategory', 'UserCategoryProgress', ['mainCategory'], unique=False)
    op.create_index('idx_usercategoryprogress_subcategory', 'UserCategoryProgress', ['subCategory'], unique=False)
    op.create_index('idx_usercategoryprogress_userid', 'UserCategoryProgress', ['userId'], unique=False)
    op.create_index('idx_usercategoryprogress_userid_maincategory_subcategory', 'UserCategoryProgress', ['userId', 'mainCategory', 'subCategory'], unique=True)
    op.create_table('UserPathProgress',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('pathId', sa.String(), nullable=False),
    sa.Column('currentBlockIndex', sa.Integer(), nullable=False),
    sa.Column('completedBlockIds', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('isCompleted', sa.Boolean(), nullable=False),
    sa.Column('startedAt', sa.DateTime(), nullable=False),
    sa.Column('completedAt', sa.DateTime(), nullable=True),
    sa.Column('lastActivity', sa.DateTime(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pathId'], ['LearningPath.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_userpathprogress_lastactivity', 'UserPathProgress', ['lastActivity'], unique=False)
    op.create_index('idx_userpathprogress_pathid', 'UserPathProgress', ['pathId'], unique=False)
    op.create_index('idx_userpathprogress_userid', 'UserPathProgress', ['userId'], unique=False)
    op.create_index('idx_userpathprogress_userid_pathid', 'UserPathProgress', ['userId', 'pathId'], unique=True)
    op.create_table('TaskAttempt',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('blockId', sa.String(), nullable=False),
    sa.Column('sourceCode', sa.Text(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('isSuccessful', sa.Boolean(), nullable=False),
    sa.Column('attemptNumber', sa.Integer(), nullable=False),
    sa.Column('executionTimeMs', sa.Integer(), nullable=True),
    sa.Column('memoryUsedMB', sa.Integer(), nullable=True),
    sa.Column('errorMessage', sa.Text(), nullable=True),
    sa.Column('stderr', sa.Text(), nullable=True),
    sa.Column('durationMinutes', sa.Integer(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['blockId'], ['ContentBlock.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_taskattempt_blockid', 'TaskAttempt', ['blockId'], unique=False)
    op.create_index('idx_taskattempt_createdat', 'TaskAttempt', ['createdAt'], unique=False)
    op.create_index('idx_taskattempt_issuccessful', 'TaskAttempt', ['isSuccessful'], unique=False)
    op.create_index('idx_taskattempt_userid', 'TaskAttempt', ['userId'], unique=False)
    op.create_index('idx_taskattempt_userid_blockid', 'TaskAttempt', ['userId', 'blockId'], unique=False)
    op.create_table('TaskSolution',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('blockId', sa.String(), nullable=False),
    sa.Column('finalCode', sa.Text(), nullable=False),
    sa.Column('language', sa.String(), nullable=False),
    sa.Column('totalAttempts', sa.Integer(), nullable=False),
    sa.Column('timeToSolveMinutes', sa.Integer(), nullable=False),
    sa.Column('firstAttempt', sa.DateTime(), nullable=False),
    sa.Column('solvedAt', sa.DateTime(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['blockId'], ['ContentBlock.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tasksolution_blockid', 'TaskSolution', ['blockId'], unique=False)
    op.create_index('idx_tasksolution_solvedat', 'TaskSolution', ['solvedAt'], unique=False)
    op.create_index('idx_tasksolution_userid', 'TaskSolution', ['userId'], unique=False)
    op.create_index('idx_tasksolution_userid_blockid', 'TaskSolution', ['userId', 'blockId'], unique=True)
    # Добавляем новые поля в таблицу User
    op.add_column('User', sa.Column('totalTasksSolved', sa.Integer(), nullable=True))
    op.add_column('User', sa.Column('lastActivityDate', sa.DateTime(), nullable=True))
    
    # Устанавливаем значения по умолчанию для существующих записей
    op.execute("UPDATE \"User\" SET \"totalTasksSolved\" = 0 WHERE \"totalTasksSolved\" IS NULL")
    
    # Делаем поле totalTasksSolved не nullable после установки значений по умолчанию
    op.alter_column('User', 'totalTasksSolved', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('User', 'lastActivityDate')
    op.drop_column('User', 'totalTasksSolved')
    op.drop_index('idx_tasksolution_userid_blockid', table_name='TaskSolution')
    op.drop_index('idx_tasksolution_userid', table_name='TaskSolution')
    op.drop_index('idx_tasksolution_solvedat', table_name='TaskSolution')
    op.drop_index('idx_tasksolution_blockid', table_name='TaskSolution')
    op.drop_table('TaskSolution')
    op.drop_index('idx_taskattempt_userid_blockid', table_name='TaskAttempt')
    op.drop_index('idx_taskattempt_userid', table_name='TaskAttempt')
    op.drop_index('idx_taskattempt_issuccessful', table_name='TaskAttempt')
    op.drop_index('idx_taskattempt_createdat', table_name='TaskAttempt')
    op.drop_index('idx_taskattempt_blockid', table_name='TaskAttempt')
    op.drop_table('TaskAttempt')
    op.drop_index('idx_userpathprogress_userid_pathid', table_name='UserPathProgress')
    op.drop_index('idx_userpathprogress_userid', table_name='UserPathProgress')
    op.drop_index('idx_userpathprogress_pathid', table_name='UserPathProgress')
    op.drop_index('idx_userpathprogress_lastactivity', table_name='UserPathProgress')
    op.drop_table('UserPathProgress')
    op.drop_index('idx_usercategoryprogress_userid_maincategory_subcategory', table_name='UserCategoryProgress')
    op.drop_index('idx_usercategoryprogress_userid', table_name='UserCategoryProgress')
    op.drop_index('idx_usercategoryprogress_subcategory', table_name='UserCategoryProgress')
    op.drop_index('idx_usercategoryprogress_maincategory', table_name='UserCategoryProgress')
    op.drop_index('idx_usercategoryprogress_lastactivity', table_name='UserCategoryProgress')
    op.drop_table('UserCategoryProgress')
    op.drop_index('idx_learningpath_isactive', table_name='LearningPath')
    op.drop_index('idx_learningpath_difficulty', table_name='LearningPath')
    op.drop_table('LearningPath')
    # ### end Alembic commands ### 