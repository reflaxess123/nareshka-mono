"""remove tags field from InterviewRecord

Revision ID: b025597888a1
Revises: 906724d607f1
Create Date: 2025-08-02 22:32:44.266615

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b025597888a1'
down_revision = '906724d607f1'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('ContentBlock', 'fileId',
               existing_type=sa.VARCHAR(),
               comment='ID файла, к которому принадлежит блок',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'pathTitles',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='Путь заголовков для навигации',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'blockTitle',
               existing_type=sa.VARCHAR(),
               comment='Заголовок блока',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'blockLevel',
               existing_type=sa.INTEGER(),
               comment='Уровень вложенности блока',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'orderInFile',
               existing_type=sa.INTEGER(),
               comment='Порядок блока в файле',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'textContent',
               existing_type=sa.TEXT(),
               comment='Текстовое содержимое блока',
               existing_nullable=True)
    op.alter_column('ContentBlock', 'codeContent',
               existing_type=sa.TEXT(),
               comment='Код в блоке',
               existing_nullable=True)
    op.alter_column('ContentBlock', 'codeLanguage',
               existing_type=sa.VARCHAR(),
               comment='Язык программирования кода',
               existing_nullable=True)
    op.alter_column('ContentBlock', 'isCodeFoldable',
               existing_type=sa.BOOLEAN(),
               comment='Можно ли свернуть код',
               existing_nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('ContentBlock', 'codeFoldTitle',
               existing_type=sa.VARCHAR(),
               comment='Заголовок для свернутого кода',
               existing_nullable=True)
    op.alter_column('ContentBlock', 'extractedUrls',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               comment='Извлеченные из контента URL',
               existing_nullable=False,
               existing_server_default=sa.text('ARRAY[]::text[]'))
    op.alter_column('ContentBlock', 'companies',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               comment='Компании, связанные с контентом',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'rawBlockContentHash',
               existing_type=sa.VARCHAR(),
               comment='Хэш исходного содержимого блока',
               existing_nullable=True)
    op.create_index('idx_contentblock_category', 'ContentBlock', ['fileId', 'orderInFile'], unique=False)
    op.alter_column('ContentFile', 'webdavPath',
               existing_type=sa.VARCHAR(),
               comment='Путь к файлу в WebDAV',
               existing_nullable=False)
    op.alter_column('ContentFile', 'mainCategory',
               existing_type=sa.VARCHAR(),
               comment='Основная категория (например, JavaScript)',
               existing_nullable=False)
    op.alter_column('ContentFile', 'subCategory',
               existing_type=sa.VARCHAR(),
               comment='Подкатегория (например, Arrays)',
               existing_nullable=False)
    op.alter_column('ContentFile', 'lastFileHash',
               existing_type=sa.VARCHAR(),
               comment='Хэш последней версии файла для отслеживания изменений',
               existing_nullable=True)
    op.drop_index(op.f('idx_analytics_type_value'), table_name='InterviewAnalytics')
    op.drop_index(op.f('idx_interview_companies'), table_name='InterviewRecord', postgresql_using='gin')
    op.drop_index(op.f('idx_interview_company_name'), table_name='InterviewRecord')
    op.drop_index(op.f('idx_interview_date'), table_name='InterviewRecord')
    op.drop_index(op.f('idx_interview_stage'), table_name='InterviewRecord')
    op.drop_index(op.f('idx_interview_tags'), table_name='InterviewRecord', postgresql_using='gin')
    op.drop_index(op.f('idx_interview_technologies'), table_name='InterviewRecord', postgresql_using='gin')
    op.drop_column('InterviewRecord', 'technologies')
    op.drop_column('InterviewRecord', 'stage_number')
    op.drop_column('InterviewRecord', 'tags')
    op.drop_column('InterviewRecord', 'telegram_author')
    op.drop_column('InterviewRecord', 'createdAt')
    op.drop_column('InterviewRecord', 'difficulty_level')
    op.drop_index(op.f('idx_user_email'), table_name='User')
    op.drop_index(op.f('idx_user_username'), table_name='User')
    op.drop_column('User', 'is_verified')
    op.drop_column('User', 'first_name')
    op.drop_column('User', 'is_active')
    op.drop_column('User', 'last_name')
    op.drop_column('User', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('User', sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('User', sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('User', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
    op.add_column('User', sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('User', sa.Column('is_verified', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.create_index(op.f('idx_user_username'), 'User', ['username'], unique=True)
    op.create_index(op.f('idx_user_email'), 'User', ['email'], unique=True)
    op.add_column('InterviewRecord', sa.Column('difficulty_level', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('InterviewRecord', sa.Column('createdAt', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
    op.add_column('InterviewRecord', sa.Column('telegram_author', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('InterviewRecord', sa.Column('tags', postgresql.ARRAY(sa.VARCHAR()), server_default=sa.text("'{}'::character varying[]"), autoincrement=False, nullable=False))
    op.add_column('InterviewRecord', sa.Column('stage_number', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('InterviewRecord', sa.Column('technologies', postgresql.ARRAY(sa.VARCHAR()), server_default=sa.text("'{}'::character varying[]"), autoincrement=False, nullable=False))
    op.create_index(op.f('idx_interview_technologies'), 'InterviewRecord', ['technologies'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_interview_tags'), 'InterviewRecord', ['tags'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_interview_stage'), 'InterviewRecord', ['stage_number'], unique=False)
    op.create_index(op.f('idx_interview_date'), 'InterviewRecord', ['interview_date'], unique=False)
    op.create_index(op.f('idx_interview_company_name'), 'InterviewRecord', ['company_name'], unique=False)
    op.create_index(op.f('idx_interview_companies'), 'InterviewRecord', ['companies'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_analytics_type_value'), 'InterviewAnalytics', ['metric_type', 'metric_value'], unique=False)
    op.alter_column('ContentFile', 'lastFileHash',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Хэш последней версии файла для отслеживания изменений',
               existing_nullable=True)
    op.alter_column('ContentFile', 'subCategory',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Подкатегория (например, Arrays)',
               existing_nullable=False)
    op.alter_column('ContentFile', 'mainCategory',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Основная категория (например, JavaScript)',
               existing_nullable=False)
    op.alter_column('ContentFile', 'webdavPath',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Путь к файлу в WebDAV',
               existing_nullable=False)
    op.drop_index('idx_contentblock_category', table_name='ContentBlock')
    op.alter_column('ContentBlock', 'rawBlockContentHash',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Хэш исходного содержимого блока',
               existing_nullable=True)
    op.alter_column('ContentBlock', 'companies',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               comment=None,
               existing_comment='Компании, связанные с контентом',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'extractedUrls',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               comment=None,
               existing_comment='Извлеченные из контента URL',
               existing_nullable=False,
               existing_server_default=sa.text('ARRAY[]::text[]'))
    op.alter_column('ContentBlock', 'codeFoldTitle',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Заголовок для свернутого кода',
               existing_nullable=True)
    op.alter_column('ContentBlock', 'isCodeFoldable',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Можно ли свернуть код',
               existing_nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('ContentBlock', 'codeLanguage',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Язык программирования кода',
               existing_nullable=True)
    op.alter_column('ContentBlock', 'codeContent',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Код в блоке',
               existing_nullable=True)
    op.alter_column('ContentBlock', 'textContent',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Текстовое содержимое блока',
               existing_nullable=True)
    op.alter_column('ContentBlock', 'orderInFile',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Порядок блока в файле',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'blockLevel',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Уровень вложенности блока',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'blockTitle',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Заголовок блока',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'pathTitles',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment=None,
               existing_comment='Путь заголовков для навигации',
               existing_nullable=False)
    op.alter_column('ContentBlock', 'fileId',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='ID файла, к которому принадлежит блок',
               existing_nullable=False)
    # ### end Alembic commands ### 