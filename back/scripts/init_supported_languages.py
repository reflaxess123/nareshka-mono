#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
back_dir = Path(__file__).parent.parent
sys.path.append(str(back_dir))

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ back –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
os.chdir(str(back_dir))

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

from app.core.settings import settings
from app.shared.database.models import BaseModel
from app.shared.models.code_execution_models import SupportedLanguage

# –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
database_url = settings.database_url
if database_url.startswith("postgres://"):
    database_url = database_url.replace("postgres://", "postgresql://", 1)

engine = create_engine(database_url, pool_pre_ping=True, pool_recycle=300)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)


def init_supported_languages():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è"""

    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    BaseModel.metadata.create_all(bind=engine)

    session = SessionLocal()

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —è–∑—ã–∫–∏ –≤ –ë–î
        existing_count = session.query(SupportedLanguage).count()
        if existing_count > 0:
            print(f"–í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_count} —è–∑—ã–∫–æ–≤. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é.")
            return

        # –°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤
        languages_data = [
            {
                "id": "python",
                "name": "Python",
                "language": "python",
                "version": "3.11",
                "fileExtension": ".py",
                "timeoutSeconds": 30,
                "memoryLimitMB": 128,
                "isEnabled": True,
            },
            {
                "id": "javascript",
                "name": "JavaScript (Node.js)",
                "language": "javascript",
                "version": "18",
                "fileExtension": ".js",
                "timeoutSeconds": 30,
                "memoryLimitMB": 128,
                "isEnabled": True,
            },
            {
                "id": "java",
                "name": "Java",
                "language": "java",
                "version": "17",
                "fileExtension": ".java",
                "timeoutSeconds": 45,
                "memoryLimitMB": 256,
                "isEnabled": True,
            },
            {
                "id": "cpp",
                "name": "C++",
                "language": "cpp",
                "version": "17",
                "fileExtension": ".cpp",
                "timeoutSeconds": 30,
                "memoryLimitMB": 128,
                "isEnabled": True,
            },
            {
                "id": "c",
                "name": "C",
                "language": "c",
                "version": "11",
                "fileExtension": ".c",
                "timeoutSeconds": 30,
                "memoryLimitMB": 128,
                "isEnabled": True,
            },
            {
                "id": "go",
                "name": "Go",
                "language": "go",
                "version": "1.21",
                "fileExtension": ".go",
                "timeoutSeconds": 30,
                "memoryLimitMB": 128,
                "isEnabled": True,
            },
            {
                "id": "rust",
                "name": "Rust",
                "language": "rust",
                "version": "1.70",
                "fileExtension": ".rs",
                "timeoutSeconds": 45,
                "memoryLimitMB": 256,
                "isEnabled": True,
            },
        ]

        # –î–æ–±–∞–≤–ª—è–µ–º —è–∑—ã–∫–∏ –≤ –ë–î
        for lang_data in languages_data:
            language = SupportedLanguage(**lang_data)
            session.add(language)

        session.commit()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {len(languages_data)} –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤")

        # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤
        for lang_data in languages_data:
            print(f"  - {lang_data['name']} ({lang_data['version']})")

    except Exception as e:
        session.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —è–∑—ã–∫–æ–≤: {e}")
        raise
    finally:
        session.close()


if __name__ == "__main__":
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è...")
    init_supported_languages()
    print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
